!function(){function n(n){return n&&(n.ownerDocument||n.document||n).documentElement}function t(n){return n&&(n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView)}function e(n,t){return t>n?-1:n>t?1:n>=t?0:NaN}function r(n){return null===n?NaN:+n}function u(n){return!isNaN(n)}function i(n){return{left:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)<0?r=i+1:u=i}return r},right:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)>0?u=i:r=i+1}return r}}}function a(n){return n.length}function o(n){for(var t=1;n*t%1;)t*=10;return t}function l(n,t){for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}function c(){this._=Object.create(null)}function s(n){return(n+="")===xa||n[0]===ba?ba+n:n}function f(n){return(n+="")[0]===ba?n.slice(1):n}function h(n){return s(n)in this._}function g(n){return(n=s(n))in this._&&delete this._[n]}function p(){var n=[];for(var t in this._)n.push(f(t));return n}function v(){var n=0;for(var t in this._)++n;return n}function d(){for(var n in this._)return!1;return!0}function m(){this._=Object.create(null)}function y(n){return n}function M(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function x(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e=0,r=_a.length;r>e;++e){var u=_a[e]+t;if(u in n)return u}}function b(){}function _(){}function w(n){function t(){for(var t,r=e,u=-1,i=r.length;++u<i;)(t=r[u].on)&&t.apply(this,arguments);return n}var e=[],r=new c;return t.on=function(t,u){var i,a=r.get(t);return arguments.length<2?a&&a.on:(a&&(a.on=null,e=e.slice(0,i=e.indexOf(a)).concat(e.slice(i+1)),r.remove(t)),u&&e.push(r.set(t,{on:u})),n)},t}function S(){oa.event.preventDefault()}function k(){for(var n,t=oa.event;n=t.sourceEvent;)t=n;return t}function N(n){for(var t=new _,e=0,r=arguments.length;++e<r;)t[arguments[e]]=w(t);return t.of=function(e,r){return function(u){try{var i=u.sourceEvent=oa.event;u.target=n,oa.event=u,t[u.type].apply(e,r)}finally{oa.event=i}}},t}function E(n){return Sa(n,Aa),n}function A(n){return"function"==typeof n?n:function(){return ka(n,this)}}function C(n){return"function"==typeof n?n:function(){return Na(n,this)}}function z(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function u(){this.setAttribute(n,t)}function i(){this.setAttributeNS(n.space,n.local,t)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function o(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=oa.ns.qualify(n),null==t?n.local?r:e:"function"==typeof t?n.local?o:a:n.local?i:u}function L(n){return n.trim().replace(/\s+/g," ")}function q(n){return new RegExp("(?:^|\\s+)"+oa.requote(n)+"(?:\\s+|$)","g")}function T(n){return(n+"").trim().split(/^|\s+/)}function R(n,t){function e(){for(var e=-1;++e<u;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e<u;)n[e](this,r)}n=T(n).map(D);var u=n.length;return"function"==typeof t?r:e}function D(n){var t=q(n);return function(e,r){if(u=e.classList)return r?u.add(n):u.remove(n);var u=e.getAttribute("class")||"";r?(t.lastIndex=0,t.test(u)||e.setAttribute("class",L(u+" "+n))):e.setAttribute("class",L(u.replace(t," ")))}}function P(n,t,e){function r(){this.style.removeProperty(n)}function u(){this.style.setProperty(n,t,e)}function i(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:"function"==typeof t?i:u}function U(n,t){function e(){delete this[n]}function r(){this[n]=t}function u(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:"function"==typeof t?u:r}function j(n){function t(){var t=this.ownerDocument,e=this.namespaceURI;return e===Ca&&t.documentElement.namespaceURI===Ca?t.createElement(n):t.createElementNS(e,n)}function e(){return this.ownerDocument.createElementNS(n.space,n.local)}return"function"==typeof n?n:(n=oa.ns.qualify(n)).local?e:t}function F(){var n=this.parentNode;n&&n.removeChild(this)}function H(n){return{__data__:n}}function O(n){return function(){return Ea(this,n)}}function I(n){return arguments.length||(n=e),function(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}}function Y(n,t){for(var e=0,r=n.length;r>e;e++)for(var u,i=n[e],a=0,o=i.length;o>a;a++)(u=i[a])&&t(u,a,e);return n}function Z(n){return Sa(n,La),n}function V(n){var t,e;return function(r,u,i){var a,o=n[i].update,l=o.length;for(i!=e&&(e=i,t=0),u>=t&&(t=u+1);!(a=o[t])&&++t<l;);return a}}function X(n,t,e){function r(){var t=this[a];t&&(this.removeEventListener(n,t,t.$),delete this[a])}function u(){var u=l(t,ca(arguments));r.call(this),this.addEventListener(n,this[a]=u,u.$=e),u._=t}function i(){var t,e=new RegExp("^__on([^.]+)"+oa.requote(n)+"$");for(var r in this)if(t=r.match(e)){var u=this[r];this.removeEventListener(t[1],u,u.$),delete this[r]}}var a="__on"+n,o=n.indexOf("."),l=$;o>0&&(n=n.slice(0,o));var c=qa.get(n);return c&&(n=c,l=B),o?t?u:r:t?b:i}function $(n,t){return function(e){var r=oa.event;oa.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{oa.event=r}}}function B(n,t){var e=$(n,t);return function(n){var t=this,r=n.relatedTarget;r&&(r===t||8&r.compareDocumentPosition(t))||e.call(t,n)}}function W(e){var r=".dragsuppress-"+ ++Ra,u="click"+r,i=oa.select(t(e)).on("touchmove"+r,S).on("dragstart"+r,S).on("selectstart"+r,S);if(null==Ta&&(Ta="onselectstart"in e?!1:x(e.style,"userSelect")),Ta){var a=n(e).style,o=a[Ta];a[Ta]="none"}return function(n){if(i.on(r,null),Ta&&(a[Ta]=o),n){var t=function(){i.on(u,null)};i.on(u,function(){S(),t()},!0),setTimeout(t,0)}}}function J(n,e){e.changedTouches&&(e=e.changedTouches[0]);var r=n.ownerSVGElement||n;if(r.createSVGPoint){var u=r.createSVGPoint();if(0>Da){var i=t(n);if(i.scrollX||i.scrollY){r=oa.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var a=r[0][0].getScreenCTM();Da=!(a.f||a.e),r.remove()}}return Da?(u.x=e.pageX,u.y=e.pageY):(u.x=e.clientX,u.y=e.clientY),u=u.matrixTransform(n.getScreenCTM().inverse()),[u.x,u.y]}var o=n.getBoundingClientRect();return[e.clientX-o.left-n.clientLeft,e.clientY-o.top-n.clientTop]}function G(){return oa.event.changedTouches[0].identifier}function K(n){return n>0?1:0>n?-1:0}function Q(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])}function nn(n){return n>1?0:-1>n?ja:Math.acos(n)}function tn(n){return n>1?Oa:-1>n?-Oa:Math.asin(n)}function en(n){return((n=Math.exp(n))-1/n)/2}function rn(n){return((n=Math.exp(n))+1/n)/2}function un(n){return((n=Math.exp(2*n))-1)/(n+1)}function an(n){return(n=Math.sin(n/2))*n}function on(){}function ln(n,t,e){return this instanceof ln?(this.h=+n,this.s=+t,void(this.l=+e)):arguments.length<2?n instanceof ln?new ln(n.h,n.s,n.l):_n(""+n,wn,ln):new ln(n,t,e)}function cn(n,t,e){function r(n){return n>360?n-=360:0>n&&(n+=360),60>n?i+(a-i)*n/60:180>n?a:240>n?i+(a-i)*(240-n)/60:i}function u(n){return Math.round(255*r(n))}var i,a;return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:0>t?0:t>1?1:t,e=0>e?0:e>1?1:e,a=.5>=e?e*(1+t):e+t-e*t,i=2*e-a,new yn(u(n+120),u(n),u(n-120))}function sn(n,t,e){return this instanceof sn?(this.h=+n,this.c=+t,void(this.l=+e)):arguments.length<2?n instanceof sn?new sn(n.h,n.c,n.l):n instanceof hn?pn(n.l,n.a,n.b):pn((n=Sn((n=oa.rgb(n)).r,n.g,n.b)).l,n.a,n.b):new sn(n,t,e)}function fn(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),new hn(e,Math.cos(n*=Ia)*t,Math.sin(n)*t)}function hn(n,t,e){return this instanceof hn?(this.l=+n,this.a=+t,void(this.b=+e)):arguments.length<2?n instanceof hn?new hn(n.l,n.a,n.b):n instanceof sn?fn(n.h,n.c,n.l):Sn((n=yn(n)).r,n.g,n.b):new hn(n,t,e)}function gn(n,t,e){var r=(n+16)/116,u=r+t/500,i=r-e/200;return u=vn(u)*Qa,r=vn(r)*no,i=vn(i)*to,new yn(mn(3.2404542*u-1.5371385*r-.4985314*i),mn(-.969266*u+1.8760108*r+.041556*i),mn(.0556434*u-.2040259*r+1.0572252*i))}function pn(n,t,e){return n>0?new sn(Math.atan2(e,t)*Ya,Math.sqrt(t*t+e*e),n):new sn(NaN,NaN,n)}function vn(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function dn(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function mn(n){return Math.round(255*(.00304>=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function yn(n,t,e){return this instanceof yn?(this.r=~~n,this.g=~~t,void(this.b=~~e)):arguments.length<2?n instanceof yn?new yn(n.r,n.g,n.b):_n(""+n,yn,cn):new yn(n,t,e)}function Mn(n){return new yn(n>>16,n>>8&255,255&n)}function xn(n){return Mn(n)+""}function bn(n){return 16>n?"0"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function _n(n,t,e){var r,u,i,a=0,o=0,l=0;if(r=/([a-z]+)\((.*)\)/.exec(n=n.toLowerCase()))switch(u=r[2].split(","),r[1]){case"hsl":return e(parseFloat(u[0]),parseFloat(u[1])/100,parseFloat(u[2])/100);case"rgb":return t(Nn(u[0]),Nn(u[1]),Nn(u[2]))}return(i=uo.get(n))?t(i.r,i.g,i.b):(null==n||"#"!==n.charAt(0)||isNaN(i=parseInt(n.slice(1),16))||(4===n.length?(a=(3840&i)>>4,a=a>>4|a,o=240&i,o=o>>4|o,l=15&i,l=l<<4|l):7===n.length&&(a=(16711680&i)>>16,o=(65280&i)>>8,l=255&i)),t(a,o,l))}function wn(n,t,e){var r,u,i=Math.min(n/=255,t/=255,e/=255),a=Math.max(n,t,e),o=a-i,l=(a+i)/2;return o?(u=.5>l?o/(a+i):o/(2-a-i),r=n==a?(t-e)/o+(e>t?6:0):t==a?(e-n)/o+2:(n-t)/o+4,r*=60):(r=NaN,u=l>0&&1>l?0:r),new ln(r,u,l)}function Sn(n,t,e){n=kn(n),t=kn(t),e=kn(e);var r=dn((.4124564*n+.3575761*t+.1804375*e)/Qa),u=dn((.2126729*n+.7151522*t+.072175*e)/no),i=dn((.0193339*n+.119192*t+.9503041*e)/to);return hn(116*u-16,500*(r-u),200*(u-i))}function kn(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function Nn(n){var t=parseFloat(n);return"%"===n.charAt(n.length-1)?Math.round(2.55*t):t}function En(n){return"function"==typeof n?n:function(){return n}}function An(n){return function(t,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=null),Cn(t,e,n,r)}}function Cn(n,t,e,r){function u(){var n,t=l.status;if(!t&&Ln(l)||t>=200&&300>t||304===t){try{n=e.call(i,l)}catch(r){return void a.error.call(i,r)}a.load.call(i,n)}else a.error.call(i,l)}var i={},a=oa.dispatch("beforesend","progress","load","error"),o={},l=new XMLHttpRequest,c=null;return!this.XDomainRequest||"withCredentials"in l||!/^(http(s)?:)?\/\//.test(n)||(l=new XDomainRequest),"onload"in l?l.onload=l.onerror=u:l.onreadystatechange=function(){l.readyState>3&&u()},l.onprogress=function(n){var t=oa.event;oa.event=n;try{a.progress.call(i,l)}finally{oa.event=t}},i.header=function(n,t){return n=(n+"").toLowerCase(),arguments.length<2?o[n]:(null==t?delete o[n]:o[n]=t+"",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+"",i):t},i.responseType=function(n){return arguments.length?(c=n,i):c},i.response=function(n){return e=n,i},["get","post"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(ca(arguments)))}}),i.send=function(e,r,u){if(2===arguments.length&&"function"==typeof r&&(u=r,r=null),l.open(e,n,!0),null==t||"accept"in o||(o.accept=t+",*/*"),l.setRequestHeader)for(var s in o)l.setRequestHeader(s,o[s]);return null!=t&&l.overrideMimeType&&l.overrideMimeType(t),null!=c&&(l.responseType=c),null!=u&&i.on("error",u).on("load",function(n){u(null,n)}),a.beforesend.call(i,l),l.send(null==r?null:r),i},i.abort=function(){return l.abort(),i},oa.rebind(i,a,"on"),null==r?i:i.get(zn(r))}function zn(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}function Ln(n){var t=n.responseType;return t&&"text"!==t?n.response:n.responseText}function qn(n,t,e){var r=arguments.length;2>r&&(t=0),3>r&&(e=Date.now());var u=e+t,i={c:n,t:u,n:null};return ao?ao.n=i:io=i,ao=i,oo||(lo=clearTimeout(lo),oo=1,co(Tn)),i}function Tn(){var n=Rn(),t=Dn()-n;t>24?(isFinite(t)&&(clearTimeout(lo),lo=setTimeout(Tn,t)),oo=0):(oo=1,co(Tn))}function Rn(){for(var n=Date.now(),t=io;t;)n>=t.t&&t.c(n-t.t)&&(t.c=null),t=t.n;return n}function Dn(){for(var n,t=io,e=1/0;t;)t.c?(t.t<e&&(e=t.t),t=(n=t).n):t=n?n.n=t.n:io=t.n;return ao=n,e}function Pn(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function Un(n,t){var e=Math.pow(10,3*Ma(8-t));return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}}function jn(n){var t=n.decimal,e=n.thousands,r=n.grouping,u=n.currency,i=r&&e?function(n,t){for(var u=n.length,i=[],a=0,o=r[0],l=0;u>0&&o>0&&(l+o+1>t&&(o=Math.max(1,t-l)),i.push(n.substring(u-=o,u+o)),!((l+=o+1)>t));)o=r[a=(a+1)%r.length];return i.reverse().join(e)}:y;return function(n){var e=fo.exec(n),r=e[1]||" ",a=e[2]||">",o=e[3]||"-",l=e[4]||"",c=e[5],s=+e[6],f=e[7],h=e[8],g=e[9],p=1,v="",d="",m=!1,y=!0;switch(h&&(h=+h.substring(1)),(c||"0"===r&&"="===a)&&(c=r="0",a="="),g){case"n":f=!0,g="g";break;case"%":p=100,d="%",g="f";break;case"p":p=100,d="%",g="r";break;case"b":case"o":case"x":case"X":"#"===l&&(v="0"+g.toLowerCase());case"c":y=!1;case"d":m=!0,h=0;break;case"s":p=-1,g="r"}"$"===l&&(v=u[0],d=u[1]),"r"!=g||h||(g="g"),null!=h&&("g"==g?h=Math.max(1,Math.min(21,h)):("e"==g||"f"==g)&&(h=Math.max(0,Math.min(20,h)))),g=ho.get(g)||Fn;var M=c&&f;return function(n){var e=d;if(m&&n%1)return"";var u=0>n||0===n&&0>1/n?(n=-n,"-"):"-"===o?"":o;if(0>p){var l=oa.formatPrefix(n,h);n=l.scale(n),e=l.symbol+d}else n*=p;n=g(n,h);var x,b,_=n.lastIndexOf(".");if(0>_){var w=y?n.lastIndexOf("e"):-1;0>w?(x=n,b=""):(x=n.substring(0,w),b=n.substring(w))}else x=n.substring(0,_),b=t+n.substring(_+1);!c&&f&&(x=i(x,1/0));var S=v.length+x.length+b.length+(M?0:u.length),k=s>S?new Array(S=s-S+1).join(r):"";return M&&(x=i(k+x,k.length?s-b.length:1/0)),u+=v,n=x+b,("<"===a?u+n+k:">"===a?k+u+n:"^"===a?k.substring(0,S>>=1)+u+n+k.substring(S):u+(M?n:k+n))+e}}}function Fn(n){return n+""}function Hn(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function On(n,t,e){function r(t){var e=n(t),r=i(e,1);return r-t>t-e?e:r}function u(e){return t(e=n(new po(e-1)),1),e}function i(n,e){return t(n=new po(+n),e),n}function a(n,r,i){var a=u(n),o=[];if(i>1)for(;r>a;)e(a)%i||o.push(new Date(+a)),t(a,1);else for(;r>a;)o.push(new Date(+a)),t(a,1);return o}function o(n,t,e){try{po=Hn;var r=new Hn;return r._=n,a(r,t,e)}finally{po=Date}}n.floor=n,n.round=r,n.ceil=u,n.offset=i,n.range=a;var l=n.utc=In(n);return l.floor=l,l.round=In(r),l.ceil=In(u),l.offset=In(i),l.range=o,n}function In(n){return function(t,e){try{po=Hn;var r=new Hn;return r._=t,n(r,e)._}finally{po=Date}}}function Yn(n){function t(n){function t(t){for(var e,u,i,a=[],o=-1,l=0;++o<r;)37===n.charCodeAt(o)&&(a.push(n.slice(l,o)),null!=(u=mo[e=n.charAt(++o)])&&(e=n.charAt(++o)),(i=A[e])&&(e=i(t,null==u?"e"===e?" ":"0":u)),a.push(e),l=o+1);return a.push(n.slice(l,o)),a.join("")}var r=n.length;return t.parse=function(t){var r={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},u=e(r,n,t,0);if(u!=t.length)return null;"p"in r&&(r.H=r.H%12+12*r.p);var i=null!=r.Z&&po!==Hn,a=new(i?Hn:po);return"j"in r?a.setFullYear(r.y,0,r.j):"W"in r||"U"in r?("w"in r||(r.w="W"in r?1:0),a.setFullYear(r.y,0,1),a.setFullYear(r.y,0,"W"in r?(r.w+6)%7+7*r.W-(a.getDay()+5)%7:r.w+7*r.U-(a.getDay()+6)%7)):a.setFullYear(r.y,r.m,r.d),a.setHours(r.H+(r.Z/100|0),r.M+r.Z%100,r.S,r.L),i?a._:a},t.toString=function(){return n},t}function e(n,t,e,r){for(var u,i,a,o=0,l=t.length,c=e.length;l>o;){if(r>=c)return-1;if(u=t.charCodeAt(o++),37===u){if(a=t.charAt(o++),i=C[a in mo?t.charAt(o++):a],!i||(r=i(n,e,r))<0)return-1}else if(u!=e.charCodeAt(r++))return-1}return r}function r(n,t,e){_.lastIndex=0;var r=_.exec(t.slice(e));return r?(n.w=w.get(r[0].toLowerCase()),e+r[0].length):-1}function u(n,t,e){x.lastIndex=0;var r=x.exec(t.slice(e));return r?(n.w=b.get(r[0].toLowerCase()),e+r[0].length):-1}function i(n,t,e){N.lastIndex=0;var r=N.exec(t.slice(e));return r?(n.m=E.get(r[0].toLowerCase()),e+r[0].length):-1}function a(n,t,e){S.lastIndex=0;var r=S.exec(t.slice(e));return r?(n.m=k.get(r[0].toLowerCase()),e+r[0].length):-1}function o(n,t,r){return e(n,A.c.toString(),t,r)}function l(n,t,r){return e(n,A.x.toString(),t,r)}function c(n,t,r){return e(n,A.X.toString(),t,r)}function s(n,t,e){var r=M.get(t.slice(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}var f=n.dateTime,h=n.date,g=n.time,p=n.periods,v=n.days,d=n.shortDays,m=n.months,y=n.shortMonths;t.utc=function(n){function e(n){try{po=Hn;var t=new po;return t._=n,r(t)}finally{po=Date}}var r=t(n);return e.parse=function(n){try{po=Hn;var t=r.parse(n);return t&&t._}finally{po=Date}},e.toString=r.toString,e},t.multi=t.utc.multi=ct;var M=oa.map(),x=Vn(v),b=Xn(v),_=Vn(d),w=Xn(d),S=Vn(m),k=Xn(m),N=Vn(y),E=Xn(y);p.forEach(function(n,t){M.set(n.toLowerCase(),t)});var A={a:function(n){return d[n.getDay()]},A:function(n){return v[n.getDay()]},b:function(n){return y[n.getMonth()]},B:function(n){return m[n.getMonth()]},c:t(f),d:function(n,t){return Zn(n.getDate(),t,2)},e:function(n,t){return Zn(n.getDate(),t,2)},H:function(n,t){return Zn(n.getHours(),t,2)},I:function(n,t){return Zn(n.getHours()%12||12,t,2)},j:function(n,t){return Zn(1+go.dayOfYear(n),t,3)},L:function(n,t){return Zn(n.getMilliseconds(),t,3)},m:function(n,t){return Zn(n.getMonth()+1,t,2)},M:function(n,t){return Zn(n.getMinutes(),t,2)},p:function(n){return p[+(n.getHours()>=12)]},S:function(n,t){return Zn(n.getSeconds(),t,2)},U:function(n,t){return Zn(go.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Zn(go.mondayOfYear(n),t,2)},x:t(h),X:t(g),y:function(n,t){return Zn(n.getFullYear()%100,t,2)},Y:function(n,t){return Zn(n.getFullYear()%1e4,t,4)},Z:ot,"%":function(){return"%"}},C={a:r,A:u,b:i,B:a,c:o,d:tt,e:tt,H:rt,I:rt,j:et,L:at,m:nt,M:ut,p:s,S:it,U:Bn,w:$n,W:Wn,x:l,X:c,y:Gn,Y:Jn,Z:Kn,"%":lt};return t}function Zn(n,t,e){var r=0>n?"-":"",u=(r?-n:n)+"",i=u.length;return r+(e>i?new Array(e-i+1).join(t)+u:u)}function Vn(n){return new RegExp("^(?:"+n.map(oa.requote).join("|")+")","i")}function Xn(n){for(var t=new c,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function $n(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Bn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e));return r?(n.U=+r[0],e+r[0].length):-1}function Wn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e));return r?(n.W=+r[0],e+r[0].length):-1}function Jn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function Gn(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.y=Qn(+r[0]),e+r[0].length):-1}function Kn(n,t,e){return/^[+-]\d{4}$/.test(t=t.slice(e,e+5))?(n.Z=-t,e+5):-1}function Qn(n){return n+(n>68?1900:2e3)}function nt(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function tt(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function et(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function rt(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function ut(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function it(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function at(n,t,e){yo.lastIndex=0;var r=yo.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function ot(n){var t=n.getTimezoneOffset(),e=t>0?"-":"+",r=Ma(t)/60|0,u=Ma(t)%60;return e+Zn(r,"0",2)+Zn(u,"0",2)}function lt(n,t,e){Mo.lastIndex=0;var r=Mo.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function ct(n){for(var t=n.length,e=-1;++e<t;)n[e][0]=this(n[e][0]);return function(t){for(var e=0,r=n[e];!r[1](t);)r=n[++e];return r[0](t)}}function st(){}function ft(n,t,e){var r=e.s=n+t,u=r-n,i=r-u;e.t=n-i+(t-u)}function ht(n,t){n&&wo.hasOwnProperty(n.type)&&wo[n.type](n,t)}function gt(n,t,e){var r,u=-1,i=n.length-e;for(t.lineStart();++u<i;)r=n[u],t.point(r[0],r[1],r[2]);t.lineEnd()}function pt(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)gt(n[e],t,1);t.polygonEnd()}function vt(){function n(n,t){n*=Ia,t=t*Ia/2+ja/4;var e=n-r,a=e>=0?1:-1,o=a*e,l=Math.cos(t),c=Math.sin(t),s=i*c,f=u*l+s*Math.cos(o),h=s*a*Math.sin(o);ko.add(Math.atan2(h,f)),r=n,u=l,i=c}var t,e,r,u,i;No.point=function(a,o){No.point=n,r=(t=a)*Ia,u=Math.cos(o=(e=o)*Ia/2+ja/4),i=Math.sin(o)},No.lineEnd=function(){n(t,e)}}function dt(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function mt(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function yt(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function Mt(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function xt(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function bt(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function _t(n){return[Math.atan2(n[1],n[0]),tn(n[2])]}function wt(n,t){return Ma(n[0]-t[0])<Pa&&Ma(n[1]-t[1])<Pa}function St(n,t){n*=Ia;var e=Math.cos(t*=Ia);kt(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function kt(n,t,e){++Eo,Co+=(n-Co)/Eo,zo+=(t-zo)/Eo,Lo+=(e-Lo)/Eo}function Nt(){function n(n,u){n*=Ia;var i=Math.cos(u*=Ia),a=i*Math.cos(n),o=i*Math.sin(n),l=Math.sin(u),c=Math.atan2(Math.sqrt((c=e*l-r*o)*c+(c=r*a-t*l)*c+(c=t*o-e*a)*c),t*a+e*o+r*l);Ao+=c,qo+=c*(t+(t=a)),To+=c*(e+(e=o)),Ro+=c*(r+(r=l)),kt(t,e,r)}var t,e,r;jo.point=function(u,i){u*=Ia;var a=Math.cos(i*=Ia);t=a*Math.cos(u),e=a*Math.sin(u),r=Math.sin(i),jo.point=n,kt(t,e,r)}}function Et(){jo.point=St}function At(){function n(n,t){n*=Ia;var e=Math.cos(t*=Ia),a=e*Math.cos(n),o=e*Math.sin(n),l=Math.sin(t),c=u*l-i*o,s=i*a-r*l,f=r*o-u*a,h=Math.sqrt(c*c+s*s+f*f),g=r*a+u*o+i*l,p=h&&-nn(g)/h,v=Math.atan2(h,g);Do+=p*c,Po+=p*s,Uo+=p*f,Ao+=v,qo+=v*(r+(r=a)),To+=v*(u+(u=o)),Ro+=v*(i+(i=l)),kt(r,u,i)}var t,e,r,u,i;jo.point=function(a,o){t=a,e=o,jo.point=n,a*=Ia;var l=Math.cos(o*=Ia);r=l*Math.cos(a),u=l*Math.sin(a),i=Math.sin(o),kt(r,u,i)},jo.lineEnd=function(){n(t,e),jo.lineEnd=Et,jo.point=St}}function Ct(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return e=t.invert(e,r),e&&n.invert(e[0],e[1])}),e}function zt(){return!0}function Lt(n,t,e,r,u){var i=[],a=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if(wt(e,r)){u.lineStart();for(var o=0;t>o;++o)u.point((e=n[o])[0],e[1]);return void u.lineEnd()}var l=new Tt(e,n,null,!0),c=new Tt(e,null,l,!1);l.o=c,i.push(l),a.push(c),l=new Tt(r,n,null,!1),c=new Tt(r,null,l,!0),l.o=c,i.push(l),a.push(c)}}),a.sort(t),qt(i),qt(a),i.length){for(var o=0,l=e,c=a.length;c>o;++o)a[o].e=l=!l;for(var s,f,h=i[0];;){for(var g=h,p=!0;g.v;)if((g=g.n)===h)return;s=g.z,u.lineStart();do{if(g.v=g.o.v=!0,g.e){if(p)for(var o=0,c=s.length;c>o;++o)u.point((f=s[o])[0],f[1]);else r(g.x,g.n.x,1,u);g=g.n}else{if(p){s=g.p.z;for(var o=s.length-1;o>=0;--o)u.point((f=s[o])[0],f[1])}else r(g.x,g.p.x,-1,u);g=g.p}g=g.o,s=g.z,p=!p}while(!g.v);u.lineEnd()}}}function qt(n){if(t=n.length){for(var t,e,r=0,u=n[0];++r<t;)u.n=e=n[r],e.p=u,u=e;u.n=e=n[0],e.p=u}}function Tt(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Rt(n,t,e,r){return function(u,i){function a(t,e){var r=u(t,e);n(t=r[0],e=r[1])&&i.point(t,e)}function o(n,t){var e=u(n,t);d.point(e[0],e[1])}function l(){y.point=o,d.lineStart()}function c(){y.point=a,d.lineEnd()}function s(n,t){v.push([n,t]);var e=u(n,t);x.point(e[0],e[1])}function f(){x.lineStart(),v=[]}function h(){s(v[0][0],v[0][1]),x.lineEnd();var n,t=x.clean(),e=M.buffer(),r=e.length;if(v.pop(),p.push(v),v=null,r)if(1&t){n=e[0];var u,r=n.length-1,a=-1;if(r>0){for(b||(i.polygonStart(),b=!0),i.lineStart();++a<r;)i.point((u=n[a])[0],u[1]);i.lineEnd()}}else r>1&&2&t&&e.push(e.pop().concat(e.shift())),g.push(e.filter(Dt))}var g,p,v,d=t(i),m=u.invert(r[0],r[1]),y={point:a,lineStart:l,lineEnd:c,polygonStart:function(){y.point=s,y.lineStart=f,y.lineEnd=h,g=[],p=[]},polygonEnd:function(){y.point=a,y.lineStart=l,y.lineEnd=c,g=oa.merge(g);var n=Ot(m,p);g.length?(b||(i.polygonStart(),b=!0),Lt(g,Ut,n,e,i)):n&&(b||(i.polygonStart(),b=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),b&&(i.polygonEnd(),b=!1),g=p=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}},M=Pt(),x=t(M),b=!1;return y}}function Dt(n){return n.length>1}function Pt(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:b,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function Ut(n,t){return((n=n.x)[0]<0?n[1]-Oa-Pa:Oa-n[1])-((t=t.x)[0]<0?t[1]-Oa-Pa:Oa-t[1])}function jt(n){var t,e=NaN,r=NaN,u=NaN;return{lineStart:function(){n.lineStart(),t=1},point:function(i,a){var o=i>0?ja:-ja,l=Ma(i-e);Ma(l-ja)<Pa?(n.point(e,r=(r+a)/2>0?Oa:-Oa),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(o,r),n.point(i,r),t=0):u!==o&&l>=ja&&(Ma(e-u)<Pa&&(e-=u*Pa),Ma(i-o)<Pa&&(i-=o*Pa),r=Ft(e,r,i,a),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(o,r),t=0),n.point(e=i,r=a),u=o},lineEnd:function(){n.lineEnd(),e=r=NaN},clean:function(){return 2-t}}}function Ft(n,t,e,r){var u,i,a=Math.sin(n-e);return Ma(a)>Pa?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(e)-Math.sin(r)*(u=Math.cos(t))*Math.sin(n))/(u*i*a)):(t+r)/2}function Ht(n,t,e,r){var u;if(null==n)u=e*Oa,r.point(-ja,u),r.point(0,u),r.point(ja,u),r.point(ja,0),r.point(ja,-u),r.point(0,-u),r.point(-ja,-u),r.point(-ja,0),r.point(-ja,u);else if(Ma(n[0]-t[0])>Pa){var i=n[0]<t[0]?ja:-ja;u=e*i/2,r.point(-i,u),r.point(0,u),r.point(i,u)}else r.point(t[0],t[1])}function Ot(n,t){var e=n[0],r=n[1],u=[Math.sin(e),-Math.cos(e),0],i=0,a=0;ko.reset();for(var o=0,l=t.length;l>o;++o){var c=t[o],s=c.length;if(s)for(var f=c[0],h=f[0],g=f[1]/2+ja/4,p=Math.sin(g),v=Math.cos(g),d=1;;){d===s&&(d=0),n=c[d];var m=n[0],y=n[1]/2+ja/4,M=Math.sin(y),x=Math.cos(y),b=m-h,_=b>=0?1:-1,w=_*b,S=w>ja,k=p*M;if(ko.add(Math.atan2(k*_*Math.sin(w),v*x+k*Math.cos(w))),i+=S?b+_*Fa:b,S^h>=e^m>=e){var N=yt(dt(f),dt(n));bt(N);var E=yt(u,N);bt(E);var A=(S^b>=0?-1:1)*tn(E[2]);(r>A||r===A&&(N[0]||N[1]))&&(a+=S^b>=0?1:-1)}if(!d++)break;h=m,p=M,v=x,f=n}}return(-Pa>i||Pa>i&&0>ko)^1&a}function It(n){function t(n,t){return Math.cos(n)*Math.cos(t)>i}function e(n){var e,i,l,c,s;return{lineStart:function(){c=l=!1,s=1},point:function(f,h){var g,p=[f,h],v=t(f,h),d=a?v?0:u(f,h):v?u(f+(0>f?ja:-ja),h):0;if(!e&&(c=l=v)&&n.lineStart(),v!==l&&(g=r(e,p),(wt(e,g)||wt(p,g))&&(p[0]+=Pa,p[1]+=Pa,v=t(p[0],p[1]))),v!==l)s=0,v?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(o&&e&&a^v){var m;d&i||!(m=r(p,e,!0))||(s=0,a?(n.lineStart(),n.point(m[0][0],m[0][1]),n.point(m[1][0],m[1][1]),n.lineEnd()):(n.point(m[1][0],m[1][1]),n.lineEnd(),n.lineStart(),n.point(m[0][0],m[0][1])))}!v||e&&wt(e,p)||n.point(p[0],p[1]),e=p,l=v,i=d},lineEnd:function(){l&&n.lineEnd(),e=null},clean:function(){return s|(c&&l)<<1}}}function r(n,t,e){var r=dt(n),u=dt(t),a=[1,0,0],o=yt(r,u),l=mt(o,o),c=o[0],s=l-c*c;if(!s)return!e&&n;var f=i*l/s,h=-i*c/s,g=yt(a,o),p=xt(a,f),v=xt(o,h);Mt(p,v);var d=g,m=mt(p,d),y=mt(d,d),M=m*m-y*(mt(p,p)-1);if(!(0>M)){var x=Math.sqrt(M),b=xt(d,(-m-x)/y);if(Mt(b,p),b=_t(b),!e)return b;var _,w=n[0],S=t[0],k=n[1],N=t[1];w>S&&(_=w,w=S,S=_);var E=S-w,A=Ma(E-ja)<Pa,C=A||Pa>E;if(!A&&k>N&&(_=k,k=N,N=_),C?A?k+N>0^b[1]<(Ma(b[0]-w)<Pa?k:N):k<=b[1]&&b[1]<=N:E>ja^(w<=b[0]&&b[0]<=S)){var z=xt(d,(-m+x)/y);return Mt(z,p),[b,_t(z)]}}}function u(t,e){var r=a?n:ja-n,u=0;return-r>t?u|=1:t>r&&(u|=2),-r>e?u|=4:e>r&&(u|=8),u}var i=Math.cos(n),a=i>0,o=Ma(i)>Pa,l=ve(n,6*Ia);return Rt(t,e,l,a?[0,-n]:[-ja,n-ja])}function Yt(n,t,e,r){return function(u){var i,a=u.a,o=u.b,l=a.x,c=a.y,s=o.x,f=o.y,h=0,g=1,p=s-l,v=f-c;if(i=n-l,p||!(i>0)){if(i/=p,0>p){if(h>i)return;g>i&&(g=i)}else if(p>0){if(i>g)return;i>h&&(h=i)}if(i=e-l,p||!(0>i)){if(i/=p,0>p){if(i>g)return;i>h&&(h=i)}else if(p>0){if(h>i)return;g>i&&(g=i)}if(i=t-c,v||!(i>0)){if(i/=v,0>v){if(h>i)return;g>i&&(g=i)}else if(v>0){if(i>g)return;i>h&&(h=i)}if(i=r-c,v||!(0>i)){if(i/=v,0>v){if(i>g)return;i>h&&(h=i)}else if(v>0){if(h>i)return;g>i&&(g=i)}return h>0&&(u.a={x:l+h*p,y:c+h*v}),1>g&&(u.b={x:l+g*p,y:c+g*v}),u}}}}}}function Zt(n,t,e,r){function u(r,u){return Ma(r[0]-n)<Pa?u>0?0:3:Ma(r[0]-e)<Pa?u>0?2:1:Ma(r[1]-t)<Pa?u>0?1:0:u>0?3:2}function i(n,t){return a(n.x,t.x)}function a(n,t){var e=u(n,1),r=u(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}return function(o){function l(n){for(var t=0,e=d.length,r=n[1],u=0;e>u;++u)for(var i,a=1,o=d[u],l=o.length,c=o[0];l>a;++a)i=o[a],c[1]<=r?i[1]>r&&Q(c,i,n)>0&&++t:i[1]<=r&&Q(c,i,n)<0&&--t,c=i;return 0!==t}function c(i,o,l,c){var s=0,f=0;if(null==i||(s=u(i,l))!==(f=u(o,l))||a(i,o)<0^l>0){do c.point(0===s||3===s?n:e,s>1?r:t);while((s=(s+l+4)%4)!==f)}else c.point(o[0],o[1])}function s(u,i){return u>=n&&e>=u&&i>=t&&r>=i}function f(n,t){s(n,t)&&o.point(n,t)}function h(){C.point=p,d&&d.push(m=[]),S=!0,w=!1,b=_=NaN}function g(){v&&(p(y,M),x&&w&&E.rejoin(),v.push(E.buffer())),C.point=f,w&&o.lineEnd()}function p(n,t){n=Math.max(-Ho,Math.min(Ho,n)),t=Math.max(-Ho,Math.min(Ho,t));var e=s(n,t);if(d&&m.push([n,t]),S)y=n,M=t,x=e,S=!1,e&&(o.lineStart(),o.point(n,t));else if(e&&w)o.point(n,t);else{var r={a:{x:b,y:_},b:{x:n,y:t}};A(r)?(w||(o.lineStart(),o.point(r.a.x,r.a.y)),o.point(r.b.x,r.b.y),e||o.lineEnd(),k=!1):e&&(o.lineStart(),o.point(n,t),k=!1)}b=n,_=t,w=e}var v,d,m,y,M,x,b,_,w,S,k,N=o,E=Pt(),A=Yt(n,t,e,r),C={point:f,lineStart:h,lineEnd:g,polygonStart:function(){o=E,v=[],d=[],k=!0},polygonEnd:function(){o=N,v=oa.merge(v);var t=l([n,r]),e=k&&t,u=v.length;(e||u)&&(o.polygonStart(),e&&(o.lineStart(),c(null,null,1,o),o.lineEnd()),u&&Lt(v,i,t,c,o),o.polygonEnd()),v=d=m=null}};return C}}function Vt(n){var t=0,e=ja/3,r=oe(n),u=r(t,e);return u.parallels=function(n){return arguments.length?r(t=n[0]*ja/180,e=n[1]*ja/180):[t/ja*180,e/ja*180]},u}function Xt(n,t){function e(n,t){var e=Math.sqrt(i-2*u*Math.sin(t))/u;return[e*Math.sin(n*=u),a-e*Math.cos(n)]}var r=Math.sin(n),u=(r+Math.sin(t))/2,i=1+r*(2*u-r),a=Math.sqrt(i)/u;return e.invert=function(n,t){var e=a-t;return[Math.atan2(n,e)/u,tn((i-(n*n+e*e)*u*u)/(2*u))]},e}function $t(){function n(n,t){Io+=u*n-r*t,r=n,u=t}var t,e,r,u;$o.point=function(i,a){$o.point=n,t=r=i,e=u=a},$o.lineEnd=function(){n(t,e)}}function Bt(n,t){Yo>n&&(Yo=n),n>Vo&&(Vo=n),Zo>t&&(Zo=t),t>Xo&&(Xo=t)}function Wt(){function n(n,t){a.push("M",n,",",t,i)}function t(n,t){a.push("M",n,",",t),o.point=e}function e(n,t){a.push("L",n,",",t)}function r(){o.point=n}function u(){a.push("Z")}var i=Jt(4.5),a=[],o={point:n,lineStart:function(){o.point=t},lineEnd:r,polygonStart:function(){o.lineEnd=u},polygonEnd:function(){o.lineEnd=r,o.point=n},pointRadius:function(n){return i=Jt(n),o},result:function(){if(a.length){var n=a.join("");return a=[],n}}};return o}function Jt(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function Gt(n,t){Co+=n,zo+=t,++Lo}function Kt(){function n(n,r){var u=n-t,i=r-e,a=Math.sqrt(u*u+i*i);qo+=a*(t+n)/2,To+=a*(e+r)/2,Ro+=a,Gt(t=n,e=r)}var t,e;Wo.point=function(r,u){Wo.point=n,Gt(t=r,e=u)}}function Qt(){Wo.point=Gt}function ne(){function n(n,t){var e=n-r,i=t-u,a=Math.sqrt(e*e+i*i);qo+=a*(r+n)/2,To+=a*(u+t)/2,Ro+=a,a=u*n-r*t,Do+=a*(r+n),Po+=a*(u+t),Uo+=3*a,Gt(r=n,u=t)}var t,e,r,u;Wo.point=function(i,a){Wo.point=n,Gt(t=r=i,e=u=a)},Wo.lineEnd=function(){n(t,e)}}function te(n){function t(t,e){n.moveTo(t+a,e),n.arc(t,e,a,0,Fa)}function e(t,e){n.moveTo(t,e),o.point=r}function r(t,e){n.lineTo(t,e)}function u(){o.point=t}function i(){n.closePath()}var a=4.5,o={point:t,lineStart:function(){o.point=e},lineEnd:u,polygonStart:function(){o.lineEnd=i},polygonEnd:function(){o.lineEnd=u,o.point=t},pointRadius:function(n){return a=n,o},result:b};return o}function ee(n){function t(n){return(o?r:e)(n)}function e(t){return ie(t,function(e,r){e=n(e,r),t.point(e[0],e[1])})}function r(t){function e(e,r){e=n(e,r),t.point(e[0],e[1])}function r(){M=NaN,S.point=i,t.lineStart()}function i(e,r){var i=dt([e,r]),a=n(e,r);u(M,x,y,b,_,w,M=a[0],x=a[1],y=e,b=i[0],_=i[1],w=i[2],o,t),t.point(M,x)}function a(){S.point=e,t.lineEnd()}function l(){
r(),S.point=c,S.lineEnd=s}function c(n,t){i(f=n,h=t),g=M,p=x,v=b,d=_,m=w,S.point=i}function s(){u(M,x,y,b,_,w,g,p,f,v,d,m,o,t),S.lineEnd=a,a()}var f,h,g,p,v,d,m,y,M,x,b,_,w,S={point:e,lineStart:r,lineEnd:a,polygonStart:function(){t.polygonStart(),S.lineStart=l},polygonEnd:function(){t.polygonEnd(),S.lineStart=r}};return S}function u(t,e,r,o,l,c,s,f,h,g,p,v,d,m){var y=s-t,M=f-e,x=y*y+M*M;if(x>4*i&&d--){var b=o+g,_=l+p,w=c+v,S=Math.sqrt(b*b+_*_+w*w),k=Math.asin(w/=S),N=Ma(Ma(w)-1)<Pa||Ma(r-h)<Pa?(r+h)/2:Math.atan2(_,b),E=n(N,k),A=E[0],C=E[1],z=A-t,L=C-e,q=M*z-y*L;(q*q/x>i||Ma((y*z+M*L)/x-.5)>.3||a>o*g+l*p+c*v)&&(u(t,e,r,o,l,c,A,C,N,b/=S,_/=S,w,d,m),m.point(A,C),u(A,C,N,b,_,w,s,f,h,g,p,v,d,m))}}var i=.5,a=Math.cos(30*Ia),o=16;return t.precision=function(n){return arguments.length?(o=(i=n*n)>0&&16,t):Math.sqrt(i)},t}function re(n){var t=ee(function(t,e){return n([t*Ya,e*Ya])});return function(n){return le(t(n))}}function ue(n){this.stream=n}function ie(n,t){return{point:t,sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}function ae(n){return oe(function(){return n})()}function oe(n){function t(n){return n=o(n[0]*Ia,n[1]*Ia),[n[0]*h+l,c-n[1]*h]}function e(n){return n=o.invert((n[0]-l)/h,(c-n[1])/h),n&&[n[0]*Ya,n[1]*Ya]}function r(){o=Ct(a=fe(m,M,x),i);var n=i(v,d);return l=g-n[0]*h,c=p+n[1]*h,u()}function u(){return s&&(s.valid=!1,s=null),t}var i,a,o,l,c,s,f=ee(function(n,t){return n=i(n,t),[n[0]*h+l,c-n[1]*h]}),h=150,g=480,p=250,v=0,d=0,m=0,M=0,x=0,b=Fo,_=y,w=null,S=null;return t.stream=function(n){return s&&(s.valid=!1),s=le(b(a,f(_(n)))),s.valid=!0,s},t.clipAngle=function(n){return arguments.length?(b=null==n?(w=n,Fo):It((w=+n)*Ia),u()):w},t.clipExtent=function(n){return arguments.length?(S=n,_=n?Zt(n[0][0],n[0][1],n[1][0],n[1][1]):y,u()):S},t.scale=function(n){return arguments.length?(h=+n,r()):h},t.translate=function(n){return arguments.length?(g=+n[0],p=+n[1],r()):[g,p]},t.center=function(n){return arguments.length?(v=n[0]%360*Ia,d=n[1]%360*Ia,r()):[v*Ya,d*Ya]},t.rotate=function(n){return arguments.length?(m=n[0]%360*Ia,M=n[1]%360*Ia,x=n.length>2?n[2]%360*Ia:0,r()):[m*Ya,M*Ya,x*Ya]},oa.rebind(t,f,"precision"),function(){return i=n.apply(this,arguments),t.invert=i.invert&&e,r()}}function le(n){return ie(n,function(t,e){n.point(t*Ia,e*Ia)})}function ce(n,t){return[n,t]}function se(n,t){return[n>ja?n-Fa:-ja>n?n+Fa:n,t]}function fe(n,t,e){return n?t||e?Ct(ge(n),pe(t,e)):ge(n):t||e?pe(t,e):se}function he(n){return function(t,e){return t+=n,[t>ja?t-Fa:-ja>t?t+Fa:t,e]}}function ge(n){var t=he(n);return t.invert=he(-n),t}function pe(n,t){function e(n,t){var e=Math.cos(t),o=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*r+o*u;return[Math.atan2(l*i-s*a,o*r-c*u),tn(s*i+l*a)]}var r=Math.cos(n),u=Math.sin(n),i=Math.cos(t),a=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),o=Math.cos(n)*e,l=Math.sin(n)*e,c=Math.sin(t),s=c*i-l*a;return[Math.atan2(l*i+c*a,o*r+s*u),tn(s*r-o*u)]},e}function ve(n,t){var e=Math.cos(n),r=Math.sin(n);return function(u,i,a,o){var l=a*t;null!=u?(u=de(e,u),i=de(e,i),(a>0?i>u:u>i)&&(u+=a*Fa)):(u=n+a*Fa,i=n-.5*l);for(var c,s=u;a>0?s>i:i>s;s-=l)o.point((c=_t([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],c[1])}}function de(n,t){var e=dt(t);e[0]-=n,bt(e);var r=nn(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-Pa)%(2*Math.PI)}function me(n,t,e){var r=oa.range(n,t-Pa,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function ye(n,t,e){var r=oa.range(n,t-Pa,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function Me(n){return n.source}function xe(n){return n.target}function be(n,t,e,r){var u=Math.cos(t),i=Math.sin(t),a=Math.cos(r),o=Math.sin(r),l=u*Math.cos(n),c=u*Math.sin(n),s=a*Math.cos(e),f=a*Math.sin(e),h=2*Math.asin(Math.sqrt(an(r-t)+u*a*an(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*l+t*s,u=e*c+t*f,a=e*i+t*o;return[Math.atan2(u,r)*Ya,Math.atan2(a,Math.sqrt(r*r+u*u))*Ya]}:function(){return[n*Ya,t*Ya]};return p.distance=h,p}function _e(){function n(n,u){var i=Math.sin(u*=Ia),a=Math.cos(u),o=Ma((n*=Ia)-t),l=Math.cos(o);Jo+=Math.atan2(Math.sqrt((o=a*Math.sin(o))*o+(o=r*i-e*a*l)*o),e*i+r*a*l),t=n,e=i,r=a}var t,e,r;Go.point=function(u,i){t=u*Ia,e=Math.sin(i*=Ia),r=Math.cos(i),Go.point=n},Go.lineEnd=function(){Go.point=Go.lineEnd=b}}function we(n,t){function e(t,e){var r=Math.cos(t),u=Math.cos(e),i=n(r*u);return[i*u*Math.sin(t),i*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),u=t(r),i=Math.sin(u),a=Math.cos(u);return[Math.atan2(n*i,r*a),Math.asin(r&&e*i/r)]},e}function Se(n,t){function e(n,t){a>0?-Oa+Pa>t&&(t=-Oa+Pa):t>Oa-Pa&&(t=Oa-Pa);var e=a/Math.pow(u(t),i);return[e*Math.sin(i*n),a-e*Math.cos(i*n)]}var r=Math.cos(n),u=function(n){return Math.tan(ja/4+n/2)},i=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(u(t)/u(n)),a=r*Math.pow(u(n),i)/i;return i?(e.invert=function(n,t){var e=a-t,r=K(i)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/i,2*Math.atan(Math.pow(a/r,1/i))-Oa]},e):Ne}function ke(n,t){function e(n,t){var e=i-t;return[e*Math.sin(u*n),i-e*Math.cos(u*n)]}var r=Math.cos(n),u=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),i=r/u+n;return Ma(u)<Pa?ce:(e.invert=function(n,t){var e=i-t;return[Math.atan2(n,e)/u,i-K(u)*Math.sqrt(n*n+e*e)]},e)}function Ne(n,t){return[n,Math.log(Math.tan(ja/4+t/2))]}function Ee(n){var t,e=ae(n),r=e.scale,u=e.translate,i=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=u.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var a=i.apply(e,arguments);if(a===e){if(t=null==n){var o=ja*r(),l=u();i([[l[0]-o,l[1]-o],[l[0]+o,l[1]+o]])}}else t&&(a=null);return a},e.clipExtent(null)}function Ae(n,t){return[Math.log(Math.tan(ja/4+t/2)),-n]}function Ce(n){return n[0]}function ze(n){return n[1]}function Le(n){for(var t=n.length,e=[0,1],r=2,u=2;t>u;u++){for(;r>1&&Q(n[e[r-2]],n[e[r-1]],n[u])<=0;)--r;e[r++]=u}return e.slice(0,r)}function qe(n,t){return n[0]-t[0]||n[1]-t[1]}function Te(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])}function Re(n,t,e,r){var u=n[0],i=e[0],a=t[0]-u,o=r[0]-i,l=n[1],c=e[1],s=t[1]-l,f=r[1]-c,h=(o*(l-c)-f*(u-i))/(f*a-o*s);return[u+h*a,l+h*s]}function De(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}function Pe(){rr(this),this.edge=this.site=this.circle=null}function Ue(n){var t=cl.pop()||new Pe;return t.site=n,t}function je(n){Be(n),al.remove(n),cl.push(n),rr(n)}function Fe(n){var t=n.circle,e=t.x,r=t.cy,u={x:e,y:r},i=n.P,a=n.N,o=[n];je(n);for(var l=i;l.circle&&Ma(e-l.circle.x)<Pa&&Ma(r-l.circle.cy)<Pa;)i=l.P,o.unshift(l),je(l),l=i;o.unshift(l),Be(l);for(var c=a;c.circle&&Ma(e-c.circle.x)<Pa&&Ma(r-c.circle.cy)<Pa;)a=c.N,o.push(c),je(c),c=a;o.push(c),Be(c);var s,f=o.length;for(s=1;f>s;++s)c=o[s],l=o[s-1],nr(c.edge,l.site,c.site,u);l=o[0],c=o[f-1],c.edge=Ke(l.site,c.site,null,u),$e(l),$e(c)}function He(n){for(var t,e,r,u,i=n.x,a=n.y,o=al._;o;)if(r=Oe(o,a)-i,r>Pa)o=o.L;else{if(u=i-Ie(o,a),!(u>Pa)){r>-Pa?(t=o.P,e=o):u>-Pa?(t=o,e=o.N):t=e=o;break}if(!o.R){t=o;break}o=o.R}var l=Ue(n);if(al.insert(t,l),t||e){if(t===e)return Be(t),e=Ue(t.site),al.insert(l,e),l.edge=e.edge=Ke(t.site,l.site),$e(t),void $e(e);if(!e)return void(l.edge=Ke(t.site,l.site));Be(t),Be(e);var c=t.site,s=c.x,f=c.y,h=n.x-s,g=n.y-f,p=e.site,v=p.x-s,d=p.y-f,m=2*(h*d-g*v),y=h*h+g*g,M=v*v+d*d,x={x:(d*y-g*M)/m+s,y:(h*M-v*y)/m+f};nr(e.edge,c,p,x),l.edge=Ke(c,n,null,x),e.edge=Ke(n,p,null,x),$e(t),$e(e)}}function Oe(n,t){var e=n.site,r=e.x,u=e.y,i=u-t;if(!i)return r;var a=n.P;if(!a)return-(1/0);e=a.site;var o=e.x,l=e.y,c=l-t;if(!c)return o;var s=o-r,f=1/i-1/c,h=s/c;return f?(-h+Math.sqrt(h*h-2*f*(s*s/(-2*c)-l+c/2+u-i/2)))/f+r:(r+o)/2}function Ie(n,t){var e=n.N;if(e)return Oe(e,t);var r=n.site;return r.y===t?r.x:1/0}function Ye(n){this.site=n,this.edges=[]}function Ze(n){for(var t,e,r,u,i,a,o,l,c,s,f=n[0][0],h=n[1][0],g=n[0][1],p=n[1][1],v=il,d=v.length;d--;)if(i=v[d],i&&i.prepare())for(o=i.edges,l=o.length,a=0;l>a;)s=o[a].end(),r=s.x,u=s.y,c=o[++a%l].start(),t=c.x,e=c.y,(Ma(r-t)>Pa||Ma(u-e)>Pa)&&(o.splice(a,0,new tr(Qe(i.site,s,Ma(r-f)<Pa&&p-u>Pa?{x:f,y:Ma(t-f)<Pa?e:p}:Ma(u-p)<Pa&&h-r>Pa?{x:Ma(e-p)<Pa?t:h,y:p}:Ma(r-h)<Pa&&u-g>Pa?{x:h,y:Ma(t-h)<Pa?e:g}:Ma(u-g)<Pa&&r-f>Pa?{x:Ma(e-g)<Pa?t:f,y:g}:null),i.site,null)),++l)}function Ve(n,t){return t.angle-n.angle}function Xe(){rr(this),this.x=this.y=this.arc=this.site=this.cy=null}function $e(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,u=n.site,i=e.site;if(r!==i){var a=u.x,o=u.y,l=r.x-a,c=r.y-o,s=i.x-a,f=i.y-o,h=2*(l*f-c*s);if(!(h>=-Ua)){var g=l*l+c*c,p=s*s+f*f,v=(f*g-c*p)/h,d=(l*p-s*g)/h,f=d+o,m=sl.pop()||new Xe;m.arc=n,m.site=u,m.x=v+a,m.y=f+Math.sqrt(v*v+d*d),m.cy=f,n.circle=m;for(var y=null,M=ll._;M;)if(m.y<M.y||m.y===M.y&&m.x<=M.x){if(!M.L){y=M.P;break}M=M.L}else{if(!M.R){y=M;break}M=M.R}ll.insert(y,m),y||(ol=m)}}}}function Be(n){var t=n.circle;t&&(t.P||(ol=t.N),ll.remove(t),sl.push(t),rr(t),n.circle=null)}function We(n){for(var t,e=ul,r=Yt(n[0][0],n[0][1],n[1][0],n[1][1]),u=e.length;u--;)t=e[u],(!Je(t,n)||!r(t)||Ma(t.a.x-t.b.x)<Pa&&Ma(t.a.y-t.b.y)<Pa)&&(t.a=t.b=null,e.splice(u,1))}function Je(n,t){var e=n.b;if(e)return!0;var r,u,i=n.a,a=t[0][0],o=t[1][0],l=t[0][1],c=t[1][1],s=n.l,f=n.r,h=s.x,g=s.y,p=f.x,v=f.y,d=(h+p)/2,m=(g+v)/2;if(v===g){if(a>d||d>=o)return;if(h>p){if(i){if(i.y>=c)return}else i={x:d,y:l};e={x:d,y:c}}else{if(i){if(i.y<l)return}else i={x:d,y:c};e={x:d,y:l}}}else if(r=(h-p)/(v-g),u=m-r*d,-1>r||r>1)if(h>p){if(i){if(i.y>=c)return}else i={x:(l-u)/r,y:l};e={x:(c-u)/r,y:c}}else{if(i){if(i.y<l)return}else i={x:(c-u)/r,y:c};e={x:(l-u)/r,y:l}}else if(v>g){if(i){if(i.x>=o)return}else i={x:a,y:r*a+u};e={x:o,y:r*o+u}}else{if(i){if(i.x<a)return}else i={x:o,y:r*o+u};e={x:a,y:r*a+u}}return n.a=i,n.b=e,!0}function Ge(n,t){this.l=n,this.r=t,this.a=this.b=null}function Ke(n,t,e,r){var u=new Ge(n,t);return ul.push(u),e&&nr(u,n,t,e),r&&nr(u,t,n,r),il[n.i].edges.push(new tr(u,n,t)),il[t.i].edges.push(new tr(u,t,n)),u}function Qe(n,t,e){var r=new Ge(n,null);return r.a=t,r.b=e,ul.push(r),r}function nr(n,t,e,r){n.a||n.b?n.l===e?n.b=r:n.a=r:(n.a=r,n.l=t,n.r=e)}function tr(n,t,e){var r=n.a,u=n.b;this.edge=n,this.site=t,this.angle=e?Math.atan2(e.y-t.y,e.x-t.x):n.l===t?Math.atan2(u.x-r.x,r.y-u.y):Math.atan2(r.x-u.x,u.y-r.y)}function er(){this._=null}function rr(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function ur(n,t){var e=t,r=t.R,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function ir(n,t){var e=t,r=t.L,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function ar(n){for(;n.L;)n=n.L;return n}function or(n,t){var e,r,u,i=n.sort(lr).pop();for(ul=[],il=new Array(n.length),al=new er,ll=new er;;)if(u=ol,i&&(!u||i.y<u.y||i.y===u.y&&i.x<u.x))(i.x!==e||i.y!==r)&&(il[i.i]=new Ye(i),He(i),e=i.x,r=i.y),i=n.pop();else{if(!u)break;Fe(u.arc)}t&&(We(t),Ze(t));var a={cells:il,edges:ul};return al=ll=ul=il=null,a}function lr(n,t){return t.y-n.y||t.x-n.x}function cr(n,t,e){return(n.x-e.x)*(t.y-n.y)-(n.x-t.x)*(e.y-n.y)}function sr(n){return n.x}function fr(n){return n.y}function hr(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function gr(n,t,e,r,u,i){if(!n(t,e,r,u,i)){var a=.5*(e+u),o=.5*(r+i),l=t.nodes;l[0]&&gr(n,l[0],e,r,a,o),l[1]&&gr(n,l[1],a,r,u,o),l[2]&&gr(n,l[2],e,o,a,i),l[3]&&gr(n,l[3],a,o,u,i)}}function pr(n,t,e,r,u,i,a){var o,l=1/0;return function c(n,s,f,h,g){if(!(s>i||f>a||r>h||u>g)){if(p=n.point){var p,v=t-n.x,d=e-n.y,m=v*v+d*d;if(l>m){var y=Math.sqrt(l=m);r=t-y,u=e-y,i=t+y,a=e+y,o=p}}for(var M=n.nodes,x=.5*(s+h),b=.5*(f+g),_=t>=x,w=e>=b,S=w<<1|_,k=S+4;k>S;++S)if(n=M[3&S])switch(3&S){case 0:c(n,s,f,x,b);break;case 1:c(n,x,f,h,b);break;case 2:c(n,s,b,x,g);break;case 3:c(n,x,b,h,g)}}}(n,r,u,i,a),o}function vr(n,t){n=oa.rgb(n),t=oa.rgb(t);var e=n.r,r=n.g,u=n.b,i=t.r-e,a=t.g-r,o=t.b-u;return function(n){return"#"+bn(Math.round(e+i*n))+bn(Math.round(r+a*n))+bn(Math.round(u+o*n))}}function dr(n,t){var e,r={},u={};for(e in n)e in t?r[e]=Mr(n[e],t[e]):u[e]=n[e];for(e in t)e in n||(u[e]=t[e]);return function(n){for(e in r)u[e]=r[e](n);return u}}function mr(n,t){return n=+n,t=+t,function(e){return n*(1-e)+t*e}}function yr(n,t){var e,r,u,i=hl.lastIndex=gl.lastIndex=0,a=-1,o=[],l=[];for(n+="",t+="";(e=hl.exec(n))&&(r=gl.exec(t));)(u=r.index)>i&&(u=t.slice(i,u),o[a]?o[a]+=u:o[++a]=u),(e=e[0])===(r=r[0])?o[a]?o[a]+=r:o[++a]=r:(o[++a]=null,l.push({i:a,x:mr(e,r)})),i=gl.lastIndex;return i<t.length&&(u=t.slice(i),o[a]?o[a]+=u:o[++a]=u),o.length<2?l[0]?(t=l[0].x,function(n){return t(n)+""}):function(){return t}:(t=l.length,function(n){for(var e,r=0;t>r;++r)o[(e=l[r]).i]=e.x(n);return o.join("")})}function Mr(n,t){for(var e,r=oa.interpolators.length;--r>=0&&!(e=oa.interpolators[r](n,t)););return e}function xr(n,t){var e,r=[],u=[],i=n.length,a=t.length,o=Math.min(n.length,t.length);for(e=0;o>e;++e)r.push(Mr(n[e],t[e]));for(;i>e;++e)u[e]=n[e];for(;a>e;++e)u[e]=t[e];return function(n){for(e=0;o>e;++e)u[e]=r[e](n);return u}}function br(n){return function(t){return 0>=t?0:t>=1?1:n(t)}}function _r(n){return function(t){return 1-n(1-t)}}function wr(n){return function(t){return.5*(.5>t?n(2*t):2-n(2-2*t))}}function Sr(n){return n*n}function kr(n){return n*n*n}function Nr(n){if(0>=n)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(.5>n?e:3*(n-t)+e-.75)}function Er(n){return function(t){return Math.pow(t,n)}}function Ar(n){return 1-Math.cos(n*Oa)}function Cr(n){return Math.pow(2,10*(n-1))}function zr(n){return 1-Math.sqrt(1-n*n)}function Lr(n,t){var e;return arguments.length<2&&(t=.45),arguments.length?e=t/Fa*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,-10*r)*Math.sin((r-e)*Fa/t)}}function qr(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function Tr(n){return 1/2.75>n?7.5625*n*n:2/2.75>n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75>n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Rr(n,t){n=oa.hcl(n),t=oa.hcl(t);var e=n.h,r=n.c,u=n.l,i=t.h-e,a=t.c-r,o=t.l-u;return isNaN(a)&&(a=0,r=isNaN(r)?t.c:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return fn(e+i*n,r+a*n,u+o*n)+""}}function Dr(n,t){n=oa.hsl(n),t=oa.hsl(t);var e=n.h,r=n.s,u=n.l,i=t.h-e,a=t.s-r,o=t.l-u;return isNaN(a)&&(a=0,r=isNaN(r)?t.s:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return cn(e+i*n,r+a*n,u+o*n)+""}}function Pr(n,t){n=oa.lab(n),t=oa.lab(t);var e=n.l,r=n.a,u=n.b,i=t.l-e,a=t.a-r,o=t.b-u;return function(n){return gn(e+i*n,r+a*n,u+o*n)+""}}function Ur(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function jr(n){var t=[n.a,n.b],e=[n.c,n.d],r=Hr(t),u=Fr(t,e),i=Hr(Or(e,t,-u))||0;t[0]*e[1]<e[0]*t[1]&&(t[0]*=-1,t[1]*=-1,r*=-1,u*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*Ya,this.translate=[n.e,n.f],this.scale=[r,i],this.skew=i?Math.atan2(u,i)*Ya:0}function Fr(n,t){return n[0]*t[0]+n[1]*t[1]}function Hr(n){var t=Math.sqrt(Fr(n,n));return t&&(n[0]/=t,n[1]/=t),t}function Or(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function Ir(n){return n.length?n.pop()+",":""}function Yr(n,t,e,r){if(n[0]!==t[0]||n[1]!==t[1]){var u=e.push("translate(",null,",",null,")");r.push({i:u-4,x:mr(n[0],t[0])},{i:u-2,x:mr(n[1],t[1])})}else(t[0]||t[1])&&e.push("translate("+t+")")}function Zr(n,t,e,r){n!==t?(n-t>180?t+=360:t-n>180&&(n+=360),r.push({i:e.push(Ir(e)+"rotate(",null,")")-2,x:mr(n,t)})):t&&e.push(Ir(e)+"rotate("+t+")")}function Vr(n,t,e,r){n!==t?r.push({i:e.push(Ir(e)+"skewX(",null,")")-2,x:mr(n,t)}):t&&e.push(Ir(e)+"skewX("+t+")")}function Xr(n,t,e,r){if(n[0]!==t[0]||n[1]!==t[1]){var u=e.push(Ir(e)+"scale(",null,",",null,")");r.push({i:u-4,x:mr(n[0],t[0])},{i:u-2,x:mr(n[1],t[1])})}else(1!==t[0]||1!==t[1])&&e.push(Ir(e)+"scale("+t+")")}function $r(n,t){var e=[],r=[];return n=oa.transform(n),t=oa.transform(t),Yr(n.translate,t.translate,e,r),Zr(n.rotate,t.rotate,e,r),Vr(n.skew,t.skew,e,r),Xr(n.scale,t.scale,e,r),n=t=null,function(n){for(var t,u=-1,i=r.length;++u<i;)e[(t=r[u]).i]=t.x(n);return e.join("")}}function Br(n,t){return t=(t-=n=+n)||1/t,function(e){return(e-n)/t}}function Wr(n,t){return t=(t-=n=+n)||1/t,function(e){return Math.max(0,Math.min(1,(e-n)/t))}}function Jr(n){for(var t=n.source,e=n.target,r=Kr(t,e),u=[t];t!==r;)t=t.parent,u.push(t);for(var i=u.length;e!==r;)u.splice(i,0,e),e=e.parent;return u}function Gr(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Kr(n,t){if(n===t)return n;for(var e=Gr(n),r=Gr(t),u=e.pop(),i=r.pop(),a=null;u===i;)a=u,u=e.pop(),i=r.pop();return a}function Qr(n){n.fixed|=2}function nu(n){n.fixed&=-7}function tu(n){n.fixed|=4,n.px=n.x,n.py=n.y}function eu(n){n.fixed&=-5}function ru(n,t,e){var r=0,u=0;if(n.charge=0,!n.leaf)for(var i,a=n.nodes,o=a.length,l=-1;++l<o;)i=a[l],null!=i&&(ru(i,t,e),n.charge+=i.charge,r+=i.charge*i.cx,u+=i.charge*i.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var c=t*e[n.point.index];n.charge+=n.pointCharge=c,r+=c*n.point.x,u+=c*n.point.y}n.cx=r/n.charge,n.cy=u/n.charge}function uu(n,t){return oa.rebind(n,t,"sort","children","value"),n.nodes=n,n.links=su,n}function iu(n,t){for(var e=[n];null!=(n=e.pop());)if(t(n),(u=n.children)&&(r=u.length))for(var r,u;--r>=0;)e.push(u[r])}function au(n,t){for(var e=[n],r=[];null!=(n=e.pop());)if(r.push(n),(i=n.children)&&(u=i.length))for(var u,i,a=-1;++a<u;)e.push(i[a]);for(;null!=(n=r.pop());)t(n)}function ou(n){return n.children}function lu(n){return n.value}function cu(n,t){return t.value-n.value}function su(n){return oa.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function fu(n){return n.x}function hu(n){return n.y}function gu(n,t,e){n.y0=t,n.y=e}function pu(n){return oa.range(n.length)}function vu(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function du(n){for(var t,e=1,r=0,u=n[0][1],i=n.length;i>e;++e)(t=n[e][1])>u&&(r=e,u=t);return r}function mu(n){return n.reduce(yu,0)}function yu(n,t){return n+t[1]}function Mu(n,t){return xu(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function xu(n,t){for(var e=-1,r=+n[0],u=(n[1]-r)/t,i=[];++e<=t;)i[e]=u*e+r;return i}function bu(n){return[oa.min(n),oa.max(n)]}function _u(n,t){return n.value-t.value}function wu(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function Su(n,t){n._pack_next=t,t._pack_prev=n}function ku(n,t){var e=t.x-n.x,r=t.y-n.y,u=n.r+t.r;return.999*u*u>e*e+r*r}function Nu(n){function t(n){s=Math.min(n.x-n.r,s),f=Math.max(n.x+n.r,f),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&&(c=e.length)){var e,r,u,i,a,o,l,c,s=1/0,f=-(1/0),h=1/0,g=-(1/0);if(e.forEach(Eu),r=e[0],r.x=-r.r,r.y=0,t(r),c>1&&(u=e[1],u.x=u.r,u.y=0,t(u),c>2))for(i=e[2],zu(r,u,i),t(i),wu(r,i),r._pack_prev=i,wu(i,u),u=r._pack_next,a=3;c>a;a++){zu(r,u,i=e[a]);var p=0,v=1,d=1;for(o=u._pack_next;o!==u;o=o._pack_next,v++)if(ku(o,i)){p=1;break}if(1==p)for(l=r._pack_prev;l!==o._pack_prev&&!ku(l,i);l=l._pack_prev,d++);p?(d>v||v==d&&u.r<r.r?Su(r,u=o):Su(r=l,u),a--):(wu(r,i),u=i,t(i))}var m=(s+f)/2,y=(h+g)/2,M=0;for(a=0;c>a;a++)i=e[a],i.x-=m,i.y-=y,M=Math.max(M,i.r+Math.sqrt(i.x*i.x+i.y*i.y));n.r=M,e.forEach(Au)}}function Eu(n){n._pack_next=n._pack_prev=n}function Au(n){delete n._pack_next,delete n._pack_prev}function Cu(n,t,e,r){var u=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,u)for(var i=-1,a=u.length;++i<a;)Cu(u[i],t,e,r)}function zu(n,t,e){var r=n.r+e.r,u=t.x-n.x,i=t.y-n.y;if(r&&(u||i)){var a=t.r+e.r,o=u*u+i*i;a*=a,r*=r;var l=.5+(r-a)/(2*o),c=Math.sqrt(Math.max(0,2*a*(r+o)-(r-=o)*r-a*a))/(2*o);e.x=n.x+l*u+c*i,e.y=n.y+l*i-c*u}else e.x=n.x+r,e.y=n.y}function Lu(n,t){return n.parent==t.parent?1:2}function qu(n){var t=n.children;return t.length?t[0]:n.t}function Tu(n){var t,e=n.children;return(t=e.length)?e[t-1]:n.t}function Ru(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function Du(n){for(var t,e=0,r=0,u=n.children,i=u.length;--i>=0;)t=u[i],t.z+=e,t.m+=e,e+=t.s+(r+=t.c)}function Pu(n,t,e){return n.a.parent===t.parent?n.a:e}function Uu(n){return 1+oa.max(n,function(n){return n.y})}function ju(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function Fu(n){var t=n.children;return t&&t.length?Fu(t[0]):n}function Hu(n){var t,e=n.children;return e&&(t=e.length)?Hu(e[t-1]):n}function Ou(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function Iu(n,t){var e=n.x+t[3],r=n.y+t[0],u=n.dx-t[1]-t[3],i=n.dy-t[0]-t[2];return 0>u&&(e+=u/2,u=0),0>i&&(r+=i/2,i=0),{x:e,y:r,dx:u,dy:i}}function Yu(n){var t=n[0],e=n[n.length-1];return e>t?[t,e]:[e,t]}function Zu(n){return n.rangeExtent?n.rangeExtent():Yu(n.range())}function Vu(n,t,e,r){var u=e(n[0],n[1]),i=r(t[0],t[1]);return function(n){return i(u(n))}}function Xu(n,t){var e,r=0,u=n.length-1,i=n[r],a=n[u];return i>a&&(e=r,r=u,u=e,e=i,i=a,a=e),n[r]=t.floor(i),n[u]=t.ceil(a),n}function $u(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:Sl}function Bu(n,t,e,r){var u=[],i=[],a=0,o=Math.min(n.length,t.length)-1;for(n[o]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++a<=o;)u.push(e(n[a-1],n[a])),i.push(r(t[a-1],t[a]));return function(t){var e=oa.bisect(n,t,1,o)-1;return i[e](u[e](t))}}function Wu(n,t,e,r){function u(){var u=Math.min(n.length,t.length)>2?Bu:Vu,l=r?Wr:Br;return a=u(n,t,l,e),o=u(t,n,l,Mr),i}function i(n){return a(n)}var a,o;return i.invert=function(n){return o(n)},i.domain=function(t){return arguments.length?(n=t.map(Number),u()):n},i.range=function(n){return arguments.length?(t=n,u()):t},i.rangeRound=function(n){return i.range(n).interpolate(Ur)},i.clamp=function(n){return arguments.length?(r=n,u()):r},i.interpolate=function(n){return arguments.length?(e=n,u()):e},i.ticks=function(t){return Qu(n,t)},i.tickFormat=function(t,e){return ni(n,t,e)},i.nice=function(t){return Gu(n,t),u()},i.copy=function(){return Wu(n,t,e,r)},u()}function Ju(n,t){return oa.rebind(n,t,"range","rangeRound","interpolate","clamp")}function Gu(n,t){return Xu(n,$u(Ku(n,t)[2])),Xu(n,$u(Ku(n,t)[2])),n}function Ku(n,t){null==t&&(t=10);var e=Yu(n),r=e[1]-e[0],u=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*u;return.15>=i?u*=10:.35>=i?u*=5:.75>=i&&(u*=2),e[0]=Math.ceil(e[0]/u)*u,e[1]=Math.floor(e[1]/u)*u+.5*u,e[2]=u,e}function Qu(n,t){return oa.range.apply(oa,Ku(n,t))}function ni(n,t,e){var r=Ku(n,t);if(e){var u=fo.exec(e);if(u.shift(),"s"===u[8]){var i=oa.formatPrefix(Math.max(Ma(r[0]),Ma(r[1])));return u[7]||(u[7]="."+ti(i.scale(r[2]))),u[8]="f",e=oa.format(u.join("")),function(n){return e(i.scale(n))+i.symbol}}u[7]||(u[7]="."+ei(u[8],r)),e=u.join("")}else e=",."+ti(r[2])+"f";return oa.format(e)}function ti(n){return-Math.floor(Math.log(n)/Math.LN10+.01)}function ei(n,t){var e=ti(t[2]);return n in kl?Math.abs(e-ti(Math.max(Ma(t[0]),Ma(t[1]))))+ +("e"!==n):e-2*("%"===n)}function ri(n,t,e,r){function u(n){return(e?Math.log(0>n?0:n):-Math.log(n>0?0:-n))/Math.log(t)}function i(n){return e?Math.pow(t,n):-Math.pow(t,-n)}function a(t){return n(u(t))}return a.invert=function(t){return i(n.invert(t))},a.domain=function(t){return arguments.length?(e=t[0]>=0,n.domain((r=t.map(Number)).map(u)),a):r},a.base=function(e){return arguments.length?(t=+e,n.domain(r.map(u)),a):t},a.nice=function(){var t=Xu(r.map(u),e?Math:El);return n.domain(t),r=t.map(i),a},a.ticks=function(){var n=Yu(r),a=[],o=n[0],l=n[1],c=Math.floor(u(o)),s=Math.ceil(u(l)),f=t%1?2:t;if(isFinite(s-c)){if(e){for(;s>c;c++)for(var h=1;f>h;h++)a.push(i(c)*h);a.push(i(c))}else for(a.push(i(c));c++<s;)for(var h=f-1;h>0;h--)a.push(i(c)*h);for(c=0;a[c]<o;c++);for(s=a.length;a[s-1]>l;s--);a=a.slice(c,s)}return a},a.tickFormat=function(n,e){if(!arguments.length)return Nl;arguments.length<2?e=Nl:"function"!=typeof e&&(e=oa.format(e));var r=Math.max(1,t*n/a.ticks().length);return function(n){var a=n/i(Math.round(u(n)));return t-.5>a*t&&(a*=t),r>=a?e(n):""}},a.copy=function(){return ri(n.copy(),t,e,r)},Ju(a,n)}function ui(n,t,e){function r(t){return n(u(t))}var u=ii(t),i=ii(1/t);return r.invert=function(t){return i(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain((e=t.map(Number)).map(u)),r):e},r.ticks=function(n){return Qu(e,n)},r.tickFormat=function(n,t){return ni(e,n,t)},r.nice=function(n){return r.domain(Gu(e,n))},r.exponent=function(a){return arguments.length?(u=ii(t=a),i=ii(1/t),n.domain(e.map(u)),r):t},r.copy=function(){return ui(n.copy(),t,e)},Ju(r,n)}function ii(n){return function(t){return 0>t?-Math.pow(-t,n):Math.pow(t,n)}}function ai(n,t){function e(e){return i[((u.get(e)||("range"===t.t?u.set(e,n.push(e)):NaN))-1)%i.length]}function r(t,e){return oa.range(n.length).map(function(n){return t+e*n})}var u,i,a;return e.domain=function(r){if(!arguments.length)return n;n=[],u=new c;for(var i,a=-1,o=r.length;++a<o;)u.has(i=r[a])||u.set(i,n.push(i));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(i=n,a=0,t={t:"range",a:arguments},e):i},e.rangePoints=function(u,o){arguments.length<2&&(o=0);var l=u[0],c=u[1],s=n.length<2?(l=(l+c)/2,0):(c-l)/(n.length-1+o);return i=r(l+s*o/2,s),a=0,t={t:"rangePoints",a:arguments},e},e.rangeRoundPoints=function(u,o){arguments.length<2&&(o=0);var l=u[0],c=u[1],s=n.length<2?(l=c=Math.round((l+c)/2),0):(c-l)/(n.length-1+o)|0;return i=r(l+Math.round(s*o/2+(c-l-(n.length-1+o)*s)/2),s),a=0,t={t:"rangeRoundPoints",a:arguments},e},e.rangeBands=function(u,o,l){arguments.length<2&&(o=0),arguments.length<3&&(l=o);var c=u[1]<u[0],s=u[c-0],f=u[1-c],h=(f-s)/(n.length-o+2*l);return i=r(s+h*l,h),c&&i.reverse(),a=h*(1-o),t={t:"rangeBands",a:arguments},e},e.rangeRoundBands=function(u,o,l){arguments.length<2&&(o=0),arguments.length<3&&(l=o);var c=u[1]<u[0],s=u[c-0],f=u[1-c],h=Math.floor((f-s)/(n.length-o+2*l));return i=r(s+Math.round((f-s-(n.length-o)*h)/2),h),c&&i.reverse(),a=Math.round(h*(1-o)),t={t:"rangeRoundBands",a:arguments},e},e.rangeBand=function(){return a},e.rangeExtent=function(){return Yu(t.a[0])},e.copy=function(){return ai(n,t)},e.domain(n)}function oi(n,t){function i(){var e=0,r=t.length;for(o=[];++e<r;)o[e-1]=oa.quantile(n,e/r);return a}function a(n){return isNaN(n=+n)?void 0:t[oa.bisect(o,n)]}var o;return a.domain=function(t){return arguments.length?(n=t.map(r).filter(u).sort(e),i()):n},a.range=function(n){return arguments.length?(t=n,i()):t},a.quantiles=function(){return o},a.invertExtent=function(e){return e=t.indexOf(e),0>e?[NaN,NaN]:[e>0?o[e-1]:n[0],e<o.length?o[e]:n[n.length-1]]},a.copy=function(){return oi(n,t)},i()}function li(n,t,e){function r(t){return e[Math.max(0,Math.min(a,Math.floor(i*(t-n))))]}function u(){return i=e.length/(t-n),a=e.length-1,r}var i,a;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],u()):[n,t]},r.range=function(n){return arguments.length?(e=n,u()):e},r.invertExtent=function(t){return t=e.indexOf(t),t=0>t?NaN:t/i+n,[t,t+1/i]},r.copy=function(){return li(n,t,e)},u()}function ci(n,t){function e(e){return e>=e?t[oa.bisect(n,e)]:void 0}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.invertExtent=function(e){return e=t.indexOf(e),[n[e-1],n[e]]},e.copy=function(){return ci(n,t)},e}function si(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return Qu(n,t)},t.tickFormat=function(t,e){return ni(n,t,e)},t.copy=function(){return si(n)},t}function fi(){return 0}function hi(n){return n.innerRadius}function gi(n){return n.outerRadius}function pi(n){return n.startAngle}function vi(n){return n.endAngle}function di(n){return n&&n.padAngle}function mi(n,t,e,r){return(n-e)*t-(t-r)*n>0?0:1}function yi(n,t,e,r,u){var i=n[0]-t[0],a=n[1]-t[1],o=(u?r:-r)/Math.sqrt(i*i+a*a),l=o*a,c=-o*i,s=n[0]+l,f=n[1]+c,h=t[0]+l,g=t[1]+c,p=(s+h)/2,v=(f+g)/2,d=h-s,m=g-f,y=d*d+m*m,M=e-r,x=s*g-h*f,b=(0>m?-1:1)*Math.sqrt(Math.max(0,M*M*y-x*x)),_=(x*m-d*b)/y,w=(-x*d-m*b)/y,S=(x*m+d*b)/y,k=(-x*d+m*b)/y,N=_-p,E=w-v,A=S-p,C=k-v;return N*N+E*E>A*A+C*C&&(_=S,w=k),[[_-l,w-c],[_*e/M,w*e/M]]}function Mi(n){function t(t){function a(){c.push("M",i(n(s),o))}for(var l,c=[],s=[],f=-1,h=t.length,g=En(e),p=En(r);++f<h;)u.call(this,l=t[f],f)?s.push([+g.call(this,l,f),+p.call(this,l,f)]):s.length&&(a(),s=[]);return s.length&&a(),c.length?c.join(""):null}var e=Ce,r=ze,u=zt,i=xi,a=i.key,o=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(u=n,t):u},t.interpolate=function(n){return arguments.length?(a="function"==typeof n?i=n:(i=Tl.get(n)||xi).key,t):a},t.tension=function(n){return arguments.length?(o=n,t):o},t}function xi(n){return n.length>1?n.join("L"):n+"Z"}function bi(n){return n.join("L")+"Z"}function _i(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r[0]+(r=n[t])[0])/2,"V",r[1]);return e>1&&u.push("H",r[0]),u.join("")}function wi(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("V",(r=n[t])[1],"H",r[0]);return u.join("")}function Si(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r=n[t])[0],"V",r[1]);return u.join("")}function ki(n,t){return n.length<4?xi(n):n[1]+Ai(n.slice(1,-1),Ci(n,t))}function Ni(n,t){return n.length<3?bi(n):n[0]+Ai((n.push(n[0]),n),Ci([n[n.length-2]].concat(n,[n[1]]),t))}function Ei(n,t){return n.length<3?xi(n):n[0]+Ai(n,Ci(n,t))}function Ai(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return xi(n);var e=n.length!=t.length,r="",u=n[0],i=n[1],a=t[0],o=a,l=1;if(e&&(r+="Q"+(i[0]-2*a[0]/3)+","+(i[1]-2*a[1]/3)+","+i[0]+","+i[1],u=n[1],l=2),t.length>1){o=t[1],i=n[l],l++,r+="C"+(u[0]+a[0])+","+(u[1]+a[1])+","+(i[0]-o[0])+","+(i[1]-o[1])+","+i[0]+","+i[1];for(var c=2;c<t.length;c++,l++)i=n[l],o=t[c],r+="S"+(i[0]-o[0])+","+(i[1]-o[1])+","+i[0]+","+i[1]}if(e){var s=n[l];r+="Q"+(i[0]+2*o[0]/3)+","+(i[1]+2*o[1]/3)+","+s[0]+","+s[1]}return r}function Ci(n,t){for(var e,r=[],u=(1-t)/2,i=n[0],a=n[1],o=1,l=n.length;++o<l;)e=i,i=a,a=n[o],r.push([u*(a[0]-e[0]),u*(a[1]-e[1])]);return r}function zi(n){if(n.length<3)return xi(n);var t=1,e=n.length,r=n[0],u=r[0],i=r[1],a=[u,u,u,(r=n[1])[0]],o=[i,i,i,r[1]],l=[u,",",i,"L",Ri(Pl,a),",",Ri(Pl,o)];for(n.push(n[e-1]);++t<=e;)r=n[t],a.shift(),a.push(r[0]),o.shift(),o.push(r[1]),Di(l,a,o);return n.pop(),l.push("L",r),l.join("")}function Li(n){if(n.length<4)return xi(n);for(var t,e=[],r=-1,u=n.length,i=[0],a=[0];++r<3;)t=n[r],i.push(t[0]),a.push(t[1]);for(e.push(Ri(Pl,i)+","+Ri(Pl,a)),--r;++r<u;)t=n[r],i.shift(),i.push(t[0]),a.shift(),a.push(t[1]),Di(e,i,a);return e.join("")}function qi(n){for(var t,e,r=-1,u=n.length,i=u+4,a=[],o=[];++r<4;)e=n[r%u],a.push(e[0]),o.push(e[1]);for(t=[Ri(Pl,a),",",Ri(Pl,o)],--r;++r<i;)e=n[r%u],a.shift(),a.push(e[0]),o.shift(),o.push(e[1]),Di(t,a,o);return t.join("")}function Ti(n,t){var e=n.length-1;if(e)for(var r,u,i=n[0][0],a=n[0][1],o=n[e][0]-i,l=n[e][1]-a,c=-1;++c<=e;)r=n[c],u=c/e,r[0]=t*r[0]+(1-t)*(i+u*o),r[1]=t*r[1]+(1-t)*(a+u*l);return zi(n)}function Ri(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function Di(n,t,e){n.push("C",Ri(Rl,t),",",Ri(Rl,e),",",Ri(Dl,t),",",Ri(Dl,e),",",Ri(Pl,t),",",Ri(Pl,e))}function Pi(n,t){return(t[1]-n[1])/(t[0]-n[0])}function Ui(n){for(var t=0,e=n.length-1,r=[],u=n[0],i=n[1],a=r[0]=Pi(u,i);++t<e;)r[t]=(a+(a=Pi(u=i,i=n[t+1])))/2;return r[t]=a,r}function ji(n){for(var t,e,r,u,i=[],a=Ui(n),o=-1,l=n.length-1;++o<l;)t=Pi(n[o],n[o+1]),Ma(t)<Pa?a[o]=a[o+1]=0:(e=a[o]/t,r=a[o+1]/t,u=e*e+r*r,u>9&&(u=3*t/Math.sqrt(u),a[o]=u*e,a[o+1]=u*r));for(o=-1;++o<=l;)u=(n[Math.min(l,o+1)][0]-n[Math.max(0,o-1)][0])/(6*(1+a[o]*a[o])),i.push([u||0,a[o]*u||0]);return i}function Fi(n){return n.length<3?xi(n):n[0]+Ai(n,ji(n))}function Hi(n){for(var t,e,r,u=-1,i=n.length;++u<i;)t=n[u],e=t[0],r=t[1]-Oa,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function Oi(n){function t(t){function l(){v.push("M",o(n(m),f),s,c(n(d.reverse()),f),"Z")}for(var h,g,p,v=[],d=[],m=[],y=-1,M=t.length,x=En(e),b=En(u),_=e===r?function(){
return g}:En(r),w=u===i?function(){return p}:En(i);++y<M;)a.call(this,h=t[y],y)?(d.push([g=+x.call(this,h,y),p=+b.call(this,h,y)]),m.push([+_.call(this,h,y),+w.call(this,h,y)])):d.length&&(l(),d=[],m=[]);return d.length&&l(),v.length?v.join(""):null}var e=Ce,r=Ce,u=0,i=ze,a=zt,o=xi,l=o.key,c=o,s="L",f=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r},t.y=function(n){return arguments.length?(u=i=n,t):i},t.y0=function(n){return arguments.length?(u=n,t):u},t.y1=function(n){return arguments.length?(i=n,t):i},t.defined=function(n){return arguments.length?(a=n,t):a},t.interpolate=function(n){return arguments.length?(l="function"==typeof n?o=n:(o=Tl.get(n)||xi).key,c=o.reverse||o,s=o.closed?"M":"L",t):l},t.tension=function(n){return arguments.length?(f=n,t):f},t}function Ii(n){return n.radius}function Yi(n){return[n.x,n.y]}function Zi(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]-Oa;return[e*Math.cos(r),e*Math.sin(r)]}}function Vi(){return 64}function Xi(){return"circle"}function $i(n){var t=Math.sqrt(n/ja);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}function Bi(n){return function(){var t,e,r;(t=this[n])&&(r=t[e=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[e]:delete this[n],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function Wi(n,t,e){return Sa(n,Yl),n.namespace=t,n.id=e,n}function Ji(n,t,e,r){var u=n.id,i=n.namespace;return Y(n,"function"==typeof e?function(n,a,o){n[i][u].tween.set(t,r(e.call(n,n.__data__,a,o)))}:(e=r(e),function(n){n[i][u].tween.set(t,e)}))}function Gi(n){return null==n&&(n=""),function(){this.textContent=n}}function Ki(n){return null==n?"__transition__":"__transition_"+n+"__"}function Qi(n,t,e,r,u){function i(n){var t=v.delay;return s.t=t+l,n>=t?a(n-t):void(s.c=a)}function a(e){var u=p.active,i=p[u];i&&(i.timer.c=null,i.timer.t=NaN,--p.count,delete p[u],i.event&&i.event.interrupt.call(n,n.__data__,i.index));for(var a in p)if(r>+a){var c=p[a];c.timer.c=null,c.timer.t=NaN,--p.count,delete p[a]}s.c=o,qn(function(){return s.c&&o(e||1)&&(s.c=null,s.t=NaN),1},0,l),p.active=r,v.event&&v.event.start.call(n,n.__data__,t),g=[],v.tween.forEach(function(e,r){(r=r.call(n,n.__data__,t))&&g.push(r)}),h=v.ease,f=v.duration}function o(u){for(var i=u/f,a=h(i),o=g.length;o>0;)g[--o].call(n,a);return i>=1?(v.event&&v.event.end.call(n,n.__data__,t),--p.count?delete p[r]:delete n[e],1):void 0}var l,s,f,h,g,p=n[e]||(n[e]={active:0,count:0}),v=p[r];v||(l=u.time,s=qn(i,0,l),v=p[r]={tween:new c,time:l,timer:s,delay:u.delay,duration:u.duration,ease:u.ease,index:t},u=null,++p.count)}function na(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate("+(isFinite(r)?r:e(n))+",0)"})}function ta(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate(0,"+(isFinite(r)?r:e(n))+")"})}function ea(n){return n.toISOString()}function ra(n,t,e){function r(t){return n(t)}function u(n,e){var r=n[1]-n[0],u=r/e,i=oa.bisect(Kl,u);return i==Kl.length?[t.year,Ku(n.map(function(n){return n/31536e6}),e)[2]]:i?t[u/Kl[i-1]<Kl[i]/u?i-1:i]:[tc,Ku(n,e)[2]]}return r.invert=function(t){return ua(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(ua)},r.nice=function(n,t){function e(e){return!isNaN(e)&&!n.range(e,ua(+e+1),t).length}var i=r.domain(),a=Yu(i),o=null==n?u(a,10):"number"==typeof n&&u(a,n);return o&&(n=o[0],t=o[1]),r.domain(Xu(i,t>1?{floor:function(t){for(;e(t=n.floor(t));)t=ua(t-1);return t},ceil:function(t){for(;e(t=n.ceil(t));)t=ua(+t+1);return t}}:n))},r.ticks=function(n,t){var e=Yu(r.domain()),i=null==n?u(e,10):"number"==typeof n?u(e,n):!n.range&&[{range:n},t];return i&&(n=i[0],t=i[1]),n.range(e[0],ua(+e[1]+1),1>t?1:t)},r.tickFormat=function(){return e},r.copy=function(){return ra(n.copy(),t,e)},Ju(r,n)}function ua(n){return new Date(n)}function ia(n){return JSON.parse(n.responseText)}function aa(n){var t=sa.createRange();return t.selectNode(sa.body),t.createContextualFragment(n.responseText)}var oa={version:"3.5.16"},la=[].slice,ca=function(n){return la.call(n)},sa=this.document;if(sa)try{ca(sa.documentElement.childNodes)[0].nodeType}catch(fa){ca=function(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}}if(Date.now||(Date.now=function(){return+new Date}),sa)try{sa.createElement("DIV").style.setProperty("opacity",0,"")}catch(ha){var ga=this.Element.prototype,pa=ga.setAttribute,va=ga.setAttributeNS,da=this.CSSStyleDeclaration.prototype,ma=da.setProperty;ga.setAttribute=function(n,t){pa.call(this,n,t+"")},ga.setAttributeNS=function(n,t,e){va.call(this,n,t,e+"")},da.setProperty=function(n,t,e){ma.call(this,n,t+"",e)}}oa.ascending=e,oa.descending=function(n,t){return n>t?-1:t>n?1:t>=n?0:NaN},oa.min=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&e>r&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&e>r&&(e=r)}return e},oa.max=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&r>e&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&r>e&&(e=r)}return e},oa.extent=function(n,t){var e,r,u,i=-1,a=n.length;if(1===arguments.length){for(;++i<a;)if(null!=(r=n[i])&&r>=r){e=u=r;break}for(;++i<a;)null!=(r=n[i])&&(e>r&&(e=r),r>u&&(u=r))}else{for(;++i<a;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=u=r;break}for(;++i<a;)null!=(r=t.call(n,n[i],i))&&(e>r&&(e=r),r>u&&(u=r))}return[e,u]},oa.sum=function(n,t){var e,r=0,i=n.length,a=-1;if(1===arguments.length)for(;++a<i;)u(e=+n[a])&&(r+=e);else for(;++a<i;)u(e=+t.call(n,n[a],a))&&(r+=e);return r},oa.mean=function(n,t){var e,i=0,a=n.length,o=-1,l=a;if(1===arguments.length)for(;++o<a;)u(e=r(n[o]))?i+=e:--l;else for(;++o<a;)u(e=r(t.call(n,n[o],o)))?i+=e:--l;return l?i/l:void 0},oa.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),u=+n[r-1],i=e-r;return i?u+i*(n[r]-u):u},oa.median=function(n,t){var i,a=[],o=n.length,l=-1;if(1===arguments.length)for(;++l<o;)u(i=r(n[l]))&&a.push(i);else for(;++l<o;)u(i=r(t.call(n,n[l],l)))&&a.push(i);return a.length?oa.quantile(a.sort(e),.5):void 0},oa.variance=function(n,t){var e,i,a=n.length,o=0,l=0,c=-1,s=0;if(1===arguments.length)for(;++c<a;)u(e=r(n[c]))&&(i=e-o,o+=i/++s,l+=i*(e-o));else for(;++c<a;)u(e=r(t.call(n,n[c],c)))&&(i=e-o,o+=i/++s,l+=i*(e-o));return s>1?l/(s-1):void 0},oa.deviation=function(){var n=oa.variance.apply(this,arguments);return n?Math.sqrt(n):n};var ya=i(e);oa.bisectLeft=ya.left,oa.bisect=oa.bisectRight=ya.right,oa.bisector=function(n){return i(1===n.length?function(t,r){return e(n(t),r)}:n)},oa.shuffle=function(n,t,e){(i=arguments.length)<3&&(e=n.length,2>i&&(t=0));for(var r,u,i=e-t;i;)u=Math.random()*i--|0,r=n[i+t],n[i+t]=n[u+t],n[u+t]=r;return n},oa.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},oa.pairs=function(n){for(var t,e=0,r=n.length-1,u=n[0],i=new Array(0>r?0:r);r>e;)i[e]=[t=u,u=n[++e]];return i},oa.transpose=function(n){if(!(u=n.length))return[];for(var t=-1,e=oa.min(n,a),r=new Array(e);++t<e;)for(var u,i=-1,o=r[t]=new Array(u);++i<u;)o[i]=n[i][t];return r},oa.zip=function(){return oa.transpose(arguments)},oa.keys=function(n){var t=[];for(var e in n)t.push(e);return t},oa.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},oa.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},oa.merge=function(n){for(var t,e,r,u=n.length,i=-1,a=0;++i<u;)a+=n[i].length;for(e=new Array(a);--u>=0;)for(r=n[u],t=r.length;--t>=0;)e[--a]=r[t];return e};var Ma=Math.abs;oa.range=function(n,t,e){if(arguments.length<3&&(e=1,arguments.length<2&&(t=n,n=0)),(t-n)/e===1/0)throw new Error("infinite range");var r,u=[],i=o(Ma(e)),a=-1;if(n*=i,t*=i,e*=i,0>e)for(;(r=n+e*++a)>t;)u.push(r/i);else for(;(r=n+e*++a)<t;)u.push(r/i);return u},oa.map=function(n,t){var e=new c;if(n instanceof c)n.forEach(function(n,t){e.set(n,t)});else if(Array.isArray(n)){var r,u=-1,i=n.length;if(1===arguments.length)for(;++u<i;)e.set(u,n[u]);else for(;++u<i;)e.set(t.call(n,r=n[u],u),r)}else for(var a in n)e.set(a,n[a]);return e};var xa="__proto__",ba="\x00";l(c,{has:h,get:function(n){return this._[s(n)]},set:function(n,t){return this._[s(n)]=t},remove:g,keys:p,values:function(){var n=[];for(var t in this._)n.push(this._[t]);return n},entries:function(){var n=[];for(var t in this._)n.push({key:f(t),value:this._[t]});return n},size:v,empty:d,forEach:function(n){for(var t in this._)n.call(this,f(t),this._[t])}}),oa.nest=function(){function n(t,a,o){if(o>=i.length)return r?r.call(u,a):e?a.sort(e):a;for(var l,s,f,h,g=-1,p=a.length,v=i[o++],d=new c;++g<p;)(h=d.get(l=v(s=a[g])))?h.push(s):d.set(l,[s]);return t?(s=t(),f=function(e,r){s.set(e,n(t,r,o))}):(s={},f=function(e,r){s[e]=n(t,r,o)}),d.forEach(f),s}function t(n,e){if(e>=i.length)return n;var r=[],u=a[e++];return n.forEach(function(n,u){r.push({key:n,values:t(u,e)})}),u?r.sort(function(n,t){return u(n.key,t.key)}):r}var e,r,u={},i=[],a=[];return u.map=function(t,e){return n(e,t,0)},u.entries=function(e){return t(n(oa.map,e,0),0)},u.key=function(n){return i.push(n),u},u.sortKeys=function(n){return a[i.length-1]=n,u},u.sortValues=function(n){return e=n,u},u.rollup=function(n){return r=n,u},u},oa.set=function(n){var t=new m;if(n)for(var e=0,r=n.length;r>e;++e)t.add(n[e]);return t},l(m,{has:h,add:function(n){return this._[s(n+="")]=!0,n},remove:g,values:p,size:v,empty:d,forEach:function(n){for(var t in this._)n.call(this,f(t))}}),oa.behavior={},oa.rebind=function(n,t){for(var e,r=1,u=arguments.length;++r<u;)n[e=arguments[r]]=M(n,t,t[e]);return n};var _a=["webkit","ms","moz","Moz","o","O"];oa.dispatch=function(){for(var n=new _,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=w(n);return n},_.prototype.on=function(n,t){var e=n.indexOf("."),r="";if(e>=0&&(r=n.slice(e+1),n=n.slice(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);return this}},oa.event=null,oa.requote=function(n){return n.replace(wa,"\\$&")};var wa=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Sa={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]},ka=function(n,t){return t.querySelector(n)},Na=function(n,t){return t.querySelectorAll(n)},Ea=function(n,t){var e=n.matches||n[x(n,"matchesSelector")];return(Ea=function(n,t){return e.call(n,t)})(n,t)};"function"==typeof Sizzle&&(ka=function(n,t){return Sizzle(n,t)[0]||null},Na=Sizzle,Ea=Sizzle.matchesSelector),oa.selection=function(){return oa.select(sa.documentElement)};var Aa=oa.selection.prototype=[];Aa.select=function(n){var t,e,r,u,i=[];n=A(n);for(var a=-1,o=this.length;++a<o;){i.push(t=[]),t.parentNode=(r=this[a]).parentNode;for(var l=-1,c=r.length;++l<c;)(u=r[l])?(t.push(e=n.call(u,u.__data__,l,a)),e&&"__data__"in u&&(e.__data__=u.__data__)):t.push(null)}return E(i)},Aa.selectAll=function(n){var t,e,r=[];n=C(n);for(var u=-1,i=this.length;++u<i;)for(var a=this[u],o=-1,l=a.length;++o<l;)(e=a[o])&&(r.push(t=ca(n.call(e,e.__data__,o,u))),t.parentNode=e);return E(r)};var Ca="http://www.w3.org/1999/xhtml",za={svg:"http://www.w3.org/2000/svg",xhtml:Ca,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};oa.ns={prefix:za,qualify:function(n){var t=n.indexOf(":"),e=n;return t>=0&&"xmlns"!==(e=n.slice(0,t))&&(n=n.slice(t+1)),za.hasOwnProperty(e)?{space:za[e],local:n}:n}},Aa.attr=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node();return n=oa.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(z(t,n[t]));return this}return this.each(z(n,t))},Aa.classed=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node(),r=(n=T(n)).length,u=-1;if(t=e.classList){for(;++u<r;)if(!t.contains(n[u]))return!1}else for(t=e.getAttribute("class");++u<r;)if(!q(n[u]).test(t))return!1;return!0}for(t in n)this.each(R(t,n[t]));return this}return this.each(R(n,t))},Aa.style=function(n,e,r){var u=arguments.length;if(3>u){if("string"!=typeof n){2>u&&(e="");for(r in n)this.each(P(r,n[r],e));return this}if(2>u){var i=this.node();return t(i).getComputedStyle(i,null).getPropertyValue(n)}r=""}return this.each(P(n,e,r))},Aa.property=function(n,t){if(arguments.length<2){if("string"==typeof n)return this.node()[n];for(t in n)this.each(U(t,n[t]));return this}return this.each(U(n,t))},Aa.text=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?"":t}:null==n?function(){this.textContent=""}:function(){this.textContent=n}):this.node().textContent},Aa.html=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?"":t}:null==n?function(){this.innerHTML=""}:function(){this.innerHTML=n}):this.node().innerHTML},Aa.append=function(n){return n=j(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},Aa.insert=function(n,t){return n=j(n),t=A(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments)||null)})},Aa.remove=function(){return this.each(F)},Aa.data=function(n,t){function e(n,e){var r,u,i,a=n.length,f=e.length,h=Math.min(a,f),g=new Array(f),p=new Array(f),v=new Array(a);if(t){var d,m=new c,y=new Array(a);for(r=-1;++r<a;)(u=n[r])&&(m.has(d=t.call(u,u.__data__,r))?v[r]=u:m.set(d,u),y[r]=d);for(r=-1;++r<f;)(u=m.get(d=t.call(e,i=e[r],r)))?u!==!0&&(g[r]=u,u.__data__=i):p[r]=H(i),m.set(d,!0);for(r=-1;++r<a;)r in y&&m.get(y[r])!==!0&&(v[r]=n[r])}else{for(r=-1;++r<h;)u=n[r],i=e[r],u?(u.__data__=i,g[r]=u):p[r]=H(i);for(;f>r;++r)p[r]=H(e[r]);for(;a>r;++r)v[r]=n[r]}p.update=g,p.parentNode=g.parentNode=v.parentNode=n.parentNode,o.push(p),l.push(g),s.push(v)}var r,u,i=-1,a=this.length;if(!arguments.length){for(n=new Array(a=(r=this[0]).length);++i<a;)(u=r[i])&&(n[i]=u.__data__);return n}var o=Z([]),l=E([]),s=E([]);if("function"==typeof n)for(;++i<a;)e(r=this[i],n.call(r,r.parentNode.__data__,i));else for(;++i<a;)e(r=this[i],n);return l.enter=function(){return o},l.exit=function(){return s},l},Aa.datum=function(n){return arguments.length?this.property("__data__",n):this.property("__data__")},Aa.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=O(n));for(var i=0,a=this.length;a>i;i++){u.push(t=[]),t.parentNode=(e=this[i]).parentNode;for(var o=0,l=e.length;l>o;o++)(r=e[o])&&n.call(r,r.__data__,o,i)&&t.push(r)}return E(u)},Aa.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],u=r.length-1,i=r[u];--u>=0;)(e=r[u])&&(i&&i!==e.nextSibling&&i.parentNode.insertBefore(e,i),i=e);return this},Aa.sort=function(n){n=I.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},Aa.each=function(n){return Y(this,function(t,e,r){n.call(t,t.__data__,e,r)})},Aa.call=function(n){var t=ca(arguments);return n.apply(t[0]=this,t),this},Aa.empty=function(){return!this.node()},Aa.node=function(){for(var n=0,t=this.length;t>n;n++)for(var e=this[n],r=0,u=e.length;u>r;r++){var i=e[r];if(i)return i}return null},Aa.size=function(){var n=0;return Y(this,function(){++n}),n};var La=[];oa.selection.enter=Z,oa.selection.enter.prototype=La,La.append=Aa.append,La.empty=Aa.empty,La.node=Aa.node,La.call=Aa.call,La.size=Aa.size,La.select=function(n){for(var t,e,r,u,i,a=[],o=-1,l=this.length;++o<l;){r=(u=this[o]).update,a.push(t=[]),t.parentNode=u.parentNode;for(var c=-1,s=u.length;++c<s;)(i=u[c])?(t.push(r[c]=e=n.call(u.parentNode,i.__data__,c,o)),e.__data__=i.__data__):t.push(null)}return E(a)},La.insert=function(n,t){return arguments.length<2&&(t=V(this)),Aa.insert.call(this,n,t)},oa.select=function(t){var e;return"string"==typeof t?(e=[ka(t,sa)],e.parentNode=sa.documentElement):(e=[t],e.parentNode=n(t)),E([e])},oa.selectAll=function(n){var t;return"string"==typeof n?(t=ca(Na(n,sa)),t.parentNode=sa.documentElement):(t=ca(n),t.parentNode=null),E([t])},Aa.on=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t=!1);for(e in n)this.each(X(e,n[e],t));return this}if(2>r)return(r=this.node()["__on"+n])&&r._;e=!1}return this.each(X(n,t,e))};var qa=oa.map({mouseenter:"mouseover",mouseleave:"mouseout"});sa&&qa.forEach(function(n){"on"+n in sa&&qa.remove(n)});var Ta,Ra=0;oa.mouse=function(n){return J(n,k())};var Da=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;oa.touch=function(n,t,e){if(arguments.length<3&&(e=t,t=k().changedTouches),t)for(var r,u=0,i=t.length;i>u;++u)if((r=t[u]).identifier===e)return J(n,r)},oa.behavior.drag=function(){function n(){this.on("mousedown.drag",i).on("touchstart.drag",a)}function e(n,t,e,i,a){return function(){function o(){var n,e,r=t(h,v);r&&(n=r[0]-M[0],e=r[1]-M[1],p|=n|e,M=r,g({type:"drag",x:r[0]+c[0],y:r[1]+c[1],dx:n,dy:e}))}function l(){t(h,v)&&(m.on(i+d,null).on(a+d,null),y(p),g({type:"dragend"}))}var c,s=this,f=oa.event.target.correspondingElement||oa.event.target,h=s.parentNode,g=r.of(s,arguments),p=0,v=n(),d=".drag"+(null==v?"":"-"+v),m=oa.select(e(f)).on(i+d,o).on(a+d,l),y=W(f),M=t(h,v);u?(c=u.apply(s,arguments),c=[c.x-M[0],c.y-M[1]]):c=[0,0],g({type:"dragstart"})}}var r=N(n,"drag","dragstart","dragend"),u=null,i=e(b,oa.mouse,t,"mousemove","mouseup"),a=e(G,oa.touch,y,"touchmove","touchend");return n.origin=function(t){return arguments.length?(u=t,n):u},oa.rebind(n,r,"on")},oa.touches=function(n,t){return arguments.length<2&&(t=k().touches),t?ca(t).map(function(t){var e=J(n,t);return e.identifier=t.identifier,e}):[]};var Pa=1e-6,Ua=Pa*Pa,ja=Math.PI,Fa=2*ja,Ha=Fa-Pa,Oa=ja/2,Ia=ja/180,Ya=180/ja,Za=Math.SQRT2,Va=2,Xa=4;oa.interpolateZoom=function(n,t){var e,r,u=n[0],i=n[1],a=n[2],o=t[0],l=t[1],c=t[2],s=o-u,f=l-i,h=s*s+f*f;if(Ua>h)r=Math.log(c/a)/Za,e=function(n){return[u+n*s,i+n*f,a*Math.exp(Za*n*r)]};else{var g=Math.sqrt(h),p=(c*c-a*a+Xa*h)/(2*a*Va*g),v=(c*c-a*a-Xa*h)/(2*c*Va*g),d=Math.log(Math.sqrt(p*p+1)-p),m=Math.log(Math.sqrt(v*v+1)-v);r=(m-d)/Za,e=function(n){var t=n*r,e=rn(d),o=a/(Va*g)*(e*un(Za*t+d)-en(d));return[u+o*s,i+o*f,a*e/rn(Za*t+d)]}}return e.duration=1e3*r,e},oa.behavior.zoom=function(){function n(n){n.on(L,f).on(Ba+".zoom",g).on("dblclick.zoom",p).on(R,h)}function e(n){return[(n[0]-k.x)/k.k,(n[1]-k.y)/k.k]}function r(n){return[n[0]*k.k+k.x,n[1]*k.k+k.y]}function u(n){k.k=Math.max(A[0],Math.min(A[1],n))}function i(n,t){t=r(t),k.x+=n[0]-t[0],k.y+=n[1]-t[1]}function a(t,e,r,a){t.__chart__={x:k.x,y:k.y,k:k.k},u(Math.pow(2,a)),i(d=e,r),t=oa.select(t),C>0&&(t=t.transition().duration(C)),t.call(n.event)}function o(){b&&b.domain(x.range().map(function(n){return(n-k.x)/k.k}).map(x.invert)),w&&w.domain(_.range().map(function(n){return(n-k.y)/k.k}).map(_.invert))}function l(n){z++||n({type:"zoomstart"})}function c(n){o(),n({type:"zoom",scale:k.k,translate:[k.x,k.y]})}function s(n){--z||(n({type:"zoomend"}),d=null)}function f(){function n(){o=1,i(oa.mouse(u),h),c(a)}function r(){f.on(q,null).on(T,null),g(o),s(a)}var u=this,a=D.of(u,arguments),o=0,f=oa.select(t(u)).on(q,n).on(T,r),h=e(oa.mouse(u)),g=W(u);Il.call(u),l(a)}function h(){function n(){var n=oa.touches(p);return g=k.k,n.forEach(function(n){n.identifier in d&&(d[n.identifier]=e(n))}),n}function t(){var t=oa.event.target;oa.select(t).on(x,r).on(b,o),_.push(t);for(var e=oa.event.changedTouches,u=0,i=e.length;i>u;++u)d[e[u].identifier]=null;var l=n(),c=Date.now();if(1===l.length){if(500>c-M){var s=l[0];a(p,s,d[s.identifier],Math.floor(Math.log(k.k)/Math.LN2)+1),S()}M=c}else if(l.length>1){var s=l[0],f=l[1],h=s[0]-f[0],g=s[1]-f[1];m=h*h+g*g}}function r(){var n,t,e,r,a=oa.touches(p);Il.call(p);for(var o=0,l=a.length;l>o;++o,r=null)if(e=a[o],r=d[e.identifier]){if(t)break;n=e,t=r}if(r){var s=(s=e[0]-n[0])*s+(s=e[1]-n[1])*s,f=m&&Math.sqrt(s/m);n=[(n[0]+e[0])/2,(n[1]+e[1])/2],t=[(t[0]+r[0])/2,(t[1]+r[1])/2],u(f*g)}M=null,i(n,t),c(v)}function o(){if(oa.event.touches.length){for(var t=oa.event.changedTouches,e=0,r=t.length;r>e;++e)delete d[t[e].identifier];for(var u in d)return void n()}oa.selectAll(_).on(y,null),w.on(L,f).on(R,h),N(),s(v)}var g,p=this,v=D.of(p,arguments),d={},m=0,y=".zoom-"+oa.event.changedTouches[0].identifier,x="touchmove"+y,b="touchend"+y,_=[],w=oa.select(p),N=W(p);t(),l(v),w.on(L,null).on(R,t)}function g(){var n=D.of(this,arguments);y?clearTimeout(y):(Il.call(this),v=e(d=m||oa.mouse(this)),l(n)),y=setTimeout(function(){y=null,s(n)},50),S(),u(Math.pow(2,.002*$a())*k.k),i(d,v),c(n)}function p(){var n=oa.mouse(this),t=Math.log(k.k)/Math.LN2;a(this,n,e(n),oa.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}var v,d,m,y,M,x,b,_,w,k={x:0,y:0,k:1},E=[960,500],A=Wa,C=250,z=0,L="mousedown.zoom",q="mousemove.zoom",T="mouseup.zoom",R="touchstart.zoom",D=N(n,"zoomstart","zoom","zoomend");return Ba||(Ba="onwheel"in sa?($a=function(){return-oa.event.deltaY*(oa.event.deltaMode?120:1)},"wheel"):"onmousewheel"in sa?($a=function(){return oa.event.wheelDelta},"mousewheel"):($a=function(){return-oa.event.detail},"MozMousePixelScroll")),n.event=function(n){n.each(function(){var n=D.of(this,arguments),t=k;Hl?oa.select(this).transition().each("start.zoom",function(){k=this.__chart__||{x:0,y:0,k:1},l(n)}).tween("zoom:zoom",function(){var e=E[0],r=E[1],u=d?d[0]:e/2,i=d?d[1]:r/2,a=oa.interpolateZoom([(u-k.x)/k.k,(i-k.y)/k.k,e/k.k],[(u-t.x)/t.k,(i-t.y)/t.k,e/t.k]);return function(t){var r=a(t),o=e/r[2];this.__chart__=k={x:u-r[0]*o,y:i-r[1]*o,k:o},c(n)}}).each("interrupt.zoom",function(){s(n)}).each("end.zoom",function(){s(n)}):(this.__chart__=k,l(n),c(n),s(n))})},n.translate=function(t){return arguments.length?(k={x:+t[0],y:+t[1],k:k.k},o(),n):[k.x,k.y]},n.scale=function(t){return arguments.length?(k={x:k.x,y:k.y,k:null},u(+t),o(),n):k.k},n.scaleExtent=function(t){return arguments.length?(A=null==t?Wa:[+t[0],+t[1]],n):A},n.center=function(t){return arguments.length?(m=t&&[+t[0],+t[1]],n):m},n.size=function(t){return arguments.length?(E=t&&[+t[0],+t[1]],n):E},n.duration=function(t){return arguments.length?(C=+t,n):C},n.x=function(t){return arguments.length?(b=t,x=t.copy(),k={x:0,y:0,k:1},n):b},n.y=function(t){return arguments.length?(w=t,_=t.copy(),k={x:0,y:0,k:1},n):w},oa.rebind(n,D,"on")};var $a,Ba,Wa=[0,1/0];oa.color=on,on.prototype.toString=function(){return this.rgb()+""},oa.hsl=ln;var Ja=ln.prototype=new on;Ja.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,this.l/n)},Ja.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new ln(this.h,this.s,n*this.l)},Ja.rgb=function(){return cn(this.h,this.s,this.l)},oa.hcl=sn;var Ga=sn.prototype=new on;Ga.brighter=function(n){return new sn(this.h,this.c,Math.min(100,this.l+Ka*(arguments.length?n:1)))},Ga.darker=function(n){return new sn(this.h,this.c,Math.max(0,this.l-Ka*(arguments.length?n:1)))},Ga.rgb=function(){return fn(this.h,this.c,this.l).rgb()},oa.lab=hn;var Ka=18,Qa=.95047,no=1,to=1.08883,eo=hn.prototype=new on;eo.brighter=function(n){return new hn(Math.min(100,this.l+Ka*(arguments.length?n:1)),this.a,this.b)},eo.darker=function(n){return new hn(Math.max(0,this.l-Ka*(arguments.length?n:1)),this.a,this.b)},eo.rgb=function(){return gn(this.l,this.a,this.b)},oa.rgb=yn;var ro=yn.prototype=new on;ro.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,u=30;return t||e||r?(t&&u>t&&(t=u),e&&u>e&&(e=u),r&&u>r&&(r=u),new yn(Math.min(255,t/n),Math.min(255,e/n),Math.min(255,r/n))):new yn(u,u,u)},ro.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new yn(n*this.r,n*this.g,n*this.b)},ro.hsl=function(){return wn(this.r,this.g,this.b)},ro.toString=function(){return"#"+bn(this.r)+bn(this.g)+bn(this.b)};var uo=oa.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});uo.forEach(function(n,t){uo.set(n,Mn(t))}),oa.functor=En,oa.xhr=An(y),oa.dsv=function(n,t){function e(n,e,i){arguments.length<3&&(i=e,e=null);var a=Cn(n,t,null==e?r:u(e),i);return a.row=function(n){return arguments.length?a.response(null==(e=n)?r:u(n)):e},a}function r(n){return e.parse(n.responseText)}function u(n){return function(t){return e.parse(t.responseText,n)}}function i(t){return t.map(a).join(n)}function a(n){return o.test(n)?'"'+n.replace(/\"/g,'""')+'"':n}var o=new RegExp('["'+n+"\n]"),l=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var u=new Function("d","return {"+n.map(function(n,t){return JSON.stringify(n)+": d["+t+"]"}).join(",")+"}");r=t?function(n,e){return t(u(n),e)}:u})},e.parseRows=function(n,t){function e(){if(s>=c)return a;if(u)return u=!1,i;var t=s;if(34===n.charCodeAt(t)){for(var e=t;e++<c;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}s=e+2;var r=n.charCodeAt(e+1);return 13===r?(u=!0,10===n.charCodeAt(e+2)&&++s):10===r&&(u=!0),n.slice(t+1,e).replace(/""/g,'"')}for(;c>s;){var r=n.charCodeAt(s++),o=1;if(10===r)u=!0;else if(13===r)u=!0,10===n.charCodeAt(s)&&(++s,++o);else if(r!==l)continue;return n.slice(t,s-o)}return n.slice(t)}for(var r,u,i={},a={},o=[],c=n.length,s=0,f=0;(r=e())!==a;){for(var h=[];r!==i&&r!==a;)h.push(r),r=e();t&&null==(h=t(h,f++))||o.push(h)}return o},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new m,u=[];return t.forEach(function(n){for(var t in n)r.has(t)||u.push(r.add(t))}),[u.map(a).join(n)].concat(t.map(function(t){return u.map(function(n){return a(t[n])}).join(n)})).join("\n")},e.formatRows=function(n){return n.map(i).join("\n")},e},oa.csv=oa.dsv(",","text/csv"),oa.tsv=oa.dsv("    ","text/tab-separated-values");var io,ao,oo,lo,co=this[x(this,"requestAnimationFrame")]||function(n){setTimeout(n,17)};oa.timer=function(){qn.apply(this,arguments)},oa.timer.flush=function(){Rn(),Dn()},oa.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)};var so=["y","z","a","f","p","n","\xb5","m","","k","M","G","T","P","E","Z","Y"].map(Un);oa.formatPrefix=function(n,t){var e=0;return(n=+n)&&(0>n&&(n*=-1),t&&(n=oa.round(n,Pn(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),so[8+e/3]};var fo=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,ho=oa.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=oa.round(n,Pn(n,t))).toFixed(Math.max(0,Math.min(20,Pn(n*(1+1e-15),t))))}}),go=oa.time={},po=Date;Hn.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){vo.setUTCDate.apply(this._,arguments)},setDay:function(){vo.setUTCDay.apply(this._,arguments)},setFullYear:function(){vo.setUTCFullYear.apply(this._,arguments)},setHours:function(){vo.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){vo.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){vo.setUTCMinutes.apply(this._,arguments)},setMonth:function(){vo.setUTCMonth.apply(this._,arguments)},setSeconds:function(){vo.setUTCSeconds.apply(this._,arguments)},setTime:function(){vo.setTime.apply(this._,arguments)}};var vo=Date.prototype;go.year=On(function(n){return n=go.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),go.years=go.year.range,go.years.utc=go.year.utc.range,go.day=On(function(n){var t=new po(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),go.days=go.day.range,go.days.utc=go.day.utc.range,go.dayOfYear=function(n){var t=go.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(n,t){t=7-t;var e=go[n]=On(function(n){return(n=go.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=go.year(n).getDay();return Math.floor((go.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});go[n+"s"]=e.range,go[n+"s"].utc=e.utc.range,go[n+"OfYear"]=function(n){var e=go.year(n).getDay();return Math.floor((go.dayOfYear(n)+(e+t)%7)/7)}}),go.week=go.sunday,go.weeks=go.sunday.range,go.weeks.utc=go.sunday.utc.range,go.weekOfYear=go.sundayOfYear;var mo={"-":"",_:" ",0:"0"},yo=/^\s*\d+/,Mo=/^%/;oa.locale=function(n){return{numberFormat:jn(n),timeFormat:Yn(n)}};var xo=oa.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],
shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});oa.format=xo.numberFormat,oa.geo={},st.prototype={s:0,t:0,add:function(n){ft(n,this.t,bo),ft(bo.s,this.s,this),this.s?this.t+=bo.t:this.s=bo.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var bo=new st;oa.geo.stream=function(n,t){n&&_o.hasOwnProperty(n.type)?_o[n.type](n,t):ht(n,t)};var _o={Feature:function(n,t){ht(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,u=e.length;++r<u;)ht(e[r].geometry,t)}},wo={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)n=e[r],t.point(n[0],n[1],n[2])},LineString:function(n,t){gt(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)gt(e[r],t,0)},Polygon:function(n,t){pt(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)pt(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,u=e.length;++r<u;)ht(e[r],t)}};oa.geo.area=function(n){return So=0,oa.geo.stream(n,No),So};var So,ko=new st,No={sphere:function(){So+=4*ja},point:b,lineStart:b,lineEnd:b,polygonStart:function(){ko.reset(),No.lineStart=vt},polygonEnd:function(){var n=2*ko;So+=0>n?4*ja+n:n,No.lineStart=No.lineEnd=No.point=b}};oa.geo.bounds=function(){function n(n,t){M.push(x=[s=n,h=n]),f>t&&(f=t),t>g&&(g=t)}function t(t,e){var r=dt([t*Ia,e*Ia]);if(m){var u=yt(m,r),i=[u[1],-u[0],0],a=yt(i,u);bt(a),a=_t(a);var l=t-p,c=l>0?1:-1,v=a[0]*Ya*c,d=Ma(l)>180;if(d^(v>c*p&&c*t>v)){var y=a[1]*Ya;y>g&&(g=y)}else if(v=(v+360)%360-180,d^(v>c*p&&c*t>v)){var y=-a[1]*Ya;f>y&&(f=y)}else f>e&&(f=e),e>g&&(g=e);d?p>t?o(s,t)>o(s,h)&&(h=t):o(t,h)>o(s,h)&&(s=t):h>=s?(s>t&&(s=t),t>h&&(h=t)):t>p?o(s,t)>o(s,h)&&(h=t):o(t,h)>o(s,h)&&(s=t)}else n(t,e);m=r,p=t}function e(){b.point=t}function r(){x[0]=s,x[1]=h,b.point=n,m=null}function u(n,e){if(m){var r=n-p;y+=Ma(r)>180?r+(r>0?360:-360):r}else v=n,d=e;No.point(n,e),t(n,e)}function i(){No.lineStart()}function a(){u(v,d),No.lineEnd(),Ma(y)>Pa&&(s=-(h=180)),x[0]=s,x[1]=h,m=null}function o(n,t){return(t-=n)<0?t+360:t}function l(n,t){return n[0]-t[0]}function c(n,t){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var s,f,h,g,p,v,d,m,y,M,x,b={point:n,lineStart:e,lineEnd:r,polygonStart:function(){b.point=u,b.lineStart=i,b.lineEnd=a,y=0,No.polygonStart()},polygonEnd:function(){No.polygonEnd(),b.point=n,b.lineStart=e,b.lineEnd=r,0>ko?(s=-(h=180),f=-(g=90)):y>Pa?g=90:-Pa>y&&(f=-90),x[0]=s,x[1]=h}};return function(n){g=h=-(s=f=1/0),M=[],oa.geo.stream(n,b);var t=M.length;if(t){M.sort(l);for(var e,r=1,u=M[0],i=[u];t>r;++r)e=M[r],c(e[0],u)||c(e[1],u)?(o(u[0],e[1])>o(u[0],u[1])&&(u[1]=e[1]),o(e[0],u[1])>o(u[0],u[1])&&(u[0]=e[0])):i.push(u=e);for(var a,e,p=-(1/0),t=i.length-1,r=0,u=i[t];t>=r;u=e,++r)e=i[r],(a=o(u[1],e[0]))>p&&(p=a,s=e[0],h=u[1])}return M=x=null,s===1/0||f===1/0?[[NaN,NaN],[NaN,NaN]]:[[s,f],[h,g]]}}(),oa.geo.centroid=function(n){Eo=Ao=Co=zo=Lo=qo=To=Ro=Do=Po=Uo=0,oa.geo.stream(n,jo);var t=Do,e=Po,r=Uo,u=t*t+e*e+r*r;return Ua>u&&(t=qo,e=To,r=Ro,Pa>Ao&&(t=Co,e=zo,r=Lo),u=t*t+e*e+r*r,Ua>u)?[NaN,NaN]:[Math.atan2(e,t)*Ya,tn(r/Math.sqrt(u))*Ya]};var Eo,Ao,Co,zo,Lo,qo,To,Ro,Do,Po,Uo,jo={sphere:b,point:St,lineStart:Nt,lineEnd:Et,polygonStart:function(){jo.lineStart=At},polygonEnd:function(){jo.lineStart=Nt}},Fo=Rt(zt,jt,Ht,[-ja,-ja/2]),Ho=1e9;oa.geo.clipExtent=function(){var n,t,e,r,u,i,a={stream:function(n){return u&&(u.valid=!1),u=i(n),u.valid=!0,u},extent:function(o){return arguments.length?(i=Zt(n=+o[0][0],t=+o[0][1],e=+o[1][0],r=+o[1][1]),u&&(u.valid=!1,u=null),a):[[n,t],[e,r]]}};return a.extent([[0,0],[960,500]])},(oa.geo.conicEqualArea=function(){return Vt(Xt)}).raw=Xt,oa.geo.albers=function(){return oa.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},oa.geo.albersUsa=function(){function n(n){var i=n[0],a=n[1];return t=null,e(i,a),t||(r(i,a),t)||u(i,a),t}var t,e,r,u,i=oa.geo.albers(),a=oa.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),o=oa.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(n,e){t=[n,e]}};return n.invert=function(n){var t=i.scale(),e=i.translate(),r=(n[0]-e[0])/t,u=(n[1]-e[1])/t;return(u>=.12&&.234>u&&r>=-.425&&-.214>r?a:u>=.166&&.234>u&&r>=-.214&&-.115>r?o:i).invert(n)},n.stream=function(n){var t=i.stream(n),e=a.stream(n),r=o.stream(n);return{point:function(n,u){t.point(n,u),e.point(n,u),r.point(n,u)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},n.precision=function(t){return arguments.length?(i.precision(t),a.precision(t),o.precision(t),n):i.precision()},n.scale=function(t){return arguments.length?(i.scale(t),a.scale(.35*t),o.scale(t),n.translate(i.translate())):i.scale()},n.translate=function(t){if(!arguments.length)return i.translate();var c=i.scale(),s=+t[0],f=+t[1];return e=i.translate(t).clipExtent([[s-.455*c,f-.238*c],[s+.455*c,f+.238*c]]).stream(l).point,r=a.translate([s-.307*c,f+.201*c]).clipExtent([[s-.425*c+Pa,f+.12*c+Pa],[s-.214*c-Pa,f+.234*c-Pa]]).stream(l).point,u=o.translate([s-.205*c,f+.212*c]).clipExtent([[s-.214*c+Pa,f+.166*c+Pa],[s-.115*c-Pa,f+.234*c-Pa]]).stream(l).point,n},n.scale(1070)};var Oo,Io,Yo,Zo,Vo,Xo,$o={point:b,lineStart:b,lineEnd:b,polygonStart:function(){Io=0,$o.lineStart=$t},polygonEnd:function(){$o.lineStart=$o.lineEnd=$o.point=b,Oo+=Ma(Io/2)}},Bo={point:Bt,lineStart:b,lineEnd:b,polygonStart:b,polygonEnd:b},Wo={point:Gt,lineStart:Kt,lineEnd:Qt,polygonStart:function(){Wo.lineStart=ne},polygonEnd:function(){Wo.point=Gt,Wo.lineStart=Kt,Wo.lineEnd=Qt}};oa.geo.path=function(){function n(n){return n&&("function"==typeof o&&i.pointRadius(+o.apply(this,arguments)),a&&a.valid||(a=u(i)),oa.geo.stream(n,a)),i.result()}function t(){return a=null,n}var e,r,u,i,a,o=4.5;return n.area=function(n){return Oo=0,oa.geo.stream(n,u($o)),Oo},n.centroid=function(n){return Co=zo=Lo=qo=To=Ro=Do=Po=Uo=0,oa.geo.stream(n,u(Wo)),Uo?[Do/Uo,Po/Uo]:Ro?[qo/Ro,To/Ro]:Lo?[Co/Lo,zo/Lo]:[NaN,NaN]},n.bounds=function(n){return Vo=Xo=-(Yo=Zo=1/0),oa.geo.stream(n,u(Bo)),[[Yo,Zo],[Vo,Xo]]},n.projection=function(n){return arguments.length?(u=(e=n)?n.stream||re(n):y,t()):e},n.context=function(n){return arguments.length?(i=null==(r=n)?new Wt:new te(n),"function"!=typeof o&&i.pointRadius(o),t()):r},n.pointRadius=function(t){return arguments.length?(o="function"==typeof t?t:(i.pointRadius(+t),+t),n):o},n.projection(oa.geo.albersUsa()).context(null)},oa.geo.transform=function(n){return{stream:function(t){var e=new ue(t);for(var r in n)e[r]=n[r];return e}}},ue.prototype={point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},oa.geo.projection=ae,oa.geo.projectionMutator=oe,(oa.geo.equirectangular=function(){return ae(ce)}).raw=ce.invert=ce,oa.geo.rotation=function(n){function t(t){return t=n(t[0]*Ia,t[1]*Ia),t[0]*=Ya,t[1]*=Ya,t}return n=fe(n[0]%360*Ia,n[1]*Ia,n.length>2?n[2]*Ia:0),t.invert=function(t){return t=n.invert(t[0]*Ia,t[1]*Ia),t[0]*=Ya,t[1]*=Ya,t},t},se.invert=ce,oa.geo.circle=function(){function n(){var n="function"==typeof r?r.apply(this,arguments):r,t=fe(-n[0]*Ia,-n[1]*Ia,0).invert,u=[];return e(null,null,1,{point:function(n,e){u.push(n=t(n,e)),n[0]*=Ya,n[1]*=Ya}}),{type:"Polygon",coordinates:[u]}}var t,e,r=[0,0],u=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=ve((t=+r)*Ia,u*Ia),n):t},n.precision=function(r){return arguments.length?(e=ve(t*Ia,(u=+r)*Ia),n):u},n.angle(90)},oa.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Ia,u=n[1]*Ia,i=t[1]*Ia,a=Math.sin(r),o=Math.cos(r),l=Math.sin(u),c=Math.cos(u),s=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((e=f*a)*e+(e=c*s-l*f*o)*e),l*s+c*f*o)},oa.geo.graticule=function(){function n(){return{type:"MultiLineString",coordinates:t()}}function t(){return oa.range(Math.ceil(i/d)*d,u,d).map(h).concat(oa.range(Math.ceil(c/m)*m,l,m).map(g)).concat(oa.range(Math.ceil(r/p)*p,e,p).filter(function(n){return Ma(n%d)>Pa}).map(s)).concat(oa.range(Math.ceil(o/v)*v,a,v).filter(function(n){return Ma(n%m)>Pa}).map(f))}var e,r,u,i,a,o,l,c,s,f,h,g,p=10,v=p,d=90,m=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:"LineString",coordinates:n}})},n.outline=function(){return{type:"Polygon",coordinates:[h(i).concat(g(l).slice(1),h(u).reverse().slice(1),g(c).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(i=+t[0][0],u=+t[1][0],c=+t[0][1],l=+t[1][1],i>u&&(t=i,i=u,u=t),c>l&&(t=c,c=l,l=t),n.precision(y)):[[i,c],[u,l]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],o=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),o>a&&(t=o,o=a,a=t),n.precision(y)):[[r,o],[e,a]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(d=+t[0],m=+t[1],n):[d,m]},n.minorStep=function(t){return arguments.length?(p=+t[0],v=+t[1],n):[p,v]},n.precision=function(t){return arguments.length?(y=+t,s=me(o,a,90),f=ye(r,e,y),h=me(c,l,90),g=ye(i,u,y),n):y},n.majorExtent([[-180,-90+Pa],[180,90-Pa]]).minorExtent([[-180,-80-Pa],[180,80+Pa]])},oa.geo.greatArc=function(){function n(){return{type:"LineString",coordinates:[t||r.apply(this,arguments),e||u.apply(this,arguments)]}}var t,e,r=Me,u=xe;return n.distance=function(){return oa.geo.distance(t||r.apply(this,arguments),e||u.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(u=t,e="function"==typeof t?null:t,n):u},n.precision=function(){return arguments.length?n:0},n},oa.geo.interpolate=function(n,t){return be(n[0]*Ia,n[1]*Ia,t[0]*Ia,t[1]*Ia)},oa.geo.length=function(n){return Jo=0,oa.geo.stream(n,Go),Jo};var Jo,Go={sphere:b,point:b,lineStart:_e,lineEnd:b,polygonStart:b,polygonEnd:b},Ko=we(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(oa.geo.azimuthalEqualArea=function(){return ae(Ko)}).raw=Ko;var Qo=we(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},y);(oa.geo.azimuthalEquidistant=function(){return ae(Qo)}).raw=Qo,(oa.geo.conicConformal=function(){return Vt(Se)}).raw=Se,(oa.geo.conicEquidistant=function(){return Vt(ke)}).raw=ke;var nl=we(function(n){return 1/n},Math.atan);(oa.geo.gnomonic=function(){return ae(nl)}).raw=nl,Ne.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-Oa]},(oa.geo.mercator=function(){return Ee(Ne)}).raw=Ne;var tl=we(function(){return 1},Math.asin);(oa.geo.orthographic=function(){return ae(tl)}).raw=tl;var el=we(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(oa.geo.stereographic=function(){return ae(el)}).raw=el,Ae.invert=function(n,t){return[-t,2*Math.atan(Math.exp(n))-Oa]},(oa.geo.transverseMercator=function(){var n=Ee(Ae),t=n.center,e=n.rotate;return n.center=function(n){return n?t([-n[1],n[0]]):(n=t(),[n[1],-n[0]])},n.rotate=function(n){return n?e([n[0],n[1],n.length>2?n[2]+90:90]):(n=e(),[n[0],n[1],n[2]-90])},e([0,0,90])}).raw=Ae,oa.geom={},oa.geom.hull=function(n){function t(n){if(n.length<3)return[];var t,u=En(e),i=En(r),a=n.length,o=[],l=[];for(t=0;a>t;t++)o.push([+u.call(this,n[t],t),+i.call(this,n[t],t),t]);for(o.sort(qe),t=0;a>t;t++)l.push([o[t][0],-o[t][1]]);var c=Le(o),s=Le(l),f=s[0]===c[0],h=s[s.length-1]===c[c.length-1],g=[];for(t=c.length-1;t>=0;--t)g.push(n[o[c[t]][2]]);for(t=+f;t<s.length-h;++t)g.push(n[o[s[t]][2]]);return g}var e=Ce,r=ze;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},oa.geom.polygon=function(n){return Sa(n,rl),n};var rl=oa.geom.polygon.prototype=[];rl.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],u=0;++t<e;)n=r,r=this[t],u+=n[1]*r[0]-n[0]*r[1];return.5*u},rl.centroid=function(n){var t,e,r=-1,u=this.length,i=0,a=0,o=this[u-1];for(arguments.length||(n=-1/(6*this.area()));++r<u;)t=o,o=this[r],e=t[0]*o[1]-o[0]*t[1],i+=(t[0]+o[0])*e,a+=(t[1]+o[1])*e;return[i*n,a*n]},rl.clip=function(n){for(var t,e,r,u,i,a,o=De(n),l=-1,c=this.length-De(this),s=this[c-1];++l<c;){for(t=n.slice(),n.length=0,u=this[l],i=t[(r=t.length-o)-1],e=-1;++e<r;)a=t[e],Te(a,s,u)?(Te(i,s,u)||n.push(Re(i,a,s,u)),n.push(a)):Te(i,s,u)&&n.push(Re(i,a,s,u)),i=a;o&&n.push(n[0]),s=u}return n};var ul,il,al,ol,ll,cl=[],sl=[];Ye.prototype.prepare=function(){for(var n,t=this.edges,e=t.length;e--;)n=t[e].edge,n.b&&n.a||t.splice(e,1);return t.sort(Ve),t.length},tr.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},er.prototype={insert:function(n,t){var e,r,u;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=ar(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)r=e.U,e===r.L?(u=r.R,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.R&&(ur(this,e),n=e,e=n.U),e.C=!1,r.C=!0,ir(this,r))):(u=r.L,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.L&&(ir(this,e),n=e,e=n.U),e.C=!1,r.C=!0,ur(this,r))),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,u=n.U,i=n.L,a=n.R;if(e=i?a?ar(a):i:a,u?u.L===n?u.L=e:u.R=e:this._=e,i&&a?(r=e.C,e.C=n.C,e.L=i,i.U=e,e!==a?(u=e.U,e.U=n.U,n=e.R,u.L=n,e.R=a,a.U=e):(e.U=u,u=e,n=e.R)):(r=n.C,n=e),n&&(n.U=u),!r){if(n&&n.C)return void(n.C=!1);do{if(n===this._)break;if(n===u.L){if(t=u.R,t.C&&(t.C=!1,u.C=!0,ur(this,u),t=u.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,ir(this,t),t=u.R),t.C=u.C,u.C=t.R.C=!1,ur(this,u),n=this._;break}}else if(t=u.L,t.C&&(t.C=!1,u.C=!0,ir(this,u),t=u.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,ur(this,t),t=u.L),t.C=u.C,u.C=t.L.C=!1,ir(this,u),n=this._;break}t.C=!0,n=u,u=u.U}while(!n.C);n&&(n.C=!1)}}},oa.geom.voronoi=function(n){function t(n){var t=new Array(n.length),r=o[0][0],u=o[0][1],i=o[1][0],a=o[1][1];return or(e(n),o).cells.forEach(function(e,o){var l=e.edges,c=e.site,s=t[o]=l.length?l.map(function(n){var t=n.start();return[t.x,t.y]}):c.x>=r&&c.x<=i&&c.y>=u&&c.y<=a?[[r,a],[i,a],[i,u],[r,u]]:[];s.point=n[o]}),t}function e(n){return n.map(function(n,t){return{x:Math.round(i(n,t)/Pa)*Pa,y:Math.round(a(n,t)/Pa)*Pa,i:t}})}var r=Ce,u=ze,i=r,a=u,o=fl;return n?t(n):(t.links=function(n){return or(e(n)).edges.filter(function(n){return n.l&&n.r}).map(function(t){return{source:n[t.l.i],target:n[t.r.i]}})},t.triangles=function(n){var t=[];return or(e(n)).cells.forEach(function(e,r){for(var u,i,a=e.site,o=e.edges.sort(Ve),l=-1,c=o.length,s=o[c-1].edge,f=s.l===a?s.r:s.l;++l<c;)u=s,i=f,s=o[l].edge,f=s.l===a?s.r:s.l,r<i.i&&r<f.i&&cr(a,i,f)<0&&t.push([n[r],n[i.i],n[f.i]])}),t},t.x=function(n){return arguments.length?(i=En(r=n),t):r},t.y=function(n){return arguments.length?(a=En(u=n),t):u},t.clipExtent=function(n){return arguments.length?(o=null==n?fl:n,t):o===fl?null:o},t.size=function(n){return arguments.length?t.clipExtent(n&&[[0,0],n]):o===fl?null:o&&o[1]},t)};var fl=[[-1e6,-1e6],[1e6,1e6]];oa.geom.delaunay=function(n){return oa.geom.voronoi().triangles(n)},oa.geom.quadtree=function(n,t,e,r,u){function i(n){function i(n,t,e,r,u,i,a,o){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var l=n.x,s=n.y;if(null!=l)if(Ma(l-e)+Ma(s-r)<.01)c(n,t,e,r,u,i,a,o);else{var f=n.point;n.x=n.y=n.point=null,c(n,f,l,s,u,i,a,o),c(n,t,e,r,u,i,a,o)}else n.x=e,n.y=r,n.point=t}else c(n,t,e,r,u,i,a,o)}function c(n,t,e,r,u,a,o,l){var c=.5*(u+o),s=.5*(a+l),f=e>=c,h=r>=s,g=h<<1|f;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=hr()),f?u=c:o=c,h?a=s:l=s,i(n,t,e,r,u,a,o,l)}var s,f,h,g,p,v,d,m,y,M=En(o),x=En(l);if(null!=t)v=t,d=e,m=r,y=u;else if(m=y=-(v=d=1/0),f=[],h=[],p=n.length,a)for(g=0;p>g;++g)s=n[g],s.x<v&&(v=s.x),s.y<d&&(d=s.y),s.x>m&&(m=s.x),s.y>y&&(y=s.y),f.push(s.x),h.push(s.y);else for(g=0;p>g;++g){var b=+M(s=n[g],g),_=+x(s,g);v>b&&(v=b),d>_&&(d=_),b>m&&(m=b),_>y&&(y=_),f.push(b),h.push(_)}var w=m-v,S=y-d;w>S?y=d+w:m=v+S;var k=hr();if(k.add=function(n){i(k,n,+M(n,++g),+x(n,g),v,d,m,y)},k.visit=function(n){gr(n,k,v,d,m,y)},k.find=function(n){return pr(k,n[0],n[1],v,d,m,y)},g=-1,null==t){for(;++g<p;)i(k,n[g],f[g],h[g],v,d,m,y);--g}else n.forEach(k.add);return f=h=n=s=null,k}var a,o=Ce,l=ze;return(a=arguments.length)?(o=sr,l=fr,3===a&&(u=e,r=t,e=t=0),i(n)):(i.x=function(n){return arguments.length?(o=n,i):o},i.y=function(n){return arguments.length?(l=n,i):l},i.extent=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],u=+n[1][1]),i):null==t?null:[[t,e],[r,u]]},i.size=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=e=0,r=+n[0],u=+n[1]),i):null==t?null:[r-t,u-e]},i)},oa.interpolateRgb=vr,oa.interpolateObject=dr,oa.interpolateNumber=mr,oa.interpolateString=yr;var hl=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,gl=new RegExp(hl.source,"g");oa.interpolate=Mr,oa.interpolators=[function(n,t){var e=typeof t;return("string"===e?uo.has(t.toLowerCase())||/^(#|rgb\(|hsl\()/i.test(t)?vr:yr:t instanceof on?vr:Array.isArray(t)?xr:"object"===e&&isNaN(t)?dr:mr)(n,t)}],oa.interpolateArray=xr;var pl=function(){return y},vl=oa.map({linear:pl,poly:Er,quad:function(){return Sr},cubic:function(){return kr},sin:function(){return Ar},exp:function(){return Cr},circle:function(){return zr},elastic:Lr,back:qr,bounce:function(){return Tr}}),dl=oa.map({"in":y,out:_r,"in-out":wr,"out-in":function(n){return wr(_r(n))}});oa.ease=function(n){var t=n.indexOf("-"),e=t>=0?n.slice(0,t):n,r=t>=0?n.slice(t+1):"in";return e=vl.get(e)||pl,r=dl.get(r)||y,br(r(e.apply(null,la.call(arguments,1))))},oa.interpolateHcl=Rr,oa.interpolateHsl=Dr,oa.interpolateLab=Pr,oa.interpolateRound=Ur,oa.transform=function(n){var t=sa.createElementNS(oa.ns.prefix.svg,"g");return(oa.transform=function(n){if(null!=n){t.setAttribute("transform",n);var e=t.transform.baseVal.consolidate()}return new jr(e?e.matrix:ml)})(n)},jr.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var ml={a:1,b:0,c:0,d:1,e:0,f:0};oa.interpolateTransform=$r,oa.layout={},oa.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(Jr(n[e]));return t}},oa.layout.chord=function(){function n(){var n,c,f,h,g,p={},v=[],d=oa.range(i),m=[];for(e=[],r=[],n=0,h=-1;++h<i;){for(c=0,g=-1;++g<i;)c+=u[h][g];v.push(c),m.push(oa.range(i)),n+=c}for(a&&d.sort(function(n,t){return a(v[n],v[t])}),o&&m.forEach(function(n,t){n.sort(function(n,e){return o(u[t][n],u[t][e])})}),n=(Fa-s*i)/n,c=0,h=-1;++h<i;){for(f=c,g=-1;++g<i;){var y=d[h],M=m[y][g],x=u[y][M],b=c,_=c+=x*n;p[y+"-"+M]={index:y,subindex:M,startAngle:b,endAngle:_,value:x}}r[y]={index:y,startAngle:f,endAngle:c,value:v[y]},c+=s}for(h=-1;++h<i;)for(g=h-1;++g<i;){var w=p[h+"-"+g],S=p[g+"-"+h];(w.value||S.value)&&e.push(w.value<S.value?{source:S,target:w}:{source:w,target:S})}l&&t()}function t(){e.sort(function(n,t){return l((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,u,i,a,o,l,c={},s=0;return c.matrix=function(n){return arguments.length?(i=(u=n)&&u.length,e=r=null,c):u},c.padding=function(n){return arguments.length?(s=n,e=r=null,c):s},c.sortGroups=function(n){return arguments.length?(a=n,e=r=null,c):a},c.sortSubgroups=function(n){return arguments.length?(o=n,e=null,c):o},c.sortChords=function(n){return arguments.length?(l=n,e&&t(),c):l},c.chords=function(){return e||n(),e},c.groups=function(){return r||n(),r},c},oa.layout.force=function(){function n(n){return function(t,e,r,u){if(t.point!==n){var i=t.cx-n.x,a=t.cy-n.y,o=u-e,l=i*i+a*a;if(l>o*o/m){if(v>l){var c=t.charge/l;n.px-=i*c,n.py-=a*c}return!0}if(t.point&&l&&v>l){var c=t.pointCharge/l;n.px-=i*c,n.py-=a*c}}return!t.charge}}function t(n){n.px=oa.event.x,n.py=oa.event.y,l.resume()}var e,r,u,i,a,o,l={},c=oa.dispatch("start","tick","end"),s=[1,1],f=.9,h=yl,g=Ml,p=-30,v=xl,d=.1,m=.64,M=[],x=[];return l.tick=function(){if((u*=.99)<.005)return e=null,c.end({type:"end",alpha:u=0}),!0;var t,r,l,h,g,v,m,y,b,_=M.length,w=x.length;for(r=0;w>r;++r)l=x[r],h=l.source,g=l.target,y=g.x-h.x,b=g.y-h.y,(v=y*y+b*b)&&(v=u*a[r]*((v=Math.sqrt(v))-i[r])/v,y*=v,b*=v,g.x-=y*(m=h.weight+g.weight?h.weight/(h.weight+g.weight):.5),g.y-=b*m,h.x+=y*(m=1-m),h.y+=b*m);if((m=u*d)&&(y=s[0]/2,b=s[1]/2,r=-1,m))for(;++r<_;)l=M[r],l.x+=(y-l.x)*m,l.y+=(b-l.y)*m;if(p)for(ru(t=oa.geom.quadtree(M),u,o),r=-1;++r<_;)(l=M[r]).fixed||t.visit(n(l));for(r=-1;++r<_;)l=M[r],l.fixed?(l.x=l.px,l.y=l.py):(l.x-=(l.px-(l.px=l.x))*f,l.y-=(l.py-(l.py=l.y))*f);c.tick({type:"tick",alpha:u})},l.nodes=function(n){return arguments.length?(M=n,l):M},l.links=function(n){return arguments.length?(x=n,l):x},l.size=function(n){return arguments.length?(s=n,l):s},l.linkDistance=function(n){return arguments.length?(h="function"==typeof n?n:+n,l):h},l.distance=l.linkDistance,l.linkStrength=function(n){return arguments.length?(g="function"==typeof n?n:+n,l):g},l.friction=function(n){return arguments.length?(f=+n,l):f},l.charge=function(n){return arguments.length?(p="function"==typeof n?n:+n,l):p},l.chargeDistance=function(n){return arguments.length?(v=n*n,l):Math.sqrt(v)},l.gravity=function(n){return arguments.length?(d=+n,l):d},l.theta=function(n){return arguments.length?(m=n*n,l):Math.sqrt(m)},l.alpha=function(n){return arguments.length?(n=+n,u?n>0?u=n:(e.c=null,e.t=NaN,e=null,c.end({type:"end",alpha:u=0})):n>0&&(c.start({type:"start",alpha:u=n}),e=qn(l.tick)),l):u},l.start=function(){function n(n,r){if(!e){for(e=new Array(u),l=0;u>l;++l)e[l]=[];for(l=0;c>l;++l){var i=x[l];e[i.source.index].push(i.target),e[i.target.index].push(i.source)}}for(var a,o=e[t],l=-1,s=o.length;++l<s;)if(!isNaN(a=o[l][n]))return a;return Math.random()*r}var t,e,r,u=M.length,c=x.length,f=s[0],v=s[1];for(t=0;u>t;++t)(r=M[t]).index=t,r.weight=0;for(t=0;c>t;++t)r=x[t],"number"==typeof r.source&&(r.source=M[r.source]),"number"==typeof r.target&&(r.target=M[r.target]),++r.source.weight,++r.target.weight;for(t=0;u>t;++t)r=M[t],isNaN(r.x)&&(r.x=n("x",f)),isNaN(r.y)&&(r.y=n("y",v)),isNaN(r.px)&&(r.px=r.x),isNaN(r.py)&&(r.py=r.y);if(i=[],"function"==typeof h)for(t=0;c>t;++t)i[t]=+h.call(this,x[t],t);else for(t=0;c>t;++t)i[t]=h;if(a=[],"function"==typeof g)for(t=0;c>t;++t)a[t]=+g.call(this,x[t],t);else for(t=0;c>t;++t)a[t]=g;if(o=[],"function"==typeof p)for(t=0;u>t;++t)o[t]=+p.call(this,M[t],t);else for(t=0;u>t;++t)o[t]=p;return l.resume()},l.resume=function(){return l.alpha(.1)},l.stop=function(){return l.alpha(0)},l.drag=function(){return r||(r=oa.behavior.drag().origin(y).on("dragstart.force",Qr).on("drag.force",t).on("dragend.force",nu)),arguments.length?void this.on("mouseover.force",tu).on("mouseout.force",eu).call(r):r},oa.rebind(l,c,"on")};var yl=20,Ml=1,xl=1/0;oa.layout.hierarchy=function(){function n(u){var i,a=[u],o=[];for(u.depth=0;null!=(i=a.pop());)if(o.push(i),(c=e.call(n,i,i.depth))&&(l=c.length)){for(var l,c,s;--l>=0;)a.push(s=c[l]),s.parent=i,s.depth=i.depth+1;r&&(i.value=0),i.children=c}else r&&(i.value=+r.call(n,i,i.depth)||0),delete i.children;return au(u,function(n){var e,u;t&&(e=n.children)&&e.sort(t),r&&(u=n.parent)&&(u.value+=n.value)}),o}var t=cu,e=ou,r=lu;return n.sort=function(e){return arguments.length?(t=e,n):t},n.children=function(t){return arguments.length?(e=t,n):e},n.value=function(t){return arguments.length?(r=t,n):r},n.revalue=function(t){return r&&(iu(t,function(n){n.children&&(n.value=0)}),au(t,function(t){var e;t.children||(t.value=+r.call(n,t,t.depth)||0),(e=t.parent)&&(e.value+=t.value)})),t},n},oa.layout.partition=function(){function n(t,e,r,u){var i=t.children;if(t.x=e,t.y=t.depth*u,t.dx=r,t.dy=u,i&&(a=i.length)){var a,o,l,c=-1;for(r=t.value?r/t.value:0;++c<a;)n(o=i[c],e,l=o.value*r,u),e+=l}}function t(n){var e=n.children,r=0;if(e&&(u=e.length))for(var u,i=-1;++i<u;)r=Math.max(r,t(e[i]));return 1+r}function e(e,i){var a=r.call(this,e,i);return n(a[0],0,u[0],u[1]/t(a[0])),a}var r=oa.layout.hierarchy(),u=[1,1];return e.size=function(n){return arguments.length?(u=n,e):u},uu(e,r)},oa.layout.pie=function(){function n(a){var o,l=a.length,c=a.map(function(e,r){return+t.call(n,e,r)}),s=+("function"==typeof r?r.apply(this,arguments):r),f=("function"==typeof u?u.apply(this,arguments):u)-s,h=Math.min(Math.abs(f)/l,+("function"==typeof i?i.apply(this,arguments):i)),g=h*(0>f?-1:1),p=oa.sum(c),v=p?(f-l*g)/p:0,d=oa.range(l),m=[];return null!=e&&d.sort(e===bl?function(n,t){return c[t]-c[n]}:function(n,t){return e(a[n],a[t])}),d.forEach(function(n){m[n]={data:a[n],value:o=c[n],startAngle:s,endAngle:s+=o*v+g,padAngle:h}}),m}var t=Number,e=bl,r=0,u=Fa,i=0;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(u=t,n):u},n.padAngle=function(t){return arguments.length?(i=t,n):i},n};var bl={};oa.layout.stack=function(){function n(o,l){if(!(h=o.length))return o;var c=o.map(function(e,r){return t.call(n,e,r)}),s=c.map(function(t){return t.map(function(t,e){return[i.call(n,t,e),a.call(n,t,e)]})}),f=e.call(n,s,l);c=oa.permute(c,f),s=oa.permute(s,f);var h,g,p,v,d=r.call(n,s,l),m=c[0].length;for(p=0;m>p;++p)for(u.call(n,c[0][p],v=d[p],s[0][p][1]),g=1;h>g;++g)u.call(n,c[g][p],v+=s[g-1][p][1],s[g][p][1]);return o}var t=y,e=pu,r=vu,u=gu,i=fu,a=hu;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e="function"==typeof t?t:_l.get(t)||pu,n):e},n.offset=function(t){return arguments.length?(r="function"==typeof t?t:wl.get(t)||vu,n):r},n.x=function(t){return arguments.length?(i=t,n):i},n.y=function(t){return arguments.length?(a=t,n):a},n.out=function(t){return arguments.length?(u=t,n):u},n};var _l=oa.map({"inside-out":function(n){var t,e,r=n.length,u=n.map(du),i=n.map(mu),a=oa.range(r).sort(function(n,t){return u[n]-u[t]}),o=0,l=0,c=[],s=[];for(t=0;r>t;++t)e=a[t],l>o?(o+=i[e],c.push(e)):(l+=i[e],s.push(e));return s.reverse().concat(c)},reverse:function(n){return oa.range(n.length).reverse()},"default":pu}),wl=oa.map({silhouette:function(n){var t,e,r,u=n.length,i=n[0].length,a=[],o=0,l=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];r>o&&(o=r),a.push(r)}for(e=0;i>e;++e)l[e]=(o-a[e])/2;return l},wiggle:function(n){var t,e,r,u,i,a,o,l,c,s=n.length,f=n[0],h=f.length,g=[];for(g[0]=l=c=0,e=1;h>e;++e){for(t=0,u=0;s>t;++t)u+=n[t][e][1];for(t=0,i=0,o=f[e][0]-f[e-1][0];s>t;++t){for(r=0,a=(n[t][e][1]-n[t][e-1][1])/(2*o);t>r;++r)a+=(n[r][e][1]-n[r][e-1][1])/o;i+=a*n[t][e][1]}g[e]=l-=u?i/u*o:0,c>l&&(c=l)}for(e=0;h>e;++e)g[e]-=c;return g},expand:function(n){var t,e,r,u=n.length,i=n[0].length,a=1/u,o=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];if(r)for(t=0;u>t;t++)n[t][e][1]/=r;else for(t=0;u>t;t++)n[t][e][1]=a}for(e=0;i>e;++e)o[e]=0;return o},zero:vu});oa.layout.histogram=function(){function n(n,i){for(var a,o,l=[],c=n.map(e,this),s=r.call(this,c,i),f=u.call(this,s,c,i),i=-1,h=c.length,g=f.length-1,p=t?1:1/h;++i<g;)a=l[i]=[],a.dx=f[i+1]-(a.x=f[i]),a.y=0;if(g>0)for(i=-1;++i<h;)o=c[i],o>=s[0]&&o<=s[1]&&(a=l[oa.bisect(f,o,1,g)-1],a.y+=p,a.push(n[i]));return l}var t=!0,e=Number,r=bu,u=Mu;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=En(t),n):r},n.bins=function(t){return arguments.length?(u="number"==typeof t?function(n){return xu(n,t)}:En(t),n):u},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},oa.layout.pack=function(){function n(n,i){var a=e.call(this,n,i),o=a[0],l=u[0],c=u[1],s=null==t?Math.sqrt:"function"==typeof t?t:function(){return t};if(o.x=o.y=0,au(o,function(n){n.r=+s(n.value)}),au(o,Nu),r){var f=r*(t?1:Math.max(2*o.r/l,2*o.r/c))/2;au(o,function(n){n.r+=f}),au(o,Nu),au(o,function(n){n.r-=f})}return Cu(o,l/2,c/2,t?1:1/Math.max(2*o.r/l,2*o.r/c)),a}var t,e=oa.layout.hierarchy().sort(_u),r=0,u=[1,1];return n.size=function(t){return arguments.length?(u=t,n):u},n.radius=function(e){return arguments.length?(t=null==e||"function"==typeof e?e:+e,n):t},n.padding=function(t){return arguments.length?(r=+t,n):r},uu(n,e)},oa.layout.tree=function(){function n(n,u){var s=a.call(this,n,u),f=s[0],h=t(f);if(au(h,e),h.parent.m=-h.z,iu(h,r),c)iu(f,i);else{var g=f,p=f,v=f;iu(f,function(n){n.x<g.x&&(g=n),n.x>p.x&&(p=n),n.depth>v.depth&&(v=n)});var d=o(g,p)/2-g.x,m=l[0]/(p.x+o(p,g)/2+d),y=l[1]/(v.depth||1);iu(f,function(n){n.x=(n.x+d)*m,n.y=n.depth*y})}return s}function t(n){for(var t,e={A:null,children:[n]},r=[e];null!=(t=r.pop());)for(var u,i=t.children,a=0,o=i.length;o>a;++a)r.push((i[a]=u={_:i[a],parent:t,children:(u=i[a].children)&&u.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:a}).a=u);return e.children[0]}function e(n){var t=n.children,e=n.parent.children,r=n.i?e[n.i-1]:null;if(t.length){Du(n);var i=(t[0].z+t[t.length-1].z)/2;r?(n.z=r.z+o(n._,r._),n.m=n.z-i):n.z=i}else r&&(n.z=r.z+o(n._,r._));n.parent.A=u(n,r,n.parent.A||e[0])}function r(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function u(n,t,e){if(t){for(var r,u=n,i=n,a=t,l=u.parent.children[0],c=u.m,s=i.m,f=a.m,h=l.m;a=Tu(a),u=qu(u),a&&u;)l=qu(l),i=Tu(i),i.a=n,r=a.z+f-u.z-c+o(a._,u._),r>0&&(Ru(Pu(a,n,e),n,r),c+=r,s+=r),f+=a.m,c+=u.m,h+=l.m,s+=i.m;a&&!Tu(i)&&(i.t=a,i.m+=f-s),u&&!qu(l)&&(l.t=u,l.m+=c-h,e=n)}return e}function i(n){n.x*=l[0],n.y=n.depth*l[1]}var a=oa.layout.hierarchy().sort(null).value(null),o=Lu,l=[1,1],c=null;return n.separation=function(t){return arguments.length?(o=t,n):o},n.size=function(t){return arguments.length?(c=null==(l=t)?i:null,n):c?null:l},n.nodeSize=function(t){return arguments.length?(c=null==(l=t)?null:i,n):c?l:null},uu(n,a)},oa.layout.cluster=function(){function n(n,i){var a,o=t.call(this,n,i),l=o[0],c=0;au(l,function(n){var t=n.children;t&&t.length?(n.x=ju(t),n.y=Uu(t)):(n.x=a?c+=e(n,a):0,n.y=0,a=n)});var s=Fu(l),f=Hu(l),h=s.x-e(s,f)/2,g=f.x+e(f,s)/2;return au(l,u?function(n){n.x=(n.x-l.x)*r[0],n.y=(l.y-n.y)*r[1]}:function(n){n.x=(n.x-h)/(g-h)*r[0],n.y=(1-(l.y?n.y/l.y:1))*r[1]}),o}var t=oa.layout.hierarchy().sort(null).value(null),e=Lu,r=[1,1],u=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(u=null==(r=t),n):u?null:r},n.nodeSize=function(t){return arguments.length?(u=null!=(r=t),n):u?r:null},uu(n,t)},oa.layout.treemap=function(){function n(n,t){for(var e,r,u=-1,i=n.length;++u<i;)r=(e=n[u]).value*(0>t?0:t),e.area=isNaN(r)||0>=r?0:r}function t(e){var i=e.children;if(i&&i.length){var a,o,l,c=f(e),s=[],h=i.slice(),p=1/0,v="slice"===g?c.dx:"dice"===g?c.dy:"slice-dice"===g?1&e.depth?c.dy:c.dx:Math.min(c.dx,c.dy);for(n(h,c.dx*c.dy/e.value),s.area=0;(l=h.length)>0;)s.push(a=h[l-1]),s.area+=a.area,"squarify"!==g||(o=r(s,v))<=p?(h.pop(),p=o):(s.area-=s.pop().area,u(s,v,c,!1),v=Math.min(c.dx,c.dy),s.length=s.area=0,p=1/0);s.length&&(u(s,v,c,!0),s.length=s.area=0),i.forEach(t)}}function e(t){var r=t.children;if(r&&r.length){var i,a=f(t),o=r.slice(),l=[];for(n(o,a.dx*a.dy/t.value),l.area=0;i=o.pop();)l.push(i),l.area+=i.area,null!=i.z&&(u(l,i.z?a.dx:a.dy,a,!o.length),l.length=l.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,u=0,i=1/0,a=-1,o=n.length;++a<o;)(e=n[a].area)&&(i>e&&(i=e),e>u&&(u=e));return r*=r,t*=t,r?Math.max(t*u*p/r,r/(t*i*p)):1/0}function u(n,t,e,r){var u,i=-1,a=n.length,o=e.x,c=e.y,s=t?l(n.area/t):0;
if(t==e.dx){for((r||s>e.dy)&&(s=e.dy);++i<a;)u=n[i],u.x=o,u.y=c,u.dy=s,o+=u.dx=Math.min(e.x+e.dx-o,s?l(u.area/s):0);u.z=!0,u.dx+=e.x+e.dx-o,e.y+=s,e.dy-=s}else{for((r||s>e.dx)&&(s=e.dx);++i<a;)u=n[i],u.x=o,u.y=c,u.dx=s,c+=u.dy=Math.min(e.y+e.dy-c,s?l(u.area/s):0);u.z=!1,u.dy+=e.y+e.dy-c,e.x+=s,e.dx-=s}}function i(r){var u=a||o(r),i=u[0];return i.x=i.y=0,i.value?(i.dx=c[0],i.dy=c[1]):i.dx=i.dy=0,a&&o.revalue(i),n([i],i.dx*i.dy/i.value),(a?e:t)(i),h&&(a=u),u}var a,o=oa.layout.hierarchy(),l=Math.round,c=[1,1],s=null,f=Ou,h=!1,g="squarify",p=.5*(1+Math.sqrt(5));return i.size=function(n){return arguments.length?(c=n,i):c},i.padding=function(n){function t(t){var e=n.call(i,t,t.depth);return null==e?Ou(t):Iu(t,"number"==typeof e?[e,e,e,e]:e)}function e(t){return Iu(t,n)}if(!arguments.length)return s;var r;return f=null==(s=n)?Ou:"function"==(r=typeof n)?t:"number"===r?(n=[n,n,n,n],e):e,i},i.round=function(n){return arguments.length?(l=n?Math.round:Number,i):l!=Number},i.sticky=function(n){return arguments.length?(h=n,a=null,i):h},i.ratio=function(n){return arguments.length?(p=n,i):p},i.mode=function(n){return arguments.length?(g=n+"",i):g},uu(i,o)},oa.random={normal:function(n,t){var e=arguments.length;return 2>e&&(t=1),1>e&&(n=0),function(){var e,r,u;do e=2*Math.random()-1,r=2*Math.random()-1,u=e*e+r*r;while(!u||u>1);return n+t*e*Math.sqrt(-2*Math.log(u)/u)}},logNormal:function(){var n=oa.random.normal.apply(oa,arguments);return function(){return Math.exp(n())}},bates:function(n){var t=oa.random.irwinHall(n);return function(){return t()/n}},irwinHall:function(n){return function(){for(var t=0,e=0;n>e;e++)t+=Math.random();return t}}},oa.scale={};var Sl={floor:y,ceil:y};oa.scale.linear=function(){return Wu([0,1],[0,1],Mr,!1)};var kl={s:1,g:1,p:1,r:1,e:1};oa.scale.log=function(){return ri(oa.scale.linear().domain([0,1]),10,!0,[1,10])};var Nl=oa.format(".0e"),El={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};oa.scale.pow=function(){return ui(oa.scale.linear(),1,[0,1])},oa.scale.sqrt=function(){return oa.scale.pow().exponent(.5)},oa.scale.ordinal=function(){return ai([],{t:"range",a:[[]]})},oa.scale.category10=function(){return oa.scale.ordinal().range(Al)},oa.scale.category20=function(){return oa.scale.ordinal().range(Cl)},oa.scale.category20b=function(){return oa.scale.ordinal().range(zl)},oa.scale.category20c=function(){return oa.scale.ordinal().range(Ll)};var Al=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(xn),Cl=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(xn),zl=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(xn),Ll=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(xn);oa.scale.quantile=function(){return oi([],[])},oa.scale.quantize=function(){return li(0,1,[0,1])},oa.scale.threshold=function(){return ci([.5],[0,1])},oa.scale.identity=function(){return si([0,1])},oa.svg={},oa.svg.arc=function(){function n(){var n=Math.max(0,+e.apply(this,arguments)),c=Math.max(0,+r.apply(this,arguments)),s=a.apply(this,arguments)-Oa,f=o.apply(this,arguments)-Oa,h=Math.abs(f-s),g=s>f?0:1;if(n>c&&(p=c,c=n,n=p),h>=Ha)return t(c,g)+(n?t(n,1-g):"")+"Z";var p,v,d,m,y,M,x,b,_,w,S,k,N=0,E=0,A=[];if((m=(+l.apply(this,arguments)||0)/2)&&(d=i===ql?Math.sqrt(n*n+c*c):+i.apply(this,arguments),g||(E*=-1),c&&(E=tn(d/c*Math.sin(m))),n&&(N=tn(d/n*Math.sin(m)))),c){y=c*Math.cos(s+E),M=c*Math.sin(s+E),x=c*Math.cos(f-E),b=c*Math.sin(f-E);var C=Math.abs(f-s-2*E)<=ja?0:1;if(E&&mi(y,M,x,b)===g^C){var z=(s+f)/2;y=c*Math.cos(z),M=c*Math.sin(z),x=b=null}}else y=M=0;if(n){_=n*Math.cos(f-N),w=n*Math.sin(f-N),S=n*Math.cos(s+N),k=n*Math.sin(s+N);var L=Math.abs(s-f+2*N)<=ja?0:1;if(N&&mi(_,w,S,k)===1-g^L){var q=(s+f)/2;_=n*Math.cos(q),w=n*Math.sin(q),S=k=null}}else _=w=0;if(h>Pa&&(p=Math.min(Math.abs(c-n)/2,+u.apply(this,arguments)))>.001){v=c>n^g?0:1;var T=p,R=p;if(ja>h){var D=null==S?[_,w]:null==x?[y,M]:Re([y,M],[S,k],[x,b],[_,w]),P=y-D[0],U=M-D[1],j=x-D[0],F=b-D[1],H=1/Math.sin(Math.acos((P*j+U*F)/(Math.sqrt(P*P+U*U)*Math.sqrt(j*j+F*F)))/2),O=Math.sqrt(D[0]*D[0]+D[1]*D[1]);R=Math.min(p,(n-O)/(H-1)),T=Math.min(p,(c-O)/(H+1))}if(null!=x){var I=yi(null==S?[_,w]:[S,k],[y,M],c,T,g),Y=yi([x,b],[_,w],c,T,g);p===T?A.push("M",I[0],"A",T,",",T," 0 0,",v," ",I[1],"A",c,",",c," 0 ",1-g^mi(I[1][0],I[1][1],Y[1][0],Y[1][1]),",",g," ",Y[1],"A",T,",",T," 0 0,",v," ",Y[0]):A.push("M",I[0],"A",T,",",T," 0 1,",v," ",Y[0])}else A.push("M",y,",",M);if(null!=S){var Z=yi([y,M],[S,k],n,-R,g),V=yi([_,w],null==x?[y,M]:[x,b],n,-R,g);p===R?A.push("L",V[0],"A",R,",",R," 0 0,",v," ",V[1],"A",n,",",n," 0 ",g^mi(V[1][0],V[1][1],Z[1][0],Z[1][1]),",",1-g," ",Z[1],"A",R,",",R," 0 0,",v," ",Z[0]):A.push("L",V[0],"A",R,",",R," 0 0,",v," ",Z[0])}else A.push("L",_,",",w)}else A.push("M",y,",",M),null!=x&&A.push("A",c,",",c," 0 ",C,",",g," ",x,",",b),A.push("L",_,",",w),null!=S&&A.push("A",n,",",n," 0 ",L,",",1-g," ",S,",",k);return A.push("Z"),A.join("")}function t(n,t){return"M0,"+n+"A"+n+","+n+" 0 1,"+t+" 0,"+-n+"A"+n+","+n+" 0 1,"+t+" 0,"+n}var e=hi,r=gi,u=fi,i=ql,a=pi,o=vi,l=di;return n.innerRadius=function(t){return arguments.length?(e=En(t),n):e},n.outerRadius=function(t){return arguments.length?(r=En(t),n):r},n.cornerRadius=function(t){return arguments.length?(u=En(t),n):u},n.padRadius=function(t){return arguments.length?(i=t==ql?ql:En(t),n):i},n.startAngle=function(t){return arguments.length?(a=En(t),n):a},n.endAngle=function(t){return arguments.length?(o=En(t),n):o},n.padAngle=function(t){return arguments.length?(l=En(t),n):l},n.centroid=function(){var n=(+e.apply(this,arguments)+ +r.apply(this,arguments))/2,t=(+a.apply(this,arguments)+ +o.apply(this,arguments))/2-Oa;return[Math.cos(t)*n,Math.sin(t)*n]},n};var ql="auto";oa.svg.line=function(){return Mi(y)};var Tl=oa.map({linear:xi,"linear-closed":bi,step:_i,"step-before":wi,"step-after":Si,basis:zi,"basis-open":Li,"basis-closed":qi,bundle:Ti,cardinal:Ei,"cardinal-open":ki,"cardinal-closed":Ni,monotone:Fi});Tl.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var Rl=[0,2/3,1/3,0],Dl=[0,1/3,2/3,0],Pl=[0,1/6,2/3,1/6];oa.svg.line.radial=function(){var n=Mi(Hi);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},wi.reverse=Si,Si.reverse=wi,oa.svg.area=function(){return Oi(y)},oa.svg.area.radial=function(){var n=Oi(Hi);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},oa.svg.chord=function(){function n(n,o){var l=t(this,i,n,o),c=t(this,a,n,o);return"M"+l.p0+r(l.r,l.p1,l.a1-l.a0)+(e(l,c)?u(l.r,l.p1,l.r,l.p0):u(l.r,l.p1,c.r,c.p0)+r(c.r,c.p1,c.a1-c.a0)+u(c.r,c.p1,l.r,l.p0))+"Z"}function t(n,t,e,r){var u=t.call(n,e,r),i=o.call(n,u,r),a=l.call(n,u,r)-Oa,s=c.call(n,u,r)-Oa;return{r:i,a0:a,a1:s,p0:[i*Math.cos(a),i*Math.sin(a)],p1:[i*Math.cos(s),i*Math.sin(s)]}}function e(n,t){return n.a0==t.a0&&n.a1==t.a1}function r(n,t,e){return"A"+n+","+n+" 0 "+ +(e>ja)+",1 "+t}function u(n,t,e,r){return"Q 0,0 "+r}var i=Me,a=xe,o=Ii,l=pi,c=vi;return n.radius=function(t){return arguments.length?(o=En(t),n):o},n.source=function(t){return arguments.length?(i=En(t),n):i},n.target=function(t){return arguments.length?(a=En(t),n):a},n.startAngle=function(t){return arguments.length?(l=En(t),n):l},n.endAngle=function(t){return arguments.length?(c=En(t),n):c},n},oa.svg.diagonal=function(){function n(n,u){var i=t.call(this,n,u),a=e.call(this,n,u),o=(i.y+a.y)/2,l=[i,{x:i.x,y:o},{x:a.x,y:o},a];return l=l.map(r),"M"+l[0]+"C"+l[1]+" "+l[2]+" "+l[3]}var t=Me,e=xe,r=Yi;return n.source=function(e){return arguments.length?(t=En(e),n):t},n.target=function(t){return arguments.length?(e=En(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},oa.svg.diagonal.radial=function(){var n=oa.svg.diagonal(),t=Yi,e=n.projection;return n.projection=function(n){return arguments.length?e(Zi(t=n)):t},n},oa.svg.symbol=function(){function n(n,r){return(Ul.get(t.call(this,n,r))||$i)(e.call(this,n,r))}var t=Xi,e=Vi;return n.type=function(e){return arguments.length?(t=En(e),n):t},n.size=function(t){return arguments.length?(e=En(t),n):e},n};var Ul=oa.map({circle:$i,cross:function(n){var t=Math.sqrt(n/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(n){var t=Math.sqrt(n/(2*Fl)),e=t*Fl;return"M0,"+-t+"L"+e+",0 0,"+t+" "+-e+",0Z"},square:function(n){var t=Math.sqrt(n)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(n){var t=Math.sqrt(n/jl),e=t*jl/2;return"M0,"+e+"L"+t+","+-e+" "+-t+","+-e+"Z"},"triangle-up":function(n){var t=Math.sqrt(n/jl),e=t*jl/2;return"M0,"+-e+"L"+t+","+e+" "+-t+","+e+"Z"}});oa.svg.symbolTypes=Ul.keys();var jl=Math.sqrt(3),Fl=Math.tan(30*Ia);Aa.transition=function(n){for(var t,e,r=Hl||++Zl,u=Ki(n),i=[],a=Ol||{time:Date.now(),ease:Nr,delay:0,duration:250},o=-1,l=this.length;++o<l;){i.push(t=[]);for(var c=this[o],s=-1,f=c.length;++s<f;)(e=c[s])&&Qi(e,s,u,r,a),t.push(e)}return Wi(i,u,r)},Aa.interrupt=function(n){return this.each(null==n?Il:Bi(Ki(n)))};var Hl,Ol,Il=Bi(Ki()),Yl=[],Zl=0;Yl.call=Aa.call,Yl.empty=Aa.empty,Yl.node=Aa.node,Yl.size=Aa.size,oa.transition=function(n,t){return n&&n.transition?Hl?n.transition(t):n:oa.selection().transition(n)},oa.transition.prototype=Yl,Yl.select=function(n){var t,e,r,u=this.id,i=this.namespace,a=[];n=A(n);for(var o=-1,l=this.length;++o<l;){a.push(t=[]);for(var c=this[o],s=-1,f=c.length;++s<f;)(r=c[s])&&(e=n.call(r,r.__data__,s,o))?("__data__"in r&&(e.__data__=r.__data__),Qi(e,s,i,u,r[i][u]),t.push(e)):t.push(null)}return Wi(a,i,u)},Yl.selectAll=function(n){var t,e,r,u,i,a=this.id,o=this.namespace,l=[];n=C(n);for(var c=-1,s=this.length;++c<s;)for(var f=this[c],h=-1,g=f.length;++h<g;)if(r=f[h]){i=r[o][a],e=n.call(r,r.__data__,h,c),l.push(t=[]);for(var p=-1,v=e.length;++p<v;)(u=e[p])&&Qi(u,p,o,a,i),t.push(u)}return Wi(l,o,a)},Yl.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=O(n));for(var i=0,a=this.length;a>i;i++){u.push(t=[]);for(var e=this[i],o=0,l=e.length;l>o;o++)(r=e[o])&&n.call(r,r.__data__,o,i)&&t.push(r)}return Wi(u,this.namespace,this.id)},Yl.tween=function(n,t){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(n):Y(this,null==t?function(t){t[r][e].tween.remove(n)}:function(u){u[r][e].tween.set(n,t)})},Yl.attr=function(n,t){function e(){this.removeAttribute(o)}function r(){this.removeAttributeNS(o.space,o.local)}function u(n){return null==n?e:(n+="",function(){var t,e=this.getAttribute(o);return e!==n&&(t=a(e,n),function(n){this.setAttribute(o,t(n))})})}function i(n){return null==n?r:(n+="",function(){var t,e=this.getAttributeNS(o.space,o.local);return e!==n&&(t=a(e,n),function(n){this.setAttributeNS(o.space,o.local,t(n))})})}if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var a="transform"==n?$r:Mr,o=oa.ns.qualify(n);return Ji(this,"attr."+n,t,o.local?i:u)},Yl.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(u));return r&&function(n){this.setAttribute(u,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(u.space,u.local));return r&&function(n){this.setAttributeNS(u.space,u.local,r(n))}}var u=oa.ns.qualify(n);return this.tween("attr."+n,u.local?r:e)},Yl.style=function(n,e,r){function u(){this.style.removeProperty(n)}function i(e){return null==e?u:(e+="",function(){var u,i=t(this).getComputedStyle(this,null).getPropertyValue(n);return i!==e&&(u=Mr(i,e),function(t){this.style.setProperty(n,u(t),r)})})}var a=arguments.length;if(3>a){if("string"!=typeof n){2>a&&(e="");for(r in n)this.style(r,n[r],e);return this}r=""}return Ji(this,"style."+n,e,i)},Yl.styleTween=function(n,e,r){function u(u,i){var a=e.call(this,u,i,t(this).getComputedStyle(this,null).getPropertyValue(n));return a&&function(t){this.style.setProperty(n,a(t),r)}}return arguments.length<3&&(r=""),this.tween("style."+n,u)},Yl.text=function(n){return Ji(this,"text",n,Gi)},Yl.remove=function(){var n=this.namespace;return this.each("end.transition",function(){var t;this[n].count<2&&(t=this.parentNode)&&t.removeChild(this)})},Yl.ease=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].ease:("function"!=typeof n&&(n=oa.ease.apply(oa,arguments)),Y(this,function(r){r[e][t].ease=n}))},Yl.delay=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].delay:Y(this,"function"==typeof n?function(r,u,i){r[e][t].delay=+n.call(r,r.__data__,u,i)}:(n=+n,function(r){r[e][t].delay=n}))},Yl.duration=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].duration:Y(this,"function"==typeof n?function(r,u,i){r[e][t].duration=Math.max(1,n.call(r,r.__data__,u,i))}:(n=Math.max(1,n),function(r){r[e][t].duration=n}))},Yl.each=function(n,t){var e=this.id,r=this.namespace;if(arguments.length<2){var u=Ol,i=Hl;try{Hl=e,Y(this,function(t,u,i){Ol=t[r][e],n.call(t,t.__data__,u,i)})}finally{Ol=u,Hl=i}}else Y(this,function(u){var i=u[r][e];(i.event||(i.event=oa.dispatch("start","end","interrupt"))).on(n,t)});return this},Yl.transition=function(){for(var n,t,e,r,u=this.id,i=++Zl,a=this.namespace,o=[],l=0,c=this.length;c>l;l++){o.push(n=[]);for(var t=this[l],s=0,f=t.length;f>s;s++)(e=t[s])&&(r=e[a][u],Qi(e,s,a,i,{time:r.time,ease:r.ease,delay:r.delay+r.duration,duration:r.duration})),n.push(e)}return Wi(o,a,i)},oa.svg.axis=function(){function n(n){n.each(function(){var n,c=oa.select(this),s=this.__chart__||e,f=this.__chart__=e.copy(),h=null==l?f.ticks?f.ticks.apply(f,o):f.domain():l,g=null==t?f.tickFormat?f.tickFormat.apply(f,o):y:t,p=c.selectAll(".tick").data(h,f),v=p.enter().insert("g",".domain").attr("class","tick").style("opacity",Pa),d=oa.transition(p.exit()).style("opacity",Pa).remove(),m=oa.transition(p.order()).style("opacity",1),M=Math.max(u,0)+a,x=Zu(f),b=c.selectAll(".domain").data([0]),_=(b.enter().append("path").attr("class","domain"),oa.transition(b));v.append("line"),v.append("text");var w,S,k,N,E=v.select("line"),A=m.select("line"),C=p.select("text").text(g),z=v.select("text"),L=m.select("text"),q="top"===r||"left"===r?-1:1;if("bottom"===r||"top"===r?(n=na,w="x",k="y",S="x2",N="y2",C.attr("dy",0>q?"0em":".71em").style("text-anchor","middle"),_.attr("d","M"+x[0]+","+q*i+"V0H"+x[1]+"V"+q*i)):(n=ta,w="y",k="x",S="y2",N="x2",C.attr("dy",".32em").style("text-anchor",0>q?"end":"start"),_.attr("d","M"+q*i+","+x[0]+"H0V"+x[1]+"H"+q*i)),E.attr(N,q*u),z.attr(k,q*M),A.attr(S,0).attr(N,q*u),L.attr(w,0).attr(k,q*M),f.rangeBand){var T=f,R=T.rangeBand()/2;s=f=function(n){return T(n)+R}}else s.rangeBand?s=f:d.call(n,f,s);v.call(n,s,f),m.call(n,f,f)})}var t,e=oa.scale.linear(),r=Vl,u=6,i=6,a=3,o=[10],l=null;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in Xl?t+"":Vl,n):r},n.ticks=function(){return arguments.length?(o=ca(arguments),n):o},n.tickValues=function(t){return arguments.length?(l=t,n):l},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t){var e=arguments.length;return e?(u=+t,i=+arguments[e-1],n):u},n.innerTickSize=function(t){return arguments.length?(u=+t,n):u},n.outerTickSize=function(t){return arguments.length?(i=+t,n):i},n.tickPadding=function(t){return arguments.length?(a=+t,n):a},n.tickSubdivide=function(){return arguments.length&&n},n};var Vl="bottom",Xl={top:1,right:1,bottom:1,left:1};oa.svg.brush=function(){function n(t){t.each(function(){var t=oa.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",i).on("touchstart.brush",i),a=t.selectAll(".background").data([0]);a.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),t.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var o=t.selectAll(".resize").data(v,y);o.exit().remove(),o.enter().append("g").attr("class",function(n){return"resize "+n}).style("cursor",function(n){return $l[n]}).append("rect").attr("x",function(n){return/[ew]$/.test(n)?-3:null}).attr("y",function(n){return/^[ns]/.test(n)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),o.style("display",n.empty()?"none":null);var l,f=oa.transition(t),h=oa.transition(a);c&&(l=Zu(c),h.attr("x",l[0]).attr("width",l[1]-l[0]),r(f)),s&&(l=Zu(s),h.attr("y",l[0]).attr("height",l[1]-l[0]),u(f)),e(f)})}function e(n){n.selectAll(".resize").attr("transform",function(n){return"translate("+f[+/e$/.test(n)]+","+h[+/^s/.test(n)]+")"})}function r(n){n.select(".extent").attr("x",f[0]),n.selectAll(".extent,.n>rect,.s>rect").attr("width",f[1]-f[0])}function u(n){n.select(".extent").attr("y",h[0]),n.selectAll(".extent,.e>rect,.w>rect").attr("height",h[1]-h[0])}function i(){function i(){32==oa.event.keyCode&&(C||(M=null,L[0]-=f[1],L[1]-=h[1],C=2),S())}function v(){32==oa.event.keyCode&&2==C&&(L[0]+=f[1],L[1]+=h[1],C=0,S())}function d(){var n=oa.mouse(b),t=!1;x&&(n[0]+=x[0],n[1]+=x[1]),C||(oa.event.altKey?(M||(M=[(f[0]+f[1])/2,(h[0]+h[1])/2]),L[0]=f[+(n[0]<M[0])],L[1]=h[+(n[1]<M[1])]):M=null),E&&m(n,c,0)&&(r(k),t=!0),A&&m(n,s,1)&&(u(k),t=!0),t&&(e(k),w({type:"brush",mode:C?"move":"resize"}))}function m(n,t,e){var r,u,i=Zu(t),l=i[0],c=i[1],s=L[e],v=e?h:f,d=v[1]-v[0];return C&&(l-=s,c-=d+s),r=(e?p:g)?Math.max(l,Math.min(c,n[e])):n[e],C?u=(r+=s)+d:(M&&(s=Math.max(l,Math.min(c,2*M[e]-r))),r>s?(u=r,r=s):u=s),v[0]!=r||v[1]!=u?(e?o=null:a=null,v[0]=r,v[1]=u,!0):void 0}function y(){d(),k.style("pointer-events","all").selectAll(".resize").style("display",n.empty()?"none":null),oa.select("body").style("cursor",null),q.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),z(),w({type:"brushend"})}var M,x,b=this,_=oa.select(oa.event.target),w=l.of(b,arguments),k=oa.select(b),N=_.datum(),E=!/^(n|s)$/.test(N)&&c,A=!/^(e|w)$/.test(N)&&s,C=_.classed("extent"),z=W(b),L=oa.mouse(b),q=oa.select(t(b)).on("keydown.brush",i).on("keyup.brush",v);if(oa.event.changedTouches?q.on("touchmove.brush",d).on("touchend.brush",y):q.on("mousemove.brush",d).on("mouseup.brush",y),k.interrupt().selectAll("*").interrupt(),C)L[0]=f[0]-L[0],L[1]=h[0]-L[1];else if(N){var T=+/w$/.test(N),R=+/^n/.test(N);x=[f[1-T]-L[0],h[1-R]-L[1]],L[0]=f[T],L[1]=h[R]}else oa.event.altKey&&(M=L.slice());k.style("pointer-events","none").selectAll(".resize").style("display",null),oa.select("body").style("cursor",_.style("cursor")),w({type:"brushstart"}),d()}var a,o,l=N(n,"brushstart","brush","brushend"),c=null,s=null,f=[0,0],h=[0,0],g=!0,p=!0,v=Bl[0];return n.event=function(n){n.each(function(){var n=l.of(this,arguments),t={x:f,y:h,i:a,j:o},e=this.__chart__||t;this.__chart__=t,Hl?oa.select(this).transition().each("start.brush",function(){a=e.i,o=e.j,f=e.x,h=e.y,n({type:"brushstart"})}).tween("brush:brush",function(){var e=xr(f,t.x),r=xr(h,t.y);return a=o=null,function(u){f=t.x=e(u),h=t.y=r(u),n({type:"brush",mode:"resize"})}}).each("end.brush",function(){a=t.i,o=t.j,n({type:"brush",mode:"resize"}),n({type:"brushend"})}):(n({type:"brushstart"}),n({type:"brush",mode:"resize"}),n({type:"brushend"}))})},n.x=function(t){return arguments.length?(c=t,v=Bl[!c<<1|!s],n):c},n.y=function(t){return arguments.length?(s=t,v=Bl[!c<<1|!s],n):s},n.clamp=function(t){return arguments.length?(c&&s?(g=!!t[0],p=!!t[1]):c?g=!!t:s&&(p=!!t),n):c&&s?[g,p]:c?g:s?p:null},n.extent=function(t){var e,r,u,i,l;return arguments.length?(c&&(e=t[0],r=t[1],s&&(e=e[0],r=r[0]),a=[e,r],c.invert&&(e=c(e),r=c(r)),e>r&&(l=e,e=r,r=l),(e!=f[0]||r!=f[1])&&(f=[e,r])),s&&(u=t[0],i=t[1],c&&(u=u[1],i=i[1]),o=[u,i],s.invert&&(u=s(u),i=s(i)),u>i&&(l=u,u=i,i=l),(u!=h[0]||i!=h[1])&&(h=[u,i])),n):(c&&(a?(e=a[0],r=a[1]):(e=f[0],r=f[1],c.invert&&(e=c.invert(e),r=c.invert(r)),e>r&&(l=e,e=r,r=l))),s&&(o?(u=o[0],i=o[1]):(u=h[0],i=h[1],s.invert&&(u=s.invert(u),i=s.invert(i)),u>i&&(l=u,u=i,i=l))),c&&s?[[e,u],[r,i]]:c?[e,r]:s&&[u,i])},n.clear=function(){return n.empty()||(f=[0,0],h=[0,0],a=o=null),n},n.empty=function(){return!!c&&f[0]==f[1]||!!s&&h[0]==h[1]},oa.rebind(n,l,"on")};var $l={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Bl=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Wl=go.format=xo.timeFormat,Jl=Wl.utc,Gl=Jl("%Y-%m-%dT%H:%M:%S.%LZ");Wl.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?ea:Gl,ea.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},ea.toString=Gl.toString,go.second=On(function(n){return new po(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),go.seconds=go.second.range,go.seconds.utc=go.second.utc.range,go.minute=On(function(n){return new po(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),go.minutes=go.minute.range,go.minutes.utc=go.minute.utc.range,go.hour=On(function(n){var t=n.getTimezoneOffset()/60;return new po(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),go.hours=go.hour.range,go.hours.utc=go.hour.utc.range,go.month=On(function(n){return n=go.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),go.months=go.month.range,go.months.utc=go.month.utc.range;var Kl=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Ql=[[go.second,1],[go.second,5],[go.second,15],[go.second,30],[go.minute,1],[go.minute,5],[go.minute,15],[go.minute,30],[go.hour,1],[go.hour,3],[go.hour,6],[go.hour,12],[go.day,1],[go.day,2],[go.week,1],[go.month,1],[go.month,3],[go.year,1]],nc=Wl.multi([[".%L",function(n){return n.getMilliseconds()}],[":%S",function(n){return n.getSeconds()}],["%I:%M",function(n){return n.getMinutes()}],["%I %p",function(n){return n.getHours()}],["%a %d",function(n){return n.getDay()&&1!=n.getDate()}],["%b %d",function(n){return 1!=n.getDate()}],["%B",function(n){return n.getMonth()}],["%Y",zt]]),tc={range:function(n,t,e){return oa.range(Math.ceil(n/e)*e,+t,e).map(ua)},floor:y,ceil:y};Ql.year=go.year,go.scale=function(){return ra(oa.scale.linear(),Ql,nc)};var ec=Ql.map(function(n){return[n[0].utc,n[1]]}),rc=Jl.multi([[".%L",function(n){return n.getUTCMilliseconds()}],[":%S",function(n){return n.getUTCSeconds()}],["%I:%M",function(n){return n.getUTCMinutes()}],["%I %p",function(n){return n.getUTCHours()}],["%a %d",function(n){return n.getUTCDay()&&1!=n.getUTCDate()}],["%b %d",function(n){return 1!=n.getUTCDate()}],["%B",function(n){return n.getUTCMonth()}],["%Y",zt]]);ec.year=go.year.utc,go.scale.utc=function(){return ra(oa.scale.linear(),ec,rc)},oa.text=An(function(n){return n.responseText}),oa.json=function(n,t){return Cn(n,"application/json",ia,t)},oa.html=function(n,t){return Cn(n,"text/html",aa,t)},oa.xml=An(function(n){return n.responseXML}),"function"==typeof define&&define.amd?(this.d3=oa,define(oa)):"object"==typeof module&&module.exports?module.exports=oa:this.d3=oa}();
// d3.tip
// Copyright (c) 2013 Justin Palmer
//
// Tooltips for d3.js SVG visualizations

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module with d3 as a dependency.
    define(['d3'], factory)
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS
    module.exports = function(d3) {
      d3.tip = factory(d3)
      return d3.tip
    }
  } else {
    // Browser global.
    root.d3.tip = factory(root.d3)
  }
}(this, function (d3) {

  // Public - contructs a new tooltip
  //
  // Returns a tip
  return function() {
    var direction = d3_tip_direction,
        offset    = d3_tip_offset,
        html      = d3_tip_html,
        node      = initNode(),
        svg       = null,
        point     = null,
        target    = null

    function tip(vis) {
      svg = getSVGNode(vis)
      point = svg.createSVGPoint()
      document.body.appendChild(node)
    }

    // Public - show the tooltip on the screen
    //
    // Returns a tip
    tip.show = function() {
      var args = Array.prototype.slice.call(arguments)
      if(args[args.length - 1] instanceof SVGElement) target = args.pop()

      var content = html.apply(this, args),
          poffset = offset.apply(this, args),
          dir     = direction.apply(this, args),
          nodel   = getNodeEl(),
          i       = directions.length,
          coords,
          scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,
          scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft

      nodel.html(content)
        .style({ opacity: 1, 'pointer-events': 'all' })

      while(i--) nodel.classed(directions[i], false)
      coords = direction_callbacks.get(dir).apply(this)
      nodel.classed(dir, true).style({
        top: (coords.top +  poffset[0]) + scrollTop + 'px',
        left: (coords.left + poffset[1]) + scrollLeft + 'px'
      })

      return tip
    }

    // Public - hide the tooltip
    //
    // Returns a tip
    tip.hide = function() {
      var nodel = getNodeEl()
      nodel.style({ opacity: 0, 'pointer-events': 'none' })
      return tip
    }

    // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.
    //
    // n - name of the attribute
    // v - value of the attribute
    //
    // Returns tip or attribute value
    tip.attr = function(n, v) {
      if (arguments.length < 2 && typeof n === 'string') {
        return getNodeEl().attr(n)
      } else {
        var args =  Array.prototype.slice.call(arguments)
        d3.selection.prototype.attr.apply(getNodeEl(), args)
      }

      return tip
    }

    // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.
    //
    // n - name of the property
    // v - value of the property
    //
    // Returns tip or style property value
    tip.style = function(n, v) {
      if (arguments.length < 2 && typeof n === 'string') {
        return getNodeEl().style(n)
      } else {
        var args =  Array.prototype.slice.call(arguments)
        d3.selection.prototype.style.apply(getNodeEl(), args)
      }

      return tip
    }

    // Public: Set or get the direction of the tooltip
    //
    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),
    //     sw(southwest), ne(northeast) or se(southeast)
    //
    // Returns tip or direction
    tip.direction = function(v) {
      if (!arguments.length) return direction
      direction = v == null ? v : d3.functor(v)

      return tip
    }

    // Public: Sets or gets the offset of the tip
    //
    // v - Array of [x, y] offset
    //
    // Returns offset or
    tip.offset = function(v) {
      if (!arguments.length) return offset
      offset = v == null ? v : d3.functor(v)

      return tip
    }

    // Public: sets or gets the html value of the tooltip
    //
    // v - String value of the tip
    //
    // Returns html value or tip
    tip.html = function(v) {
      if (!arguments.length) return html
      html = v == null ? v : d3.functor(v)

      return tip
    }

    // Public: destroys the tooltip and removes it from the DOM
    //
    // Returns a tip
    tip.destroy = function() {
      if(node) {
        getNodeEl().remove();
        node = null;
      }
      return tip;
    }

    function d3_tip_direction() { return 'n' }
    function d3_tip_offset() { return [0, 0] }
    function d3_tip_html() { return ' ' }

    var direction_callbacks = d3.map({
      n:  direction_n,
      s:  direction_s,
      e:  direction_e,
      w:  direction_w,
      nw: direction_nw,
      ne: direction_ne,
      sw: direction_sw,
      se: direction_se
    }),

    directions = direction_callbacks.keys()

    function direction_n() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.n.y - node.offsetHeight,
        left: bbox.n.x - node.offsetWidth / 2
      }
    }

    function direction_s() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.s.y,
        left: bbox.s.x - node.offsetWidth / 2
      }
    }

    function direction_e() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.e.y - node.offsetHeight / 2,
        left: bbox.e.x
      }
    }

    function direction_w() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.w.y - node.offsetHeight / 2,
        left: bbox.w.x - node.offsetWidth
      }
    }

    function direction_nw() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.nw.y - node.offsetHeight,
        left: bbox.nw.x - node.offsetWidth
      }
    }

    function direction_ne() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.ne.y - node.offsetHeight,
        left: bbox.ne.x
      }
    }

    function direction_sw() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.sw.y,
        left: bbox.sw.x - node.offsetWidth
      }
    }

    function direction_se() {
      var bbox = getScreenBBox()
      return {
        top:  bbox.se.y,
        left: bbox.e.x
      }
    }

    function initNode() {
      var node = d3.select(document.createElement('div'))
      node.style({
        position: 'absolute',
        top: 0,
        opacity: 0,
        'pointer-events': 'none',
        'box-sizing': 'border-box'
      })

      return node.node()
    }

    function getSVGNode(el) {
      el = el.node()
      if(el.tagName.toLowerCase() === 'svg')
        return el

      return el.ownerSVGElement
    }

    function getNodeEl() {
      if(node === null) {
        node = initNode();
        // re-add node to DOM
        document.body.appendChild(node);
      };
      return d3.select(node);
    }

    // Private - gets the screen coordinates of a shape
    //
    // Given a shape on the screen, will return an SVGPoint for the directions
    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),
    // sw(southwest).
    //
    //    +-+-+
    //    |   |
    //    +   +
    //    |   |
    //    +-+-+
    //
    // Returns an Object {n, s, e, w, nw, sw, ne, se}
    function getScreenBBox() {
      var targetel   = target || d3.event.target;

      while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {
          targetel = targetel.parentNode;
      }

      var bbox       = {},
          matrix     = targetel.getScreenCTM(),
          tbbox      = targetel.getBBox(),
          width      = tbbox.width,
          height     = tbbox.height,
          x          = tbbox.x,
          y          = tbbox.y

      point.x = x
      point.y = y
      bbox.nw = point.matrixTransform(matrix)
      point.x += width
      bbox.ne = point.matrixTransform(matrix)
      point.y += height
      bbox.se = point.matrixTransform(matrix)
      point.x -= width
      bbox.sw = point.matrixTransform(matrix)
      point.y -= height / 2
      bbox.w  = point.matrixTransform(matrix)
      point.x += width
      bbox.e = point.matrixTransform(matrix)
      point.x -= width / 2
      point.y -= height / 2
      bbox.n = point.matrixTransform(matrix)
      point.y += height
      bbox.s = point.matrixTransform(matrix)

      return bbox
    }

    return tip
  };

}));
// SVGPathSeg API polyfill
// https://github.com/progers/pathseg
//
// This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from
// SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec
// changes which were implemented in Firefox 43 and Chrome 46.

(function() { "use strict";
    if (!("SVGPathSeg" in window)) {
        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg
        window.SVGPathSeg = function(type, typeAsLetter, owningPathSegList) {
            this.pathSegType = type;
            this.pathSegTypeAsLetter = typeAsLetter;
            this._owningPathSegList = owningPathSegList;
        }

        SVGPathSeg.prototype.classname = "SVGPathSeg";

        SVGPathSeg.PATHSEG_UNKNOWN = 0;
        SVGPathSeg.PATHSEG_CLOSEPATH = 1;
        SVGPathSeg.PATHSEG_MOVETO_ABS = 2;
        SVGPathSeg.PATHSEG_MOVETO_REL = 3;
        SVGPathSeg.PATHSEG_LINETO_ABS = 4;
        SVGPathSeg.PATHSEG_LINETO_REL = 5;
        SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;
        SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;
        SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;
        SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;
        SVGPathSeg.PATHSEG_ARC_ABS = 10;
        SVGPathSeg.PATHSEG_ARC_REL = 11;
        SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;
        SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;
        SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;
        SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;
        SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;
        SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;
        SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;
        SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;

        // Notify owning PathSegList on any changes so they can be synchronized back to the path element.
        SVGPathSeg.prototype._segmentChanged = function() {
            if (this._owningPathSegList)
                this._owningPathSegList.segmentChanged(this);
        }

        window.SVGPathSegClosePath = function(owningPathSegList) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CLOSEPATH, "z", owningPathSegList);
        }
        SVGPathSegClosePath.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegClosePath.prototype.toString = function() { return "[object SVGPathSegClosePath]"; }
        SVGPathSegClosePath.prototype._asPathString = function() { return this.pathSegTypeAsLetter; }
        SVGPathSegClosePath.prototype.clone = function() { return new SVGPathSegClosePath(undefined); }

        window.SVGPathSegMovetoAbs = function(owningPathSegList, x, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_ABS, "M", owningPathSegList);
            this._x = x;
            this._y = y;
        }
        SVGPathSegMovetoAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegMovetoAbs.prototype.toString = function() { return "[object SVGPathSegMovetoAbs]"; }
        SVGPathSegMovetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x + " " + this._y; }
        SVGPathSegMovetoAbs.prototype.clone = function() { return new SVGPathSegMovetoAbs(undefined, this._x, this._y); }
        Object.defineProperty(SVGPathSegMovetoAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegMovetoAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegMovetoRel = function(owningPathSegList, x, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_REL, "m", owningPathSegList);
            this._x = x;
            this._y = y;
        }
        SVGPathSegMovetoRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegMovetoRel.prototype.toString = function() { return "[object SVGPathSegMovetoRel]"; }
        SVGPathSegMovetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x + " " + this._y; }
        SVGPathSegMovetoRel.prototype.clone = function() { return new SVGPathSegMovetoRel(undefined, this._x, this._y); }
        Object.defineProperty(SVGPathSegMovetoRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegMovetoRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegLinetoAbs = function(owningPathSegList, x, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_ABS, "L", owningPathSegList);
            this._x = x;
            this._y = y;
        }
        SVGPathSegLinetoAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegLinetoAbs.prototype.toString = function() { return "[object SVGPathSegLinetoAbs]"; }
        SVGPathSegLinetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x + " " + this._y; }
        SVGPathSegLinetoAbs.prototype.clone = function() { return new SVGPathSegLinetoAbs(undefined, this._x, this._y); }
        Object.defineProperty(SVGPathSegLinetoAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegLinetoAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegLinetoRel = function(owningPathSegList, x, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_REL, "l", owningPathSegList);
            this._x = x;
            this._y = y;
        }
        SVGPathSegLinetoRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegLinetoRel.prototype.toString = function() { return "[object SVGPathSegLinetoRel]"; }
        SVGPathSegLinetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x + " " + this._y; }
        SVGPathSegLinetoRel.prototype.clone = function() { return new SVGPathSegLinetoRel(undefined, this._x, this._y); }
        Object.defineProperty(SVGPathSegLinetoRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegLinetoRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoCubicAbs = function(owningPathSegList, x, y, x1, y1, x2, y2) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, "C", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
            this._x2 = x2;
            this._y2 = y2;
        }
        SVGPathSegCurvetoCubicAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoCubicAbs.prototype.toString = function() { return "[object SVGPathSegCurvetoCubicAbs]"; }
        SVGPathSegCurvetoCubicAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoCubicAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }
        Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, "x1", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, "y1", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, "x2", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, "y2", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoCubicRel = function(owningPathSegList, x, y, x1, y1, x2, y2) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, "c", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
            this._x2 = x2;
            this._y2 = y2;
        }
        SVGPathSegCurvetoCubicRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoCubicRel.prototype.toString = function() { return "[object SVGPathSegCurvetoCubicRel]"; }
        SVGPathSegCurvetoCubicRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoCubicRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }
        Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, "x1", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, "y1", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, "x2", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, "y2", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoQuadraticAbs = function(owningPathSegList, x, y, x1, y1) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, "Q", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
        }
        SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoQuadraticAbs.prototype.toString = function() { return "[object SVGPathSegCurvetoQuadraticAbs]"; }
        SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoQuadraticAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }
        Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, "x1", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, "y1", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoQuadraticRel = function(owningPathSegList, x, y, x1, y1) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, "q", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
        }
        SVGPathSegCurvetoQuadraticRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoQuadraticRel.prototype.toString = function() { return "[object SVGPathSegCurvetoQuadraticRel]"; }
        SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoQuadraticRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }
        Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, "x1", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, "y1", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegArcAbs = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_ABS, "A", owningPathSegList);
            this._x = x;
            this._y = y;
            this._r1 = r1;
            this._r2 = r2;
            this._angle = angle;
            this._largeArcFlag = largeArcFlag;
            this._sweepFlag = sweepFlag;
        }
        SVGPathSegArcAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegArcAbs.prototype.toString = function() { return "[object SVGPathSegArcAbs]"; }
        SVGPathSegArcAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._r1 + " " + this._r2 + " " + this._angle + " " + (this._largeArcFlag ? "1" : "0") + " " + (this._sweepFlag ? "1" : "0") + " " + this._x + " " + this._y; }
        SVGPathSegArcAbs.prototype.clone = function() { return new SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }
        Object.defineProperty(SVGPathSegArcAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcAbs.prototype, "r1", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcAbs.prototype, "r2", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcAbs.prototype, "angle", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcAbs.prototype, "largeArcFlag", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcAbs.prototype, "sweepFlag", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegArcRel = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_REL, "a", owningPathSegList);
            this._x = x;
            this._y = y;
            this._r1 = r1;
            this._r2 = r2;
            this._angle = angle;
            this._largeArcFlag = largeArcFlag;
            this._sweepFlag = sweepFlag;
        }
        SVGPathSegArcRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegArcRel.prototype.toString = function() { return "[object SVGPathSegArcRel]"; }
        SVGPathSegArcRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._r1 + " " + this._r2 + " " + this._angle + " " + (this._largeArcFlag ? "1" : "0") + " " + (this._sweepFlag ? "1" : "0") + " " + this._x + " " + this._y; }
        SVGPathSegArcRel.prototype.clone = function() { return new SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }
        Object.defineProperty(SVGPathSegArcRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcRel.prototype, "r1", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcRel.prototype, "r2", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcRel.prototype, "angle", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcRel.prototype, "largeArcFlag", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegArcRel.prototype, "sweepFlag", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegLinetoHorizontalAbs = function(owningPathSegList, x) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, "H", owningPathSegList);
            this._x = x;
        }
        SVGPathSegLinetoHorizontalAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegLinetoHorizontalAbs.prototype.toString = function() { return "[object SVGPathSegLinetoHorizontalAbs]"; }
        SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x; }
        SVGPathSegLinetoHorizontalAbs.prototype.clone = function() { return new SVGPathSegLinetoHorizontalAbs(undefined, this._x); }
        Object.defineProperty(SVGPathSegLinetoHorizontalAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegLinetoHorizontalRel = function(owningPathSegList, x) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, "h", owningPathSegList);
            this._x = x;
        }
        SVGPathSegLinetoHorizontalRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegLinetoHorizontalRel.prototype.toString = function() { return "[object SVGPathSegLinetoHorizontalRel]"; }
        SVGPathSegLinetoHorizontalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x; }
        SVGPathSegLinetoHorizontalRel.prototype.clone = function() { return new SVGPathSegLinetoHorizontalRel(undefined, this._x); }
        Object.defineProperty(SVGPathSegLinetoHorizontalRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegLinetoVerticalAbs = function(owningPathSegList, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, "V", owningPathSegList);
            this._y = y;
        }
        SVGPathSegLinetoVerticalAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegLinetoVerticalAbs.prototype.toString = function() { return "[object SVGPathSegLinetoVerticalAbs]"; }
        SVGPathSegLinetoVerticalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._y; }
        SVGPathSegLinetoVerticalAbs.prototype.clone = function() { return new SVGPathSegLinetoVerticalAbs(undefined, this._y); }
        Object.defineProperty(SVGPathSegLinetoVerticalAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegLinetoVerticalRel = function(owningPathSegList, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, "v", owningPathSegList);
            this._y = y;
        }
        SVGPathSegLinetoVerticalRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegLinetoVerticalRel.prototype.toString = function() { return "[object SVGPathSegLinetoVerticalRel]"; }
        SVGPathSegLinetoVerticalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._y; }
        SVGPathSegLinetoVerticalRel.prototype.clone = function() { return new SVGPathSegLinetoVerticalRel(undefined, this._y); }
        Object.defineProperty(SVGPathSegLinetoVerticalRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoCubicSmoothAbs = function(owningPathSegList, x, y, x2, y2) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, "S", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x2 = x2;
            this._y2 = y2;
        }
        SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function() { return "[object SVGPathSegCurvetoCubicSmoothAbs]"; }
        SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, "x2", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, "y2", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoCubicSmoothRel = function(owningPathSegList, x, y, x2, y2) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, "s", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x2 = x2;
            this._y2 = y2;
        }
        SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function() { return "[object SVGPathSegCurvetoCubicSmoothRel]"; }
        SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, "x2", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, "y2", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoQuadraticSmoothAbs = function(owningPathSegList, x, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, "T", owningPathSegList);
            this._x = x;
            this._y = y;
        }
        SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function() { return "[object SVGPathSegCurvetoQuadraticSmoothAbs]"; }
        SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }
        Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        window.SVGPathSegCurvetoQuadraticSmoothRel = function(owningPathSegList, x, y) {
            SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, "t", owningPathSegList);
            this._x = x;
            this._y = y;
        }
        SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(SVGPathSeg.prototype);
        SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function() { return "[object SVGPathSegCurvetoQuadraticSmoothRel]"; }
        SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + " " + this._x + " " + this._y; }
        SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }
        Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, "x", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });
        Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, "y", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });

        // Add createSVGPathSeg* functions to SVGPathElement.
        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathElement.
        SVGPathElement.prototype.createSVGPathSegClosePath = function() { return new SVGPathSegClosePath(undefined); }
        SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) { return new SVGPathSegMovetoAbs(undefined, x, y); }
        SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) { return new SVGPathSegMovetoRel(undefined, x, y); }
        SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) { return new SVGPathSegLinetoAbs(undefined, x, y); }
        SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) { return new SVGPathSegLinetoRel(undefined, x, y); }
        SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }
        SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }
        SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }
        SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }
        SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }
        SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }
        SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) { return new SVGPathSegLinetoHorizontalAbs(undefined, x); }
        SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) { return new SVGPathSegLinetoHorizontalRel(undefined, x); }
        SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) { return new SVGPathSegLinetoVerticalAbs(undefined, y); }
        SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) { return new SVGPathSegLinetoVerticalRel(undefined, y); }
        SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }
        SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }
        SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }
        SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }
    }

    if (!("SVGPathSegList" in window)) {
        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList
        window.SVGPathSegList = function(pathElement) {
            this._pathElement = pathElement;
            this._list = this._parsePath(this._pathElement.getAttribute("d"));

            // Use a MutationObserver to catch changes to the path's "d" attribute.
            this._mutationObserverConfig = { "attributes": true, "attributeFilter": ["d"] };
            this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));
            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);
        }

        SVGPathSegList.prototype.classname = "SVGPathSegList";

        Object.defineProperty(SVGPathSegList.prototype, "numberOfItems", {
            get: function() {
                this._checkPathSynchronizedToList();
                return this._list.length;
            },
            enumerable: true
        });

        // Add the pathSegList accessors to SVGPathElement.
        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData
        Object.defineProperty(SVGPathElement.prototype, "pathSegList", {
            get: function() {
                if (!this._pathSegList)
                    this._pathSegList = new SVGPathSegList(this);
                return this._pathSegList;
            },
            enumerable: true
        });
        // FIXME: The following are not implemented and simply return SVGPathElement.pathSegList.
        Object.defineProperty(SVGPathElement.prototype, "normalizedPathSegList", { get: function() { return this.pathSegList; }, enumerable: true });
        Object.defineProperty(SVGPathElement.prototype, "animatedPathSegList", { get: function() { return this.pathSegList; }, enumerable: true });
        Object.defineProperty(SVGPathElement.prototype, "animatedNormalizedPathSegList", { get: function() { return this.pathSegList; }, enumerable: true });

        // Process any pending mutations to the path element and update the list as needed.
        // This should be the first call of all public functions and is needed because
        // MutationObservers are not synchronous so we can have pending asynchronous mutations.
        SVGPathSegList.prototype._checkPathSynchronizedToList = function() {
            this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());
        }

        SVGPathSegList.prototype._updateListFromPathMutations = function(mutationRecords) {
            if (!this._pathElement)
                return;
            var hasPathMutations = false;
            mutationRecords.forEach(function(record) {
                if (record.attributeName == "d")
                    hasPathMutations = true;
            });
            if (hasPathMutations)
                this._list = this._parsePath(this._pathElement.getAttribute("d"));
        }

        // Serialize the list and update the path's 'd' attribute.
        SVGPathSegList.prototype._writeListToPath = function() {
            this._pathElementMutationObserver.disconnect();
            this._pathElement.setAttribute("d", SVGPathSegList._pathSegArrayAsString(this._list));
            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);
        }

        // When a path segment changes the list needs to be synchronized back to the path element.
        SVGPathSegList.prototype.segmentChanged = function(pathSeg) {
            this._writeListToPath();
        }

        SVGPathSegList.prototype.clear = function() {
            this._checkPathSynchronizedToList();

            this._list.forEach(function(pathSeg) {
                pathSeg._owningPathSegList = null;
            });
            this._list = [];
            this._writeListToPath();
        }

        SVGPathSegList.prototype.initialize = function(newItem) {
            this._checkPathSynchronizedToList();

            this._list = [newItem];
            newItem._owningPathSegList = this;
            this._writeListToPath();
            return newItem;
        }

        SVGPathSegList.prototype._checkValidIndex = function(index) {
            if (isNaN(index) || index < 0 || index >= this.numberOfItems)
                throw "INDEX_SIZE_ERR";
        }

        SVGPathSegList.prototype.getItem = function(index) {
            this._checkPathSynchronizedToList();

            this._checkValidIndex(index);
            return this._list[index];
        }

        SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {
            this._checkPathSynchronizedToList();

            // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.
            if (index > this.numberOfItems)
                index = this.numberOfItems;
            if (newItem._owningPathSegList) {
                // SVG2 spec says to make a copy.
                newItem = newItem.clone();
            }
            this._list.splice(index, 0, newItem);
            newItem._owningPathSegList = this;
            this._writeListToPath();
            return newItem;
        }

        SVGPathSegList.prototype.replaceItem = function(newItem, index) {
            this._checkPathSynchronizedToList();

            if (newItem._owningPathSegList) {
                // SVG2 spec says to make a copy.
                newItem = newItem.clone();
            }
            this._checkValidIndex(index);
            this._list[index] = newItem;
            newItem._owningPathSegList = this;
            this._writeListToPath();
            return newItem;
        }

        SVGPathSegList.prototype.removeItem = function(index) {
            this._checkPathSynchronizedToList();

            this._checkValidIndex(index);
            var item = this._list[index];
            this._list.splice(index, 1);
            this._writeListToPath();
            return item;
        }

        SVGPathSegList.prototype.appendItem = function(newItem) {
            this._checkPathSynchronizedToList();

            if (newItem._owningPathSegList) {
                // SVG2 spec says to make a copy.
                newItem = newItem.clone();
            }
            this._list.push(newItem);
            newItem._owningPathSegList = this;
            // TODO: Optimize this to just append to the existing attribute.
            this._writeListToPath();
            return newItem;
        }

        SVGPathSegList._pathSegArrayAsString = function(pathSegArray) {
            var string = "";
            var first = true;
            pathSegArray.forEach(function(pathSeg) {
                if (first) {
                    first = false;
                    string += pathSeg._asPathString();
                } else {
                    string += " " + pathSeg._asPathString();
                }
            });
            return string;
        }

        // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.
        SVGPathSegList.prototype._parsePath = function(string) {
            if (!string || string.length == 0)
                return [];

            var owningPathSegList = this;

            var Builder = function() {
                this.pathSegList = [];
            }

            Builder.prototype.appendSegment = function(pathSeg) {
                this.pathSegList.push(pathSeg);
            }

            var Source = function(string) {
                this._string = string;
                this._currentIndex = 0;
                this._endIndex = this._string.length;
                this._previousCommand = SVGPathSeg.PATHSEG_UNKNOWN;

                this._skipOptionalSpaces();
            }

            Source.prototype._isCurrentSpace = function() {
                var character = this._string[this._currentIndex];
                return character <= " " && (character == " " || character == "\n" || character == "\t" || character == "\r" || character == "\f");
            }

            Source.prototype._skipOptionalSpaces = function() {
                while (this._currentIndex < this._endIndex && this._isCurrentSpace())
                    this._currentIndex++;
                return this._currentIndex < this._endIndex;
            }

            Source.prototype._skipOptionalSpacesOrDelimiter = function() {
                if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != ",")
                    return false;
                if (this._skipOptionalSpaces()) {
                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == ",") {
                        this._currentIndex++;
                        this._skipOptionalSpaces();
                    }
                }
                return this._currentIndex < this._endIndex;
            }

            Source.prototype.hasMoreData = function() {
                return this._currentIndex < this._endIndex;
            }

            Source.prototype.peekSegmentType = function() {
                var lookahead = this._string[this._currentIndex];
                return this._pathSegTypeFromChar(lookahead);
            }

            Source.prototype._pathSegTypeFromChar = function(lookahead) {
                switch (lookahead) {
                case "Z":
                case "z":
                    return SVGPathSeg.PATHSEG_CLOSEPATH;
                case "M":
                    return SVGPathSeg.PATHSEG_MOVETO_ABS;
                case "m":
                    return SVGPathSeg.PATHSEG_MOVETO_REL;
                case "L":
                    return SVGPathSeg.PATHSEG_LINETO_ABS;
                case "l":
                    return SVGPathSeg.PATHSEG_LINETO_REL;
                case "C":
                    return SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;
                case "c":
                    return SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;
                case "Q":
                    return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;
                case "q":
                    return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;
                case "A":
                    return SVGPathSeg.PATHSEG_ARC_ABS;
                case "a":
                    return SVGPathSeg.PATHSEG_ARC_REL;
                case "H":
                    return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;
                case "h":
                    return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;
                case "V":
                    return SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;
                case "v":
                    return SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;
                case "S":
                    return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;
                case "s":
                    return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;
                case "T":
                    return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;
                case "t":
                    return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;
                default:
                    return SVGPathSeg.PATHSEG_UNKNOWN;
                }
            }

            Source.prototype._nextCommandHelper = function(lookahead, previousCommand) {
                // Check for remaining coordinates in the current command.
                if ((lookahead == "+" || lookahead == "-" || lookahead == "." || (lookahead >= "0" && lookahead <= "9")) && previousCommand != SVGPathSeg.PATHSEG_CLOSEPATH) {
                    if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_ABS)
                        return SVGPathSeg.PATHSEG_LINETO_ABS;
                    if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_REL)
                        return SVGPathSeg.PATHSEG_LINETO_REL;
                    return previousCommand;
                }
                return SVGPathSeg.PATHSEG_UNKNOWN;
            }

            Source.prototype.initialCommandIsMoveTo = function() {
                // If the path is empty it is still valid, so return true.
                if (!this.hasMoreData())
                    return true;
                var command = this.peekSegmentType();
                // Path must start with moveTo.
                return command == SVGPathSeg.PATHSEG_MOVETO_ABS || command == SVGPathSeg.PATHSEG_MOVETO_REL;
            }

            // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.
            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF
            Source.prototype._parseNumber = function() {
                var exponent = 0;
                var integer = 0;
                var frac = 1;
                var decimal = 0;
                var sign = 1;
                var expsign = 1;

                var startIndex = this._currentIndex;

                this._skipOptionalSpaces();

                // Read the sign.
                if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == "+")
                    this._currentIndex++;
                else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == "-") {
                    this._currentIndex++;
                    sign = -1;
                }

                if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < "0" || this._string.charAt(this._currentIndex) > "9") && this._string.charAt(this._currentIndex) != "."))
                    // The first character of a number must be one of [0-9+-.].
                    return undefined;

                // Read the integer part, build right-to-left.
                var startIntPartIndex = this._currentIndex;
                while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= "0" && this._string.charAt(this._currentIndex) <= "9")
                    this._currentIndex++; // Advance to first non-digit.

                if (this._currentIndex != startIntPartIndex) {
                    var scanIntPartIndex = this._currentIndex - 1;
                    var multiplier = 1;
                    while (scanIntPartIndex >= startIntPartIndex) {
                        integer += multiplier * (this._string.charAt(scanIntPartIndex--) - "0");
                        multiplier *= 10;
                    }
                }

                // Read the decimals.
                if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == ".") {
                    this._currentIndex++;

                    // There must be a least one digit following the .
                    if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < "0" || this._string.charAt(this._currentIndex) > "9")
                        return undefined;
                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= "0" && this._string.charAt(this._currentIndex) <= "9")
                        decimal += (this._string.charAt(this._currentIndex++) - "0") * (frac *= 0.1);
                }

                // Read the exponent part.
                if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == "e" || this._string.charAt(this._currentIndex) == "E") && (this._string.charAt(this._currentIndex + 1) != "x" && this._string.charAt(this._currentIndex + 1) != "m")) {
                    this._currentIndex++;

                    // Read the sign of the exponent.
                    if (this._string.charAt(this._currentIndex) == "+") {
                        this._currentIndex++;
                    } else if (this._string.charAt(this._currentIndex) == "-") {
                        this._currentIndex++;
                        expsign = -1;
                    }

                    // There must be an exponent.
                    if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < "0" || this._string.charAt(this._currentIndex) > "9")
                        return undefined;

                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= "0" && this._string.charAt(this._currentIndex) <= "9") {
                        exponent *= 10;
                        exponent += (this._string.charAt(this._currentIndex) - "0");
                        this._currentIndex++;
                    }
                }

                var number = integer + decimal;
                number *= sign;

                if (exponent)
                    number *= Math.pow(10, expsign * exponent);

                if (startIndex == this._currentIndex)
                    return undefined;

                this._skipOptionalSpacesOrDelimiter();

                return number;
            }

            Source.prototype._parseArcFlag = function() {
                if (this._currentIndex >= this._endIndex)
                    return undefined;
                var flag = false;
                var flagChar = this._string.charAt(this._currentIndex++);
                if (flagChar == "0")
                    flag = false;
                else if (flagChar == "1")
                    flag = true;
                else
                    return undefined;

                this._skipOptionalSpacesOrDelimiter();
                return flag;
            }

            Source.prototype.parseSegment = function() {
                var lookahead = this._string[this._currentIndex];
                var command = this._pathSegTypeFromChar(lookahead);
                if (command == SVGPathSeg.PATHSEG_UNKNOWN) {
                    // Possibly an implicit command. Not allowed if this is the first command.
                    if (this._previousCommand == SVGPathSeg.PATHSEG_UNKNOWN)
                        return null;
                    command = this._nextCommandHelper(lookahead, this._previousCommand);
                    if (command == SVGPathSeg.PATHSEG_UNKNOWN)
                        return null;
                } else {
                    this._currentIndex++;
                }

                this._previousCommand = command;

                switch (command) {
                case SVGPathSeg.PATHSEG_MOVETO_REL:
                    return new SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());
                case SVGPathSeg.PATHSEG_MOVETO_ABS:
                    return new SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());
                case SVGPathSeg.PATHSEG_LINETO_REL:
                    return new SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());
                case SVGPathSeg.PATHSEG_LINETO_ABS:
                    return new SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());
                case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:
                    return new SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());
                case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:
                    return new SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());
                case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:
                    return new SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());
                case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:
                    return new SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());
                case SVGPathSeg.PATHSEG_CLOSEPATH:
                    this._skipOptionalSpaces();
                    return new SVGPathSegClosePath(owningPathSegList);
                case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:
                    var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);
                case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:
                    var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);
                case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:
                    var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);
                case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:
                    var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);
                case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:
                    var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);
                case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:
                    var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);
                case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:
                    return new SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());
                case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:
                    return new SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());
                case SVGPathSeg.PATHSEG_ARC_REL:
                    var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);
                case SVGPathSeg.PATHSEG_ARC_ABS:
                    var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};
                    return new SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);
                default:
                    throw "Unknown path seg type."
                }
            }

            var builder = new Builder();
            var source = new Source(string);

            if (!source.initialCommandIsMoveTo())
                return [];
            while (source.hasMoreData()) {
                var pathSeg = source.parseSegment();
                if (!pathSeg)
                    return [];
                builder.appendSegment(pathSeg);
            }

            return builder.pathSegList;
        }
    }
}());
!function(a){"use strict";function b(a){this.owner=a}function c(a,b){if(Object.create)b.prototype=Object.create(a.prototype);else{var c=function(){};c.prototype=a.prototype,b.prototype=new c}return b.prototype.constructor=b,b}function d(a){var b=this.internal=new e(this);b.loadConfig(a),b.init(),function c(a,b,d){Object.keys(a).forEach(function(e){b[e]=a[e].bind(d),Object.keys(a[e]).length>0&&c(a[e],b[e],d)})}(h,this,this)}function e(b){var c=this;c.d3=a.d3?a.d3:"undefined"!=typeof require?require("d3"):void 0,c.api=b,c.config=c.getDefaultConfig(),c.data={},c.cache={},c.axes={}}function f(a){b.call(this,a)}function g(a,b){function c(a,b){a.attr("transform",function(a){return"translate("+Math.ceil(b(a)+u)+", 0)"})}function d(a,b){a.attr("transform",function(a){return"translate(0,"+Math.ceil(b(a))+")"})}function e(a){var b=a[0],c=a[a.length-1];return c>b?[b,c]:[c,b]}function f(a){var b,c,d=[];if(a.ticks)return a.ticks.apply(a,n);for(c=a.domain(),b=Math.ceil(c[0]);b<c[1];b++)d.push(b);return d.length>0&&d[0]>0&&d.unshift(d[0]-(d[1]-d[0])),d}function g(){var a,c=p.copy();return b.isCategory&&(a=p.domain(),c.domain([a[0],a[1]-1])),c}function h(a){var b=m?m(a):a;return"undefined"!=typeof b?b:""}function i(a){if(z)return z;var b={h:11.5,w:5.5};return a.select("text").text(h).each(function(a){var c=this.getBoundingClientRect(),d=h(a),e=c.height,f=d?c.width/d.length:void 0;e&&f&&(b.h=e,b.w=f)}).text(""),z=b,b}function j(c){return b.withoutTransition?c:a.transition(c)}function k(m){m.each(function(){function m(a,c){function d(a,b){f=void 0;for(var h=1;h<b.length;h++)if(" "===b.charAt(h)&&(f=h),e=b.substr(0,h+1),g=U.w*e.length,g>c)return d(a.concat(b.substr(0,f?f:h)),b.slice(f?f+1:h));return a.concat(b)}var e,f,g,i=h(a),j=[];return"[object Array]"===Object.prototype.toString.call(i)?i:((!c||0>=c)&&(c=X?95:b.isCategory?Math.ceil(F(G[1])-F(G[0]))-12:110),d(j,i+""))}function n(a,b){var c=U.h;return 0===b&&(c="left"===q||"right"===q?-((V[a.index]-1)*(U.h/2)-3):".71em"),c}function v(a){var b=p(a)+(o?0:u);return L[0]<b&&b<L[1]?r:0}function w(a){return a?a>0?"start":"end":"middle"}function x(a){return a?"rotate("+a+")":""}function y(a){return a?8*Math.sin(Math.PI*(a/180)):0}function z(a){return a?11.5-2.5*(a/15)*(a>0?1:-1):W}var A,B,C,D=k.g=a.select(this),E=this.__chart__||p,F=this.__chart__=g(),G=t?t:f(F),H=D.selectAll(".tick").data(G,F),I=H.enter().insert("g",".domain").attr("class","tick").style("opacity",1e-6),J=H.exit().remove(),K=j(H).style("opacity",1),L=p.rangeExtent?p.rangeExtent():e(p.range()),M=D.selectAll(".domain").data([0]),N=(M.enter().append("path").attr("class","domain"),j(M));I.append("line"),I.append("text");var O=I.select("line"),P=K.select("line"),Q=I.select("text"),R=K.select("text");b.isCategory?(u=Math.ceil((F(1)-F(0))/2),B=o?0:u,C=o?u:0):u=B=0;var S,T,U=i(D.select(".tick")),V=[],W=Math.max(r,0)+s,X="left"===q||"right"===q;S=H.select("text"),T=S.selectAll("tspan").data(function(a,c){var d=b.tickMultiline?m(a,b.tickWidth):[].concat(h(a));return V[c]=d.length,d.map(function(a){return{index:c,splitted:a}})}),T.enter().append("tspan"),T.exit().remove(),T.text(function(a){return a.splitted});var Y=b.tickTextRotate;switch(q){case"bottom":A=c,O.attr("y2",r),Q.attr("y",W),P.attr("x1",B).attr("x2",B).attr("y2",v),R.attr("x",0).attr("y",z(Y)).style("text-anchor",w(Y)).attr("transform",x(Y)),T.attr("x",0).attr("dy",n).attr("dx",y(Y)),N.attr("d","M"+L[0]+","+l+"V0H"+L[1]+"V"+l);break;case"top":A=c,O.attr("y2",-r),Q.attr("y",-W),P.attr("x2",0).attr("y2",-r),R.attr("x",0).attr("y",-W),S.style("text-anchor","middle"),T.attr("x",0).attr("dy","0em"),N.attr("d","M"+L[0]+","+-l+"V0H"+L[1]+"V"+-l);break;case"left":A=d,O.attr("x2",-r),Q.attr("x",-W),P.attr("x2",-r).attr("y1",C).attr("y2",C),R.attr("x",-W).attr("y",u),S.style("text-anchor","end"),T.attr("x",-W).attr("dy",n),N.attr("d","M"+-l+","+L[0]+"H0V"+L[1]+"H"+-l);break;case"right":A=d,O.attr("x2",r),Q.attr("x",W),P.attr("x2",r).attr("y2",0),R.attr("x",W).attr("y",0),S.style("text-anchor","start"),T.attr("x",W).attr("dy",n),N.attr("d","M"+l+","+L[0]+"H0V"+L[1]+"H"+l)}if(F.rangeBand){var Z=F,$=Z.rangeBand()/2;E=F=function(a){return Z(a)+$}}else E.rangeBand?E=F:J.call(A,F);I.call(A,E),K.call(A,F)})}var l,m,n,o,p=a.scale.linear(),q="bottom",r=6,s=3,t=null,u=0,v=!0;return b=b||{},l=b.withOuterTick?6:0,k.scale=function(a){return arguments.length?(p=a,k):p},k.orient=function(a){return arguments.length?(q=a in{top:1,right:1,bottom:1,left:1}?a+"":"bottom",k):q},k.tickFormat=function(a){return arguments.length?(m=a,k):m},k.tickCentered=function(a){return arguments.length?(o=a,k):o},k.tickOffset=function(){return u},k.tickInterval=function(){var a,c;return b.isCategory?a=2*u:(c=k.g.select("path.domain").node().getTotalLength()-2*l,a=c/k.g.selectAll("line").size()),1/0===a?0:a},k.ticks=function(){return arguments.length?(n=arguments,k):n},k.tickCulling=function(a){return arguments.length?(v=a,k):v},k.tickValues=function(a){if("function"==typeof a)t=function(){return a(p.domain())};else{if(!arguments.length)return t;t=a}return k},k}var h,i,j,k={version:"0.4.10"};k.generate=function(a){return new d(a)},k.chart={fn:d.prototype,internal:{fn:e.prototype,axis:{fn:f.prototype}}},h=k.chart.fn,i=k.chart.internal.fn,j=k.chart.internal.axis.fn,i.init=function(){var a=this,b=a.config;if(a.initParams(),b.data_url)a.convertUrlToData(b.data_url,b.data_mimeType,b.data_keys,a.initWithData);else if(b.data_json)a.initWithData(a.convertJsonToData(b.data_json,b.data_keys));else if(b.data_rows)a.initWithData(a.convertRowsToData(b.data_rows));else{if(!b.data_columns)throw Error("url or json or rows or columns is required.");a.initWithData(a.convertColumnsToData(b.data_columns))}},i.initParams=function(){var a=this,b=a.d3,c=a.config;a.clipId="c3-"+ +new Date+"-clip",a.clipIdForXAxis=a.clipId+"-xaxis",a.clipIdForYAxis=a.clipId+"-yaxis",a.clipIdForGrid=a.clipId+"-grid",a.clipIdForSubchart=a.clipId+"-subchart",a.clipPath=a.getClipPath(a.clipId),a.clipPathForXAxis=a.getClipPath(a.clipIdForXAxis),a.clipPathForYAxis=a.getClipPath(a.clipIdForYAxis),a.clipPathForGrid=a.getClipPath(a.clipIdForGrid),a.clipPathForSubchart=a.getClipPath(a.clipIdForSubchart),a.dragStart=null,a.dragging=!1,a.flowing=!1,a.cancelClick=!1,a.mouseover=!1,a.transiting=!1,a.color=a.generateColor(),a.levelColor=a.generateLevelColor(),a.dataTimeFormat=c.data_xLocaltime?b.time.format:b.time.format.utc,a.axisTimeFormat=c.axis_x_localtime?b.time.format:b.time.format.utc,a.defaultAxisTimeFormat=a.axisTimeFormat.multi([[".%L",function(a){return a.getMilliseconds()}],[":%S",function(a){return a.getSeconds()}],["%I:%M",function(a){return a.getMinutes()}],["%I %p",function(a){return a.getHours()}],["%-m/%-d",function(a){return a.getDay()&&1!==a.getDate()}],["%-m/%-d",function(a){return 1!==a.getDate()}],["%-m/%-d",function(a){return a.getMonth()}],["%Y/%-m/%-d",function(){return!0}]]),a.hiddenTargetIds=[],a.hiddenLegendIds=[],a.focusedTargetIds=[],a.defocusedTargetIds=[],a.xOrient=c.axis_rotated?"left":"bottom",a.yOrient=c.axis_rotated?c.axis_y_inner?"top":"bottom":c.axis_y_inner?"right":"left",a.y2Orient=c.axis_rotated?c.axis_y2_inner?"bottom":"top":c.axis_y2_inner?"left":"right",a.subXOrient=c.axis_rotated?"left":"bottom",a.isLegendRight="right"===c.legend_position,a.isLegendInset="inset"===c.legend_position,a.isLegendTop="top-left"===c.legend_inset_anchor||"top-right"===c.legend_inset_anchor,a.isLegendLeft="top-left"===c.legend_inset_anchor||"bottom-left"===c.legend_inset_anchor,a.legendStep=0,a.legendItemWidth=0,a.legendItemHeight=0,a.currentMaxTickWidths={x:0,y:0,y2:0},a.rotated_padding_left=30,a.rotated_padding_right=c.axis_rotated&&!c.axis_x_show?0:30,a.rotated_padding_top=5,a.withoutFadeIn={},a.intervalForObserveInserted=void 0,a.axes.subx=b.selectAll([])},i.initChartElements=function(){this.initBar&&this.initBar(),this.initLine&&this.initLine(),this.initArc&&this.initArc(),this.initGauge&&this.initGauge(),this.initText&&this.initText()},i.initWithData=function(b){var c,d,e=this,g=e.d3,h=e.config,i=!0;e.axis=new f(e),e.initPie&&e.initPie(),e.initBrush&&e.initBrush(),e.initZoom&&e.initZoom(),e.selectChart=h.bindto?"function"==typeof h.bindto.node?h.bindto:g.select(h.bindto):g.selectAll([]),e.selectChart.empty()&&(e.selectChart=g.select(document.createElement("div")).style("opacity",0),e.observeInserted(e.selectChart),i=!1),e.selectChart.html("").classed("c3",!0),e.data.xs={},e.data.targets=e.convertDataToTargets(b),h.data_filter&&(e.data.targets=e.data.targets.filter(h.data_filter)),h.data_hide&&e.addHiddenTargetIds(h.data_hide===!0?e.mapToIds(e.data.targets):h.data_hide),h.legend_hide&&e.addHiddenLegendIds(h.legend_hide===!0?e.mapToIds(e.data.targets):h.legend_hide),e.hasType("gauge")&&(h.legend_show=!1),e.updateSizes(),e.updateScales(),e.x.domain(g.extent(e.getXDomain(e.data.targets))),e.y.domain(e.getYDomain(e.data.targets,"y")),e.y2.domain(e.getYDomain(e.data.targets,"y2")),e.subX.domain(e.x.domain()),e.subY.domain(e.y.domain()),e.subY2.domain(e.y2.domain()),e.orgXDomain=e.x.domain(),e.brush&&e.brush.scale(e.subX),h.zoom_enabled&&e.zoom.scale(e.x),e.svg=e.selectChart.append("svg").style("overflow","hidden").on("mouseenter",function(){return h.onmouseover.call(e)}).on("mouseleave",function(){return h.onmouseout.call(e)}),c=e.svg.append("defs"),e.clipChart=e.appendClip(c,e.clipId),e.clipXAxis=e.appendClip(c,e.clipIdForXAxis),e.clipYAxis=e.appendClip(c,e.clipIdForYAxis),e.clipGrid=e.appendClip(c,e.clipIdForGrid),e.clipSubchart=e.appendClip(c,e.clipIdForSubchart),e.updateSvgSize(),d=e.main=e.svg.append("g").attr("transform",e.getTranslate("main")),e.initSubchart&&e.initSubchart(),e.initTooltip&&e.initTooltip(),e.initLegend&&e.initLegend(),d.append("text").attr("class",l.text+" "+l.empty).attr("text-anchor","middle").attr("dominant-baseline","middle"),e.initRegion(),e.initGrid(),d.append("g").attr("clip-path",e.clipPath).attr("class",l.chart),h.grid_lines_front&&e.initGridLines(),e.initEventRect(),e.initChartElements(),d.insert("rect",h.zoom_privileged?null:"g."+l.regions).attr("class",l.zoomRect).attr("width",e.width).attr("height",e.height).style("opacity",0).on("dblclick.zoom",null),h.axis_x_extent&&e.brush.extent(e.getDefaultExtent()),e.axis.init(),e.updateTargets(e.data.targets),i&&(e.updateDimension(),e.config.oninit.call(e),e.redraw({withTransition:!1,withTransform:!0,withUpdateXDomain:!0,withUpdateOrgXDomain:!0,withTransitionForAxis:!1})),null==a.onresize&&(a.onresize=e.generateResize()),a.onresize.add&&(a.onresize.add(function(){h.onresize.call(e)}),a.onresize.add(function(){e.api.flush()}),a.onresize.add(function(){h.onresized.call(e)})),e.api.element=e.selectChart.node()},i.smoothLines=function(a,b){var c=this;"grid"===b&&a.each(function(){var a=c.d3.select(this),b=a.attr("x1"),d=a.attr("x2"),e=a.attr("y1"),f=a.attr("y2");a.attr({x1:Math.ceil(b),x2:Math.ceil(d),y1:Math.ceil(e),y2:Math.ceil(f)})})},i.updateSizes=function(){var a=this,b=a.config,c=a.legend?a.getLegendHeight():0,d=a.legend?a.getLegendWidth():0,e=a.isLegendRight||a.isLegendInset?0:c,f=a.hasArcType(),g=b.axis_rotated||f?0:a.getHorizontalAxisHeight("x"),h=b.subchart_show&&!f?b.subchart_size_height+g:0;a.currentWidth=a.getCurrentWidth(),a.currentHeight=a.getCurrentHeight(),a.margin=b.axis_rotated?{top:a.getHorizontalAxisHeight("y2")+a.getCurrentPaddingTop(),right:f?0:a.getCurrentPaddingRight(),bottom:a.getHorizontalAxisHeight("y")+e+a.getCurrentPaddingBottom(),left:h+(f?0:a.getCurrentPaddingLeft())}:{top:4+a.getCurrentPaddingTop(),right:f?0:a.getCurrentPaddingRight(),bottom:g+h+e+a.getCurrentPaddingBottom(),left:f?0:a.getCurrentPaddingLeft()},a.margin2=b.axis_rotated?{top:a.margin.top,right:0/0,bottom:20+e,left:a.rotated_padding_left}:{top:a.currentHeight-h-e,right:0/0,bottom:g+e,left:a.margin.left},a.margin3={top:0,right:0/0,bottom:0,left:0},a.updateSizeForLegend&&a.updateSizeForLegend(c,d),a.width=a.currentWidth-a.margin.left-a.margin.right,a.height=a.currentHeight-a.margin.top-a.margin.bottom,a.width<0&&(a.width=0),a.height<0&&(a.height=0),a.width2=b.axis_rotated?a.margin.left-a.rotated_padding_left-a.rotated_padding_right:a.width,a.height2=b.axis_rotated?a.height:a.currentHeight-a.margin2.top-a.margin2.bottom,a.width2<0&&(a.width2=0),a.height2<0&&(a.height2=0),a.arcWidth=a.width-(a.isLegendRight?d+10:0),a.arcHeight=a.height-(a.isLegendRight?0:10),a.hasType("gauge")&&(a.arcHeight+=a.height-a.getGaugeLabelHeight()),a.updateRadius&&a.updateRadius(),a.isLegendRight&&f&&(a.margin3.left=a.arcWidth/2+1.1*a.radiusExpanded)},i.updateTargets=function(a){var b=this;b.updateTargetsForText(a),b.updateTargetsForBar(a),b.updateTargetsForLine(a),b.hasArcType()&&b.updateTargetsForArc&&b.updateTargetsForArc(a),b.updateTargetsForSubchart&&b.updateTargetsForSubchart(a),b.showTargets()},i.showTargets=function(){var a=this;a.svg.selectAll("."+l.target).filter(function(b){return a.isTargetToShow(b.id)}).transition().duration(a.config.transition_duration).style("opacity",1)},i.redraw=function(a,b){var c,d,e,f,g,h,i,j,k,m,n,o,p,q,r,s,t,u,v,x,y,z,A,B,C,D,E,F,G,H=this,I=H.main,J=H.d3,K=H.config,L=H.getShapeIndices(H.isAreaType),M=H.getShapeIndices(H.isBarType),N=H.getShapeIndices(H.isLineType),O=H.hasArcType(),P=H.filterTargetsToShow(H.data.targets),Q=H.xv.bind(H);if(a=a||{},c=w(a,"withY",!0),d=w(a,"withSubchart",!0),e=w(a,"withTransition",!0),h=w(a,"withTransform",!1),i=w(a,"withUpdateXDomain",!1),j=w(a,"withUpdateOrgXDomain",!1),k=w(a,"withTrimXDomain",!0),p=w(a,"withUpdateXAxis",i),m=w(a,"withLegend",!1),n=w(a,"withEventRect",!0),o=w(a,"withDimension",!0),f=w(a,"withTransitionForExit",e),g=w(a,"withTransitionForAxis",e),v=e?K.transition_duration:0,x=f?v:0,y=g?v:0,b=b||H.axis.generateTransitions(y),m&&K.legend_show?H.updateLegend(H.mapToIds(H.data.targets),a,b):o&&H.updateDimension(!0),H.isCategorized()&&0===P.length&&H.x.domain([0,H.axes.x.selectAll(".tick").size()]),P.length?(H.updateXDomain(P,i,j,k),K.axis_x_tick_values||(B=H.axis.updateXAxisTickValues(P))):(H.xAxis.tickValues([]),H.subXAxis.tickValues([])),K.zoom_rescale&&!a.flow&&(E=H.x.orgDomain()),H.y.domain(H.getYDomain(P,"y",E)),H.y2.domain(H.getYDomain(P,"y2",E)),!K.axis_y_tick_values&&K.axis_y_tick_count&&H.yAxis.tickValues(H.axis.generateTickValues(H.y.domain(),K.axis_y_tick_count)),!K.axis_y2_tick_values&&K.axis_y2_tick_count&&H.y2Axis.tickValues(H.axis.generateTickValues(H.y2.domain(),K.axis_y2_tick_count)),H.axis.redraw(b,O),H.axis.updateLabels(e),(i||p)&&P.length)if(K.axis_x_tick_culling&&B){for(C=1;C<B.length;C++)if(B.length/C<K.axis_x_tick_culling_max){D=C;break}H.svg.selectAll("."+l.axisX+" .tick text").each(function(a){var b=B.indexOf(a);b>=0&&J.select(this).style("display",b%D?"none":"block")})}else H.svg.selectAll("."+l.axisX+" .tick text").style("display","block");q=H.generateDrawArea?H.generateDrawArea(L,!1):void 0,r=H.generateDrawBar?H.generateDrawBar(M):void 0,s=H.generateDrawLine?H.generateDrawLine(N,!1):void 0,t=H.generateXYForText(L,M,N,!0),u=H.generateXYForText(L,M,N,!1),c&&(H.subY.domain(H.getYDomain(P,"y")),H.subY2.domain(H.getYDomain(P,"y2"))),H.tooltip.style("display","none"),H.updateXgridFocus(),I.select("text."+l.text+"."+l.empty).attr("x",H.width/2).attr("y",H.height/2).text(K.data_empty_label_text).transition().style("opacity",P.length?0:1),H.updateGrid(v),H.updateRegion(v),H.updateBar(x),H.updateLine(x),H.updateArea(x),H.updateCircle(),H.hasDataLabel()&&H.updateText(x),H.redrawArc&&H.redrawArc(v,x,h),H.redrawSubchart&&H.redrawSubchart(d,b,v,x,L,M,N),I.selectAll("."+l.selectedCircles).filter(H.isBarType.bind(H)).selectAll("circle").remove(),K.interaction_enabled&&!a.flow&&n&&(H.redrawEventRect(),H.updateZoom&&H.updateZoom()),H.updateCircleY(),F=(H.config.axis_rotated?H.circleY:H.circleX).bind(H),G=(H.config.axis_rotated?H.circleX:H.circleY).bind(H),a.flow&&(A=H.generateFlow({targets:P,flow:a.flow,duration:a.flow.duration,drawBar:r,drawLine:s,drawArea:q,cx:F,cy:G,xv:Q,xForText:t,yForText:u})),(v||A)&&H.isTabVisible()?J.transition().duration(v).each(function(){var b=[];[H.redrawBar(r,!0),H.redrawLine(s,!0),H.redrawArea(q,!0),H.redrawCircle(F,G,!0),H.redrawText(t,u,a.flow,!0),H.redrawRegion(!0),H.redrawGrid(!0)].forEach(function(a){a.forEach(function(a){b.push(a)})}),z=H.generateWait(),b.forEach(function(a){z.add(a)})}).call(z,function(){A&&A(),K.onrendered&&K.onrendered.call(H)}):(H.redrawBar(r),H.redrawLine(s),H.redrawArea(q),H.redrawCircle(F,G),H.redrawText(t,u,a.flow),H.redrawRegion(),H.redrawGrid(),K.onrendered&&K.onrendered.call(H)),H.mapToIds(H.data.targets).forEach(function(a){H.withoutFadeIn[a]=!0})},i.updateAndRedraw=function(a){var b,c=this,d=c.config;a=a||{},a.withTransition=w(a,"withTransition",!0),a.withTransform=w(a,"withTransform",!1),a.withLegend=w(a,"withLegend",!1),a.withUpdateXDomain=!0,a.withUpdateOrgXDomain=!0,a.withTransitionForExit=!1,a.withTransitionForTransform=w(a,"withTransitionForTransform",a.withTransition),c.updateSizes(),a.withLegend&&d.legend_show||(b=c.axis.generateTransitions(a.withTransitionForAxis?d.transition_duration:0),c.updateScales(),c.updateSvgSize(),c.transformAll(a.withTransitionForTransform,b)),c.redraw(a,b)},i.redrawWithoutRescale=function(){this.redraw({withY:!1,withSubchart:!1,withEventRect:!1,withTransitionForAxis:!1})},i.isTimeSeries=function(){return"timeseries"===this.config.axis_x_type},i.isCategorized=function(){return this.config.axis_x_type.indexOf("categor")>=0},i.isCustomX=function(){var a=this,b=a.config;return!a.isTimeSeries()&&(b.data_x||v(b.data_xs))},i.isTimeSeriesY=function(){return"timeseries"===this.config.axis_y_type},i.getTranslate=function(a){var b,c,d=this,e=d.config;return"main"===a?(b=s(d.margin.left),c=s(d.margin.top)):"context"===a?(b=s(d.margin2.left),c=s(d.margin2.top)):"legend"===a?(b=d.margin3.left,c=d.margin3.top):"x"===a?(b=0,c=e.axis_rotated?0:d.height):"y"===a?(b=0,c=e.axis_rotated?d.height:0):"y2"===a?(b=e.axis_rotated?0:d.width,c=e.axis_rotated?1:0):"subx"===a?(b=0,c=e.axis_rotated?0:d.height2):"arc"===a&&(b=d.arcWidth/2,c=d.arcHeight/2),"translate("+b+","+c+")"},i.initialOpacity=function(a){return null!==a.value&&this.withoutFadeIn[a.id]?1:0},i.initialOpacityForCircle=function(a){return null!==a.value&&this.withoutFadeIn[a.id]?this.opacityForCircle(a):0},i.opacityForCircle=function(a){var b=this.config.point_show?1:0;return m(a.value)?this.isScatterType(a)?.5:b:0},i.opacityForText=function(){return this.hasDataLabel()?1:0},i.xx=function(a){return a?this.x(a.x):null},i.xv=function(a){var b=this,c=a.value;return b.isTimeSeries()?c=b.parseDate(a.value):b.isCategorized()&&"string"==typeof a.value&&(c=b.config.axis_x_categories.indexOf(a.value)),Math.ceil(b.x(c))},i.yv=function(a){var b=this,c=a.axis&&"y2"===a.axis?b.y2:b.y;return Math.ceil(c(a.value))},i.subxx=function(a){return a?this.subX(a.x):null},i.transformMain=function(a,b){var c,d,e,f=this;b&&b.axisX?c=b.axisX:(c=f.main.select("."+l.axisX),a&&(c=c.transition())),b&&b.axisY?d=b.axisY:(d=f.main.select("."+l.axisY),a&&(d=d.transition())),b&&b.axisY2?e=b.axisY2:(e=f.main.select("."+l.axisY2),a&&(e=e.transition())),(a?f.main.transition():f.main).attr("transform",f.getTranslate("main")),c.attr("transform",f.getTranslate("x")),d.attr("transform",f.getTranslate("y")),e.attr("transform",f.getTranslate("y2")),f.main.select("."+l.chartArcs).attr("transform",f.getTranslate("arc"))},i.transformAll=function(a,b){var c=this;c.transformMain(a,b),c.config.subchart_show&&c.transformContext(a,b),c.legend&&c.transformLegend(a)},i.updateSvgSize=function(){var a=this,b=a.svg.select(".c3-brush .background");a.svg.attr("width",a.currentWidth).attr("height",a.currentHeight),a.svg.selectAll(["#"+a.clipId,"#"+a.clipIdForGrid]).select("rect").attr("width",a.width).attr("height",a.height),a.svg.select("#"+a.clipIdForXAxis).select("rect").attr("x",a.getXAxisClipX.bind(a)).attr("y",a.getXAxisClipY.bind(a)).attr("width",a.getXAxisClipWidth.bind(a)).attr("height",a.getXAxisClipHeight.bind(a)),a.svg.select("#"+a.clipIdForYAxis).select("rect").attr("x",a.getYAxisClipX.bind(a)).attr("y",a.getYAxisClipY.bind(a)).attr("width",a.getYAxisClipWidth.bind(a)).attr("height",a.getYAxisClipHeight.bind(a)),a.svg.select("#"+a.clipIdForSubchart).select("rect").attr("width",a.width).attr("height",b.size()?b.attr("height"):0),a.svg.select("."+l.zoomRect).attr("width",a.width).attr("height",a.height),a.selectChart.style("max-height",a.currentHeight+"px")},i.updateDimension=function(a){var b=this;a||(b.config.axis_rotated?(b.axes.x.call(b.xAxis),b.axes.subx.call(b.subXAxis)):(b.axes.y.call(b.yAxis),b.axes.y2.call(b.y2Axis))),b.updateSizes(),b.updateScales(),b.updateSvgSize(),b.transformAll(!1)},i.observeInserted=function(b){var c,d=this;return"undefined"==typeof MutationObserver?void a.console.error("MutationObserver not defined."):(c=new MutationObserver(function(e){e.forEach(function(e){"childList"===e.type&&e.previousSibling&&(c.disconnect(),d.intervalForObserveInserted=a.setInterval(function(){b.node().parentNode&&(a.clearInterval(d.intervalForObserveInserted),d.updateDimension(),d.config.oninit.call(d),d.redraw({withTransform:!0,withUpdateXDomain:!0,withUpdateOrgXDomain:!0,withTransition:!1,withTransitionForTransform:!1,withLegend:!0}),b.transition().style("opacity",1))},10))})}),void c.observe(b.node(),{attributes:!0,childList:!0,characterData:!0}))},i.generateResize=function(){function a(){b.forEach(function(a){a()})}var b=[];return a.add=function(a){b.push(a)},a},i.endall=function(a,b){var c=0;a.each(function(){++c}).each("end",function(){--c||b.apply(this,arguments)})},i.generateWait=function(){var a=[],b=function(b,c){var d=setInterval(function(){var b=0;a.forEach(function(a){if(a.empty())return void(b+=1);try{a.transition()}catch(c){b+=1}}),b===a.length&&(clearInterval(d),c&&c())},10)};return b.add=function(b){a.push(b)},b},i.parseDate=function(b){var c,d=this;return b instanceof Date?c=b:"string"==typeof b?c=d.dataTimeFormat(d.config.data_xFormat).parse(b):"number"!=typeof b&&isNaN(b)||(c=new Date(+b)),(!c||isNaN(+c))&&a.console.error("Failed to parse x '"+b+"' to Date object"),c},i.isTabVisible=function(){var a;return"undefined"!=typeof document.hidden?a="hidden":"undefined"!=typeof document.mozHidden?a="mozHidden":"undefined"!=typeof document.msHidden?a="msHidden":"undefined"!=typeof document.webkitHidden&&(a="webkitHidden"),document[a]?!1:!0},i.getDefaultConfig=function(){var a={bindto:"#chart",size_width:void 0,size_height:void 0,padding_left:void 0,padding_right:void 0,padding_top:void 0,padding_bottom:void 0,zoom_enabled:!1,zoom_extent:void 0,zoom_privileged:!1,zoom_rescale:!1,zoom_onzoom:function(){},zoom_onzoomstart:function(){},zoom_onzoomend:function(){},interaction_enabled:!0,onmouseover:function(){},onmouseout:function(){},onresize:function(){},onresized:function(){},oninit:function(){},onrendered:function(){},transition_duration:350,data_x:void 0,data_xs:{},data_xFormat:"%Y-%m-%d",data_xLocaltime:!0,data_xSort:!0,data_idConverter:function(a){return a},data_names:{},data_classes:{},data_groups:[],data_axes:{},data_type:void 0,data_types:{},data_labels:{},data_order:"desc",data_regions:{},data_color:void 0,data_colors:{},data_hide:!1,data_filter:void 0,data_selection_enabled:!1,data_selection_grouped:!1,data_selection_isselectable:function(){return!0},data_selection_multiple:!0,data_selection_draggable:!1,data_onclick:function(){},data_onmouseover:function(){},data_onmouseout:function(){},data_onselected:function(){},data_onunselected:function(){},data_url:void 0,data_json:void 0,data_rows:void 0,data_columns:void 0,data_mimeType:void 0,data_keys:void 0,data_empty_label_text:"",subchart_show:!1,subchart_size_height:60,subchart_onbrush:function(){},color_pattern:[],color_threshold:{},legend_show:!0,legend_hide:!1,legend_position:"bottom",legend_inset_anchor:"top-left",legend_inset_x:10,legend_inset_y:0,legend_inset_step:void 0,legend_item_onclick:void 0,legend_item_onmouseover:void 0,legend_item_onmouseout:void 0,legend_equally:!1,axis_rotated:!1,axis_x_show:!0,axis_x_type:"indexed",axis_x_localtime:!0,axis_x_categories:[],axis_x_tick_centered:!1,axis_x_tick_format:void 0,axis_x_tick_culling:{},axis_x_tick_culling_max:10,axis_x_tick_count:void 0,axis_x_tick_fit:!0,axis_x_tick_values:null,axis_x_tick_rotate:0,axis_x_tick_outer:!0,axis_x_tick_multiline:!0,axis_x_tick_width:null,axis_x_max:void 0,axis_x_min:void 0,axis_x_padding:{},axis_x_height:void 0,axis_x_extent:void 0,axis_x_label:{},axis_y_show:!0,axis_y_type:void 0,axis_y_max:void 0,axis_y_min:void 0,axis_y_inverted:!1,axis_y_center:void 0,axis_y_inner:void 0,axis_y_label:{},axis_y_tick_format:void 0,axis_y_tick_outer:!0,axis_y_tick_values:null,axis_y_tick_count:void 0,axis_y_tick_time_value:void 0,axis_y_tick_time_interval:void 0,axis_y_padding:{},axis_y_default:void 0,axis_y2_show:!1,axis_y2_max:void 0,axis_y2_min:void 0,axis_y2_inverted:!1,axis_y2_center:void 0,axis_y2_inner:void 0,axis_y2_label:{},axis_y2_tick_format:void 0,axis_y2_tick_outer:!0,axis_y2_tick_values:null,axis_y2_tick_count:void 0,axis_y2_padding:{},axis_y2_default:void 0,grid_x_show:!1,grid_x_type:"tick",grid_x_lines:[],grid_y_show:!1,grid_y_lines:[],grid_y_ticks:10,grid_focus_show:!0,grid_lines_front:!0,point_show:!0,point_r:2.5,point_focus_expand_enabled:!0,point_focus_expand_r:void 0,point_select_r:void 0,line_connectNull:!1,line_step_type:"step",bar_width:void 0,bar_width_ratio:.6,bar_width_max:void 0,bar_zerobased:!0,area_zerobased:!0,pie_label_show:!0,pie_label_format:void 0,pie_label_threshold:.05,pie_expand:!0,gauge_label_show:!0,gauge_label_format:void 0,gauge_expand:!0,gauge_min:0,gauge_max:100,gauge_units:void 0,gauge_width:void 0,donut_label_show:!0,donut_label_format:void 0,donut_label_threshold:.05,donut_width:void 0,donut_expand:!0,donut_title:"",regions:[],tooltip_show:!0,tooltip_grouped:!0,tooltip_format_title:void 0,tooltip_format_name:void 0,tooltip_format_value:void 0,tooltip_position:void 0,tooltip_contents:function(a,b,c,d){return this.getTooltipContent?this.getTooltipContent(a,b,c,d):""},tooltip_init_show:!1,tooltip_init_x:0,tooltip_init_position:{top:"0px",left:"50px"}};return Object.keys(this.additionalConfig).forEach(function(b){a[b]=this.additionalConfig[b]},this),a},i.additionalConfig={},i.loadConfig=function(a){function b(){var a=d.shift();return a&&c&&"object"==typeof c&&a in c?(c=c[a],b()):a?void 0:c}var c,d,e,f=this.config;Object.keys(f).forEach(function(g){c=a,d=g.split("_"),e=b(),q(e)&&(f[g]=e)})},i.getScale=function(a,b,c){return(c?this.d3.time.scale():this.d3.scale.linear()).range([a,b])},i.getX=function(a,b,c,d){var e,f=this,g=f.getScale(a,b,f.isTimeSeries()),h=c?g.domain(c):g;f.isCategorized()?(d=d||function(){return 0},g=function(a,b){var c=h(a)+d(a);return b?c:Math.ceil(c)}):g=function(a,b){var c=h(a);return b?c:Math.ceil(c)};for(e in h)g[e]=h[e];return g.orgDomain=function(){return h.domain()},f.isCategorized()&&(g.domain=function(a){return arguments.length?(h.domain(a),g):(a=this.orgDomain(),[a[0],a[1]+1])}),g},i.getY=function(a,b,c){var d=this.getScale(a,b,this.isTimeSeriesY());return c&&d.domain(c),d},i.getYScale=function(a){return"y2"===this.axis.getId(a)?this.y2:this.y},i.getSubYScale=function(a){return"y2"===this.axis.getId(a)?this.subY2:this.subY},i.updateScales=function(){var a=this,b=a.config,c=!a.x;a.xMin=b.axis_rotated?1:0,a.xMax=b.axis_rotated?a.height:a.width,a.yMin=b.axis_rotated?0:a.height,a.yMax=b.axis_rotated?a.width:1,a.subXMin=a.xMin,a.subXMax=a.xMax,a.subYMin=b.axis_rotated?0:a.height2,a.subYMax=b.axis_rotated?a.width2:1,a.x=a.getX(a.xMin,a.xMax,c?void 0:a.x.orgDomain(),function(){return a.xAxis.tickOffset()}),a.y=a.getY(a.yMin,a.yMax,c?b.axis_y_default:a.y.domain()),a.y2=a.getY(a.yMin,a.yMax,c?b.axis_y2_default:a.y2.domain()),a.subX=a.getX(a.xMin,a.xMax,a.orgXDomain,function(b){return b%1?0:a.subXAxis.tickOffset()}),a.subY=a.getY(a.subYMin,a.subYMax,c?b.axis_y_default:a.subY.domain()),a.subY2=a.getY(a.subYMin,a.subYMax,c?b.axis_y2_default:a.subY2.domain()),a.xAxisTickFormat=a.axis.getXAxisTickFormat(),a.xAxisTickValues=a.axis.getXAxisTickValues(),a.yAxisTickValues=a.axis.getYAxisTickValues(),a.y2AxisTickValues=a.axis.getY2AxisTickValues(),a.xAxis=a.axis.getXAxis(a.x,a.xOrient,a.xAxisTickFormat,a.xAxisTickValues,b.axis_x_tick_outer),a.subXAxis=a.axis.getXAxis(a.subX,a.subXOrient,a.xAxisTickFormat,a.xAxisTickValues,b.axis_x_tick_outer),a.yAxis=a.axis.getYAxis(a.y,a.yOrient,b.axis_y_tick_format,a.yAxisTickValues,b.axis_y_tick_outer),a.y2Axis=a.axis.getYAxis(a.y2,a.y2Orient,b.axis_y2_tick_format,a.y2AxisTickValues,b.axis_y2_tick_outer),c||(a.brush&&a.brush.scale(a.subX),b.zoom_enabled&&a.zoom.scale(a.x)),a.updateArc&&a.updateArc()},i.getYDomainMin=function(a){var b,c,d,e,f,g,h=this,i=h.config,j=h.mapToIds(a),k=h.getValuesAsIdKeyed(a);if(i.data_groups.length>0)for(g=h.hasNegativeValueInTargets(a),b=0;b<i.data_groups.length;b++)if(e=i.data_groups[b].filter(function(a){return j.indexOf(a)>=0}),0!==e.length)for(d=e[0],g&&k[d]&&k[d].forEach(function(a,b){k[d][b]=0>a?a:0}),c=1;c<e.length;c++)f=e[c],k[f]&&k[f].forEach(function(a,b){h.axis.getId(f)!==h.axis.getId(d)||!k[d]||g&&+a>0||(k[d][b]+=+a)});return h.d3.min(Object.keys(k).map(function(a){return h.d3.min(k[a])}))},i.getYDomainMax=function(a){var b,c,d,e,f,g,h=this,i=h.config,j=h.mapToIds(a),k=h.getValuesAsIdKeyed(a);if(i.data_groups.length>0)for(g=h.hasPositiveValueInTargets(a),b=0;b<i.data_groups.length;b++)if(e=i.data_groups[b].filter(function(a){return j.indexOf(a)>=0}),0!==e.length)for(d=e[0],g&&k[d]&&k[d].forEach(function(a,b){k[d][b]=a>0?a:0}),c=1;c<e.length;c++)f=e[c],k[f]&&k[f].forEach(function(a,b){h.axis.getId(f)!==h.axis.getId(d)||!k[d]||g&&0>+a||(k[d][b]+=+a)});return h.d3.max(Object.keys(k).map(function(a){return h.d3.max(k[a])}))},i.getYDomain=function(a,b,c){var d,e,f,g,h,i,j,k,l,n,o,p=this,q=p.config,r=a.filter(function(a){return p.axis.getId(a.id)===b}),s=c?p.filterByXDomain(r,c):r,u="y2"===b?q.axis_y2_min:q.axis_y_min,w="y2"===b?q.axis_y2_max:q.axis_y_max,x=p.getYDomainMin(s),y=p.getYDomainMax(s),z="y2"===b?q.axis_y2_center:q.axis_y_center,A=p.hasType("bar",s)&&q.bar_zerobased||p.hasType("area",s)&&q.area_zerobased,B="y2"===b?q.axis_y2_inverted:q.axis_y_inverted,C=p.hasDataLabel()&&q.axis_rotated,D=p.hasDataLabel()&&!q.axis_rotated;return x=m(u)?u:m(w)?w>x?x:w-10:x,y=m(w)?w:m(u)?y>u?y:u+10:y,0===s.length?"y2"===b?p.y2.domain():p.y.domain():(isNaN(x)&&(x=0),isNaN(y)&&(y=x),x===y&&(0>x?y=0:x=0),n=x>=0&&y>=0,o=0>=x&&0>=y,(m(u)&&n||m(w)&&o)&&(A=!1),A&&(n&&(x=0),o&&(y=0)),e=Math.abs(y-x),f=g=h=.1*e,"undefined"!=typeof z&&(i=Math.max(Math.abs(x),Math.abs(y)),y=z+i,x=z-i),C?(j=p.getDataLabelLength(x,y,"width"),k=t(p.y.range()),l=[j[0]/k,j[1]/k],g+=e*(l[1]/(1-l[0]-l[1])),h+=e*(l[0]/(1-l[0]-l[1]))):D&&(j=p.getDataLabelLength(x,y,"height"),g+=p.axis.convertPixelsToAxisPadding(j[1],e),h+=p.axis.convertPixelsToAxisPadding(j[0],e)),"y"===b&&v(q.axis_y_padding)&&(g=p.axis.getPadding(q.axis_y_padding,"top",g,e),h=p.axis.getPadding(q.axis_y_padding,"bottom",h,e)),"y2"===b&&v(q.axis_y2_padding)&&(g=p.axis.getPadding(q.axis_y2_padding,"top",g,e),h=p.axis.getPadding(q.axis_y2_padding,"bottom",h,e)),A&&(n&&(h=x),o&&(g=-y)),d=[x-h,y+g],B?d.reverse():d)},i.getXDomainMin=function(a){var b=this,c=b.config;return q(c.axis_x_min)?b.isTimeSeries()?this.parseDate(c.axis_x_min):c.axis_x_min:b.d3.min(a,function(a){return b.d3.min(a.values,function(a){return a.x})})},i.getXDomainMax=function(a){var b=this,c=b.config;return q(c.axis_x_max)?b.isTimeSeries()?this.parseDate(c.axis_x_max):c.axis_x_max:b.d3.max(a,function(a){return b.d3.max(a.values,function(a){return a.x})})},i.getXDomainPadding=function(a){var b,c,d,e,f=this,g=f.config,h=a[1]-a[0];return f.isCategorized()?c=0:f.hasType("bar")?(b=f.getMaxDataCount(),c=b>1?h/(b-1)/2:.5):c=.01*h,"object"==typeof g.axis_x_padding&&v(g.axis_x_padding)?(d=m(g.axis_x_padding.left)?g.axis_x_padding.left:c,e=m(g.axis_x_padding.right)?g.axis_x_padding.right:c):d=e="number"==typeof g.axis_x_padding?g.axis_x_padding:c,{left:d,right:e}},i.getXDomain=function(a){var b=this,c=[b.getXDomainMin(a),b.getXDomainMax(a)],d=c[0],e=c[1],f=b.getXDomainPadding(c),g=0,h=0;
return d-e!==0||b.isCategorized()||(b.isTimeSeries()?(d=new Date(.5*d.getTime()),e=new Date(1.5*e.getTime())):(d=0===d?1:.5*d,e=0===e?-1:1.5*e)),(d||0===d)&&(g=b.isTimeSeries()?new Date(d.getTime()-f.left):d-f.left),(e||0===e)&&(h=b.isTimeSeries()?new Date(e.getTime()+f.right):e+f.right),[g,h]},i.updateXDomain=function(a,b,c,d,e){var f=this,g=f.config;return c&&(f.x.domain(e?e:f.d3.extent(f.getXDomain(a))),f.orgXDomain=f.x.domain(),g.zoom_enabled&&f.zoom.scale(f.x).updateScaleExtent(),f.subX.domain(f.x.domain()),f.brush&&f.brush.scale(f.subX)),b&&(f.x.domain(e?e:!f.brush||f.brush.empty()?f.orgXDomain:f.brush.extent()),g.zoom_enabled&&f.zoom.scale(f.x).updateScaleExtent()),d&&f.x.domain(f.trimXDomain(f.x.orgDomain())),f.x.domain()},i.trimXDomain=function(a){var b=this;return a[0]<=b.orgXDomain[0]&&(a[1]=+a[1]+(b.orgXDomain[0]-a[0]),a[0]=b.orgXDomain[0]),b.orgXDomain[1]<=a[1]&&(a[0]=+a[0]-(a[1]-b.orgXDomain[1]),a[1]=b.orgXDomain[1]),a},i.isX=function(a){var b=this,c=b.config;return c.data_x&&a===c.data_x||v(c.data_xs)&&x(c.data_xs,a)},i.isNotX=function(a){return!this.isX(a)},i.getXKey=function(a){var b=this,c=b.config;return c.data_x?c.data_x:v(c.data_xs)?c.data_xs[a]:null},i.getXValuesOfXKey=function(a,b){var c,d=this,e=b&&v(b)?d.mapToIds(b):[];return e.forEach(function(b){d.getXKey(b)===a&&(c=d.data.xs[b])}),c},i.getIndexByX=function(a){var b=this,c=b.filterByX(b.data.targets,a);return c.length?c[0].index:null},i.getXValue=function(a,b){var c=this;return a in c.data.xs&&c.data.xs[a]&&m(c.data.xs[a][b])?c.data.xs[a][b]:b},i.getOtherTargetXs=function(){var a=this,b=Object.keys(a.data.xs);return b.length?a.data.xs[b[0]]:null},i.getOtherTargetX=function(a){var b=this.getOtherTargetXs();return b&&a<b.length?b[a]:null},i.addXs=function(a){var b=this;Object.keys(a).forEach(function(c){b.config.data_xs[c]=a[c]})},i.hasMultipleX=function(a){return this.d3.set(Object.keys(a).map(function(b){return a[b]})).size()>1},i.isMultipleX=function(){return v(this.config.data_xs)||!this.config.data_xSort||this.hasType("scatter")},i.addName=function(a){var b,c=this;return a&&(b=c.config.data_names[a.id],a.name=b?b:a.id),a},i.getValueOnIndex=function(a,b){var c=a.filter(function(a){return a.index===b});return c.length?c[0]:null},i.updateTargetX=function(a,b){var c=this;a.forEach(function(a){a.values.forEach(function(d,e){d.x=c.generateTargetX(b[e],a.id,e)}),c.data.xs[a.id]=b})},i.updateTargetXs=function(a,b){var c=this;a.forEach(function(a){b[a.id]&&c.updateTargetX([a],b[a.id])})},i.generateTargetX=function(a,b,c){var d,e=this;return d=e.isTimeSeries()?e.parseDate(a?a:e.getXValue(b,c)):e.isCustomX()&&!e.isCategorized()?m(a)?+a:e.getXValue(b,c):c},i.cloneTarget=function(a){return{id:a.id,id_org:a.id_org,values:a.values.map(function(a){return{x:a.x,value:a.value,id:a.id}})}},i.updateXs=function(){var a=this;a.data.targets.length&&(a.xs=[],a.data.targets[0].values.forEach(function(b){a.xs[b.index]=b.x}))},i.getPrevX=function(a){var b=this.xs[a-1];return"undefined"!=typeof b?b:null},i.getNextX=function(a){var b=this.xs[a+1];return"undefined"!=typeof b?b:null},i.getMaxDataCount=function(){var a=this;return a.d3.max(a.data.targets,function(a){return a.values.length})},i.getMaxDataCountTarget=function(a){var b,c=a.length,d=0;return c>1?a.forEach(function(a){a.values.length>d&&(b=a,d=a.values.length)}):b=c?a[0]:null,b},i.getEdgeX=function(a){var b=this;return a.length?[b.d3.min(a,function(a){return a.values[0].x}),b.d3.max(a,function(a){return a.values[a.values.length-1].x})]:[0,0]},i.mapToIds=function(a){return a.map(function(a){return a.id})},i.mapToTargetIds=function(a){var b=this;return a?o(a)?[a]:a:b.mapToIds(b.data.targets)},i.hasTarget=function(a,b){var c,d=this.mapToIds(a);for(c=0;c<d.length;c++)if(d[c]===b)return!0;return!1},i.isTargetToShow=function(a){return this.hiddenTargetIds.indexOf(a)<0},i.isLegendToShow=function(a){return this.hiddenLegendIds.indexOf(a)<0},i.filterTargetsToShow=function(a){var b=this;return a.filter(function(a){return b.isTargetToShow(a.id)})},i.mapTargetsToUniqueXs=function(a){var b=this,c=b.d3.set(b.d3.merge(a.map(function(a){return a.values.map(function(a){return+a.x})}))).values();return c.map(b.isTimeSeries()?function(a){return new Date(+a)}:function(a){return+a})},i.addHiddenTargetIds=function(a){this.hiddenTargetIds=this.hiddenTargetIds.concat(a)},i.removeHiddenTargetIds=function(a){this.hiddenTargetIds=this.hiddenTargetIds.filter(function(b){return a.indexOf(b)<0})},i.addHiddenLegendIds=function(a){this.hiddenLegendIds=this.hiddenLegendIds.concat(a)},i.removeHiddenLegendIds=function(a){this.hiddenLegendIds=this.hiddenLegendIds.filter(function(b){return a.indexOf(b)<0})},i.getValuesAsIdKeyed=function(a){var b={};return a.forEach(function(a){b[a.id]=[],a.values.forEach(function(c){b[a.id].push(c.value)})}),b},i.checkValueInTargets=function(a,b){var c,d,e,f=Object.keys(a);for(c=0;c<f.length;c++)for(e=a[f[c]].values,d=0;d<e.length;d++)if(b(e[d].value))return!0;return!1},i.hasNegativeValueInTargets=function(a){return this.checkValueInTargets(a,function(a){return 0>a})},i.hasPositiveValueInTargets=function(a){return this.checkValueInTargets(a,function(a){return a>0})},i.isOrderDesc=function(){var a=this.config;return"string"==typeof a.data_order&&"desc"===a.data_order.toLowerCase()},i.isOrderAsc=function(){var a=this.config;return"string"==typeof a.data_order&&"asc"===a.data_order.toLowerCase()},i.orderTargets=function(a){var b=this,c=b.config,d=b.isOrderAsc(),e=b.isOrderDesc();return d||e?a.sort(function(a,b){var c=function(a,b){return a+Math.abs(b.value)},e=a.values.reduce(c,0),f=b.values.reduce(c,0);return d?f-e:e-f}):n(c.data_order)&&a.sort(c.data_order),a},i.filterByX=function(a,b){return this.d3.merge(a.map(function(a){return a.values})).filter(function(a){return a.x-b===0})},i.filterRemoveNull=function(a){return a.filter(function(a){return m(a.value)})},i.filterByXDomain=function(a,b){return a.map(function(a){return{id:a.id,id_org:a.id_org,values:a.values.filter(function(a){return b[0]<=a.x&&a.x<=b[1]})}})},i.hasDataLabel=function(){var a=this.config;return"boolean"==typeof a.data_labels&&a.data_labels?!0:"object"==typeof a.data_labels&&v(a.data_labels)?!0:!1},i.getDataLabelLength=function(a,b,c){var d=this,e=[0,0],f=1.3;return d.selectChart.select("svg").selectAll(".dummy").data([a,b]).enter().append("text").text(function(a){return d.dataLabelFormat(a.id)(a)}).each(function(a,b){e[b]=this.getBoundingClientRect()[c]*f}).remove(),e},i.isNoneArc=function(a){return this.hasTarget(this.data.targets,a.id)},i.isArc=function(a){return"data"in a&&this.hasTarget(this.data.targets,a.data.id)},i.findSameXOfValues=function(a,b){var c,d=a[b].x,e=[];for(c=b-1;c>=0&&d===a[c].x;c--)e.push(a[c]);for(c=b;c<a.length&&d===a[c].x;c++)e.push(a[c]);return e},i.findClosestFromTargets=function(a,b){var c,d=this;return c=a.map(function(a){return d.findClosest(a.values,b)}),d.findClosest(c,b)},i.findClosest=function(a,b){var c,d=this,e=100;return a.filter(function(a){return a&&d.isBarType(a.id)}).forEach(function(a){var b=d.main.select("."+l.bars+d.getTargetSelectorSuffix(a.id)+" ."+l.bar+"-"+a.index).node();!c&&d.isWithinBar(b)&&(c=a)}),a.filter(function(a){return a&&!d.isBarType(a.id)}).forEach(function(a){var f=d.dist(a,b);e>f&&(e=f,c=a)}),c},i.dist=function(a,b){var c=this,d=c.config,e=d.axis_rotated?1:0,f=d.axis_rotated?0:1,g=c.circleY(a,a.index),h=c.x(a.x);return Math.pow(h-b[e],2)+Math.pow(g-b[f],2)},i.convertValuesToStep=function(a){var b,c=[].concat(a);if(!this.isCategorized())return a;for(b=a.length+1;b>0;b--)c[b]=c[b-1];return c[0]={x:c[0].x-1,value:c[0].value,id:c[0].id},c[a.length+1]={x:c[a.length].x+1,value:c[a.length].value,id:c[a.length].id},c},i.updateDataAttributes=function(a,b){var c=this,d=c.config,e=d["data_"+a];return"undefined"==typeof b?e:(Object.keys(b).forEach(function(a){e[a]=b[a]}),c.redraw({withLegend:!0}),e)},i.convertUrlToData=function(a,b,c,d){var e=this,f=b?b:"csv";e.d3.xhr(a,function(a,b){var g;if(!b)throw new Error(a.responseURL+" "+a.status+" ("+a.statusText+")");g="json"===f?e.convertJsonToData(JSON.parse(b.response),c):"tsv"===f?e.convertTsvToData(b.response):e.convertCsvToData(b.response),d.call(e,g)})},i.convertXsvToData=function(a,b){var c,d=b.parseRows(a);return 1===d.length?(c=[{}],d[0].forEach(function(a){c[0][a]=null})):c=b.parse(a),c},i.convertCsvToData=function(a){return this.convertXsvToData(a,this.d3.csv)},i.convertTsvToData=function(a){return this.convertXsvToData(a,this.d3.tsv)},i.convertJsonToData=function(a,b){var c,d,e=this,f=[];return b?(b.x?(c=b.value.concat(b.x),e.config.data_x=b.x):c=b.value,f.push(c),a.forEach(function(a){var b=[];c.forEach(function(c){var d=p(a[c])?null:a[c];b.push(d)}),f.push(b)}),d=e.convertRowsToData(f)):(Object.keys(a).forEach(function(b){f.push([b].concat(a[b]))}),d=e.convertColumnsToData(f)),d},i.convertRowsToData=function(a){var b,c,d=a[0],e={},f=[];for(b=1;b<a.length;b++){for(e={},c=0;c<a[b].length;c++){if(p(a[b][c]))throw new Error("Source data is missing a component at ("+b+","+c+")!");e[d[c]]=a[b][c]}f.push(e)}return f},i.convertColumnsToData=function(a){var b,c,d,e=[];for(b=0;b<a.length;b++)for(d=a[b][0],c=1;c<a[b].length;c++){if(p(e[c-1])&&(e[c-1]={}),p(a[b][c]))throw new Error("Source data is missing a component at ("+b+","+c+")!");e[c-1][d]=a[b][c]}return e},i.convertDataToTargets=function(a,b){var c,d=this,e=d.config,f=d.d3.keys(a[0]).filter(d.isNotX,d),g=d.d3.keys(a[0]).filter(d.isX,d);return f.forEach(function(c){var f=d.getXKey(c);d.isCustomX()||d.isTimeSeries()?g.indexOf(f)>=0?d.data.xs[c]=(b&&d.data.xs[c]?d.data.xs[c]:[]).concat(a.map(function(a){return a[f]}).filter(m).map(function(a,b){return d.generateTargetX(a,c,b)})):e.data_x?d.data.xs[c]=d.getOtherTargetXs():v(e.data_xs)&&(d.data.xs[c]=d.getXValuesOfXKey(f,d.data.targets)):d.data.xs[c]=a.map(function(a,b){return b})}),f.forEach(function(a){if(!d.data.xs[a])throw new Error('x is not defined for id = "'+a+'".')}),c=f.map(function(b,c){var f=e.data_idConverter(b);return{id:f,id_org:b,values:a.map(function(a,g){var h=d.getXKey(b),i=a[h],j=d.generateTargetX(i,b,g);return d.isCustomX()&&d.isCategorized()&&0===c&&i&&(0===g&&(e.axis_x_categories=[]),e.axis_x_categories.push(i)),(p(a[b])||d.data.xs[b].length<=g)&&(j=void 0),{x:j,value:null===a[b]||isNaN(a[b])?null:+a[b],id:f}}).filter(function(a){return q(a.x)})}}),c.forEach(function(a){var b;e.data_xSort&&(a.values=a.values.sort(function(a,b){var c=a.x||0===a.x?a.x:1/0,d=b.x||0===b.x?b.x:1/0;return c-d})),b=0,a.values.forEach(function(a){a.index=b++}),d.data.xs[a.id].sort(function(a,b){return a-b})}),e.data_type&&d.setTargetType(d.mapToIds(c).filter(function(a){return!(a in e.data_types)}),e.data_type),c.forEach(function(a){d.addCache(a.id_org,a)}),c},i.load=function(a,b){var c=this;a&&(b.filter&&(a=a.filter(b.filter)),(b.type||b.types)&&a.forEach(function(a){var d=b.types&&b.types[a.id]?b.types[a.id]:b.type;c.setTargetType(a.id,d)}),c.data.targets.forEach(function(b){for(var c=0;c<a.length;c++)if(b.id===a[c].id){b.values=a[c].values,a.splice(c,1);break}}),c.data.targets=c.data.targets.concat(a)),c.updateTargets(c.data.targets),c.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0}),b.done&&b.done()},i.loadFromArgs=function(a){var b=this;a.data?b.load(b.convertDataToTargets(a.data),a):a.url?b.convertUrlToData(a.url,a.mimeType,a.keys,function(c){b.load(b.convertDataToTargets(c),a)}):a.json?b.load(b.convertDataToTargets(b.convertJsonToData(a.json,a.keys)),a):a.rows?b.load(b.convertDataToTargets(b.convertRowsToData(a.rows)),a):a.columns?b.load(b.convertDataToTargets(b.convertColumnsToData(a.columns)),a):b.load(null,a)},i.unload=function(a,b){var c=this;return b||(b=function(){}),a=a.filter(function(a){return c.hasTarget(c.data.targets,a)}),a&&0!==a.length?(c.svg.selectAll(a.map(function(a){return c.selectorTarget(a)})).transition().style("opacity",0).remove().call(c.endall,b),void a.forEach(function(a){c.withoutFadeIn[a]=!1,c.legend&&c.legend.selectAll("."+l.legendItem+c.getTargetSelectorSuffix(a)).remove(),c.data.targets=c.data.targets.filter(function(b){return b.id!==a})})):void b()},i.categoryName=function(a){var b=this.config;return a<b.axis_x_categories.length?b.axis_x_categories[a]:a},i.initEventRect=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.eventRects).style("fill-opacity",0)},i.redrawEventRect=function(){var a,b,c=this,d=c.config,e=c.isMultipleX(),f=c.main.select("."+l.eventRects).style("cursor",d.zoom_enabled?d.axis_rotated?"ns-resize":"ew-resize":null).classed(l.eventRectsMultiple,e).classed(l.eventRectsSingle,!e);f.selectAll("."+l.eventRect).remove(),c.eventRect=f.selectAll("."+l.eventRect),e?(a=c.eventRect.data([0]),c.generateEventRectsForMultipleXs(a.enter()),c.updateEventRect(a)):(b=c.getMaxDataCountTarget(c.data.targets),f.datum(b?b.values:[]),c.eventRect=f.selectAll("."+l.eventRect),a=c.eventRect.data(function(a){return a}),c.generateEventRectsForSingleX(a.enter()),c.updateEventRect(a),a.exit().remove())},i.updateEventRect=function(a){var b,c,d,e,f,g,h=this,i=h.config;a=a||h.eventRect.data(function(a){return a}),h.isMultipleX()?(b=0,c=0,d=h.width,e=h.height):(!h.isCustomX()&&!h.isTimeSeries()||h.isCategorized()?(f=h.getEventRectWidth(),g=function(a){return h.x(a.x)-f/2}):(h.updateXs(),f=function(a){var b=h.getPrevX(a.index),c=h.getNextX(a.index);return null===b&&null===c?i.axis_rotated?h.height:h.width:(null===b&&(b=h.x.domain()[0]),null===c&&(c=h.x.domain()[1]),Math.max(0,(h.x(c)-h.x(b))/2))},g=function(a){var b=h.getPrevX(a.index),c=h.getNextX(a.index),d=h.data.xs[a.id][a.index];return null===b&&null===c?0:(null===b&&(b=h.x.domain()[0]),(h.x(d)+h.x(b))/2)}),b=i.axis_rotated?0:g,c=i.axis_rotated?g:0,d=i.axis_rotated?h.width:f,e=i.axis_rotated?f:h.height),a.attr("class",h.classEvent.bind(h)).attr("x",b).attr("y",c).attr("width",d).attr("height",e)},i.generateEventRectsForSingleX=function(a){var b=this,c=b.d3,d=b.config;a.append("rect").attr("class",b.classEvent.bind(b)).style("cursor",d.data_selection_enabled&&d.data_selection_grouped?"pointer":null).on("mouseover",function(a){var c=a.index;b.dragging||b.flowing||b.hasArcType()||(d.point_focus_expand_enabled&&b.expandCircles(c,null,!0),b.expandBars(c,null,!0),b.main.selectAll("."+l.shape+"-"+c).each(function(a){d.data_onmouseover.call(b.api,a)}))}).on("mouseout",function(a){var c=a.index;b.config&&(b.hasArcType()||(b.hideXGridFocus(),b.hideTooltip(),b.unexpandCircles(),b.unexpandBars(),b.main.selectAll("."+l.shape+"-"+c).each(function(a){d.data_onmouseout.call(b.api,a)})))}).on("mousemove",function(a){var e,f=a.index,g=b.svg.select("."+l.eventRect+"-"+f);b.dragging||b.flowing||b.hasArcType()||(b.isStepType(a)&&"step-after"===b.config.line_step_type&&c.mouse(this)[0]<b.x(b.getXValue(a.id,f))&&(f-=1),e=b.filterTargetsToShow(b.data.targets).map(function(a){return b.addName(b.getValueOnIndex(a.values,f))}),d.tooltip_grouped&&(b.showTooltip(e,this),b.showXGridFocus(e)),(!d.tooltip_grouped||d.data_selection_enabled&&!d.data_selection_grouped)&&b.main.selectAll("."+l.shape+"-"+f).each(function(){c.select(this).classed(l.EXPANDED,!0),d.data_selection_enabled&&g.style("cursor",d.data_selection_grouped?"pointer":null),d.tooltip_grouped||(b.hideXGridFocus(),b.hideTooltip(),d.data_selection_grouped||(b.unexpandCircles(f),b.unexpandBars(f)))}).filter(function(a){return b.isWithinShape(this,a)}).each(function(a){d.data_selection_enabled&&(d.data_selection_grouped||d.data_selection_isselectable(a))&&g.style("cursor","pointer"),d.tooltip_grouped||(b.showTooltip([a],this),b.showXGridFocus([a]),d.point_focus_expand_enabled&&b.expandCircles(f,a.id,!0),b.expandBars(f,a.id,!0))}))}).on("click",function(a){var e=a.index;if(!b.hasArcType()&&b.toggleShape){if(b.cancelClick)return void(b.cancelClick=!1);b.isStepType(a)&&"step-after"===d.line_step_type&&c.mouse(this)[0]<b.x(b.getXValue(a.id,e))&&(e-=1),b.main.selectAll("."+l.shape+"-"+e).each(function(a){(d.data_selection_grouped||b.isWithinShape(this,a))&&(b.toggleShape(this,a,e),b.config.data_onclick.call(b.api,a,this))})}}).call(d.data_selection_draggable&&b.drag?c.behavior.drag().origin(Object).on("drag",function(){b.drag(c.mouse(this))}).on("dragstart",function(){b.dragstart(c.mouse(this))}).on("dragend",function(){b.dragend()}):function(){})},i.generateEventRectsForMultipleXs=function(a){function b(){c.svg.select("."+l.eventRect).style("cursor",null),c.hideXGridFocus(),c.hideTooltip(),c.unexpandCircles(),c.unexpandBars()}var c=this,d=c.d3,e=c.config;a.append("rect").attr("x",0).attr("y",0).attr("width",c.width).attr("height",c.height).attr("class",l.eventRect).on("mouseout",function(){c.config&&(c.hasArcType()||b())}).on("mousemove",function(){var a,f,g,h,i=c.filterTargetsToShow(c.data.targets);if(!c.dragging&&!c.hasArcType(i)){if(a=d.mouse(this),f=c.findClosestFromTargets(i,a),!c.mouseover||f&&f.id===c.mouseover.id||(e.data_onmouseout.call(c.api,c.mouseover),c.mouseover=void 0),!f)return void b();g=c.isScatterType(f)||!e.tooltip_grouped?[f]:c.filterByX(i,f.x),h=g.map(function(a){return c.addName(a)}),c.showTooltip(h,this),e.point_focus_expand_enabled&&c.expandCircles(f.index,f.id,!0),c.expandBars(f.index,f.id,!0),c.showXGridFocus(h),(c.isBarType(f.id)||c.dist(f,a)<100)&&(c.svg.select("."+l.eventRect).style("cursor","pointer"),c.mouseover||(e.data_onmouseover.call(c.api,f),c.mouseover=f))}}).on("click",function(){var a,b,f=c.filterTargetsToShow(c.data.targets);c.hasArcType(f)||(a=d.mouse(this),b=c.findClosestFromTargets(f,a),b&&(c.isBarType(b.id)||c.dist(b,a)<100)&&c.main.selectAll("."+l.shapes+c.getTargetSelectorSuffix(b.id)).selectAll("."+l.shape+"-"+b.index).each(function(){(e.data_selection_grouped||c.isWithinShape(this,b))&&(c.toggleShape(this,b,b.index),c.config.data_onclick.call(c.api,b,this))}))}).call(e.data_selection_draggable&&c.drag?d.behavior.drag().origin(Object).on("drag",function(){c.drag(d.mouse(this))}).on("dragstart",function(){c.dragstart(d.mouse(this))}).on("dragend",function(){c.dragend()}):function(){})},i.dispatchEvent=function(b,c,d){var e=this,f="."+l.eventRect+(e.isMultipleX()?"":"-"+c),g=e.main.select(f).node(),h=g.getBoundingClientRect(),i=h.left+(d?d[0]:0),j=h.top+(d?d[1]:0),k=document.createEvent("MouseEvents");k.initMouseEvent(b,!0,!0,a,0,i,j,i,j,!1,!1,!1,!1,0,null),g.dispatchEvent(k)},i.getCurrentWidth=function(){var a=this,b=a.config;return b.size_width?b.size_width:a.getParentWidth()},i.getCurrentHeight=function(){var a=this,b=a.config,c=b.size_height?b.size_height:a.getParentHeight();return c>0?c:320/(a.hasType("gauge")?2:1)},i.getCurrentPaddingTop=function(){var a=this.config;return m(a.padding_top)?a.padding_top:0},i.getCurrentPaddingBottom=function(){var a=this.config;return m(a.padding_bottom)?a.padding_bottom:0},i.getCurrentPaddingLeft=function(a){var b=this,c=b.config;return m(c.padding_left)?c.padding_left:c.axis_rotated?c.axis_x_show?Math.max(r(b.getAxisWidthByAxisId("x",a)),40):1:!c.axis_y_show||c.axis_y_inner?b.axis.getYAxisLabelPosition().isOuter?30:1:r(b.getAxisWidthByAxisId("y",a))},i.getCurrentPaddingRight=function(){var a=this,b=a.config,c=10,d=a.isLegendRight?a.getLegendWidth()+20:0;return m(b.padding_right)?b.padding_right+1:b.axis_rotated?c+d:!b.axis_y2_show||b.axis_y2_inner?2+d+(a.axis.getY2AxisLabelPosition().isOuter?20:0):r(a.getAxisWidthByAxisId("y2"))+d},i.getParentRectValue=function(a){for(var b,c=this.selectChart.node();c&&"BODY"!==c.tagName;){try{b=c.getBoundingClientRect()[a]}catch(d){"width"===a&&(b=c.offsetWidth)}if(b)break;c=c.parentNode}return b},i.getParentWidth=function(){return this.getParentRectValue("width")},i.getParentHeight=function(){var a=this.selectChart.style("height");return a.indexOf("px")>0?+a.replace("px",""):0},i.getSvgLeft=function(a){var b=this,c=b.config,d=c.axis_rotated||!c.axis_rotated&&!c.axis_y_inner,e=c.axis_rotated?l.axisX:l.axisY,f=b.main.select("."+e).node(),g=f&&d?f.getBoundingClientRect():{right:0},h=b.selectChart.node().getBoundingClientRect(),i=b.hasArcType(),j=g.right-h.left-(i?0:b.getCurrentPaddingLeft(a));return j>0?j:0},i.getAxisWidthByAxisId=function(a,b){var c=this,d=c.axis.getLabelPositionById(a);return c.axis.getMaxTickWidth(a,b)+(d.isInner?20:40)},i.getHorizontalAxisHeight=function(a){var b=this,c=b.config,d=30;return"x"!==a||c.axis_x_show?"x"===a&&c.axis_x_height?c.axis_x_height:"y"!==a||c.axis_y_show?"y2"!==a||c.axis_y2_show?("x"===a&&!c.axis_rotated&&c.axis_x_tick_rotate&&(d=30+b.axis.getMaxTickWidth(a)*Math.cos(Math.PI*(90-c.axis_x_tick_rotate)/180)),d+(b.axis.getLabelPositionById(a).isInner?0:10)+("y2"===a?-10:0)):b.rotated_padding_top:!c.legend_show||b.isLegendRight||b.isLegendInset?1:10:8},i.getEventRectWidth=function(){return Math.max(0,this.xAxis.tickInterval())},i.getShapeIndices=function(a){var b,c,d=this,e=d.config,f={},g=0;return d.filterTargetsToShow(d.data.targets.filter(a,d)).forEach(function(a){for(b=0;b<e.data_groups.length;b++)if(!(e.data_groups[b].indexOf(a.id)<0))for(c=0;c<e.data_groups[b].length;c++)if(e.data_groups[b][c]in f){f[a.id]=f[e.data_groups[b][c]];break}p(f[a.id])&&(f[a.id]=g++)}),f.__max__=g-1,f},i.getShapeX=function(a,b,c,d){var e=this,f=d?e.subX:e.x;return function(d){var e=d.id in c?c[d.id]:0;return d.x||0===d.x?f(d.x)-a*(b/2-e):0}},i.getShapeY=function(a){var b=this;return function(c){var d=a?b.getSubYScale(c.id):b.getYScale(c.id);return d(c.value)}},i.getShapeOffset=function(a,b,c){var d=this,e=d.orderTargets(d.filterTargetsToShow(d.data.targets.filter(a,d))),f=e.map(function(a){return a.id});return function(a,g){var h=c?d.getSubYScale(a.id):d.getYScale(a.id),i=h(0),j=i;return e.forEach(function(c){var e=d.isStepType(a)?d.convertValuesToStep(c.values):c.values;c.id!==a.id&&b[c.id]===b[a.id]&&f.indexOf(c.id)<f.indexOf(a.id)&&e[g].value*a.value>=0&&(j+=h(e[g].value)-i)}),j}},i.isWithinShape=function(a,b){var c,d=this,e=d.d3.select(a);return d.isTargetToShow(b.id)?"circle"===a.nodeName?c=d.isStepType(b)?d.isWithinStep(a,d.getYScale(b.id)(b.value)):d.isWithinCircle(a,1.5*d.pointSelectR(b)):"path"===a.nodeName&&(c=e.classed(l.bar)?d.isWithinBar(a):!0):c=!1,c},i.getInterpolate=function(a){var b=this;return b.isSplineType(a)?"cardinal":b.isStepType(a)?b.config.line_step_type:"linear"},i.initLine=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.chartLines)},i.updateTargetsForLine=function(a){var b,c,d=this,e=d.config,f=d.classChartLine.bind(d),g=d.classLines.bind(d),h=d.classAreas.bind(d),i=d.classCircles.bind(d),j=d.classFocus.bind(d);b=d.main.select("."+l.chartLines).selectAll("."+l.chartLine).data(a).attr("class",function(a){return f(a)+j(a)}),c=b.enter().append("g").attr("class",f).style("opacity",0).style("pointer-events","none"),c.append("g").attr("class",g),c.append("g").attr("class",h),c.append("g").attr("class",function(a){return d.generateClass(l.selectedCircles,a.id)}),c.append("g").attr("class",i).style("cursor",function(a){return e.data_selection_isselectable(a)?"pointer":null}),a.forEach(function(a){d.main.selectAll("."+l.selectedCircles+d.getTargetSelectorSuffix(a.id)).selectAll("."+l.selectedCircle).each(function(b){b.value=a.values[b.index].value})})},i.updateLine=function(a){var b=this;b.mainLine=b.main.selectAll("."+l.lines).selectAll("."+l.line).data(b.lineData.bind(b)),b.mainLine.enter().append("path").attr("class",b.classLine.bind(b)).style("stroke",b.color),b.mainLine.style("opacity",b.initialOpacity.bind(b)).style("shape-rendering",function(a){return b.isStepType(a)?"crispEdges":""}).attr("transform",null),b.mainLine.exit().transition().duration(a).style("opacity",0).remove()},i.redrawLine=function(a,b){return[(b?this.mainLine.transition():this.mainLine).attr("d",a).style("stroke",this.color).style("opacity",1)]},i.generateDrawLine=function(a,b){var c=this,d=c.config,e=c.d3.svg.line(),f=c.generateGetLinePoints(a,b),g=b?c.getSubYScale:c.getYScale,h=function(a){return(b?c.subxx:c.xx).call(c,a)},i=function(a,b){return d.data_groups.length>0?f(a,b)[0][1]:g.call(c,a.id)(a.value)};return e=d.axis_rotated?e.x(i).y(h):e.x(h).y(i),d.line_connectNull||(e=e.defined(function(a){return null!=a.value})),function(a){var f,h=d.line_connectNull?c.filterRemoveNull(a.values):a.values,i=b?c.x:c.subX,j=g.call(c,a.id),k=0,l=0;return c.isLineType(a)?d.data_regions[a.id]?f=c.lineWithRegions(h,i,j,d.data_regions[a.id]):(c.isStepType(a)&&(h=c.convertValuesToStep(h)),f=e.interpolate(c.getInterpolate(a))(h)):(h[0]&&(k=i(h[0].x),l=j(h[0].value)),f=d.axis_rotated?"M "+l+" "+k:"M "+k+" "+l),f?f:"M 0 0"}},i.generateGetLinePoints=function(a,b){var c=this,d=c.config,e=a.__max__+1,f=c.getShapeX(0,e,a,!!b),g=c.getShapeY(!!b),h=c.getShapeOffset(c.isLineType,a,!!b),i=b?c.getSubYScale:c.getYScale;return function(a,b){var e=i.call(c,a.id)(0),j=h(a,b)||e,k=f(a),l=g(a);return d.axis_rotated&&(0<a.value&&e>l||a.value<0&&l>e)&&(l=e),[[k,l-(e-j)],[k,l-(e-j)],[k,l-(e-j)],[k,l-(e-j)]]}},i.lineWithRegions=function(a,b,c,d){function e(a,b){var c;for(c=0;c<b.length;c++)if(b[c].start<a&&a<=b[c].end)return!0;return!1}function f(a){return"M"+a[0][0]+" "+a[0][1]+" "+a[1][0]+" "+a[1][1]}var g,h,i,j,k,l,m,n,o,r,s,t,u=this,v=u.config,w=-1,x="M",y=u.isCategorized()?.5:0,z=[];if(q(d))for(g=0;g<d.length;g++)z[g]={},z[g].start=p(d[g].start)?a[0].x:u.isTimeSeries()?u.parseDate(d[g].start):d[g].start,z[g].end=p(d[g].end)?a[a.length-1].x:u.isTimeSeries()?u.parseDate(d[g].end):d[g].end;for(s=v.axis_rotated?function(a){return c(a.value)}:function(a){return b(a.x)},t=v.axis_rotated?function(a){return b(a.x)}:function(a){return c(a.value)},i=u.isTimeSeries()?function(a,d,e,g){var h,i=a.x.getTime(),j=d.x-a.x,l=new Date(i+j*e),m=new Date(i+j*(e+g));return h=v.axis_rotated?[[c(k(e)),b(l)],[c(k(e+g)),b(m)]]:[[b(l),c(k(e))],[b(m),c(k(e+g))]],f(h)}:function(a,d,e,g){var h;return h=v.axis_rotated?[[c(k(e),!0),b(j(e))],[c(k(e+g),!0),b(j(e+g))]]:[[b(j(e),!0),c(k(e))],[b(j(e+g),!0),c(k(e+g))]],f(h)},g=0;g<a.length;g++){if(p(z)||!e(a[g].x,z))x+=" "+s(a[g])+" "+t(a[g]);else for(j=u.getScale(a[g-1].x+y,a[g].x+y,u.isTimeSeries()),k=u.getScale(a[g-1].value,a[g].value),l=b(a[g].x)-b(a[g-1].x),m=c(a[g].value)-c(a[g-1].value),n=Math.sqrt(Math.pow(l,2)+Math.pow(m,2)),o=2/n,r=2*o,h=o;1>=h;h+=r)x+=i(a[g-1],a[g],h,o);w=a[g].x}return x},i.updateArea=function(a){var b=this,c=b.d3;b.mainArea=b.main.selectAll("."+l.areas).selectAll("."+l.area).data(b.lineData.bind(b)),b.mainArea.enter().append("path").attr("class",b.classArea.bind(b)).style("fill",b.color).style("opacity",function(){return b.orgAreaOpacity=+c.select(this).style("opacity"),0}),b.mainArea.style("opacity",b.orgAreaOpacity),b.mainArea.exit().transition().duration(a).style("opacity",0).remove()},i.redrawArea=function(a,b){return[(b?this.mainArea.transition():this.mainArea).attr("d",a).style("fill",this.color).style("opacity",this.orgAreaOpacity)]},i.generateDrawArea=function(a,b){var c=this,d=c.config,e=c.d3.svg.area(),f=c.generateGetAreaPoints(a,b),g=b?c.getSubYScale:c.getYScale,h=function(a){return(b?c.subxx:c.xx).call(c,a)},i=function(a,b){return d.data_groups.length>0?f(a,b)[0][1]:g.call(c,a.id)(c.getAreaBaseValue(a.id))},j=function(a,b){return d.data_groups.length>0?f(a,b)[1][1]:g.call(c,a.id)(a.value)};return e=d.axis_rotated?e.x0(i).x1(j).y(h):e.x(h).y0(i).y1(j),d.line_connectNull||(e=e.defined(function(a){return null!==a.value})),function(a){var b,f=d.line_connectNull?c.filterRemoveNull(a.values):a.values,g=0,h=0;return c.isAreaType(a)?(c.isStepType(a)&&(f=c.convertValuesToStep(f)),b=e.interpolate(c.getInterpolate(a))(f)):(f[0]&&(g=c.x(f[0].x),h=c.getYScale(a.id)(f[0].value)),b=d.axis_rotated?"M "+h+" "+g:"M "+g+" "+h),b?b:"M 0 0"}},i.getAreaBaseValue=function(){return 0},i.generateGetAreaPoints=function(a,b){var c=this,d=c.config,e=a.__max__+1,f=c.getShapeX(0,e,a,!!b),g=c.getShapeY(!!b),h=c.getShapeOffset(c.isAreaType,a,!!b),i=b?c.getSubYScale:c.getYScale;return function(a,b){var e=i.call(c,a.id)(0),j=h(a,b)||e,k=f(a),l=g(a);return d.axis_rotated&&(0<a.value&&e>l||a.value<0&&l>e)&&(l=e),[[k,j],[k,l-(e-j)],[k,l-(e-j)],[k,j]]}},i.updateCircle=function(){var a=this;a.mainCircle=a.main.selectAll("."+l.circles).selectAll("."+l.circle).data(a.lineOrScatterData.bind(a)),a.mainCircle.enter().append("circle").attr("class",a.classCircle.bind(a)).attr("r",a.pointR.bind(a)).style("fill",a.color),a.mainCircle.style("opacity",a.initialOpacityForCircle.bind(a)),a.mainCircle.exit().remove()},i.redrawCircle=function(a,b,c){var d=this.main.selectAll("."+l.selectedCircle);return[(c?this.mainCircle.transition():this.mainCircle).style("opacity",this.opacityForCircle.bind(this)).style("fill",this.color).attr("cx",a).attr("cy",b),(c?d.transition():d).attr("cx",a).attr("cy",b)]},i.circleX=function(a){return a.x||0===a.x?this.x(a.x):null},i.updateCircleY=function(){var a,b,c=this;c.config.data_groups.length>0?(a=c.getShapeIndices(c.isLineType),b=c.generateGetLinePoints(a),c.circleY=function(a,c){return b(a,c)[0][1]}):c.circleY=function(a){return c.getYScale(a.id)(a.value)}},i.getCircles=function(a,b){var c=this;return(b?c.main.selectAll("."+l.circles+c.getTargetSelectorSuffix(b)):c.main).selectAll("."+l.circle+(m(a)?"-"+a:""))},i.expandCircles=function(a,b,c){var d=this,e=d.pointExpandedR.bind(d);c&&d.unexpandCircles(),d.getCircles(a,b).classed(l.EXPANDED,!0).attr("r",e)},i.unexpandCircles=function(a){var b=this,c=b.pointR.bind(b);b.getCircles(a).filter(function(){return b.d3.select(this).classed(l.EXPANDED)}).classed(l.EXPANDED,!1).attr("r",c)},i.pointR=function(a){var b=this,c=b.config;return b.isStepType(a)?0:n(c.point_r)?c.point_r(a):c.point_r},i.pointExpandedR=function(a){var b=this,c=b.config;return c.point_focus_expand_enabled?c.point_focus_expand_r?c.point_focus_expand_r:1.75*b.pointR(a):b.pointR(a)},i.pointSelectR=function(a){var b=this,c=b.config;return c.point_select_r?c.point_select_r:4*b.pointR(a)},i.isWithinCircle=function(a,b){var c=this.d3,d=c.mouse(a),e=c.select(a),f=+e.attr("cx"),g=+e.attr("cy");return Math.sqrt(Math.pow(f-d[0],2)+Math.pow(g-d[1],2))<b},i.isWithinStep=function(a,b){return Math.abs(b-this.d3.mouse(a)[1])<30},i.initBar=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.chartBars)},i.updateTargetsForBar=function(a){var b,c,d=this,e=d.config,f=d.classChartBar.bind(d),g=d.classBars.bind(d),h=d.classFocus.bind(d);b=d.main.select("."+l.chartBars).selectAll("."+l.chartBar).data(a).attr("class",function(a){return f(a)+h(a)}),c=b.enter().append("g").attr("class",f).style("opacity",0).style("pointer-events","none"),c.append("g").attr("class",g).style("cursor",function(a){return e.data_selection_isselectable(a)?"pointer":null})},i.updateBar=function(a){var b=this,c=b.barData.bind(b),d=b.classBar.bind(b),e=b.initialOpacity.bind(b),f=function(a){return b.color(a.id)};b.mainBar=b.main.selectAll("."+l.bars).selectAll("."+l.bar).data(c),b.mainBar.enter().append("path").attr("class",d).style("stroke",f).style("fill",f),b.mainBar.style("opacity",e),b.mainBar.exit().transition().duration(a).style("opacity",0).remove()},i.redrawBar=function(a,b){return[(b?this.mainBar.transition():this.mainBar).attr("d",a).style("fill",this.color).style("opacity",1)]},i.getBarW=function(a,b){var c=this,d=c.config,e="number"==typeof d.bar_width?d.bar_width:b?a.tickInterval()*d.bar_width_ratio/b:0;return d.bar_width_max&&e>d.bar_width_max?d.bar_width_max:e},i.getBars=function(a,b){var c=this;return(b?c.main.selectAll("."+l.bars+c.getTargetSelectorSuffix(b)):c.main).selectAll("."+l.bar+(m(a)?"-"+a:""))},i.expandBars=function(a,b,c){var d=this;c&&d.unexpandBars(),d.getBars(a,b).classed(l.EXPANDED,!0)},i.unexpandBars=function(a){var b=this;b.getBars(a).classed(l.EXPANDED,!1)},i.generateDrawBar=function(a,b){var c=this,d=c.config,e=c.generateGetBarPoints(a,b);return function(a,b){var c=e(a,b),f=d.axis_rotated?1:0,g=d.axis_rotated?0:1,h="M "+c[0][f]+","+c[0][g]+" L"+c[1][f]+","+c[1][g]+" L"+c[2][f]+","+c[2][g]+" L"+c[3][f]+","+c[3][g]+" z";return h}},i.generateGetBarPoints=function(a,b){var c=this,d=b?c.subXAxis:c.xAxis,e=a.__max__+1,f=c.getBarW(d,e),g=c.getShapeX(f,e,a,!!b),h=c.getShapeY(!!b),i=c.getShapeOffset(c.isBarType,a,!!b),j=b?c.getSubYScale:c.getYScale;
return function(a,b){var d=j.call(c,a.id)(0),e=i(a,b)||d,k=g(a),l=h(a);return c.config.axis_rotated&&(0<a.value&&d>l||a.value<0&&l>d)&&(l=d),[[k,e],[k,l-(d-e)],[k+f,l-(d-e)],[k+f,e]]}},i.isWithinBar=function(a){var b=this.d3.mouse(a),c=a.getBoundingClientRect(),d=a.pathSegList.getItem(0),e=a.pathSegList.getItem(1),f=Math.min(d.x,e.x),g=Math.min(d.y,e.y),h=c.width,i=c.height,j=2,k=f-j,l=f+h+j,m=g+i+j,n=g-j;return k<b[0]&&b[0]<l&&n<b[1]&&b[1]<m},i.initText=function(){var a=this;a.main.select("."+l.chart).append("g").attr("class",l.chartTexts),a.mainText=a.d3.selectAll([])},i.updateTargetsForText=function(a){var b,c,d=this,e=d.classChartText.bind(d),f=d.classTexts.bind(d),g=d.classFocus.bind(d);b=d.main.select("."+l.chartTexts).selectAll("."+l.chartText).data(a).attr("class",function(a){return e(a)+g(a)}),c=b.enter().append("g").attr("class",e).style("opacity",0).style("pointer-events","none"),c.append("g").attr("class",f)},i.updateText=function(a){var b=this,c=b.config,d=b.barOrLineData.bind(b),e=b.classText.bind(b);b.mainText=b.main.selectAll("."+l.texts).selectAll("."+l.text).data(d),b.mainText.enter().append("text").attr("class",e).attr("text-anchor",function(a){return c.axis_rotated?a.value<0?"end":"start":"middle"}).style("stroke","none").style("fill",function(a){return b.color(a)}).style("fill-opacity",0),b.mainText.text(function(a,c,d){return b.dataLabelFormat(a.id)(a.value,a.id,c,d)}),b.mainText.exit().transition().duration(a).style("fill-opacity",0).remove()},i.redrawText=function(a,b,c,d){return[(d?this.mainText.transition():this.mainText).attr("x",a).attr("y",b).style("fill",this.color).style("fill-opacity",c?0:this.opacityForText.bind(this))]},i.getTextRect=function(a,b){var c,d=this.d3.select("body").append("div").classed("c3",!0),e=d.append("svg").style("visibility","hidden").style("position","fixed").style("top",0).style("left",0);return e.selectAll(".dummy").data([a]).enter().append("text").classed(b?b:"",!0).text(a).each(function(){c=this.getBoundingClientRect()}),d.remove(),c},i.generateXYForText=function(a,b,c,d){var e=this,f=e.generateGetAreaPoints(a,!1),g=e.generateGetBarPoints(b,!1),h=e.generateGetLinePoints(c,!1),i=d?e.getXForText:e.getYForText;return function(a,b){var c=e.isAreaType(a)?f:e.isBarType(a)?g:h;return i.call(e,c(a,b),a,this)}},i.getXForText=function(a,b,c){var d,e,f=this,g=c.getBoundingClientRect();return f.config.axis_rotated?(e=f.isBarType(b)?4:6,d=a[2][1]+e*(b.value<0?-1:1)):d=f.hasType("bar")?(a[2][0]+a[0][0])/2:a[0][0],null===b.value&&(d>f.width?d=f.width-g.width:0>d&&(d=4)),d},i.getYForText=function(a,b,c){var d,e=this,f=c.getBoundingClientRect();return e.config.axis_rotated?d=(a[0][0]+a[2][0]+.6*f.height)/2:(d=a[2][1],b.value<0?(d+=f.height,e.isBarType(b)&&e.isSafari()?d-=3:!e.isBarType(b)&&e.isChrome()&&(d+=3)):d+=e.isBarType(b)?-3:-6),null!==b.value||e.config.axis_rotated||(d<f.height?d=f.height:d>this.height&&(d=this.height-4)),d},i.setTargetType=function(a,b){var c=this,d=c.config;c.mapToTargetIds(a).forEach(function(a){c.withoutFadeIn[a]=b===d.data_types[a],d.data_types[a]=b}),a||(d.data_type=b)},i.hasType=function(a,b){var c=this,d=c.config.data_types,e=!1;return b=b||c.data.targets,b&&b.length?b.forEach(function(b){var c=d[b.id];(c&&c.indexOf(a)>=0||!c&&"line"===a)&&(e=!0)}):Object.keys(d).length?Object.keys(d).forEach(function(b){d[b]===a&&(e=!0)}):e=c.config.data_type===a,e},i.hasArcType=function(a){return this.hasType("pie",a)||this.hasType("donut",a)||this.hasType("gauge",a)},i.isLineType=function(a){var b=this.config,c=o(a)?a:a.id;return!b.data_types[c]||["line","spline","area","area-spline","step","area-step"].indexOf(b.data_types[c])>=0},i.isStepType=function(a){var b=o(a)?a:a.id;return["step","area-step"].indexOf(this.config.data_types[b])>=0},i.isSplineType=function(a){var b=o(a)?a:a.id;return["spline","area-spline"].indexOf(this.config.data_types[b])>=0},i.isAreaType=function(a){var b=o(a)?a:a.id;return["area","area-spline","area-step"].indexOf(this.config.data_types[b])>=0},i.isBarType=function(a){var b=o(a)?a:a.id;return"bar"===this.config.data_types[b]},i.isScatterType=function(a){var b=o(a)?a:a.id;return"scatter"===this.config.data_types[b]},i.isPieType=function(a){var b=o(a)?a:a.id;return"pie"===this.config.data_types[b]},i.isGaugeType=function(a){var b=o(a)?a:a.id;return"gauge"===this.config.data_types[b]},i.isDonutType=function(a){var b=o(a)?a:a.id;return"donut"===this.config.data_types[b]},i.isArcType=function(a){return this.isPieType(a)||this.isDonutType(a)||this.isGaugeType(a)},i.lineData=function(a){return this.isLineType(a)?[a]:[]},i.arcData=function(a){return this.isArcType(a.data)?[a]:[]},i.barData=function(a){return this.isBarType(a)?a.values:[]},i.lineOrScatterData=function(a){return this.isLineType(a)||this.isScatterType(a)?a.values:[]},i.barOrLineData=function(a){return this.isBarType(a)||this.isLineType(a)?a.values:[]},i.initGrid=function(){var a=this,b=a.config,c=a.d3;a.grid=a.main.append("g").attr("clip-path",a.clipPathForGrid).attr("class",l.grid),b.grid_x_show&&a.grid.append("g").attr("class",l.xgrids),b.grid_y_show&&a.grid.append("g").attr("class",l.ygrids),b.grid_focus_show&&a.grid.append("g").attr("class",l.xgridFocus).append("line").attr("class",l.xgridFocus),a.xgrid=c.selectAll([]),b.grid_lines_front||a.initGridLines()},i.initGridLines=function(){var a=this,b=a.d3;a.gridLines=a.main.append("g").attr("clip-path",a.clipPathForGrid).attr("class",l.grid+" "+l.gridLines),a.gridLines.append("g").attr("class",l.xgridLines),a.gridLines.append("g").attr("class",l.ygridLines),a.xgridLines=b.selectAll([])},i.updateXGrid=function(a){var b=this,c=b.config,d=b.d3,e=b.generateGridData(c.grid_x_type,b.x),f=b.isCategorized()?b.xAxis.tickOffset():0;b.xgridAttr=c.axis_rotated?{x1:0,x2:b.width,y1:function(a){return b.x(a)-f},y2:function(a){return b.x(a)-f}}:{x1:function(a){return b.x(a)+f},x2:function(a){return b.x(a)+f},y1:0,y2:b.height},b.xgrid=b.main.select("."+l.xgrids).selectAll("."+l.xgrid).data(e),b.xgrid.enter().append("line").attr("class",l.xgrid),a||b.xgrid.attr(b.xgridAttr).style("opacity",function(){return+d.select(this).attr(c.axis_rotated?"y1":"x1")===(c.axis_rotated?b.height:0)?0:1}),b.xgrid.exit().remove()},i.updateYGrid=function(){var a=this,b=a.config,c=a.yAxis.tickValues()||a.y.ticks(b.grid_y_ticks);a.ygrid=a.main.select("."+l.ygrids).selectAll("."+l.ygrid).data(c),a.ygrid.enter().append("line").attr("class",l.ygrid),a.ygrid.attr("x1",b.axis_rotated?a.y:0).attr("x2",b.axis_rotated?a.y:a.width).attr("y1",b.axis_rotated?0:a.y).attr("y2",b.axis_rotated?a.height:a.y),a.ygrid.exit().remove(),a.smoothLines(a.ygrid,"grid")},i.gridTextAnchor=function(a){return a.position?a.position:"end"},i.gridTextDx=function(a){return"start"===a.position?4:"middle"===a.position?0:-4},i.xGridTextX=function(a){return"start"===a.position?-this.height:"middle"===a.position?-this.height/2:0},i.yGridTextX=function(a){return"start"===a.position?0:"middle"===a.position?this.width/2:this.width},i.updateGrid=function(a){var b,c,d,e=this,f=e.main,g=e.config;e.grid.style("visibility",e.hasArcType()?"hidden":"visible"),f.select("line."+l.xgridFocus).style("visibility","hidden"),g.grid_x_show&&e.updateXGrid(),e.xgridLines=f.select("."+l.xgridLines).selectAll("."+l.xgridLine).data(g.grid_x_lines),b=e.xgridLines.enter().append("g").attr("class",function(a){return l.xgridLine+(a["class"]?" "+a["class"]:"")}),b.append("line").style("opacity",0),b.append("text").attr("text-anchor",e.gridTextAnchor).attr("transform",g.axis_rotated?"":"rotate(-90)").attr("dx",e.gridTextDx).attr("dy",-5).style("opacity",0),e.xgridLines.exit().transition().duration(a).style("opacity",0).remove(),g.grid_y_show&&e.updateYGrid(),e.ygridLines=f.select("."+l.ygridLines).selectAll("."+l.ygridLine).data(g.grid_y_lines),c=e.ygridLines.enter().append("g").attr("class",function(a){return l.ygridLine+(a["class"]?" "+a["class"]:"")}),c.append("line").style("opacity",0),c.append("text").attr("text-anchor",e.gridTextAnchor).attr("transform",g.axis_rotated?"rotate(-90)":"").attr("dx",e.gridTextDx).attr("dy",-5).style("opacity",0),d=e.yv.bind(e),e.ygridLines.select("line").transition().duration(a).attr("x1",g.axis_rotated?d:0).attr("x2",g.axis_rotated?d:e.width).attr("y1",g.axis_rotated?0:d).attr("y2",g.axis_rotated?e.height:d).style("opacity",1),e.ygridLines.select("text").transition().duration(a).attr("x",g.axis_rotated?e.xGridTextX.bind(e):e.yGridTextX.bind(e)).attr("y",d).text(function(a){return a.text}).style("opacity",1),e.ygridLines.exit().transition().duration(a).style("opacity",0).remove()},i.redrawGrid=function(a){var b=this,c=b.config,d=b.xv.bind(b),e=b.xgridLines.select("line"),f=b.xgridLines.select("text");return[(a?e.transition():e).attr("x1",c.axis_rotated?0:d).attr("x2",c.axis_rotated?b.width:d).attr("y1",c.axis_rotated?d:0).attr("y2",c.axis_rotated?d:b.height).style("opacity",1),(a?f.transition():f).attr("x",c.axis_rotated?b.yGridTextX.bind(b):b.xGridTextX.bind(b)).attr("y",d).text(function(a){return a.text}).style("opacity",1)]},i.showXGridFocus=function(a){var b=this,c=b.config,d=a.filter(function(a){return a&&m(a.value)}),e=b.main.selectAll("line."+l.xgridFocus),f=b.xx.bind(b);c.tooltip_show&&(b.hasType("scatter")||b.hasArcType()||(e.style("visibility","visible").data([d[0]]).attr(c.axis_rotated?"y1":"x1",f).attr(c.axis_rotated?"y2":"x2",f),b.smoothLines(e,"grid")))},i.hideXGridFocus=function(){this.main.select("line."+l.xgridFocus).style("visibility","hidden")},i.updateXgridFocus=function(){var a=this,b=a.config;a.main.select("line."+l.xgridFocus).attr("x1",b.axis_rotated?0:-10).attr("x2",b.axis_rotated?a.width:-10).attr("y1",b.axis_rotated?-10:0).attr("y2",b.axis_rotated?-10:a.height)},i.generateGridData=function(a,b){var c,d,e,f,g=this,h=[],i=g.main.select("."+l.axisX).selectAll(".tick").size();if("year"===a)for(c=g.getXDomain(),d=c[0].getFullYear(),e=c[1].getFullYear(),f=d;e>=f;f++)h.push(new Date(f+"-01-01 00:00:00"));else h=b.ticks(10),h.length>i&&(h=h.filter(function(a){return(""+a).indexOf(".")<0}));return h},i.getGridFilterToRemove=function(a){return a?function(b){var c=!1;return[].concat(a).forEach(function(a){("value"in a&&b.value===a.value||"class"in a&&b["class"]===a["class"])&&(c=!0)}),c}:function(){return!0}},i.removeGridLines=function(a,b){var c=this,d=c.config,e=c.getGridFilterToRemove(a),f=function(a){return!e(a)},g=b?l.xgridLines:l.ygridLines,h=b?l.xgridLine:l.ygridLine;c.main.select("."+g).selectAll("."+h).filter(e).transition().duration(d.transition_duration).style("opacity",0).remove(),b?d.grid_x_lines=d.grid_x_lines.filter(f):d.grid_y_lines=d.grid_y_lines.filter(f)},i.initTooltip=function(){var a,b=this,c=b.config;if(b.tooltip=b.selectChart.style("position","relative").append("div").attr("class",l.tooltipContainer).style("position","absolute").style("pointer-events","none").style("display","none"),c.tooltip_init_show){if(b.isTimeSeries()&&o(c.tooltip_init_x)){for(c.tooltip_init_x=b.parseDate(c.tooltip_init_x),a=0;a<b.data.targets[0].values.length&&b.data.targets[0].values[a].x-c.tooltip_init_x!==0;a++);c.tooltip_init_x=a}b.tooltip.html(c.tooltip_contents.call(b,b.data.targets.map(function(a){return b.addName(a.values[c.tooltip_init_x])}),b.axis.getXAxisTickFormat(),b.getYFormat(b.hasArcType()),b.color)),b.tooltip.style("top",c.tooltip_init_position.top).style("left",c.tooltip_init_position.left).style("display","block")}},i.getTooltipContent=function(a,b,c,d){var e,f,g,h,i,j,k=this,m=k.config,n=m.tooltip_format_title||b,o=m.tooltip_format_name||function(a){return a},p=m.tooltip_format_value||c;for(f=0;f<a.length;f++)a[f]&&(a[f].value||0===a[f].value)&&(e||(g=n?n(a[f].x):a[f].x,e="<table class='"+l.tooltip+"'>"+(g||0===g?"<tr><th colspan='2'>"+g+"</th></tr>":"")),h=p(a[f].value,a[f].ratio,a[f].id,a[f].index),void 0!==h&&(i=o(a[f].name,a[f].ratio,a[f].id,a[f].index),j=k.levelColor?k.levelColor(a[f].value):d(a[f].id),e+="<tr class='"+l.tooltipName+"-"+a[f].id+"'>",e+="<td class='name'><span style='background-color:"+j+"'></span>"+i+"</td>",e+="<td class='value'>"+h+"</td>",e+="</tr>"));return e+"</table>"},i.tooltipPosition=function(a,b,c,d){var e,f,g,h,i,j=this,k=j.config,l=j.d3,m=j.hasArcType(),n=l.mouse(d);return m?(f=(j.width-(j.isLegendRight?j.getLegendWidth():0))/2+n[0],h=j.height/2+n[1]+20):(e=j.getSvgLeft(!0),k.axis_rotated?(f=e+n[0]+100,g=f+b,i=j.currentWidth-j.getCurrentPaddingRight(),h=j.x(a[0].x)+20):(f=e+j.getCurrentPaddingLeft(!0)+j.x(a[0].x)+20,g=f+b,i=e+j.currentWidth-j.getCurrentPaddingRight(),h=n[1]+15),g>i&&(f-=g-i+20),h+c>j.currentHeight&&(h-=c+30)),0>h&&(h=0),{top:h,left:f}},i.showTooltip=function(a,b){var c,d,e,f=this,g=f.config,h=f.hasArcType(),j=a.filter(function(a){return a&&m(a.value)}),k=g.tooltip_position||i.tooltipPosition;0!==j.length&&g.tooltip_show&&(f.tooltip.html(g.tooltip_contents.call(f,a,f.axis.getXAxisTickFormat(),f.getYFormat(h),f.color)).style("display","block"),c=f.tooltip.property("offsetWidth"),d=f.tooltip.property("offsetHeight"),e=k.call(this,j,c,d,b),f.tooltip.style("top",e.top+"px").style("left",e.left+"px"))},i.hideTooltip=function(){this.tooltip.style("display","none")},i.initLegend=function(){var a=this;return a.legendItemTextBox={},a.legendHasRendered=!1,a.legend=a.svg.append("g").attr("transform",a.getTranslate("legend")),a.config.legend_show?void a.updateLegendWithDefaults():(a.legend.style("visibility","hidden"),void(a.hiddenLegendIds=a.mapToIds(a.data.targets)))},i.updateLegendWithDefaults=function(){var a=this;a.updateLegend(a.mapToIds(a.data.targets),{withTransform:!1,withTransitionForTransform:!1,withTransition:!1})},i.updateSizeForLegend=function(a,b){var c=this,d=c.config,e={top:c.isLegendTop?c.getCurrentPaddingTop()+d.legend_inset_y+5.5:c.currentHeight-a-c.getCurrentPaddingBottom()-d.legend_inset_y,left:c.isLegendLeft?c.getCurrentPaddingLeft()+d.legend_inset_x+.5:c.currentWidth-b-c.getCurrentPaddingRight()-d.legend_inset_x+.5};c.margin3={top:c.isLegendRight?0:c.isLegendInset?e.top:c.currentHeight-a,right:0/0,bottom:0,left:c.isLegendRight?c.currentWidth-b:c.isLegendInset?e.left:0}},i.transformLegend=function(a){var b=this;(a?b.legend.transition():b.legend).attr("transform",b.getTranslate("legend"))},i.updateLegendStep=function(a){this.legendStep=a},i.updateLegendItemWidth=function(a){this.legendItemWidth=a},i.updateLegendItemHeight=function(a){this.legendItemHeight=a},i.getLegendWidth=function(){var a=this;return a.config.legend_show?a.isLegendRight||a.isLegendInset?a.legendItemWidth*(a.legendStep+1):a.currentWidth:0},i.getLegendHeight=function(){var a=this,b=0;return a.config.legend_show&&(b=a.isLegendRight?a.currentHeight:Math.max(20,a.legendItemHeight)*(a.legendStep+1)),b},i.opacityForLegend=function(a){return a.classed(l.legendItemHidden)?null:1},i.opacityForUnfocusedLegend=function(a){return a.classed(l.legendItemHidden)?null:.3},i.toggleFocusLegend=function(a,b){var c=this;a=c.mapToTargetIds(a),c.legend.selectAll("."+l.legendItem).filter(function(b){return a.indexOf(b)>=0}).classed(l.legendItemFocused,b).transition().duration(100).style("opacity",function(){var a=b?c.opacityForLegend:c.opacityForUnfocusedLegend;return a.call(c,c.d3.select(this))})},i.revertLegend=function(){var a=this,b=a.d3;a.legend.selectAll("."+l.legendItem).classed(l.legendItemFocused,!1).transition().duration(100).style("opacity",function(){return a.opacityForLegend(b.select(this))})},i.showLegend=function(a){var b=this,c=b.config;c.legend_show||(c.legend_show=!0,b.legend.style("visibility","visible"),b.legendHasRendered||b.updateLegendWithDefaults()),b.removeHiddenLegendIds(a),b.legend.selectAll(b.selectorLegends(a)).style("visibility","visible").transition().style("opacity",function(){return b.opacityForLegend(b.d3.select(this))})},i.hideLegend=function(a){var b=this,c=b.config;c.legend_show&&u(a)&&(c.legend_show=!1,b.legend.style("visibility","hidden")),b.addHiddenLegendIds(a),b.legend.selectAll(b.selectorLegends(a)).style("opacity",0).style("visibility","hidden")},i.clearLegendItemTextBoxCache=function(){this.legendItemTextBox={}},i.updateLegend=function(a,b,c){function d(a,b){return u.legendItemTextBox[b]||(u.legendItemTextBox[b]=u.getTextRect(a.textContent,l.legendItem)),u.legendItemTextBox[b]}function e(b,c,e){function f(a,b){b||(g=(o-D-n)/2,B>g&&(g=(o-n)/2,D=0,J++)),I[a]=J,H[J]=u.isLegendInset?10:g,E[a]=D,D+=n}var g,h,i=0===e,j=e===a.length-1,k=d(b,c),l=k.width+C+(!j||u.isLegendRight||u.isLegendInset?y:0),m=k.height+x,n=u.isLegendRight||u.isLegendInset?m:l,o=u.isLegendRight||u.isLegendInset?u.getLegendHeight():u.getLegendWidth();return i&&(D=0,J=0,z=0,A=0),v.legend_show&&!u.isLegendToShow(c)?void(F[c]=G[c]=I[c]=E[c]=0):(F[c]=l,G[c]=m,(!z||l>=z)&&(z=l),(!A||m>=A)&&(A=m),h=u.isLegendRight||u.isLegendInset?A:z,void(v.legend_equally?(Object.keys(F).forEach(function(a){F[a]=z}),Object.keys(G).forEach(function(a){G[a]=A}),g=(o-h*a.length)/2,B>g?(D=0,J=0,a.forEach(function(a){f(a)})):f(c,!0)):f(c)))}var f,g,h,i,j,k,m,n,o,p,r,s,t,u=this,v=u.config,x=4,y=10,z=0,A=0,B=10,C=15,D=0,E={},F={},G={},H=[0],I={},J=0;b=b||{},n=w(b,"withTransition",!0),o=w(b,"withTransitionForTransform",!0),u.isLegendInset&&(J=v.legend_inset_step?v.legend_inset_step:a.length,u.updateLegendStep(J)),u.isLegendRight?(f=function(a){return z*I[a]},i=function(a){return H[I[a]]+E[a]}):u.isLegendInset?(f=function(a){return z*I[a]+10},i=function(a){return H[I[a]]+E[a]}):(f=function(a){return H[I[a]]+E[a]},i=function(a){return A*I[a]}),g=function(a,b){return f(a,b)+14},j=function(a,b){return i(a,b)+9},h=function(a,b){return f(a,b)},k=function(a,b){return i(a,b)-5},m=u.legend.selectAll("."+l.legendItem).data(a).enter().append("g").attr("class",function(a){return u.generateClass(l.legendItem,a)}).style("visibility",function(a){return u.isLegendToShow(a)?"visible":"hidden"}).style("cursor","pointer").on("click",function(a){v.legend_item_onclick?v.legend_item_onclick.call(u,a):u.d3.event.altKey?(u.api.hide(),u.api.show(a)):(u.api.toggle(a),u.isTargetToShow(a)?u.api.focus(a):u.api.revert())}).on("mouseover",function(a){u.d3.select(this).classed(l.legendItemFocused,!0),!u.transiting&&u.isTargetToShow(a)&&u.api.focus(a),v.legend_item_onmouseover&&v.legend_item_onmouseover.call(u,a)}).on("mouseout",function(a){u.d3.select(this).classed(l.legendItemFocused,!1),u.api.revert(),v.legend_item_onmouseout&&v.legend_item_onmouseout.call(u,a)}),m.append("text").text(function(a){return q(v.data_names[a])?v.data_names[a]:a}).each(function(a,b){e(this,a,b)}).style("pointer-events","none").attr("x",u.isLegendRight||u.isLegendInset?g:-200).attr("y",u.isLegendRight||u.isLegendInset?-200:j),m.append("rect").attr("class",l.legendItemEvent).style("fill-opacity",0).attr("x",u.isLegendRight||u.isLegendInset?h:-200).attr("y",u.isLegendRight||u.isLegendInset?-200:k),m.append("rect").attr("class",l.legendItemTile).style("pointer-events","none").style("fill",u.color).attr("x",u.isLegendRight||u.isLegendInset?g:-200).attr("y",u.isLegendRight||u.isLegendInset?-200:i).attr("width",10).attr("height",10),t=u.legend.select("."+l.legendBackground+" rect"),u.isLegendInset&&z>0&&0===t.size()&&(t=u.legend.insert("g","."+l.legendItem).attr("class",l.legendBackground).append("rect")),p=u.legend.selectAll("text").data(a).text(function(a){return q(v.data_names[a])?v.data_names[a]:a}).each(function(a,b){e(this,a,b)}),(n?p.transition():p).attr("x",g).attr("y",j),r=u.legend.selectAll("rect."+l.legendItemEvent).data(a),(n?r.transition():r).attr("width",function(a){return F[a]}).attr("height",function(a){return G[a]}).attr("x",h).attr("y",k),s=u.legend.selectAll("rect."+l.legendItemTile).data(a),(n?s.transition():s).style("fill",u.color).attr("x",f).attr("y",i),t&&(n?t.transition():t).attr("height",u.getLegendHeight()-12).attr("width",z*(J+1)+10),u.legend.selectAll("."+l.legendItem).classed(l.legendItemHidden,function(a){return!u.isTargetToShow(a)}),u.updateLegendItemWidth(z),u.updateLegendItemHeight(A),u.updateLegendStep(J),u.updateSizes(),u.updateScales(),u.updateSvgSize(),u.transformAll(o,c),u.legendHasRendered=!0},c(b,f),f.prototype.init=function(){var a=this.owner,b=a.config,c=a.main;a.axes.x=c.append("g").attr("class",l.axis+" "+l.axisX).attr("clip-path",a.clipPathForXAxis).attr("transform",a.getTranslate("x")).style("visibility",b.axis_x_show?"visible":"hidden"),a.axes.x.append("text").attr("class",l.axisXLabel).attr("transform",b.axis_rotated?"rotate(-90)":"").style("text-anchor",this.textAnchorForXAxisLabel.bind(this)),a.axes.y=c.append("g").attr("class",l.axis+" "+l.axisY).attr("clip-path",b.axis_y_inner?"":a.clipPathForYAxis).attr("transform",a.getTranslate("y")).style("visibility",b.axis_y_show?"visible":"hidden"),a.axes.y.append("text").attr("class",l.axisYLabel).attr("transform",b.axis_rotated?"":"rotate(-90)").style("text-anchor",this.textAnchorForYAxisLabel.bind(this)),a.axes.y2=c.append("g").attr("class",l.axis+" "+l.axisY2).attr("transform",a.getTranslate("y2")).style("visibility",b.axis_y2_show?"visible":"hidden"),a.axes.y2.append("text").attr("class",l.axisY2Label).attr("transform",b.axis_rotated?"":"rotate(-90)").style("text-anchor",this.textAnchorForY2AxisLabel.bind(this))},f.prototype.getXAxis=function(a,b,c,d,e,f,h){var i=this.owner,j=i.config,k={isCategory:i.isCategorized(),withOuterTick:e,tickMultiline:j.axis_x_tick_multiline,tickWidth:j.axis_x_tick_width,tickTextRotate:h?0:j.axis_x_tick_rotate,withoutTransition:f},l=g(i.d3,k).scale(a).orient(b);return i.isTimeSeries()&&d&&(d=d.map(function(a){return i.parseDate(a)})),l.tickFormat(c).tickValues(d),i.isCategorized()&&(l.tickCentered(j.axis_x_tick_centered),u(j.axis_x_tick_culling)&&(j.axis_x_tick_culling=!1)),l},f.prototype.updateXAxisTickValues=function(a,b){var c,d=this.owner,e=d.config;return(e.axis_x_tick_fit||e.axis_x_tick_count)&&(c=this.generateTickValues(d.mapTargetsToUniqueXs(a),e.axis_x_tick_count,d.isTimeSeries())),b?b.tickValues(c):(d.xAxis.tickValues(c),d.subXAxis.tickValues(c)),c},f.prototype.getYAxis=function(a,b,c,d,e,f){var h={withOuterTick:e,withoutTransition:f},i=this.owner,j=i.d3,k=i.config,l=g(j,h).scale(a).orient(b).tickFormat(c);return i.isTimeSeriesY()?l.ticks(j.time[k.axis_y_tick_time_value],k.axis_y_tick_time_interval):l.tickValues(d),l},f.prototype.getId=function(a){var b=this.owner.config;return a in b.data_axes?b.data_axes[a]:"y"},f.prototype.getXAxisTickFormat=function(){var a=this.owner,b=a.config,c=a.isTimeSeries()?a.defaultAxisTimeFormat:a.isCategorized()?a.categoryName:function(a){return 0>a?a.toFixed(0):a};return b.axis_x_tick_format&&(n(b.axis_x_tick_format)?c=b.axis_x_tick_format:a.isTimeSeries()&&(c=function(c){return c?a.axisTimeFormat(b.axis_x_tick_format)(c):""})),n(c)?function(b){return c.call(a,b)}:c},f.prototype.getTickValues=function(a,b){return a?a:b?b.tickValues():void 0},f.prototype.getXAxisTickValues=function(){return this.getTickValues(this.owner.config.axis_x_tick_values,this.owner.xAxis)},f.prototype.getYAxisTickValues=function(){return this.getTickValues(this.owner.config.axis_y_tick_values,this.owner.yAxis)},f.prototype.getY2AxisTickValues=function(){return this.getTickValues(this.owner.config.axis_y2_tick_values,this.owner.y2Axis)},f.prototype.getLabelOptionByAxisId=function(a){var b,c=this.owner,d=c.config;return"y"===a?b=d.axis_y_label:"y2"===a?b=d.axis_y2_label:"x"===a&&(b=d.axis_x_label),b},f.prototype.getLabelText=function(a){var b=this.getLabelOptionByAxisId(a);return o(b)?b:b?b.text:null},f.prototype.setLabelText=function(a,b){var c=this.owner,d=c.config,e=this.getLabelOptionByAxisId(a);o(e)?"y"===a?d.axis_y_label=b:"y2"===a?d.axis_y2_label=b:"x"===a&&(d.axis_x_label=b):e&&(e.text=b)},f.prototype.getLabelPosition=function(a,b){var c=this.getLabelOptionByAxisId(a),d=c&&"object"==typeof c&&c.position?c.position:b;return{isInner:d.indexOf("inner")>=0,isOuter:d.indexOf("outer")>=0,isLeft:d.indexOf("left")>=0,isCenter:d.indexOf("center")>=0,isRight:d.indexOf("right")>=0,isTop:d.indexOf("top")>=0,isMiddle:d.indexOf("middle")>=0,isBottom:d.indexOf("bottom")>=0}},f.prototype.getXAxisLabelPosition=function(){return this.getLabelPosition("x",this.owner.config.axis_rotated?"inner-top":"inner-right")},f.prototype.getYAxisLabelPosition=function(){return this.getLabelPosition("y",this.owner.config.axis_rotated?"inner-right":"inner-top")},f.prototype.getY2AxisLabelPosition=function(){return this.getLabelPosition("y2",this.owner.config.axis_rotated?"inner-right":"inner-top")},f.prototype.getLabelPositionById=function(a){return"y2"===a?this.getY2AxisLabelPosition():"y"===a?this.getYAxisLabelPosition():this.getXAxisLabelPosition()},f.prototype.textForXAxisLabel=function(){return this.getLabelText("x")},f.prototype.textForYAxisLabel=function(){return this.getLabelText("y")},f.prototype.textForY2AxisLabel=function(){return this.getLabelText("y2")},f.prototype.xForAxisLabel=function(a,b){var c=this.owner;return a?b.isLeft?0:b.isCenter?c.width/2:c.width:b.isBottom?-c.height:b.isMiddle?-c.height/2:0},f.prototype.dxForAxisLabel=function(a,b){return a?b.isLeft?"0.5em":b.isRight?"-0.5em":"0":b.isTop?"-0.5em":b.isBottom?"0.5em":"0"},f.prototype.textAnchorForAxisLabel=function(a,b){return a?b.isLeft?"start":b.isCenter?"middle":"end":b.isBottom?"start":b.isMiddle?"middle":"end"},f.prototype.xForXAxisLabel=function(){return this.xForAxisLabel(!this.owner.config.axis_rotated,this.getXAxisLabelPosition())},f.prototype.xForYAxisLabel=function(){return this.xForAxisLabel(this.owner.config.axis_rotated,this.getYAxisLabelPosition())},f.prototype.xForY2AxisLabel=function(){return this.xForAxisLabel(this.owner.config.axis_rotated,this.getY2AxisLabelPosition())},f.prototype.dxForXAxisLabel=function(){return this.dxForAxisLabel(!this.owner.config.axis_rotated,this.getXAxisLabelPosition())},f.prototype.dxForYAxisLabel=function(){return this.dxForAxisLabel(this.owner.config.axis_rotated,this.getYAxisLabelPosition())},f.prototype.dxForY2AxisLabel=function(){return this.dxForAxisLabel(this.owner.config.axis_rotated,this.getY2AxisLabelPosition())},f.prototype.dyForXAxisLabel=function(){var a=this.owner,b=a.config,c=this.getXAxisLabelPosition();return b.axis_rotated?c.isInner?"1.2em":-25-this.getMaxTickWidth("x"):c.isInner?"-0.5em":b.axis_x_height?b.axis_x_height-10:"3em"},f.prototype.dyForYAxisLabel=function(){var a=this.owner,b=this.getYAxisLabelPosition();return a.config.axis_rotated?b.isInner?"-0.5em":"3em":b.isInner?"1.2em":-10-(a.config.axis_y_inner?0:this.getMaxTickWidth("y")+10)},f.prototype.dyForY2AxisLabel=function(){var a=this.owner,b=this.getY2AxisLabelPosition();return a.config.axis_rotated?b.isInner?"1.2em":"-2.2em":b.isInner?"-0.5em":15+(a.config.axis_y2_inner?0:this.getMaxTickWidth("y2")+15)},f.prototype.textAnchorForXAxisLabel=function(){var a=this.owner;return this.textAnchorForAxisLabel(!a.config.axis_rotated,this.getXAxisLabelPosition())},f.prototype.textAnchorForYAxisLabel=function(){var a=this.owner;return this.textAnchorForAxisLabel(a.config.axis_rotated,this.getYAxisLabelPosition())},f.prototype.textAnchorForY2AxisLabel=function(){var a=this.owner;return this.textAnchorForAxisLabel(a.config.axis_rotated,this.getY2AxisLabelPosition())},f.prototype.getMaxTickWidth=function(a,b){var c,d,e,f,g,h=this.owner,i=h.config,j=0;return b&&h.currentMaxTickWidths[a]?h.currentMaxTickWidths[a]:(h.svg&&(c=h.filterTargetsToShow(h.data.targets),"y"===a?(d=h.y.copy().domain(h.getYDomain(c,"y")),e=this.getYAxis(d,h.yOrient,i.axis_y_tick_format,h.yAxisTickValues,!1,!0)):"y2"===a?(d=h.y2.copy().domain(h.getYDomain(c,"y2")),e=this.getYAxis(d,h.y2Orient,i.axis_y2_tick_format,h.y2AxisTickValues,!1,!0)):(d=h.x.copy().domain(h.getXDomain(c)),e=this.getXAxis(d,h.xOrient,h.xAxisTickFormat,h.xAxisTickValues,!1,!0,!0),this.updateXAxisTickValues(c,e)),f=h.d3.select("body").append("div").classed("c3",!0),g=f.append("svg").style("visibility","hidden").style("position","fixed").style("top",0).style("left",0),g.append("g").call(e).each(function(){h.d3.select(this).selectAll("text").each(function(){var a=this.getBoundingClientRect();j<a.width&&(j=a.width)}),f.remove()})),h.currentMaxTickWidths[a]=0>=j?h.currentMaxTickWidths[a]:j,h.currentMaxTickWidths[a])},f.prototype.updateLabels=function(a){var b=this.owner,c=b.main.select("."+l.axisX+" ."+l.axisXLabel),d=b.main.select("."+l.axisY+" ."+l.axisYLabel),e=b.main.select("."+l.axisY2+" ."+l.axisY2Label);(a?c.transition():c).attr("x",this.xForXAxisLabel.bind(this)).attr("dx",this.dxForXAxisLabel.bind(this)).attr("dy",this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this)),(a?d.transition():d).attr("x",this.xForYAxisLabel.bind(this)).attr("dx",this.dxForYAxisLabel.bind(this)).attr("dy",this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this)),(a?e.transition():e).attr("x",this.xForY2AxisLabel.bind(this)).attr("dx",this.dxForY2AxisLabel.bind(this)).attr("dy",this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this))},f.prototype.getPadding=function(a,b,c,d){return m(a[b])?"ratio"===a.unit?a[b]*d:this.convertPixelsToAxisPadding(a[b],d):c},f.prototype.convertPixelsToAxisPadding=function(a,b){var c=this.owner,d=c.config.axis_rotated?c.width:c.height;return b*(a/d)},f.prototype.generateTickValues=function(a,b,c){var d,e,f,g,h,i,j,k=a;if(b)if(d=n(b)?b():b,1===d)k=[a[0]];else if(2===d)k=[a[0],a[a.length-1]];else if(d>2){for(g=d-2,e=a[0],f=a[a.length-1],h=(f-e)/(g+1),k=[e],i=0;g>i;i++)j=+e+h*(i+1),k.push(c?new Date(j):j);k.push(f)}return c||(k=k.sort(function(a,b){return a-b})),k},f.prototype.generateTransitions=function(a){var b=this.owner,c=b.axes;return{axisX:a?c.x.transition().duration(a):c.x,axisY:a?c.y.transition().duration(a):c.y,axisY2:a?c.y2.transition().duration(a):c.y2,axisSubX:a?c.subx.transition().duration(a):c.subx}},f.prototype.redraw=function(a,b){var c=this.owner;c.axes.x.style("opacity",b?0:1),c.axes.y.style("opacity",b?0:1),c.axes.y2.style("opacity",b?0:1),c.axes.subx.style("opacity",b?0:1),a.axisX.call(c.xAxis),a.axisY.call(c.yAxis),a.axisY2.call(c.y2Axis),a.axisSubX.call(c.subXAxis)},i.getClipPath=function(b){var c=a.navigator.appVersion.toLowerCase().indexOf("msie 9.")>=0;return"url("+(c?"":document.URL.split("#")[0])+"#"+b+")"},i.appendClip=function(a,b){return a.append("clipPath").attr("id",b).append("rect")},i.getAxisClipX=function(a){var b=Math.max(30,this.margin.left);return a?-(1+b):-(b-1)},i.getAxisClipY=function(a){return a?-20:-this.margin.top},i.getXAxisClipX=function(){var a=this;return a.getAxisClipX(!a.config.axis_rotated)},i.getXAxisClipY=function(){var a=this;return a.getAxisClipY(!a.config.axis_rotated)},i.getYAxisClipX=function(){var a=this;return a.config.axis_y_inner?-1:a.getAxisClipX(a.config.axis_rotated)},i.getYAxisClipY=function(){var a=this;return a.getAxisClipY(a.config.axis_rotated)},i.getAxisClipWidth=function(a){var b=this,c=Math.max(30,b.margin.left),d=Math.max(30,b.margin.right);return a?b.width+2+c+d:b.margin.left+20},i.getAxisClipHeight=function(a){return(a?this.margin.bottom:this.margin.top+this.height)+20},i.getXAxisClipWidth=function(){var a=this;return a.getAxisClipWidth(!a.config.axis_rotated)},i.getXAxisClipHeight=function(){var a=this;return a.getAxisClipHeight(!a.config.axis_rotated)},i.getYAxisClipWidth=function(){var a=this;return a.getAxisClipWidth(a.config.axis_rotated)+(a.config.axis_y_inner?20:0)},i.getYAxisClipHeight=function(){var a=this;return a.getAxisClipHeight(a.config.axis_rotated)},i.initPie=function(){var a=this,b=a.d3,c=a.config;a.pie=b.layout.pie().value(function(a){return a.values.reduce(function(a,b){return a+b.value},0)}),c.data_order||a.pie.sort(null)},i.updateRadius=function(){var a=this,b=a.config,c=b.gauge_width||b.donut_width;a.radiusExpanded=Math.min(a.arcWidth,a.arcHeight)/2,a.radius=.95*a.radiusExpanded,a.innerRadiusRatio=c?(a.radius-c)/a.radius:.6,a.innerRadius=a.hasType("donut")||a.hasType("gauge")?a.radius*a.innerRadiusRatio:0},i.updateArc=function(){var a=this;a.svgArc=a.getSvgArc(),a.svgArcExpanded=a.getSvgArcExpanded(),a.svgArcExpandedSub=a.getSvgArcExpanded(.98)},i.updateAngle=function(a){var b,c,d=this,e=d.config,f=!1,g=0,h=e.gauge_min,i=e.gauge_max;
return d.pie(d.filterTargetsToShow(d.data.targets)).forEach(function(b){f||b.data.id!==a.data.id||(f=!0,a=b,a.index=g),g++}),isNaN(a.startAngle)&&(a.startAngle=0),isNaN(a.endAngle)&&(a.endAngle=a.startAngle),d.isGaugeType(a.data)&&(b=Math.PI/(i-h),c=a.value<h?0:a.value<i?a.value-h:i-h,a.startAngle=-1*(Math.PI/2),a.endAngle=a.startAngle+b*c),f?a:null},i.getSvgArc=function(){var a=this,b=a.d3.svg.arc().outerRadius(a.radius).innerRadius(a.innerRadius),c=function(c,d){var e;return d?b(c):(e=a.updateAngle(c),e?b(e):"M 0 0")};return c.centroid=b.centroid,c},i.getSvgArcExpanded=function(a){var b=this,c=b.d3.svg.arc().outerRadius(b.radiusExpanded*(a?a:1)).innerRadius(b.innerRadius);return function(a){var d=b.updateAngle(a);return d?c(d):"M 0 0"}},i.getArc=function(a,b,c){return c||this.isArcType(a.data)?this.svgArc(a,b):"M 0 0"},i.transformForArcLabel=function(a){var b,c,d,e,f,g=this,h=g.updateAngle(a),i="";return h&&!g.hasType("gauge")&&(b=this.svgArc.centroid(h),c=isNaN(b[0])?0:b[0],d=isNaN(b[1])?0:b[1],e=Math.sqrt(c*c+d*d),f=g.radius&&e?(36/g.radius>.375?1.175-36/g.radius:.8)*g.radius/e:0,i="translate("+c*f+","+d*f+")"),i},i.getArcRatio=function(a){var b=this,c=b.hasType("gauge")?Math.PI:2*Math.PI;return a?(a.endAngle-a.startAngle)/c:null},i.convertToArcData=function(a){return this.addName({id:a.data.id,value:a.value,ratio:this.getArcRatio(a),index:a.index})},i.textForArcLabel=function(a){var b,c,d,e,f,g=this;return g.shouldShowArcLabel()?(b=g.updateAngle(a),c=b?b.value:null,d=g.getArcRatio(b),e=a.data.id,g.hasType("gauge")||g.meetsArcLabelThreshold(d)?(f=g.getArcLabelFormat(),f?f(c,d,e):g.defaultArcValueFormat(c,d)):""):""},i.expandArc=function(b){var c,d=this;return d.transiting?void(c=a.setInterval(function(){d.transiting||(a.clearInterval(c),d.legend.selectAll(".c3-legend-item-focused").size()>0&&d.expandArc(b))},10)):(b=d.mapToTargetIds(b),void d.svg.selectAll(d.selectorTargets(b,"."+l.chartArc)).each(function(a){d.shouldExpand(a.data.id)&&d.d3.select(this).selectAll("path").transition().duration(50).attr("d",d.svgArcExpanded).transition().duration(100).attr("d",d.svgArcExpandedSub).each(function(a){d.isDonutType(a.data)})}))},i.unexpandArc=function(a){var b=this;b.transiting||(a=b.mapToTargetIds(a),b.svg.selectAll(b.selectorTargets(a,"."+l.chartArc)).selectAll("path").transition().duration(50).attr("d",b.svgArc),b.svg.selectAll("."+l.arc).style("opacity",1))},i.shouldExpand=function(a){var b=this,c=b.config;return b.isDonutType(a)&&c.donut_expand||b.isGaugeType(a)&&c.gauge_expand||b.isPieType(a)&&c.pie_expand},i.shouldShowArcLabel=function(){var a=this,b=a.config,c=!0;return a.hasType("donut")?c=b.donut_label_show:a.hasType("pie")&&(c=b.pie_label_show),c},i.meetsArcLabelThreshold=function(a){var b=this,c=b.config,d=b.hasType("donut")?c.donut_label_threshold:c.pie_label_threshold;return a>=d},i.getArcLabelFormat=function(){var a=this,b=a.config,c=b.pie_label_format;return a.hasType("gauge")?c=b.gauge_label_format:a.hasType("donut")&&(c=b.donut_label_format),c},i.getArcTitle=function(){var a=this;return a.hasType("donut")?a.config.donut_title:""},i.updateTargetsForArc=function(a){var b,c,d=this,e=d.main,f=d.classChartArc.bind(d),g=d.classArcs.bind(d),h=d.classFocus.bind(d);b=e.select("."+l.chartArcs).selectAll("."+l.chartArc).data(d.pie(a)).attr("class",function(a){return f(a)+h(a.data)}),c=b.enter().append("g").attr("class",f),c.append("g").attr("class",g),c.append("text").attr("dy",d.hasType("gauge")?"-.1em":".35em").style("opacity",0).style("text-anchor","middle").style("pointer-events","none")},i.initArc=function(){var a=this;a.arcs=a.main.select("."+l.chart).append("g").attr("class",l.chartArcs).attr("transform",a.getTranslate("arc")),a.arcs.append("text").attr("class",l.chartArcsTitle).style("text-anchor","middle").text(a.getArcTitle())},i.redrawArc=function(a,b,c){var d,e=this,f=e.d3,g=e.config,h=e.main;d=h.selectAll("."+l.arcs).selectAll("."+l.arc).data(e.arcData.bind(e)),d.enter().append("path").attr("class",e.classArc.bind(e)).style("fill",function(a){return e.color(a.data)}).style("cursor",function(a){return g.interaction_enabled&&g.data_selection_isselectable(a)?"pointer":null}).style("opacity",0).each(function(a){e.isGaugeType(a.data)&&(a.startAngle=a.endAngle=-1*(Math.PI/2)),this._current=a}),d.attr("transform",function(a){return!e.isGaugeType(a.data)&&c?"scale(0)":""}).style("opacity",function(a){return a===this._current?0:1}).on("mouseover",g.interaction_enabled?function(a){var b,c;e.transiting||(b=e.updateAngle(a),c=e.convertToArcData(b),e.expandArc(b.data.id),e.api.focus(b.data.id),e.toggleFocusLegend(b.data.id,!0),e.config.data_onmouseover(c,this))}:null).on("mousemove",g.interaction_enabled?function(a){var b=e.updateAngle(a),c=e.convertToArcData(b),d=[c];e.showTooltip(d,this)}:null).on("mouseout",g.interaction_enabled?function(a){var b,c;e.transiting||(b=e.updateAngle(a),c=e.convertToArcData(b),e.unexpandArc(b.data.id),e.api.revert(),e.revertLegend(),e.hideTooltip(),e.config.data_onmouseout(c,this))}:null).on("click",g.interaction_enabled?function(a,b){var c=e.updateAngle(a),d=e.convertToArcData(c);e.toggleShape&&e.toggleShape(this,d,b),e.config.data_onclick.call(e.api,d,this)}:null).each(function(){e.transiting=!0}).transition().duration(a).attrTween("d",function(a){var b,c=e.updateAngle(a);return c?(isNaN(this._current.startAngle)&&(this._current.startAngle=0),isNaN(this._current.endAngle)&&(this._current.endAngle=this._current.startAngle),b=f.interpolate(this._current,c),this._current=b(0),function(c){var d=b(c);return d.data=a.data,e.getArc(d,!0)}):function(){return"M 0 0"}}).attr("transform",c?"scale(1)":"").style("fill",function(a){return e.levelColor?e.levelColor(a.data.values[0].value):e.color(a.data.id)}).style("opacity",1).call(e.endall,function(){e.transiting=!1}),d.exit().transition().duration(b).style("opacity",0).remove(),h.selectAll("."+l.chartArc).select("text").style("opacity",0).attr("class",function(a){return e.isGaugeType(a.data)?l.gaugeValue:""}).text(e.textForArcLabel.bind(e)).attr("transform",e.transformForArcLabel.bind(e)).style("font-size",function(a){return e.isGaugeType(a.data)?Math.round(e.radius/5)+"px":""}).transition().duration(a).style("opacity",function(a){return e.isTargetToShow(a.data.id)&&e.isArcType(a.data)?1:0}),h.select("."+l.chartArcsTitle).style("opacity",e.hasType("donut")||e.hasType("gauge")?1:0),e.hasType("gauge")&&(e.arcs.select("."+l.chartArcsBackground).attr("d",function(){var a={data:[{value:g.gauge_max}],startAngle:-1*(Math.PI/2),endAngle:Math.PI/2};return e.getArc(a,!0,!0)}),e.arcs.select("."+l.chartArcsGaugeUnit).attr("dy",".75em").text(g.gauge_label_show?g.gauge_units:""),e.arcs.select("."+l.chartArcsGaugeMin).attr("dx",-1*(e.innerRadius+(e.radius-e.innerRadius)/2)+"px").attr("dy","1.2em").text(g.gauge_label_show?g.gauge_min:""),e.arcs.select("."+l.chartArcsGaugeMax).attr("dx",e.innerRadius+(e.radius-e.innerRadius)/2+"px").attr("dy","1.2em").text(g.gauge_label_show?g.gauge_max:""))},i.initGauge=function(){var a=this.arcs;this.hasType("gauge")&&(a.append("path").attr("class",l.chartArcsBackground),a.append("text").attr("class",l.chartArcsGaugeUnit).style("text-anchor","middle").style("pointer-events","none"),a.append("text").attr("class",l.chartArcsGaugeMin).style("text-anchor","middle").style("pointer-events","none"),a.append("text").attr("class",l.chartArcsGaugeMax).style("text-anchor","middle").style("pointer-events","none"))},i.getGaugeLabelHeight=function(){return this.config.gauge_label_show?20:0},i.initRegion=function(){var a=this;a.region=a.main.append("g").attr("clip-path",a.clipPath).attr("class",l.regions)},i.updateRegion=function(a){var b=this,c=b.config;b.region.style("visibility",b.hasArcType()?"hidden":"visible"),b.mainRegion=b.main.select("."+l.regions).selectAll("."+l.region).data(c.regions),b.mainRegion.enter().append("g").attr("class",b.classRegion.bind(b)).append("rect").style("fill-opacity",0),b.mainRegion.exit().transition().duration(a).style("opacity",0).remove()},i.redrawRegion=function(a){var b=this,c=b.mainRegion.selectAll("rect"),d=b.regionX.bind(b),e=b.regionY.bind(b),f=b.regionWidth.bind(b),g=b.regionHeight.bind(b);return[(a?c.transition():c).attr("x",d).attr("y",e).attr("width",f).attr("height",g).style("fill-opacity",function(a){return m(a.opacity)?a.opacity:.1})]},i.regionX=function(a){var b,c=this,d=c.config,e="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated&&"start"in a?e(a.start):0:d.axis_rotated?0:"start"in a?c.x(c.isTimeSeries()?c.parseDate(a.start):a.start):0},i.regionY=function(a){var b,c=this,d=c.config,e="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated?0:"end"in a?e(a.end):0:d.axis_rotated&&"start"in a?c.x(c.isTimeSeries()?c.parseDate(a.start):a.start):0},i.regionWidth=function(a){var b,c=this,d=c.config,e=c.regionX(a),f="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated&&"end"in a?f(a.end):c.width:d.axis_rotated?c.width:"end"in a?c.x(c.isTimeSeries()?c.parseDate(a.end):a.end):c.width,e>b?0:b-e},i.regionHeight=function(a){var b,c=this,d=c.config,e=this.regionY(a),f="y"===a.axis?c.y:c.y2;return b="y"===a.axis||"y2"===a.axis?d.axis_rotated?c.height:"start"in a?f(a.start):c.height:d.axis_rotated&&"end"in a?c.x(c.isTimeSeries()?c.parseDate(a.end):a.end):c.height,e>b?0:b-e},i.isRegionOnX=function(a){return!a.axis||"x"===a.axis},i.drag=function(a){var b,c,d,e,f,g,h,i,j=this,k=j.config,m=j.main,n=j.d3;j.hasArcType()||k.data_selection_enabled&&(!k.zoom_enabled||j.zoom.altDomain)&&k.data_selection_multiple&&(b=j.dragStart[0],c=j.dragStart[1],d=a[0],e=a[1],f=Math.min(b,d),g=Math.max(b,d),h=k.data_selection_grouped?j.margin.top:Math.min(c,e),i=k.data_selection_grouped?j.height:Math.max(c,e),m.select("."+l.dragarea).attr("x",f).attr("y",h).attr("width",g-f).attr("height",i-h),m.selectAll("."+l.shapes).selectAll("."+l.shape).filter(function(a){return k.data_selection_isselectable(a)}).each(function(a,b){var c,d,e,k,m,o,p=n.select(this),q=p.classed(l.SELECTED),r=p.classed(l.INCLUDED),s=!1;if(p.classed(l.circle))c=1*p.attr("cx"),d=1*p.attr("cy"),m=j.togglePoint,s=c>f&&g>c&&d>h&&i>d;else{if(!p.classed(l.bar))return;o=y(this),c=o.x,d=o.y,e=o.width,k=o.height,m=j.togglePath,s=!(c>g||f>c+e||d>i||h>d+k)}s^r&&(p.classed(l.INCLUDED,!r),p.classed(l.SELECTED,!q),m.call(j,!q,p,a,b))}))},i.dragstart=function(a){var b=this,c=b.config;b.hasArcType()||c.data_selection_enabled&&(b.dragStart=a,b.main.select("."+l.chart).append("rect").attr("class",l.dragarea).style("opacity",.1),b.dragging=!0)},i.dragend=function(){var a=this,b=a.config;a.hasArcType()||b.data_selection_enabled&&(a.main.select("."+l.dragarea).transition().duration(100).style("opacity",0).remove(),a.main.selectAll("."+l.shape).classed(l.INCLUDED,!1),a.dragging=!1)},i.selectPoint=function(a,b,c){var d=this,e=d.config,f=(e.axis_rotated?d.circleY:d.circleX).bind(d),g=(e.axis_rotated?d.circleX:d.circleY).bind(d),h=d.pointSelectR.bind(d);e.data_onselected.call(d.api,b,a.node()),d.main.select("."+l.selectedCircles+d.getTargetSelectorSuffix(b.id)).selectAll("."+l.selectedCircle+"-"+c).data([b]).enter().append("circle").attr("class",function(){return d.generateClass(l.selectedCircle,c)}).attr("cx",f).attr("cy",g).attr("stroke",function(){return d.color(b)}).attr("r",function(a){return 1.4*d.pointSelectR(a)}).transition().duration(100).attr("r",h)},i.unselectPoint=function(a,b,c){var d=this;d.config.data_onunselected(b,a.node()),d.main.select("."+l.selectedCircles+d.getTargetSelectorSuffix(b.id)).selectAll("."+l.selectedCircle+"-"+c).transition().duration(100).attr("r",0).remove()},i.togglePoint=function(a,b,c,d){a?this.selectPoint(b,c,d):this.unselectPoint(b,c,d)},i.selectPath=function(a,b){var c=this;c.config.data_onselected.call(c,b,a.node()),a.transition().duration(100).style("fill",function(){return c.d3.rgb(c.color(b)).brighter(.75)})},i.unselectPath=function(a,b){var c=this;c.config.data_onunselected.call(c,b,a.node()),a.transition().duration(100).style("fill",function(){return c.color(b)})},i.togglePath=function(a,b,c,d){a?this.selectPath(b,c,d):this.unselectPath(b,c,d)},i.getToggle=function(a,b){var c,d=this;return"circle"===a.nodeName?c=d.isStepType(b)?function(){}:d.togglePoint:"path"===a.nodeName&&(c=d.togglePath),c},i.toggleShape=function(a,b,c){var d=this,e=d.d3,f=d.config,g=e.select(a),h=g.classed(l.SELECTED),i=d.getToggle(a,b).bind(d);f.data_selection_enabled&&f.data_selection_isselectable(b)&&(f.data_selection_multiple||d.main.selectAll("."+l.shapes+(f.data_selection_grouped?d.getTargetSelectorSuffix(b.id):"")).selectAll("."+l.shape).each(function(a,b){var c=e.select(this);c.classed(l.SELECTED)&&i(!1,c.classed(l.SELECTED,!1),a,b)}),g.classed(l.SELECTED,!h),i(!h,g,b,c))},i.initBrush=function(){var a=this,b=a.d3;a.brush=b.svg.brush().on("brush",function(){a.redrawForBrush()}),a.brush.update=function(){return a.context&&a.context.select("."+l.brush).call(this),this},a.brush.scale=function(b){return a.config.axis_rotated?this.y(b):this.x(b)}},i.initSubchart=function(){var a=this,b=a.config,c=a.context=a.svg.append("g").attr("transform",a.getTranslate("context"));c.style("visibility",b.subchart_show?"visible":"hidden"),c.append("g").attr("clip-path",a.clipPathForSubchart).attr("class",l.chart),c.select("."+l.chart).append("g").attr("class",l.chartBars),c.select("."+l.chart).append("g").attr("class",l.chartLines),c.append("g").attr("clip-path",a.clipPath).attr("class",l.brush).call(a.brush),a.axes.subx=c.append("g").attr("class",l.axisX).attr("transform",a.getTranslate("subx")).attr("clip-path",b.axis_rotated?"":a.clipPathForXAxis)},i.updateTargetsForSubchart=function(a){var b,c,d,e,f=this,g=f.context,h=f.config,i=f.classChartBar.bind(f),j=f.classBars.bind(f),k=f.classChartLine.bind(f),m=f.classLines.bind(f),n=f.classAreas.bind(f);h.subchart_show&&(e=g.select("."+l.chartBars).selectAll("."+l.chartBar).data(a).attr("class",i),d=e.enter().append("g").style("opacity",0).attr("class",i),d.append("g").attr("class",j),c=g.select("."+l.chartLines).selectAll("."+l.chartLine).data(a).attr("class",k),b=c.enter().append("g").style("opacity",0).attr("class",k),b.append("g").attr("class",m),b.append("g").attr("class",n),g.selectAll("."+l.brush+" rect").attr(h.axis_rotated?"width":"height",h.axis_rotated?f.width2:f.height2))},i.updateBarForSubchart=function(a){var b=this;b.contextBar=b.context.selectAll("."+l.bars).selectAll("."+l.bar).data(b.barData.bind(b)),b.contextBar.enter().append("path").attr("class",b.classBar.bind(b)).style("stroke","none").style("fill",b.color),b.contextBar.style("opacity",b.initialOpacity.bind(b)),b.contextBar.exit().transition().duration(a).style("opacity",0).remove()},i.redrawBarForSubchart=function(a,b,c){(b?this.contextBar.transition().duration(c):this.contextBar).attr("d",a).style("opacity",1)},i.updateLineForSubchart=function(a){var b=this;b.contextLine=b.context.selectAll("."+l.lines).selectAll("."+l.line).data(b.lineData.bind(b)),b.contextLine.enter().append("path").attr("class",b.classLine.bind(b)).style("stroke",b.color),b.contextLine.style("opacity",b.initialOpacity.bind(b)),b.contextLine.exit().transition().duration(a).style("opacity",0).remove()},i.redrawLineForSubchart=function(a,b,c){(b?this.contextLine.transition().duration(c):this.contextLine).attr("d",a).style("opacity",1)},i.updateAreaForSubchart=function(a){var b=this,c=b.d3;b.contextArea=b.context.selectAll("."+l.areas).selectAll("."+l.area).data(b.lineData.bind(b)),b.contextArea.enter().append("path").attr("class",b.classArea.bind(b)).style("fill",b.color).style("opacity",function(){return b.orgAreaOpacity=+c.select(this).style("opacity"),0}),b.contextArea.style("opacity",0),b.contextArea.exit().transition().duration(a).style("opacity",0).remove()},i.redrawAreaForSubchart=function(a,b,c){(b?this.contextArea.transition().duration(c):this.contextArea).attr("d",a).style("fill",this.color).style("opacity",this.orgAreaOpacity)},i.redrawSubchart=function(a,b,c,d,e,f,g){var h,i,j,k=this,l=k.d3,m=k.config;k.context.style("visibility",m.subchart_show?"visible":"hidden"),m.subchart_show&&(l.event&&"zoom"===l.event.type&&k.brush.extent(k.x.orgDomain()).update(),a&&(k.brush.empty()||k.brush.extent(k.x.orgDomain()).update(),h=k.generateDrawArea(e,!0),i=k.generateDrawBar(f,!0),j=k.generateDrawLine(g,!0),k.updateBarForSubchart(c),k.updateLineForSubchart(c),k.updateAreaForSubchart(c),k.redrawBarForSubchart(i,c,c),k.redrawLineForSubchart(j,c,c),k.redrawAreaForSubchart(h,c,c)))},i.redrawForBrush=function(){var a=this,b=a.x;a.redraw({withTransition:!1,withY:a.config.zoom_rescale,withSubchart:!1,withUpdateXDomain:!0,withDimension:!1}),a.config.subchart_onbrush.call(a.api,b.orgDomain())},i.transformContext=function(a,b){var c,d=this;b&&b.axisSubX?c=b.axisSubX:(c=d.context.select("."+l.axisX),a&&(c=c.transition())),d.context.attr("transform",d.getTranslate("context")),c.attr("transform",d.getTranslate("subx"))},i.getDefaultExtent=function(){var a=this,b=a.config,c=n(b.axis_x_extent)?b.axis_x_extent(a.getXDomain(a.data.targets)):b.axis_x_extent;return a.isTimeSeries()&&(c=[a.parseDate(c[0]),a.parseDate(c[1])]),c},i.initZoom=function(){var a,b=this,c=b.d3,d=b.config;b.zoom=c.behavior.zoom().on("zoomstart",function(){a=c.event.sourceEvent,b.zoom.altDomain=c.event.sourceEvent.altKey?b.x.orgDomain():null,d.zoom_onzoomstart.call(b.api,c.event.sourceEvent)}).on("zoom",function(){b.redrawForZoom.call(b)}).on("zoomend",function(){var e=c.event.sourceEvent;e&&a.clientX===e.clientX&&a.clientY===e.clientY||(b.redrawEventRect(),b.updateZoom(),d.zoom_onzoomend.call(b.api,b.x.orgDomain()))}),b.zoom.scale=function(a){return d.axis_rotated?this.y(a):this.x(a)},b.zoom.orgScaleExtent=function(){var a=d.zoom_extent?d.zoom_extent:[1,10];return[a[0],Math.max(b.getMaxDataCount()/a[1],a[1])]},b.zoom.updateScaleExtent=function(){var a=t(b.x.orgDomain())/t(b.orgXDomain),c=this.orgScaleExtent();return this.scaleExtent([c[0]*a,c[1]*a]),this}},i.updateZoom=function(){var a=this,b=a.config.zoom_enabled?a.zoom:function(){};a.main.select("."+l.zoomRect).call(b).on("dblclick.zoom",null),a.main.selectAll("."+l.eventRect).call(b).on("dblclick.zoom",null)},i.redrawForZoom=function(){var a=this,b=a.d3,c=a.config,d=a.zoom,e=a.x;if(c.zoom_enabled&&0!==a.filterTargetsToShow(a.data.targets).length){if("mousemove"===b.event.sourceEvent.type&&d.altDomain)return e.domain(d.altDomain),void d.scale(e).updateScaleExtent();a.isCategorized()&&e.orgDomain()[0]===a.orgXDomain[0]&&e.domain([a.orgXDomain[0]-1e-10,e.orgDomain()[1]]),a.redraw({withTransition:!1,withY:c.zoom_rescale,withSubchart:!1,withEventRect:!1,withDimension:!1}),"mousemove"===b.event.sourceEvent.type&&(a.cancelClick=!0),c.zoom_onzoom.call(a.api,e.orgDomain())}},i.generateColor=function(){var a=this,b=a.config,c=a.d3,d=b.data_colors,e=v(b.color_pattern)?b.color_pattern:c.scale.category10().range(),f=b.data_color,g=[];return function(a){var b,c=a.id||a.data&&a.data.id||a;return d[c]instanceof Function?b=d[c](a):d[c]?b=d[c]:(g.indexOf(c)<0&&g.push(c),b=e[g.indexOf(c)%e.length],d[c]=b),f instanceof Function?f(b,a):b}},i.generateLevelColor=function(){var a=this,b=a.config,c=b.color_pattern,d=b.color_threshold,e="value"===d.unit,f=d.values&&d.values.length?d.values:[],g=d.max||100;return v(b.color_threshold)?function(a){var b,d,h=c[c.length-1];for(b=0;b<f.length;b++)if(d=e?a:100*a/g,d<f[b]){h=c[b];break}return h}:null},i.getYFormat=function(a){var b=this,c=a&&!b.hasType("gauge")?b.defaultArcValueFormat:b.yFormat,d=a&&!b.hasType("gauge")?b.defaultArcValueFormat:b.y2Format;return function(a,e,f){var g="y2"===b.axis.getId(f)?d:c;return g.call(b,a,e)}},i.yFormat=function(a){var b=this,c=b.config,d=c.axis_y_tick_format?c.axis_y_tick_format:b.defaultValueFormat;return d(a)},i.y2Format=function(a){var b=this,c=b.config,d=c.axis_y2_tick_format?c.axis_y2_tick_format:b.defaultValueFormat;return d(a)},i.defaultValueFormat=function(a){return m(a)?+a:""},i.defaultArcValueFormat=function(a,b){return(100*b).toFixed(1)+"%"},i.dataLabelFormat=function(a){var b,c=this,d=c.config.data_labels,e=function(a){return m(a)?+a:""};return b="function"==typeof d.format?d.format:"object"==typeof d.format?d.format[a]?d.format[a]===!0?e:d.format[a]:function(){return""}:e},i.hasCaches=function(a){for(var b=0;b<a.length;b++)if(!(a[b]in this.cache))return!1;return!0},i.addCache=function(a,b){this.cache[a]=this.cloneTarget(b)},i.getCaches=function(a){var b,c=[];for(b=0;b<a.length;b++)a[b]in this.cache&&c.push(this.cloneTarget(this.cache[a[b]]));return c};var l=i.CLASS={target:"c3-target",chart:"c3-chart",chartLine:"c3-chart-line",chartLines:"c3-chart-lines",chartBar:"c3-chart-bar",chartBars:"c3-chart-bars",chartText:"c3-chart-text",chartTexts:"c3-chart-texts",chartArc:"c3-chart-arc",chartArcs:"c3-chart-arcs",chartArcsTitle:"c3-chart-arcs-title",chartArcsBackground:"c3-chart-arcs-background",chartArcsGaugeUnit:"c3-chart-arcs-gauge-unit",chartArcsGaugeMax:"c3-chart-arcs-gauge-max",chartArcsGaugeMin:"c3-chart-arcs-gauge-min",selectedCircle:"c3-selected-circle",selectedCircles:"c3-selected-circles",eventRect:"c3-event-rect",eventRects:"c3-event-rects",eventRectsSingle:"c3-event-rects-single",eventRectsMultiple:"c3-event-rects-multiple",zoomRect:"c3-zoom-rect",brush:"c3-brush",focused:"c3-focused",defocused:"c3-defocused",region:"c3-region",regions:"c3-regions",tooltipContainer:"c3-tooltip-container",tooltip:"c3-tooltip",tooltipName:"c3-tooltip-name",shape:"c3-shape",shapes:"c3-shapes",line:"c3-line",lines:"c3-lines",bar:"c3-bar",bars:"c3-bars",circle:"c3-circle",circles:"c3-circles",arc:"c3-arc",arcs:"c3-arcs",area:"c3-area",areas:"c3-areas",empty:"c3-empty",text:"c3-text",texts:"c3-texts",gaugeValue:"c3-gauge-value",grid:"c3-grid",gridLines:"c3-grid-lines",xgrid:"c3-xgrid",xgrids:"c3-xgrids",xgridLine:"c3-xgrid-line",xgridLines:"c3-xgrid-lines",xgridFocus:"c3-xgrid-focus",ygrid:"c3-ygrid",ygrids:"c3-ygrids",ygridLine:"c3-ygrid-line",ygridLines:"c3-ygrid-lines",axis:"c3-axis",axisX:"c3-axis-x",axisXLabel:"c3-axis-x-label",axisY:"c3-axis-y",axisYLabel:"c3-axis-y-label",axisY2:"c3-axis-y2",axisY2Label:"c3-axis-y2-label",legendBackground:"c3-legend-background",legendItem:"c3-legend-item",legendItemEvent:"c3-legend-item-event",legendItemTile:"c3-legend-item-tile",legendItemHidden:"c3-legend-item-hidden",legendItemFocused:"c3-legend-item-focused",dragarea:"c3-dragarea",EXPANDED:"_expanded_",SELECTED:"_selected_",INCLUDED:"_included_"};i.generateClass=function(a,b){return" "+a+" "+a+this.getTargetSelectorSuffix(b)},i.classText=function(a){return this.generateClass(l.text,a.index)},i.classTexts=function(a){return this.generateClass(l.texts,a.id)},i.classShape=function(a){return this.generateClass(l.shape,a.index)},i.classShapes=function(a){return this.generateClass(l.shapes,a.id)},i.classLine=function(a){return this.classShape(a)+this.generateClass(l.line,a.id)},i.classLines=function(a){return this.classShapes(a)+this.generateClass(l.lines,a.id)},i.classCircle=function(a){return this.classShape(a)+this.generateClass(l.circle,a.index)},i.classCircles=function(a){return this.classShapes(a)+this.generateClass(l.circles,a.id)},i.classBar=function(a){return this.classShape(a)+this.generateClass(l.bar,a.index)},i.classBars=function(a){return this.classShapes(a)+this.generateClass(l.bars,a.id)},i.classArc=function(a){return this.classShape(a.data)+this.generateClass(l.arc,a.data.id)},i.classArcs=function(a){return this.classShapes(a.data)+this.generateClass(l.arcs,a.data.id)},i.classArea=function(a){return this.classShape(a)+this.generateClass(l.area,a.id)},i.classAreas=function(a){return this.classShapes(a)+this.generateClass(l.areas,a.id)},i.classRegion=function(a,b){return this.generateClass(l.region,b)+" "+("class"in a?a["class"]:"")},i.classEvent=function(a){return this.generateClass(l.eventRect,a.index)},i.classTarget=function(a){var b=this,c=b.config.data_classes[a],d="";return c&&(d=" "+l.target+"-"+c),b.generateClass(l.target,a)+d},i.classFocus=function(a){return this.classFocused(a)+this.classDefocused(a)},i.classFocused=function(a){return" "+(this.focusedTargetIds.indexOf(a.id)>=0?l.focused:"")},i.classDefocused=function(a){return" "+(this.defocusedTargetIds.indexOf(a.id)>=0?l.defocused:"")},i.classChartText=function(a){return l.chartText+this.classTarget(a.id)},i.classChartLine=function(a){return l.chartLine+this.classTarget(a.id)},i.classChartBar=function(a){return l.chartBar+this.classTarget(a.id)},i.classChartArc=function(a){return l.chartArc+this.classTarget(a.data.id)},i.getTargetSelectorSuffix=function(a){return a||0===a?("-"+a).replace(/[\s?!@#$%^&*()_=+,.<>'":;\[\]\/|~`{}\\]/g,"-"):""},i.selectorTarget=function(a,b){return(b||"")+"."+l.target+this.getTargetSelectorSuffix(a)},i.selectorTargets=function(a,b){var c=this;return a=a||[],a.length?a.map(function(a){return c.selectorTarget(a,b)}):null},i.selectorLegend=function(a){return"."+l.legendItem+this.getTargetSelectorSuffix(a)},i.selectorLegends=function(a){var b=this;return a&&a.length?a.map(function(a){return b.selectorLegend(a)}):null};var m=i.isValue=function(a){return a||0===a},n=i.isFunction=function(a){return"function"==typeof a},o=i.isString=function(a){return"string"==typeof a},p=i.isUndefined=function(a){return"undefined"==typeof a},q=i.isDefined=function(a){return"undefined"!=typeof a},r=i.ceil10=function(a){return 10*Math.ceil(a/10)},s=i.asHalfPixel=function(a){return Math.ceil(a)+.5},t=i.diffDomain=function(a){return a[1]-a[0]},u=i.isEmpty=function(a){return!a||o(a)&&0===a.length||"object"==typeof a&&0===Object.keys(a).length},v=i.notEmpty=function(a){return Object.keys(a).length>0},w=i.getOption=function(a,b,c){return q(a[b])?a[b]:c},x=i.hasValue=function(a,b){var c=!1;return Object.keys(a).forEach(function(d){a[d]===b&&(c=!0)}),c},y=i.getPathBox=function(a){var b=a.getBoundingClientRect(),c=[a.pathSegList.getItem(0),a.pathSegList.getItem(1)],d=c[0].x,e=Math.min(c[0].y,c[1].y);return{x:d,y:e,width:b.width,height:b.height}};h.focus=function(a){var b,c=this.internal;a=c.mapToTargetIds(a),b=c.svg.selectAll(c.selectorTargets(a.filter(c.isTargetToShow,c))),this.revert(),this.defocus(),b.classed(l.focused,!0).classed(l.defocused,!1),c.hasArcType()&&c.expandArc(a),c.toggleFocusLegend(a,!0),c.focusedTargetIds=a,c.defocusedTargetIds=c.defocusedTargetIds.filter(function(b){return a.indexOf(b)<0})},h.defocus=function(a){var b,c=this.internal;a=c.mapToTargetIds(a),b=c.svg.selectAll(c.selectorTargets(a.filter(c.isTargetToShow,c))),b.classed(l.focused,!1).classed(l.defocused,!0),c.hasArcType()&&c.unexpandArc(a),c.toggleFocusLegend(a,!1),c.focusedTargetIds=c.focusedTargetIds.filter(function(b){return a.indexOf(b)<0}),c.defocusedTargetIds=a},h.revert=function(a){var b,c=this.internal;a=c.mapToTargetIds(a),b=c.svg.selectAll(c.selectorTargets(a)),b.classed(l.focused,!1).classed(l.defocused,!1),c.hasArcType()&&c.unexpandArc(a),c.config.legend_show&&(c.showLegend(a.filter(c.isLegendToShow.bind(c))),c.legend.selectAll(c.selectorLegends(a)).filter(function(){return c.d3.select(this).classed(l.legendItemFocused)}).classed(l.legendItemFocused,!1)),c.focusedTargetIds=[],c.defocusedTargetIds=[]},h.show=function(a,b){var c,d=this.internal;a=d.mapToTargetIds(a),b=b||{},d.removeHiddenTargetIds(a),c=d.svg.selectAll(d.selectorTargets(a)),c.transition().style("opacity",1,"important").call(d.endall,function(){c.style("opacity",null).style("opacity",1)}),b.withLegend&&d.showLegend(a),d.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0})},h.hide=function(a,b){var c,d=this.internal;a=d.mapToTargetIds(a),b=b||{},d.addHiddenTargetIds(a),c=d.svg.selectAll(d.selectorTargets(a)),c.transition().style("opacity",0,"important").call(d.endall,function(){c.style("opacity",null).style("opacity",0)}),b.withLegend&&d.hideLegend(a),d.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0})},h.toggle=function(a,b){var c=this,d=this.internal;d.mapToTargetIds(a).forEach(function(a){d.isTargetToShow(a)?c.hide(a,b):c.show(a,b)})},h.zoom=function(a){var b=this.internal;return a&&(b.isTimeSeries()&&(a=a.map(function(a){return b.parseDate(a)})),b.brush.extent(a),b.redraw({withUpdateXDomain:!0,withY:b.config.zoom_rescale}),b.config.zoom_onzoom.call(this,b.x.orgDomain())),b.brush.extent()},h.zoom.enable=function(a){var b=this.internal;b.config.zoom_enabled=a,b.updateAndRedraw()},h.unzoom=function(){var a=this.internal;a.brush.clear().update(),a.redraw({withUpdateXDomain:!0})},h.load=function(a){var b=this.internal,c=b.config;return a.xs&&b.addXs(a.xs),"classes"in a&&Object.keys(a.classes).forEach(function(b){c.data_classes[b]=a.classes[b]}),"categories"in a&&b.isCategorized()&&(c.axis_x_categories=a.categories),"axes"in a&&Object.keys(a.axes).forEach(function(b){c.data_axes[b]=a.axes[b]}),"colors"in a&&Object.keys(a.colors).forEach(function(b){c.data_colors[b]=a.colors[b]}),"cacheIds"in a&&b.hasCaches(a.cacheIds)?void b.load(b.getCaches(a.cacheIds),a.done):void("unload"in a?b.unload(b.mapToTargetIds("boolean"==typeof a.unload&&a.unload?null:a.unload),function(){b.loadFromArgs(a)}):b.loadFromArgs(a))},h.unload=function(a){var b=this.internal;a=a||{},a instanceof Array?a={ids:a}:"string"==typeof a&&(a={ids:[a]}),b.unload(b.mapToTargetIds(a.ids),function(){b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0,withLegend:!0}),a.done&&a.done()})},h.flow=function(a){var b,c,d,e,f,g,h,i,j=this.internal,k=[],l=j.getMaxDataCount(),n=0,o=0;if(a.json)c=j.convertJsonToData(a.json,a.keys);else if(a.rows)c=j.convertRowsToData(a.rows);else{if(!a.columns)return;c=j.convertColumnsToData(a.columns)}b=j.convertDataToTargets(c,!0),j.data.targets.forEach(function(a){var c,d,e=!1;for(c=0;c<b.length;c++)if(a.id===b[c].id){for(e=!0,a.values[a.values.length-1]&&(o=a.values[a.values.length-1].index+1),n=b[c].values.length,d=0;n>d;d++)b[c].values[d].index=o+d,j.isTimeSeries()||(b[c].values[d].x=o+d);a.values=a.values.concat(b[c].values),b.splice(c,1);break}e||k.push(a.id)}),j.data.targets.forEach(function(a){var b,c;for(b=0;b<k.length;b++)if(a.id===k[b])for(o=a.values[a.values.length-1].index+1,c=0;n>c;c++)a.values.push({id:a.id,index:o+c,x:j.isTimeSeries()?j.getOtherTargetX(o+c):o+c,value:null})}),j.data.targets.length&&b.forEach(function(a){var b,c=[];for(b=j.data.targets[0].values[0].index;o>b;b++)c.push({id:a.id,index:b,x:j.isTimeSeries()?j.getOtherTargetX(b):b,value:null});a.values.forEach(function(a){a.index+=o,j.isTimeSeries()||(a.x+=o)}),a.values=c.concat(a.values)}),j.data.targets=j.data.targets.concat(b),d=j.getMaxDataCount(),f=j.data.targets[0],g=f.values[0],q(a.to)?(n=0,i=j.isTimeSeries()?j.parseDate(a.to):a.to,f.values.forEach(function(a){a.x<i&&n++})):q(a.length)&&(n=a.length),l?1===l&&j.isTimeSeries()&&(h=(f.values[f.values.length-1].x-g.x)/2,e=[new Date(+g.x-h),new Date(+g.x+h)],j.updateXDomain(null,!0,!0,!1,e)):(h=j.isTimeSeries()?f.values.length>1?f.values[f.values.length-1].x-g.x:g.x-j.getXDomain(j.data.targets)[0]:1,e=[g.x-h,g.x],j.updateXDomain(null,!0,!0,!1,e)),j.updateTargets(j.data.targets),j.redraw({flow:{index:g.index,length:n,duration:m(a.duration)?a.duration:j.config.transition_duration,done:a.done,orgDataCount:l},withLegend:!0,withTransition:l>1,withTrimXDomain:!1,withUpdateXAxis:!0})},i.generateFlow=function(a){var b=this,c=b.config,d=b.d3;return function(){var e,f,g,h=a.targets,i=a.flow,j=a.drawBar,k=a.drawLine,m=a.drawArea,n=a.cx,o=a.cy,p=a.xv,q=a.xForText,r=a.yForText,s=a.duration,u=1,v=i.index,w=i.length,x=b.getValueOnIndex(b.data.targets[0].values,v),y=b.getValueOnIndex(b.data.targets[0].values,v+w),z=b.x.domain(),A=i.duration||s,B=i.done||function(){},C=b.generateWait(),D=b.xgrid||d.selectAll([]),E=b.xgridLines||d.selectAll([]),F=b.mainRegion||d.selectAll([]),G=b.mainText||d.selectAll([]),H=b.mainBar||d.selectAll([]),I=b.mainLine||d.selectAll([]),J=b.mainArea||d.selectAll([]),K=b.mainCircle||d.selectAll([]);b.flowing=!0,b.data.targets.forEach(function(a){a.values.splice(0,w)}),g=b.updateXDomain(h,!0,!0),b.updateXGrid&&b.updateXGrid(!0),i.orgDataCount?e=1===i.orgDataCount||x.x===y.x?b.x(z[0])-b.x(g[0]):b.isTimeSeries()?b.x(z[0])-b.x(g[0]):b.x(x.x)-b.x(y.x):1!==b.data.targets[0].values.length?e=b.x(z[0])-b.x(g[0]):b.isTimeSeries()?(x=b.getValueOnIndex(b.data.targets[0].values,0),y=b.getValueOnIndex(b.data.targets[0].values,b.data.targets[0].values.length-1),e=b.x(x.x)-b.x(y.x)):e=t(g)/2,u=t(z)/t(g),f="translate("+e+",0) scale("+u+",1)",b.hideXGridFocus(),b.hideTooltip(),d.transition().ease("linear").duration(A).each(function(){C.add(b.axes.x.transition().call(b.xAxis)),C.add(H.transition().attr("transform",f)),C.add(I.transition().attr("transform",f)),C.add(J.transition().attr("transform",f)),C.add(K.transition().attr("transform",f)),C.add(G.transition().attr("transform",f)),C.add(F.filter(b.isRegionOnX).transition().attr("transform",f)),C.add(D.transition().attr("transform",f)),C.add(E.transition().attr("transform",f))
}).call(C,function(){var a,d=[],e=[],f=[];if(w){for(a=0;w>a;a++)d.push("."+l.shape+"-"+(v+a)),e.push("."+l.text+"-"+(v+a)),f.push("."+l.eventRect+"-"+(v+a));b.svg.selectAll("."+l.shapes).selectAll(d).remove(),b.svg.selectAll("."+l.texts).selectAll(e).remove(),b.svg.selectAll("."+l.eventRects).selectAll(f).remove(),b.svg.select("."+l.xgrid).remove()}D.attr("transform",null).attr(b.xgridAttr),E.attr("transform",null),E.select("line").attr("x1",c.axis_rotated?0:p).attr("x2",c.axis_rotated?b.width:p),E.select("text").attr("x",c.axis_rotated?b.width:0).attr("y",p),H.attr("transform",null).attr("d",j),I.attr("transform",null).attr("d",k),J.attr("transform",null).attr("d",m),K.attr("transform",null).attr("cx",n).attr("cy",o),G.attr("transform",null).attr("x",q).attr("y",r).style("fill-opacity",b.opacityForText.bind(b)),F.attr("transform",null),F.select("rect").filter(b.isRegionOnX).attr("x",b.regionX.bind(b)).attr("width",b.regionWidth.bind(b)),c.interaction_enabled&&b.redrawEventRect(),B(),b.flowing=!1})}},h.selected=function(a){var b=this.internal,c=b.d3;return c.merge(b.main.selectAll("."+l.shapes+b.getTargetSelectorSuffix(a)).selectAll("."+l.shape).filter(function(){return c.select(this).classed(l.SELECTED)}).map(function(a){return a.map(function(a){var b=a.__data__;return b.data?b.data:b})}))},h.select=function(a,b,c){var d=this.internal,e=d.d3,f=d.config;f.data_selection_enabled&&d.main.selectAll("."+l.shapes).selectAll("."+l.shape).each(function(g,h){var i=e.select(this),j=g.data?g.data.id:g.id,k=d.getToggle(this,g).bind(d),m=f.data_selection_grouped||!a||a.indexOf(j)>=0,n=!b||b.indexOf(h)>=0,o=i.classed(l.SELECTED);i.classed(l.line)||i.classed(l.area)||(m&&n?f.data_selection_isselectable(g)&&!o&&k(!0,i.classed(l.SELECTED,!0),g,h):q(c)&&c&&o&&k(!1,i.classed(l.SELECTED,!1),g,h))})},h.unselect=function(a,b){var c=this.internal,d=c.d3,e=c.config;e.data_selection_enabled&&c.main.selectAll("."+l.shapes).selectAll("."+l.shape).each(function(f,g){var h=d.select(this),i=f.data?f.data.id:f.id,j=c.getToggle(this,f).bind(c),k=e.data_selection_grouped||!a||a.indexOf(i)>=0,m=!b||b.indexOf(g)>=0,n=h.classed(l.SELECTED);h.classed(l.line)||h.classed(l.area)||k&&m&&e.data_selection_isselectable(f)&&n&&j(!1,h.classed(l.SELECTED,!1),f,g)})},h.transform=function(a,b){var c=this.internal,d=["pie","donut"].indexOf(a)>=0?{withTransform:!0}:null;c.transformTo(b,a,d)},i.transformTo=function(a,b,c){var d=this,e=!d.hasArcType(),f=c||{withTransitionForAxis:e};f.withTransitionForTransform=!1,d.transiting=!1,d.setTargetType(a,b),d.updateTargets(d.data.targets),d.updateAndRedraw(f)},h.groups=function(a){var b=this.internal,c=b.config;return p(a)?c.data_groups:(c.data_groups=a,b.redraw(),c.data_groups)},h.xgrids=function(a){var b=this.internal,c=b.config;return a?(c.grid_x_lines=a,b.redrawWithoutRescale(),c.grid_x_lines):c.grid_x_lines},h.xgrids.add=function(a){var b=this.internal;return this.xgrids(b.config.grid_x_lines.concat(a?a:[]))},h.xgrids.remove=function(a){var b=this.internal;b.removeGridLines(a,!0)},h.ygrids=function(a){var b=this.internal,c=b.config;return a?(c.grid_y_lines=a,b.redrawWithoutRescale(),c.grid_y_lines):c.grid_y_lines},h.ygrids.add=function(a){var b=this.internal;return this.ygrids(b.config.grid_y_lines.concat(a?a:[]))},h.ygrids.remove=function(a){var b=this.internal;b.removeGridLines(a,!1)},h.regions=function(a){var b=this.internal,c=b.config;return a?(c.regions=a,b.redrawWithoutRescale(),c.regions):c.regions},h.regions.add=function(a){var b=this.internal,c=b.config;return a?(c.regions=c.regions.concat(a),b.redrawWithoutRescale(),c.regions):c.regions},h.regions.remove=function(a){var b,c,d,e=this.internal,f=e.config;return a=a||{},b=e.getOption(a,"duration",f.transition_duration),c=e.getOption(a,"classes",[l.region]),d=e.main.select("."+l.regions).selectAll(c.map(function(a){return"."+a})),(b?d.transition().duration(b):d).style("opacity",0).remove(),f.regions=f.regions.filter(function(a){var b=!1;return a["class"]?(a["class"].split(" ").forEach(function(a){c.indexOf(a)>=0&&(b=!0)}),!b):!0}),f.regions},h.data=function(a){var b=this.internal.data.targets;return"undefined"==typeof a?b:b.filter(function(b){return[].concat(a).indexOf(b.id)>=0})},h.data.shown=function(a){return this.internal.filterTargetsToShow(this.data(a))},h.data.values=function(a){var b,c=null;return a&&(b=this.data(a),c=b[0]?b[0].values.map(function(a){return a.value}):null),c},h.data.names=function(a){return this.internal.clearLegendItemTextBoxCache(),this.internal.updateDataAttributes("names",a)},h.data.colors=function(a){return this.internal.updateDataAttributes("colors",a)},h.data.axes=function(a){return this.internal.updateDataAttributes("axes",a)},h.category=function(a,b){var c=this.internal,d=c.config;return arguments.length>1&&(d.axis_x_categories[a]=b,c.redraw()),d.axis_x_categories[a]},h.categories=function(a){var b=this.internal,c=b.config;return arguments.length?(c.axis_x_categories=a,b.redraw(),c.axis_x_categories):c.axis_x_categories},h.color=function(a){var b=this.internal;return b.color(a)},h.x=function(a){var b=this.internal;return arguments.length&&(b.updateTargetX(b.data.targets,a),b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})),b.data.xs},h.xs=function(a){var b=this.internal;return arguments.length&&(b.updateTargetXs(b.data.targets,a),b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})),b.data.xs},h.axis=function(){},h.axis.labels=function(a){var b=this.internal;arguments.length&&(Object.keys(a).forEach(function(c){b.axis.setLabelText(c,a[c])}),b.axis.updateLabels())},h.axis.max=function(a){var b=this.internal,c=b.config;return arguments.length?("object"==typeof a?(m(a.x)&&(c.axis_x_max=a.x),m(a.y)&&(c.axis_y_max=a.y),m(a.y2)&&(c.axis_y2_max=a.y2)):c.axis_y_max=c.axis_y2_max=a,void b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})):{x:c.axis_x_max,y:c.axis_y_max,y2:c.axis_y2_max}},h.axis.min=function(a){var b=this.internal,c=b.config;return arguments.length?("object"==typeof a?(m(a.x)&&(c.axis_x_min=a.x),m(a.y)&&(c.axis_y_min=a.y),m(a.y2)&&(c.axis_y2_min=a.y2)):c.axis_y_min=c.axis_y2_min=a,void b.redraw({withUpdateOrgXDomain:!0,withUpdateXDomain:!0})):{x:c.axis_x_min,y:c.axis_y_min,y2:c.axis_y2_min}},h.axis.range=function(a){return arguments.length?(q(a.max)&&this.axis.max(a.max),void(q(a.min)&&this.axis.min(a.min))):{max:this.axis.max(),min:this.axis.min()}},h.legend=function(){},h.legend.show=function(a){var b=this.internal;b.showLegend(b.mapToTargetIds(a)),b.updateAndRedraw({withLegend:!0})},h.legend.hide=function(a){var b=this.internal;b.hideLegend(b.mapToTargetIds(a)),b.updateAndRedraw({withLegend:!0})},h.resize=function(a){var b=this.internal,c=b.config;c.size_width=a?a.width:null,c.size_height=a?a.height:null,this.flush()},h.flush=function(){var a=this.internal;a.updateAndRedraw({withLegend:!0,withTransition:!1,withTransitionForTransform:!1})},h.destroy=function(){var b=this.internal;return a.clearInterval(b.intervalForObserveInserted),a.onresize=null,b.selectChart.classed("c3",!1).html(""),Object.keys(b).forEach(function(a){b[a]=null}),null},h.tooltip=function(){},h.tooltip.show=function(a){var b,c,d=this.internal;a.mouse&&(c=a.mouse),a.data?d.isMultipleX()?(c=[d.x(a.data.x),d.getYScale(a.data.id)(a.data.value)],b=null):b=m(a.data.index)?a.data.index:d.getIndexByX(a.data.x):"undefined"!=typeof a.x?b=d.getIndexByX(a.x):"undefined"!=typeof a.index&&(b=a.index),d.dispatchEvent("mouseover",b,c),d.dispatchEvent("mousemove",b,c)},h.tooltip.hide=function(){this.internal.dispatchEvent("mouseout",0)};var z;i.isSafari=function(){var b=a.navigator.userAgent;return b.indexOf("Safari")>=0&&b.indexOf("Chrome")<0},i.isChrome=function(){var b=a.navigator.userAgent;return b.indexOf("Chrome")>=0},Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d?this:a,b.concat(Array.prototype.slice.call(arguments)))};return d.prototype=this.prototype,e.prototype=new d,e}),"function"==typeof define&&define.amd?define("c3",["d3"],k):"undefined"!=typeof exports&&"undefined"!=typeof module?module.exports=k:a.c3=k}(window);
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){function n(n){function t(t,r,e,u,i,o){for(;i>=0&&o>i;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=n>0?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),t(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=n>0?0:u-1;i>=0&&u>i;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if("number"==typeof i)n>0?o=i>=0?i:Math.max(i+a,o):a=i>=0?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return i=r(e,u),e[i]===u?i:-1;if(u!==u)return i=t(l.call(e,o,a),m.isNaN),i>=0?i+o:-1;for(i=n>0?o:a-1;i>=0&&a>i;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)i=I[r],i in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=m),exports._=m):u._=m,m.VERSION="1.8.3";var b=function(n,t,r){if(t===void 0)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}},x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)};m.iteratee=function(n,t){return x(n,t,1/0)};var _=function(n,t){return function(r){var e=arguments.length;if(2>e||null==r)return r;for(var u=1;e>u;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;a>c;c++){var f=o[c];t&&r[f]!==void 0||(r[f]=i[f])}return r}},j=function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;var t=new d;return d.prototype=null,t},w=function(n){return function(t){return null==t?void 0:t[n]}},A=Math.pow(2,53)-1,O=w("length"),k=function(n){var t=O(n);return"number"==typeof t&&t>=0&&A>=t};m.each=m.forEach=function(n,t,r){t=b(t,r);var e,u;if(k(n))for(e=0,u=n.length;u>e;e++)t(n[e],e,n);else{var i=m.keys(n);for(e=0,u=i.length;u>e;e++)t(n[i[e]],i[e],n)}return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;u>o;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){var e;return e=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r),e!==void 0&&e!==-1?n[e]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),("number"!=typeof r||e)&&(r=0),m.indexOf(n,t,r)>=0},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],e>i&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(u>o||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],i>e&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o>u||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;e>i;i++)t=m.random(0,i),t!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(k(n)||(n=m.values(n)),n[m.random(n.length-1)]):m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var F=function(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){var o=r(e,i,t);n(u,e,o)}),u}};m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:k(n)?n.length:m.keys(n).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)};var S=function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);a>o;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){t||(c=S(c,t,r));var f=0,l=c.length;for(u.length+=l;l>f;)u[i++]=c[f++]}else r||(u[i++]=c)}return u};m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);a>o;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);u>e;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;r>o&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;t>e;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){r=x(r,e,1);for(var u=r(t),i=0,o=O(n);o>i;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;e>i;i++,n+=r)u[i]=n;return u};var E=function(n,t,r,e,u){if(!(e instanceof t))return n.apply(r,u);var i=j(n.prototype),o=n.apply(i,u);return m.isObject(o)?o:i};m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));if(!m.isFunction(n))throw new TypeError("Bind must be called on a function");var r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};return e},m.partial=function(n){var t=l.call(arguments,1),r=function(){for(var e=0,u=t.length,i=Array(u),o=0;u>o;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)};return r},m.bindAll=function(n){var t,r,e=arguments.length;if(1>=e)throw new Error("bindAll must be passed function names");for(t=1;e>t;t++)r=arguments[t],n[r]=m.bind(n[r],n);return n},m.memoize=function(n,t){var r=function(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){var e,u,i,o=null,a=0;r||(r={});var c=function(){a=r.leading===!1?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)};return function(){var f=m.now();a||r.leading!==!1||(a=f);var l=t-(f-a);return e=this,u=arguments,0>=l||l>t?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||r.trailing===!1||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){var e,u,i,o,a,c=function(){var f=m.now()-o;t>f&&f>=0?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e||(i=u=null)))};return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e||(e=setTimeout(c,t)),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return--n>0&&(r=t.apply(this,arguments)),1>=n&&(t=null),r}},m.once=m.partial(m.before,2);var M=!{toString:null}.propertyIsEnumerable("toString"),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var t=[];for(var r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var t=[];for(var r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;i>a;a++)e=u[a],o[e]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var t=[];for(var r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;o>i;i++)if(e=u[i],t(n[e],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null==o)return i;m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;c>a;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}return i},m.omit=function(n,t,r){if(m.isFunction(t))t=m.negate(t);else{var e=m.map(S(arguments,!1,!1,1),String);t=function(n,t){return!m.contains(e,t)}}return m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){var r=j(n);return t&&m.extendOwn(r,t),r},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;e>i;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0};var N=function(n,t,r,e){if(n===t)return 0!==n||1/n===1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!==+n?+t!==+t:0===+n?1/+n===1/t:+n===+t;case"[object Date]":case"[object Boolean]":return+n===+t}var i="[object Array]"===u;if(!i){if("object"!=typeof n||"object"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in t)return!1}r=r||[],e=e||[];for(var c=r.length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),i){if(c=n.length,c!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n);if(c=l.length,m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0};m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n?!0:k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return"[object Array]"===s.call(n)},m.isObject=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return n===void 0},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;n>u;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()};var B={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},T=m.invert(B),R=function(n){var t=function(t){return n[t]},r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return n=null==n?"":""+n,e.test(n)?n.replace(u,t):n}};m.escape=R(B),m.unescape=R(T),m.result=function(n,t,r){var e=null==n?void 0:n[t];return e===void 0&&(e=r),m.isFunction(e)?e.call(n):e};var q=0;m.uniqueId=function(n){var t=++q+"";return n?n+t:t},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var K=/(.)^/,z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g,L=function(n){return"\\"+z[n]};m.template=function(n,t,r){!t&&r&&(t=r),t=m.defaults({},t,m.templateSettings);var e=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(e,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t}),i+="';\n",t.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{var o=new Function(t.variable||"obj","_",i)}catch(a){throw a.source=i,a}var c=function(n){return o.call(this,n,m)},f=t.variable||"obj";return c.source="function("+f+"){\n"+i+"}",c},m.chain=function(n){var t=m(n);return t._chain=!0,t};var P=function(n,t){return n._chain?m(t).chain():t};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each(["concat","join","slice"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}).call(this);
//# sourceMappingURL=underscore-min.map
// numeral.js
// version : 1.4.5
// author : Adam Draper
// license : MIT
// http://adamwdraper.github.com/Numeral-js/
(function(){function o(e){this._n=e}function u(e,t,n){var r=Math.pow(10,t),i;i=(Math.round(e*r)/r).toFixed(t);if(n){var s=new RegExp("0{1,"+n+"}$");i=i.replace(s,"")}return i}function a(e,t){var n;t.indexOf("$")>-1?n=l(e,t):t.indexOf("%")>-1?n=c(e,t):t.indexOf(":")>-1?n=h(e,t):n=d(e,t);return n}function f(e,t){if(t.indexOf(":")>-1)e._n=p(t);else if(t===i)e._n=0;else{var s=t;n[r].delimiters.decimal!=="."&&(t=t.replace(/\./g,"").replace(n[r].delimiters.decimal,"."));var o=new RegExp(n[r].abbreviations.thousand+"(?:\\)|(\\"+n[r].currency.symbol+")?(?:\\))?)?$"),u=new RegExp(n[r].abbreviations.million+"(?:\\)|(\\"+n[r].currency.symbol+")?(?:\\))?)?$"),a=new RegExp(n[r].abbreviations.billion+"(?:\\)|(\\"+n[r].currency.symbol+")?(?:\\))?)?$"),f=new RegExp(n[r].abbreviations.trillion+"(?:\\)|(\\"+n[r].currency.symbol+")?(?:\\))?)?$"),l=["KB","MB","GB","TB","PB","EB","ZB","YB"],c=!1;for(var h=0;h<=l.length;h++){c=t.indexOf(l[h])>-1?Math.pow(1024,h+1):!1;if(c)break}e._n=(c?c:1)*(s.match(o)?Math.pow(10,3):1)*(s.match(u)?Math.pow(10,6):1)*(s.match(a)?Math.pow(10,9):1)*(s.match(f)?Math.pow(10,12):1)*(t.indexOf("%")>-1?.01:1)*Number((t.indexOf("(")>-1?"-":"")+t.replace(/[^0-9\.'-]+/g,""));e._n=c?Math.ceil(e._n):e._n}return e._n}function l(e,t){var i=t.indexOf("$")<=1?!0:!1,s="";if(t.indexOf(" $")>-1){s=" ";t=t.replace(" $","")}else if(t.indexOf("$ ")>-1){s=" ";t=t.replace("$ ","")}else t=t.replace("$","");var o=a(e,t);if(i)if(o.indexOf("(")>-1||o.indexOf("-")>-1){o=o.split("");o.splice(1,0,n[r].currency.symbol+s);o=o.join("")}else o=n[r].currency.symbol+s+o;else if(o.indexOf(")")>-1){o=o.split("");o.splice(-1,0,s+n[r].currency.symbol);o=o.join("")}else o=o+s+n[r].currency.symbol;return o}function c(e,t){var n="";if(t.indexOf(" %")>-1){n=" ";t=t.replace(" %","")}else t=t.replace("%","");e._n=e._n*100;var r=a(e,t);if(r.indexOf(")")>-1){r=r.split("");r.splice(-1,0,n+"%");r=r.join("")}else r=r+n+"%";return r}function h(e,t){var n=Math.floor(e._n/60/60),r=Math.floor((e._n-n*60*60)/60),i=Math.round(e._n-n*60*60-r*60);return n+":"+(r<10?"0"+r:r)+":"+(i<10?"0"+i:i)}function p(e){var t=e.split(":"),n=0;if(t.length===3){n+=Number(t[0])*60*60;n+=Number(t[1])*60;n+=Number(t[2])}else if(t.lenght===2){n+=Number(t[0])*60;n+=Number(t[1])}return Number(n)}function d(e,t){var s=!1,o=!1,a="",f="",l="",c=Math.abs(e._n);if(e._n===0&&i!==null)return i;if(t.indexOf("(")>-1){s=!0;t=t.slice(1,-1)}if(t.indexOf("a")>-1){if(t.indexOf(" a")>-1){a=" ";t=t.replace(" a","")}else t=t.replace("a","");if(c>=Math.pow(10,12)){a+=n[r].abbreviations.tillion;e._n=e._n/Math.pow(10,12)}else if(c<Math.pow(10,12)&&c>=Math.pow(10,9)){a+=n[r].abbreviations.billion;e._n=e._n/Math.pow(10,9)}else if(c<Math.pow(10,9)&&c>=Math.pow(10,6)){a+=n[r].abbreviations.million;e._n=e._n/Math.pow(10,6)}else if(c<Math.pow(10,6)&&c>=Math.pow(10,3)){a+=n[r].abbreviations.thousand;e._n=e._n/Math.pow(10,3)}}if(t.indexOf("b")>-1){if(t.indexOf(" b")>-1){f=" ";t=t.replace(" b","")}else t=t.replace("b","");var h=["B","KB","MB","GB","TB","PB","EB","ZB","YB"],p,d;for(var v=0;v<=h.length;v++){p=Math.pow(1024,v);d=Math.pow(1024,v+1);if(e._n>=p&&e._n<d){f+=h[v];p>0&&(e._n=e._n/p);break}}}if(t.indexOf("o")>-1){if(t.indexOf(" o")>-1){l=" ";t=t.replace(" o","")}else t=t.replace("o","");l+=n[r].ordinal(e._n)}if(t.indexOf("[.]")>-1){o=!0;t=t.replace("[.]",".")}var m=e._n.toString().split(".")[0],g=t.split(".")[1],y=t.indexOf(","),b="",w=!1;if(g){if(g.indexOf("[")>-1){g=g.replace("]","");g=g.split("[");b=u(e._n,g[0].length+g[1].length,g[1].length)}else b=u(e._n,g.length);m=b.split(".")[0];b.split(".")[1].length?b=n[r].delimiters.decimal+b.split(".")[1]:b="";o&&Number(b)===0&&(b="")}else m=u(e._n,null);if(m.indexOf("-")>-1){m=m.slice(1);w=!0}y>-1&&(m=m.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1"+n[r].delimiters.thousands));t.indexOf(".")===0&&(m="");return(s&&w?"(":"")+(!s&&w?"-":"")+m+b+(l?l:"")+(a?a:"")+(f?f:"")+(s&&w?")":"")}function v(e,t){n[e]=t}var e,t="1.4.5",n={},r="en",i=null,s=typeof module!="undefined"&&module.exports;e=function(t){e.isNumeral(t)?t=t.value():Number(t)||(t=0);return new o(Number(t))};e.version=t;e.isNumeral=function(e){return e instanceof o};e.language=function(t,i){if(!t)return r;t&&!i&&(r=t);(i||!n[t])&&v(t,i);return e};e.language("en",{delimiters:{thousands:",",decimal:"."},abbreviations:{thousand:"k",million:"m",billion:"b",trillion:"t"},ordinal:function(e){var t=e%10;return~~(e%100/10)===1?"th":t===1?"st":t===2?"nd":t===3?"rd":"th"},currency:{symbol:"$"}});e.zeroFormat=function(e){typeof e=="string"?i=e:i=null};e.fn=o.prototype={clone:function(){return e(this)},format:function(t){return a(this,t?t:e.defaultFormat)},unformat:function(t){return f(this,t?t:e.defaultFormat)},value:function(){return this._n},valueOf:function(){return this._n},set:function(e){this._n=Number(e);return this},add:function(e){this._n=this._n+Number(e);return this},subtract:function(e){this._n=this._n-Number(e);return this},multiply:function(e){this._n=this._n*Number(e);return this},divide:function(e){this._n=this._n/Number(e);return this},difference:function(e){var t=this._n-Number(e);t<0&&(t=-t);return t}};s&&(module.exports=e);typeof ender=="undefined"&&(this.numeral=e);typeof define=="function"&&define.amd&&define([],function(){return e})}).call(this);
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Browser Request
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// UMD HEADER START 
(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define([], factory);
    } else if (typeof exports === 'object') {
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like enviroments that support module.exports,
        // like Node.
        module.exports = factory();
    } else {
        // Browser globals (root is window)
        root.returnExports = factory();
  }
}(this, function () {
// UMD HEADER END

var XHR = XMLHttpRequest
if (!XHR) throw new Error('missing XMLHttpRequest')
request.log = {
  'trace': noop, 'debug': noop, 'info': noop, 'warn': noop, 'error': noop
}

var DEFAULT_TIMEOUT = 3 * 60 * 1000 // 3 minutes

//
// request
//

function request(options, callback) {
  // The entry-point to the API: prep the options object and pass the real work to run_xhr.
  if(typeof callback !== 'function')
    throw new Error('Bad callback given: ' + callback)

  if(!options)
    throw new Error('No options given')

  var options_onResponse = options.onResponse; // Save this for later.

  if(typeof options === 'string')
    options = {'uri':options};
  else
    options = JSON.parse(JSON.stringify(options)); // Use a duplicate for mutating.

  options.onResponse = options_onResponse // And put it back.

  if (options.verbose) request.log = getLogger();

  if(options.url) {
    options.uri = options.url;
    delete options.url;
  }

  if(!options.uri && options.uri !== "")
    throw new Error("options.uri is a required argument");

  if(typeof options.uri != "string")
    throw new Error("options.uri must be a string");

  var unsupported_options = ['proxy', '_redirectsFollowed', 'maxRedirects', 'followRedirect']
  for (var i = 0; i < unsupported_options.length; i++)
    if(options[ unsupported_options[i] ])
      throw new Error("options." + unsupported_options[i] + " is not supported")

  options.callback = callback
  options.method = options.method || 'GET';
  options.headers = options.headers || {};
  options.body    = options.body || null
  options.timeout = options.timeout || request.DEFAULT_TIMEOUT

  if(options.headers.host)
    throw new Error("Options.headers.host is not supported");

  if(options.json) {
    options.headers.accept = options.headers.accept || 'application/json'
    if(options.method !== 'GET')
      options.headers['content-type'] = 'application/json'

    if(typeof options.json !== 'boolean')
      options.body = JSON.stringify(options.json)
    else if(typeof options.body !== 'string')
      options.body = JSON.stringify(options.body)
  }
  
  //BEGIN QS Hack
  var serialize = function(obj) {
    var str = [];
    for(var p in obj)
      if (obj.hasOwnProperty(p)) {
        str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
      }
    return str.join("&");
  }
  
  if(options.qs){
    var qs = (typeof options.qs == 'string')? options.qs : serialize(options.qs);
    if(options.uri.indexOf('?') !== -1){ //no get params
        options.uri = options.uri+'&'+qs;
    }else{ //existing get params
        options.uri = options.uri+'?'+qs;
    }
  }
  //END QS Hack
  
  //BEGIN FORM Hack
  var multipart = function(obj) {
    //todo: support file type (useful?)
    var result = {};
    result.boundry = '-------------------------------'+Math.floor(Math.random()*1000000000);
    var lines = [];
    for(var p in obj){
        if (obj.hasOwnProperty(p)) {
            lines.push(
                '--'+result.boundry+"\n"+
                'Content-Disposition: form-data; name="'+p+'"'+"\n"+
                "\n"+
                obj[p]+"\n"
            );
        }
    }
    lines.push( '--'+result.boundry+'--' );
    result.body = lines.join('');
    result.length = result.body.length;
    result.type = 'multipart/form-data; boundary='+result.boundry;
    return result;
  }
  
  if(options.form){
    if(typeof options.form == 'string') throw('form name unsupported');
    if(options.method === 'POST'){
        var encoding = (options.encoding || 'application/x-www-form-urlencoded').toLowerCase();
        options.headers['content-type'] = encoding;
        switch(encoding){
            case 'application/x-www-form-urlencoded':
                options.body = serialize(options.form).replace(/%20/g, "+");
                break;
            case 'multipart/form-data':
                var multi = multipart(options.form);
                //options.headers['content-length'] = multi.length;
                options.body = multi.body;
                options.headers['content-type'] = multi.type;
                break;
            default : throw new Error('unsupported encoding:'+encoding);
        }
    }
  }
  //END FORM Hack

  // If onResponse is boolean true, call back immediately when the response is known,
  // not when the full request is complete.
  options.onResponse = options.onResponse || noop
  if(options.onResponse === true) {
    options.onResponse = callback
    options.callback = noop
  }

  // XXX Browsers do not like this.
  //if(options.body)
  //  options.headers['content-length'] = options.body.length;

  // HTTP basic authentication
  if(!options.headers.authorization && options.auth)
    options.headers.authorization = 'Basic ' + b64_enc(options.auth.username + ':' + options.auth.password);

  return run_xhr(options)
}

var req_seq = 0
function run_xhr(options) {
  var xhr = new XHR
    , timed_out = false
    , is_cors = is_crossDomain(options.uri)
    , supports_cors = ('withCredentials' in xhr)

  req_seq += 1
  xhr.seq_id = req_seq
  xhr.id = req_seq + ': ' + options.method + ' ' + options.uri
  xhr._id = xhr.id // I know I will type "_id" from habit all the time.

  if(is_cors && !supports_cors) {
    var cors_err = new Error('Browser does not support cross-origin request: ' + options.uri)
    cors_err.cors = 'unsupported'
    return options.callback(cors_err, xhr)
  }

  xhr.timeoutTimer = setTimeout(too_late, options.timeout)
  function too_late() {
    timed_out = true
    var er = new Error('ETIMEDOUT')
    er.code = 'ETIMEDOUT'
    er.duration = options.timeout

    request.log.error('Timeout', { 'id':xhr._id, 'milliseconds':options.timeout })
    return options.callback(er, xhr)
  }

  // Some states can be skipped over, so remember what is still incomplete.
  var did = {'response':false, 'loading':false, 'end':false}

  xhr.onreadystatechange = on_state_change
  xhr.open(options.method, options.uri, true) // asynchronous
  if(is_cors)
    xhr.withCredentials = !! options.withCredentials
  xhr.send(options.body)
  return xhr

  function on_state_change(event) {
    if(timed_out)
      return request.log.debug('Ignoring timed out state change', {'state':xhr.readyState, 'id':xhr.id})

    request.log.debug('State change', {'state':xhr.readyState, 'id':xhr.id, 'timed_out':timed_out})

    if(xhr.readyState === XHR.OPENED) {
      request.log.debug('Request started', {'id':xhr.id})
      for (var key in options.headers)
        xhr.setRequestHeader(key, options.headers[key])
    }

    else if(xhr.readyState === XHR.HEADERS_RECEIVED)
      on_response()

    else if(xhr.readyState === XHR.LOADING) {
      on_response()
      on_loading()
    }

    else if(xhr.readyState === XHR.DONE) {
      on_response()
      on_loading()
      on_end()
    }
  }

  function on_response() {
    if(did.response)
      return

    did.response = true
    request.log.debug('Got response', {'id':xhr.id, 'status':xhr.status})
    clearTimeout(xhr.timeoutTimer)
    xhr.statusCode = xhr.status // Node request compatibility

    // Detect failed CORS requests.
    if(is_cors && xhr.statusCode == 0) {
      var cors_err = new Error('CORS request rejected: ' + options.uri)
      cors_err.cors = 'rejected'

      // Do not process this request further.
      did.loading = true
      did.end = true

      return options.callback(cors_err, xhr)
    }

    options.onResponse(null, xhr)
  }

  function on_loading() {
    if(did.loading)
      return

    did.loading = true
    request.log.debug('Response body loading', {'id':xhr.id})
    // TODO: Maybe simulate "data" events by watching xhr.responseText
  }

  function on_end() {
    if(did.end)
      return

    did.end = true
    request.log.debug('Request done', {'id':xhr.id})

    xhr.body = xhr.responseText
    if(options.json) {
      try        { xhr.body = JSON.parse(xhr.responseText) }
      catch (er) { return options.callback(er, xhr)        }
    }

    options.callback(null, xhr, xhr.body)
  }

} // request

request.withCredentials = false;
request.DEFAULT_TIMEOUT = DEFAULT_TIMEOUT;

//
// defaults
//

request.defaults = function(options, requester) {
  var def = function (method) {
    var d = function (params, callback) {
      if(typeof params === 'string')
        params = {'uri': params};
      else {
        params = JSON.parse(JSON.stringify(params));
      }
      for (var i in options) {
        if (params[i] === undefined) params[i] = options[i]
      }
      return method(params, callback)
    }
    return d
  }
  var de = def(request)
  de.get = def(request.get)
  de.post = def(request.post)
  de.put = def(request.put)
  de.head = def(request.head)
  return de
}

//
// HTTP method shortcuts
//

var shortcuts = [ 'get', 'put', 'post', 'head' ];
shortcuts.forEach(function(shortcut) {
  var method = shortcut.toUpperCase();
  var func   = shortcut.toLowerCase();

  request[func] = function(opts) {
    if(typeof opts === 'string')
      opts = {'method':method, 'uri':opts};
    else {
      opts = JSON.parse(JSON.stringify(opts));
      opts.method = method;
    }

    var args = [opts].concat(Array.prototype.slice.apply(arguments, [1]));
    return request.apply(this, args);
  }
})

//
// CouchDB shortcut
//

request.couch = function(options, callback) {
  if(typeof options === 'string')
    options = {'uri':options}

  // Just use the request API to do JSON.
  options.json = true
  if(options.body)
    options.json = options.body
  delete options.body

  callback = callback || noop

  var xhr = request(options, couch_handler)
  return xhr

  function couch_handler(er, resp, body) {
    if(er)
      return callback(er, resp, body)

    if((resp.statusCode < 200 || resp.statusCode > 299) && body.error) {
      // The body is a Couch JSON object indicating the error.
      er = new Error('CouchDB error: ' + (body.error.reason || body.error.error))
      for (var key in body)
        er[key] = body[key]
      return callback(er, resp, body);
    }

    return callback(er, resp, body);
  }
}

//
// Utility
//

function noop() {}

function getLogger() {
  var logger = {}
    , levels = ['trace', 'debug', 'info', 'warn', 'error']
    , level, i

  for(i = 0; i < levels.length; i++) {
    level = levels[i]

    logger[level] = noop
    if(typeof console !== 'undefined' && console && console[level])
      logger[level] = formatted(console, level)
  }

  return logger
}

function formatted(obj, method) {
  return formatted_logger

  function formatted_logger(str, context) {
    if(typeof context === 'object')
      str += ' ' + JSON.stringify(context)

    return obj[method].call(obj, str)
  }
}

// Return whether a URL is a cross-domain request.
function is_crossDomain(url) {
  var rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/

  // jQuery #8138, IE may throw an exception when accessing
  // a field from window.location if document.domain has been set
  var ajaxLocation
  try { ajaxLocation = location.href }
  catch (e) {
    // Use the href attribute of an A element since IE will modify it given document.location
    ajaxLocation = document.createElement( "a" );
    ajaxLocation.href = "";
    ajaxLocation = ajaxLocation.href;
  }

  var ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || []
    , parts = rurl.exec(url.toLowerCase() )

  var result = !!(
    parts &&
    (  parts[1] != ajaxLocParts[1]
    || parts[2] != ajaxLocParts[2]
    || (parts[3] || (parts[1] === "http:" ? 80 : 443)) != (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? 80 : 443))
    )
  )

  //console.debug('is_crossDomain('+url+') -> ' + result)
  return result
}

// MIT License from http://phpjs.org/functions/base64_encode:358
function b64_enc (data) {
    // Encodes string using MIME base64 algorithm
    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc="", tmp_arr = [];

    if (!data) {
        return data;
    }

    // assume utf8 data
    // data = this.utf8_encode(data+'');

    do { // pack three octets into four hexets
        o1 = data.charCodeAt(i++);
        o2 = data.charCodeAt(i++);
        o3 = data.charCodeAt(i++);

        bits = o1<<16 | o2<<8 | o3;

        h1 = bits>>18 & 0x3f;
        h2 = bits>>12 & 0x3f;
        h3 = bits>>6 & 0x3f;
        h4 = bits & 0x3f;

        // use hexets to index into b64, and append result to encoded string
        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
    } while (i < data.length);

    enc = tmp_arr.join('');

    switch (data.length % 3) {
        case 1:
            enc = enc.slice(0, -2) + '==';
        break;
        case 2:
            enc = enc.slice(0, -1) + '=';
        break;
    }

    return enc;
}
    return request;
//UMD FOOTER START
}));
//UMD FOOTER END

},{}],2:[function(require,module,exports){
'use strict';


var request = require('browser-request');

var popily = window.popily || {};

var _error = function(msg, error) {
  return {msg: msg, error: error};
};
  
var _request = function(method, path, data, callback) {
  var DEFAULT_URL = 'https://popily.com';
  var DEFAULT_BASE_PATH = '/api';

  var apiUrl = popily.api.apiUrl;
  if(!popily.api.apiUrl) {
    apiUrl = DEFAULT_URL;
  } 
  apiUrl = apiUrl + DEFAULT_BASE_PATH;

  var params = {
    method: method,
    headers: { 
      'Authorization': 'Token ' + popily.api.token,
      'Accept': 'application/json',
    },
    url: apiUrl + path// + '?format=api'
  };
      
  if('qs' in data) {
    params['qs'] = data['qs'];
    params['json'] = true;
  }
  if('json' in data) {
    params['body'] = data['json'];
    params['json'] = true;
  }
  if('form' in data) {
    params['formData'] = data['form'];
  }
  
  request(params, function(err, httpResponse, body) {
    if(err)
      return callback(_error('Request error', err));
      
    if(httpResponse.statusCode === 401)
      return callback(_error('Invalid API token'));

    if(httpResponse.statusCode === 400)
      return callback(_error('Bad request', body));
      
    try {
      var response = body;
      if(typeof body === 'string')
        response = JSON.parse(body);
    } catch(e) {
      return callback(_error('Error: '+e, e) )
    }

    callback(null, response);

  });
};

var packFilters = function(filters) {
  var packedStr = '';
  filters.forEach(function(f, i) {
    var op = 'eq'
    if('op' in f)
      op = f['op']
    
    var filterStr = '';
    if(i > 0)
      filterStr += '__';

    var valStr = '';
    if(f.hasOwnProperty('values')) {
      valStr = f['values'].join(',');
    }
    filterStr += f['column'] + '!' + op + '!' + ( valStr );
    packedStr += filterStr
  });
  return packedStr;
}

var assignCustomizations = function(dataDict, insightData) {
  [
    'title',
    'x_label',
    'y_label',
    'z_label',
    'category_order',
    'time_interval',
    'refresh_rate',
    'swap'
  ].forEach(function(key) {
    if(key in insightData)
      dataDict[key] = insightData[key];
  });

  return dataDict;
};        
        
popily.api = {
  addSource: function(sourceData, cb) {
    
    var data = {};
    ['columns', 'title', 'description'].forEach(function(key) {
      if(key in sourceData)
        data[key] = sourceData[key];
    })

    if('url' in sourceData) {
      data['url'] = sourceData['url']
      _request('POST', '/sources/', {json: data}, cb);
    }

    else if('connection_string' in sourceData ) {
      data['connection_string'] = sourceData['connection_string']
      data['query'] = sourceData['query']
      _request('POST', '/sources/', {json: data}, cb);
    }
    
    else
      cb('url or connection_string is required');
  },


  getSources: function(cb) {
    _request('GET', '/sources/', {}, cb);
  },


  getSource: function(sourceId, cb) {
    _request('GET', '/sources/'+sourceId+'/', {}, cb);
  },


  getInsights: function(sourceId, params, cb) {
    params = params || {};
    var payload = {'source': sourceId};

    ['columns', 'insight_types', 'insight_actions'].forEach(function(key) {
      if(key in params)
        payload[key] = params[key].join(',')
    });

    if('filters' in params)
      payload['filters'] = packFilters(params['filters'])

    if('full' in params)
      payload['full'] = params['full']

    if('single' in params) {
      payload['single'] = params['single'];
      payload = assignCustomizations(payload, params);
    }

    _request('GET', '/insights/', {qs: payload}, cb);
  },


  getInsight: function(insightId, params, cb) {
    var payload = {};
    if('filters' in params)
      payload['filters'] = packFilters(params['filters']);

    ['full', 'height', 'width'].forEach(function(key) {
      if(key in params)
        payload[key] = params[key];
    });

    payload = assignCustomizations(payload, params);
    
    _request('GET', '/insights/' + insightId + '/', {qs: payload}, cb);
  },


  customizeInsight: function(insightId, params, insightData, cb) {
    var data = assignCustomizations({}, insightData);
    if('filters' in params)
      data['filters'] = packFilters(params['filters'])

    _request('PUT', '/insights/' + insightId + '/', {json: data}, cb);
  },

  setToken: function(token) {
    this.token = token;
  },

  setURL: function(apiUrl) {
    this.apiUrl = apiUrl;
  }
}

window.popily = popily;
module.exports = popily;

},{"browser-request":1}]},{},[2])
//# sourceMappingURL=data:application/json;base64,

'use strict';
    
(function(window) {
  var popily = window.popily || {};
  popily.chart = {};
  popily.chart.chartTypes = {};
  popily.chart.baseChart = {
    defaults: {
      options: {
          width: '100%',
          height: '100%',
          style: 'detail',
          rotated: false,
          redrawOnResize: true,
          colors: [
            '#54C88A', '#BBD442', '#85C4ED', '#FFC59C', '#4FB27A', '#741699', '#FF7364',
            '#F1C40F', '#DC8345', '#E74C3C', '#096C34', '#4D1567', '#98460C', '#DAF16B',
            '#F9D543', '#947700', '#188849', '#CC3A7F', '#A01507', '#F9D543', '#DB5C98',
            '#3499DB', '#FF988E', '#319D60', '#BC9805', '#E9F998', '#628E0B', '#1E4C7C',
            '#7ECEA1', '#4F78A3', '#C01465', '#F1C40F', '#0F85D1', '#9A51B7', '#7DA0C4',
            '#BB7FD2', '#34618F', '#947700', '#FFE26C', '#92094A', '#BF6322', '#58ADE3',
            '#9FB921', '#0665A2', '#8333A2', '#0F3863', '#BC9805', '#FFE26C', '#E989B6',
            '#C92918', '#FAA96F'
          ]
      },
      barBubbleCutoff: 30,
      chartPadding: function() { return {right: 0, top: 0 }; }
    },
    resize: function(chartObj, width, height) {
      console.log(1);
      chartObj.resize(width, height);
    },
    cleanData: function(rawData) {
      var xValues = rawData.chartData.x.values;
      var yValues = rawData.chartData.y.values;
      var zValues = [];
      var z2Values = [];

      if(rawData.chartData.z) {
        var zValues = rawData.chartData.z.values;
      }

      if(rawData.chartData.z2) {
        var z2Values = rawData.chartData.z2.values;
      }

      var cleanValues = popily.chart.chartData.cleanData(xValues,yValues,zValues,z2Values);

      return cleanValues;
    }
  };

  popily.chart.getChartForType = function(analysisType, chartType) {
    if(_.isUndefined(popily.chart.chartMap)) {
      _buildChartMap();
    }

    var toComplex = {
      'bar': ['barStacked', 'barGrouped'],
      'scatterplot': ['scatterplotCategory'],
      'line': ['multiLine']
    }

    if(analysisType in popily.chart.chartMap) {
        if(!_.isUndefined(chartType)) {
            if(_(popily.chart.chartMap[analysisType].allowed).contains(chartType)) {
                return chartType;
            }
            else if(popily.chart.chartMap[analysisType].defaultChart === chartType) {
              return chartType;
            }
            else if(toComplex.hasOwnProperty(chartType)) {
              var toReturn;
              _.each(toComplex[chartType], function(complexChartType) {
                if(_(popily.chart.chartMap[analysisType].allowed).contains(complexChartType)) {
                  toReturn = complexChartType;
                }
                else if(popily.chart.chartMap[analysisType].defaultChart === complexChartType) {
                  toReturn = complexChartType;
                }
              });
              
              if(!_.isUndefined(toReturn)) {
                return toReturn;
              }

              console.error(chartType + ' not possible for ' + analysisType);
            }
            else {
                console.error(chartType + ' not possible for ' + analysisType);
            }
        }
        return popily.chart.chartMap[analysisType].defaultChart;
    }
    else {
        console.error('No chart for ' + analysisType);
    }
  };

  popily.chart.create = function(apiResponse) {
  
    var ds = popily.dataset(apiResponse.columns);
    return {
      dataset : function() {
        return ds;
      },
      
      draw: function(element, options) {
        var that = this;
        var calculation = apiResponse.calculation;
        var axisAssignments = popily.chart.analyze.assignToAxis(ds.getColumns(), options);
        var analysisType = popily.chart.analyze.determineType(ds.getColumns(), axisAssignments, calculation);
        var formattedData = popily.chart.utils.formatDataset(apiResponse, axisAssignments, analysisType);
        
        var labels = popily.chart.generateLabels(calculation, axisAssignments, options.transformations || []);

        var chartType = popily.chart.getChartForType(analysisType, options.chartType);
        var chartClass = popily.chart.chartTypes[chartType];
        var extraCss = '';
        
        //options = _.extend(chartClass.defaults.options, options);

        _.each(_.keys(popily.chart.baseChart.defaults.options), function(key) {
          if(!options[key]) {
            options[key] = popily.chart.baseChart.defaults.options[key];
          }
        });
        options.uniqueClassName = _.uniqueId('popily-id-');

        if(typeof element === "string") {
          element = document.querySelector(element);
        }
        
        element.classList.add('popily-box');
        element.classList.add(options.uniqueClassName);
        element.innerHTML = '';
        if(options.title) {
          var titleElement = document.createElement("div");
          titleElement.classList.add('popily-title');
          titleElement.innerHTML = labels.title;
          element.appendChild(titleElement);
          
          var titleCss = '';
          if(options.titleFontSize)
            titleCss += 'font-size: '+options.titleFontSize+';';
          if(options.titleFontFamily)
            titleCss += 'font-family: '+options.titleFontFamily+';';
          if(options.titleFontColor)
            titleCss += 'color: '+options.titleFontColor+';';
          if(titleCss)
            extraCss = '.'+options.uniqueClassName+ ' .popily-title {'+titleCss+'}';
        }
        
        if(extraCss) {
          var style = popily.chart.utils.createStyleElement(extraCss);
          element.appendChild(style);
        }
  
        var chartElement = document.createElement("div");
        chartElement.classList.add('popily-chart');
        element.appendChild(chartElement);
        
        var chart = chartClass.render(chartElement, options, formattedData);
        return chart;
      },
      
    }
  
  } 

  popily.chart.render = function(element, apiResponse, options) {
    var that = this;
    options = options || {};
    
    if(options.filters && !options.transformations) {
      console.log('filters proprtty is deprecated, please rename it to transformations')
      options.transformations = options.filters;
    }      
    var chart = popily.chart.create(apiResponse);
    
    if(options.transformations) {
      var ds = chart.dataset();
      popily.chart.applyTransformations(ds, options.transformations);
    }
    
    return chart.draw(element, options);
    
  };

  popily.chart.loadingMessage = function(element) {
    if(typeof element === "string") {
      element = document.querySelector(element);
    }

    var textElement = document.createElement("div");
    textElement.classList.add('popily-loading');
    textElement.innerHTML = 'We’re doing some calculations to make this chart possible. One moment...';
    element.innerHTML = '';
    element.appendChild(textElement);
  };

  var getThen = function(method, slug, serverOptions, poll, element, callback) {
      popily.api[method](slug, serverOptions, function(err, apiResponse) {
        if(apiResponse.hasOwnProperty('insight') && apiResponse.insight === 'not found') {
          if(poll && apiResponse.hasOwnProperty('source_status') && apiResponse.source_status !== 'finished') {
            // add waiting text to element
            popily.chart.loadingMessage(element);

            setTimeout(function() {
              getThen(method, slug, serverOptions, poll, element, callback);
            },1000);
          }
          else {
            console.warn('No insight found for params ' + JSON.stringify(serverOptions));
          }
        }
        else {
          callback(err, apiResponse);
        }
      });
  };

  popily.chart.getAndRender = function(element, options) {
    var chartOptions = {};
    var serverOptions = {};

    var availableChartOptions = {
      'chartType': 'chartType',
      'colors': 'colors',
      'transformations': 'transformations',
      'filters': 'transformations',
      'xLabel': 'xLabel',
      'yLabel': 'yLabel',
      'xColumn': 'xColumn',
      'groupByColumn': 'groupByColumn',
      'height': 'height',
      'width': 'width',
      'rotated': 'rotated',
      'title': 'title',
      'xOrder': 'order',
      'barSize': 'barSize',
      'lineSize': 'lineSize',
      'pointSize': 'pointSize',
      'titleFontFamily': 'titleFontFamily',
      'titleFontSize': 'titleFontSize',
      'titleFontColor': 'titleFontColor',
      'xGrid': 'xGrid',
      'yGrid': 'yGrid',
      'timeInterval': 'interval',
      'time_interval': 'interval',
    };

    var availableServerOptions = {
      'columns': 'columns',
      'calculation': 'insight_actions',
      'timeInterval': 'time_interval',
      'time_interval': 'time_interval',
      'insight_action': 'insight_actions',
      'analysisType': 'insight_types'
    };

    _.each(_.keys(availableChartOptions), function(option) {
      if(options.hasOwnProperty(option)) {
        chartOptions[availableChartOptions[option]] = options[option];
      }
    });

    _.each(_.keys(availableServerOptions), function(option) {
      if(options.hasOwnProperty(option)) {
        if(['calculation', 'insight_action', 'analysisType'].indexOf(option)!==-1)
          serverOptions[availableServerOptions[option]] = [options[option]];
        else
          serverOptions[availableServerOptions[option]] = options[option];
      }
    });

    serverOptions.full = true;
    var slug, method;

    if(options.hasOwnProperty('insight')) {
      slug = options.insight;
      method = 'getInsight';
    }
    else {
      if(!options.hasOwnProperty('source')) {
        console.warn('Either the insight or source property is required');
        return false;
      }
      serverOptions.single = true;

      slug = options.source;
      method = 'getInsights';
    }

    getThen(method, slug, serverOptions, options.poll, element, function(err, apiResponse) {
        popily.chart.render(element, apiResponse, chartOptions);
    });
  };

  popily.chart.applyTransformations = function(ds, transformations) {
    transformations.forEach(function(transformation) {
      if(['count', 'countUnique'].indexOf(transformation.op) !== -1) {
        popily.chart.applyGroupData(ds, transformation);
      }
      else if('replace' == transformation.op) {
        ds.replaceValues(transformation.column, transformation.replacements);
      }
      else {
        popily.chart.applyFilter(ds, transformation);
      }
    });
  };

  /*
    filter = [{
      column: <column-name>,
      op: none|eq|noteq,
      values: [<array-of-values]>
    }, .. ]
  */
  popily.chart.applyFilter = function(ds, filter) {
    
    // I think this countUnique should not be here!
    if(filter.op == 'distinct' || filter.op == 'countUnique') {
      console.log('filter countUnique is deprecated please dont use it, use "groupData" instead!');
      ds.countUnique();
    } else {
      ds.filter(filter.column, filter.op || 'eq', filter.value || filter.values);
    }
    
    return ds;
  };
  
  /*
    groupData = {
      column: <column-name-to-group-by>,
      op: count|countUnique,
      groupInto: <new-column-with-aggregated-values>,
      customFunction: <optional-custom-aggregation-function>
      customDataType: <optional-custom-type-ofaggregations>
    }
  */
  popily.chart.applyGroupData = function(ds, groupData) {
    
    if(groupData.customFunction) {
      var groupFunc = customFunction;
    }
    else if(['count', 'countUnique'].indexOf(groupData.op) !== -1) {
      var groupFunc = popily.dataset[groupData.op]
    }
    else {
      console.error('Unrecognizer grouping agregation function');
      return ds;
    }
    
    ds.groupBy(groupData.column, groupFunc, groupData.customDataType || groupFunc.dataType, groupData.groupInto || groupFunc.columnLabel);
    
    return ds;
  };
  
  
  var _buildChartMap = function() {
    var chartMap = {};

    for(var chartType in popily.chart.chartTypes) {
      var chartObj = popily.chart.chartTypes[chartType];
      _.each(chartObj.defaultFor, function(analysisType) {
        chartMap[analysisType] = chartMap[analysisType] || {};
        chartMap[analysisType].allowed = chartMap[analysisType].allowed || [];
        chartMap[analysisType].defaultChart = chartType;
        chartMap[analysisType].allowed.push(chartType);
      });

      _.each(chartObj.accepts, function(analysisType) {
        chartMap[analysisType] = chartMap[analysisType] || {};
        chartMap[analysisType].allowed = chartMap[analysisType].allowed || [];
        chartMap[analysisType].allowed.push(chartType);
      });
    }

    popily.chart.chartMap = chartMap;
  };

  function c3Customizations() {
    c3.chart.internal.fn.oldGetHorizontalAxisHeight = c3.chart.internal.fn.getHorizontalAxisHeight;
    c3.chart.internal.fn.getHorizontalAxisHeight = function(axisId) {
      var $$ = this, config = this.config;
      var h = $$.oldGetHorizontalAxisHeight(axisId);
      
      if (axisId === 'y' && config.axis_rotated && config.axis_x_tick_rotate) {
        h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);
      }
      return h;
    }
    c3.chart.internal.fn.oldgetAxisWidthByAxisId = c3.chart.internal.fn.getAxisWidthByAxisId;
    c3.chart.internal.fn.getAxisWidthByAxisId = function(axisId) {
      var $$ = this, config = this.config;
      return $$.oldgetAxisWidthByAxisId(axisId)-14;
    };
  }
  
  c3Customizations();

  if (typeof define === 'function' && define.amd) {
      define("popily", [], function () { return c3; });
  } else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {
      module.exports = popily;
  } else {
      window.popily = popily;
  }
    
})(window);

/**
Analyze data from the Popily API and prepare for rendering
*/

(function(window) {
    var categoricals = [
        'category',
        'state',
        'country',
        'zipcode',
        'rowlabel'
    ];

    var numerals = [
        'numeric',
        'currency'
    ];

    var isA = function(dataType, column) {
        if(_.isUndefined(column)) {
            return false;
        }
        var typeList = dataType === 'number' ? numerals : categoricals;
        return _(typeList).contains(column.data_type);
    };

    var isNumeric = function(column) {
        return isA('number', column);
    };

    var isCategorical = function(column) {
        return isA('category', column);
    };

    var hasSingleEquality = function(filters) {
        return _.some(filters, function(_filter) {
            var op = _filter.op || 'eq';
            if(op === 'eq' && _filter.values.length === 1) {
                return true;
            }
            return false;
        });
    };

    var hasDistinct = function(filters) {
        return _.some(filters, function(_filter) {
            return _filter.op === 'distinct' || _filter.op === 'countUnique';
        });
    };

    var assignToAxis = function(columns, options) {
        options = options || {};
        var filters = options.filters;
        var axisAssignments = {};
        var filterRef = {};

        var assigned = [];
        var isAssigned = function(prop) {
            return _(assigned).contains(prop);
        };

        if(!_.isUndefined(filters)) {
            _.each(filters, function(columnFilter) {
                _.each(columns, function(column) {
                    if(!filterRef.hasOwnProperty(column.column_header)) {
                        filterRef[column.column_header] = [];
                    }
                    if(column.column_header === columnFilter.column) {
                        filterRef[column.column_header].push(columnFilter);
                    }
                });
            });
        }

        var hasSingleOrDistinct = function(column) {
            if(!filterRef.hasOwnProperty(column.column_header)) {
                return false;
            }

            if(hasDistinct(filterRef[column.column_header])) {
                return true;
            }

            if(hasSingleEquality(filterRef[column.column_header])) {
                return true;
            }

            return false;
        };

        
        // Allow for user to set x,z. In order for this to be possible
        // we need to ensure that these are the first columns we check.
        var useColumns = [],
            xColumn,
            zColumn;

        if(options.xColumn) {
            xColumn = _.find(columns, function(column) {
                return column.column_header === options.xColumn;
            });
            if(xColumn) {
                useColumns.push(xColumn);
            }
        }
        if(options.groupByColumn) {
            zColumn = _.find(columns, function(column) {
                return column.column_header === options.groupByColumn;
            });
            if(zColumn) {
                useColumns.push(zColumn);
            }
        }

        var usedHeaders = _.pluck(useColumns, 'column_header');
        _.each(columns, function(column) {
            if(!_(usedHeaders).contains(column.column_header)) {
                useColumns.push(column);
            }
        });

        if(useColumns.length < columns.length) {
            useColumns = columns;
        }

        // Now that we have a definite column order, we can inspect
        // the columns. 
        var column, dataType;
        for (index = 0; index < useColumns.length; index++) {
            column = useColumns[index];
            dataType = column.data_type;

            // Check user options
            if(options.xColumn && column.column_header === options.xColumn) {
                axisAssignments.x = column;
                assigned.push('x');
                continue;
            }

            if(options.groupByColumn && column.column_header === options.groupByColumn) {
                axisAssignments.z = column;
                assigned.push('z');
                continue;
            }
            
            // check filters
            if(filterRef.hasOwnProperty(column.column_header) && filterRef[column.column_header].length > 0) {
                // if column has filter where and 1 value, it is z

                if(hasSingleEquality(filterRef[column.column_header])) {
                    if(isAssigned('z')) {
                        axisAssignments.z2 = column;
                        assigned.push('z2');
                        continue;
                    }
                    else {
                        axisAssignments.z = column;
                        assigned.push('z');
                        continue;
                    }
                }

                // if column has filter distinct/countUnique
                else if(hasDistinct(filterRef[column.column_header])) {
                    // if we already assigned z2, then it is z
                    if(isAssigned('x')) {
                        axisAssignments.z = column;
                        assigned.push('z');
                        continue;
                    }
                    else {
                        axisAssignments.x = column;
                        assigned.push('x');
                        continue; 
                    }
                }

            }

            // geo
            if(dataType === 'coordinate') {
                axisAssignments.x = column;
                assigned.push('x');
                continue;
            }

            // if column is numeric
            if(isNumeric(column)) {
                // if we already have a y
                if(isAssigned('y')) {
                    // if there are three columns it is y2
                    if(columns.length > 3) {
                        axisAssignments.y2 = column;
                        assigned.push('y2');
                        continue;
                    }
                    // if two columns it is x
                    else {
                        axisAssignments.x = column;
                        assigned.push('x');
                        continue;
                    }
                }
                // else it is y
                else {
                    axisAssignments.y = column;
                    assigned.push('y');
                    continue;
                }
            }

            else if(dataType === 'datetime' && !hasSingleOrDistinct(column)) {
                axisAssignments.x = column;
                assigned.push('x');
                continue;
            }

            // if column is category
            else if(isCategorical(column)) {
                // if we already have x
                if(isAssigned('x')) {
                    // if we already have z
                    if(isAssigned('z')) {
                        axisAssignments.z2 = column;
                        assigned.push('z2');
                        continue;
                    }
                    else {
                        axisAssignments.z = column;
                        assigned.push('z');
                        continue;
                    }
                }
                else {
                    axisAssignments.x = column;
                    assigned.push('x');
                }
            } 
        }
        return axisAssignments;
    };

    var determineType = function(columns, axisAssignments, calculation) {
        //console.log(axisAssignments);

        var types = {
            countByCategory: 'count_by_category',
            averageByCategory: 'average_by_category',
            sumByCategory: 'sum_by_category',
            geoPoints: 'geo_points',
            geoPointsCategory: 'geo_points_category',
            geoPointsAmount: 'geo_points_amount',
            geoPointsCategoryAmount: 'geo_points_category_amount',
            scatterplot: 'scatterplot',
            scatterplotByCategory: 'scatterplot_by_category',
            countPerCategoryByDatetime: 'count_per_category_by_datetime',
            ratioPerCategory: 'ratio_per_category',
            countByState: 'count_by_state',
            countByCountry: 'count_by_country'
        };

        var defaultType = (function() {
            if(calculation==='comparison') {
                return 'scatterplot';
            }

            var typeStr = calculation;
            var sortedColumns = _(columns).sortBy('data_type');

            _.each(sortedColumns, function(column) {
                if(!isNumeric(column)) {
                    typeStr += '_by_' + column.data_type;
                }
            });

            return typeStr;
        })();

        // geo_points
        if(axisAssignments.x.data_type === 'coordinate') {
            if(axisAssignments.hasOwnProperty('z')) {
                if(axisAssignments.z.values.length === 1) {
                    if(axisAssignments.hasOwnProperty('y')) {
                        return types.geoPointsAmount;
                    }
                    return types.geoPoints;
                }
                if(axisAssignments.hasOwnProperty('y')) {
                    return types.geoPointsCategoryAmount;
                }

                return types.geoPointsCategory;
            }
            else if(axisAssignments.hasOwnProperty('y')) {
                return types.geoPointsAmount;
            }

            return types.geoPoints;
        }

        // scatterplot
        if(isNumeric(axisAssignments.x) &&
            axisAssignments.hasOwnProperty('y') && 
            isNumeric(axisAssignments.y)) {

            if(columns.length === 3) {
                return types.scatterplotByCategory;
            }
            return types.scatterplot;
        }

        // count_by_category
        if(columns.length === 2 && 
            isCategorical(axisAssignments.x) === 'category' && 
            isNumeric(axisAssignments.y)) {

            return types[calculation + 'ByCategory'];
        }

        if(columns.length === 3 &&
            axisAssignments.hasOwnProperty('z') &&
            axisAssignments.z.values.length === 1) {

            if(axisAssignments.x.data_type === 'datetime') {
                return types[calculation + 'PerCategoryByDatetime'];
            }

            return types[calculation + 'ByCategory'];
        }

        if(calculation === 'geo') {
            if(axisAssignments.x.data_type === 'state') {
                return types.countByState;
            }

            if(axisAssignments.x_data_type === 'country') {
                return types.countByCountry;
            }
        }

        // ratio_per_category
        if(columns.length === 2 &&
            calculation === 'ratio' &&
            axisAssignments.x.values.length === 1 &&
            axisAssignments.hasOwnProperty('y') &&
            axisAssignments.y.values.length === 1) {

            return types.ratioPerCategory;
        }

        return defaultType;
    };

    window.popily.chart.analyze = {
        assignToAxis: assignToAxis,
        determineType: determineType
    }
})(window);
(function(window) {

  var c3ify = function(xValues,yValues,zValues) {
      var groupings = [];
      var columns = [];
      var xyz = _.zip(xValues,zValues,yValues);

      //console.log(yValues);

      _.each(_.uniq(xValues),function(x) {
          _.each(_.uniq(zValues),function(z) {
              groupings.push([x,z,0]);
          });

      });

      _.each(xyz,function(_xyz) {
          _.each(groupings, function(pair) {
              if(_xyz[0] === pair[0] && _xyz[1] === pair[1]) {
                  pair[2] = _xyz[2];
              }
          });
      });

      var categories = _.uniq(_.map(groupings, function(group) { return group[0]; }));
      var valuePairs = _.map(groupings, function(group) { return [group[1],group[2]] });
      var labels = _.uniq(_.map(groupings, function(group) { return group[1] }));
      var values;
      _.each(labels, function(label) {
          values = _.map(_.filter(valuePairs, function(vp) {
              return vp[0] == label}),function(vp) {
                  return vp[1]; });
          columns.push([label].concat(values));
      });

      return {
          categories: categories,
          columns: columns,
          groups: labels
      }
  };

  var c3ifyMulti = function(xValues,yValues,zValues,z2Values) {
    var zipped = _.zip(xValues,yValues,zValues,z2Values);
    var sep = '___';
    var names = {};

    var columnMap = {};
    _.each(zipped, function(group) {
      var x = group[0];
      var y = group[1];
      var z = group[2];
      var z2 = group[3];
      var zz2 = z + sep + z2;

      names[zz2] = z;

      if(!columnMap[zz2]) {
        columnMap[zz2] = {};
      }
      columnMap[zz2][x] = y;
    });

    var groups = [];
    var orderedGroups = [];
    _.each(_.uniq(z2Values), function(z2) {
      orderedGroups.push(z2);
      var group = [];
      _.each(_.uniq(zValues), function(z) {
        group.push(z + sep + z2);
      });
      groups.push(group);
    });

    var xLabels = _.unique(xValues);
    var xLabelsDisplay = _.map(xLabels, function(xValue) {
      return xValue + ' (' + orderedGroups.join(',') + ')';
    });

    var columns = [];

    for(var column in columnMap) {
      var col = [column];
      _.each(xLabels, function(x) {
        col.push(parseFloat(columnMap[column][x] || 0));
      });
      columns.push(col);
    }
    
    return {
        categories: xLabelsDisplay,
        columns: columns,
        groups: groups,
        names: names
    }
  };

  var nan = -99999;
  var cleanData = function(xValues,yValues,zValues,z2Values) {
      xValues = xValues || [];
      yValues = yValues || [];
      zValues = zValues || [];
      z2Values = z2Values || [];


      var tuples = _.zip(xValues,yValues,zValues,z2Values);

      // Remove nan
      var cleaned = _.reject(tuples, function(t) {
          if (t[1] === nan || t[0] === nan) {
              return true;
          }
          return false;
      });


      return _.unzip(cleaned);

  };

  var nanToZero = function(num) {
      if(num === nan || num === 'nan') {
          return 0;
      }
      return num;
  };
  var cleanNanToZero = function(values) {
      values = _.map(values, function(v) {
          return nanToZero(v);
      });
      return values;
  };

  var dayList = ['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];
  var dayListAbbr = ['sun','mon','tue','wed','thu','fri','sat'];
  var monthList = ['january','february','march','april','may','june','july','august','september','october','november','december'];
  var monthListAbbr = ['jan','feb','mar','apr','may','jun','jul','aug','sep','sept','oct','nov','dec'];

  var categoryType = function(values) {
      if(_.every(values, function(v) { return _(dayList).contains(v.toString().toLowerCase()) })) {
          return 'day';
      }

      if(_.every(values, function(v) { return _(dayListAbbr).contains(v.toString().toLowerCase()) })) {
          return 'dayAbbr';
      }

      if(_.every(values, function(v) { return _(monthList).contains(v.toString().toLowerCase()) })) {
          return 'month';
      }

      if(_.every(values, function(v) { return _(monthListAbbr).contains(v.toString().toLowerCase()) })) {
          return 'monthAbbr';
      }

      return null;
  }

  var sortData = function(xYalues,yValues,zValues,limit,order,z2Values) {
      var tuples = _.zip(xYalues,yValues,zValues,z2Values);
          
      if(_.every(xYalues, function(x) { return !isNaN(x); })) {
          var sorted = _.sortBy(tuples, function(t){
                              return parseInt(t[0]);
                          }); 
      }
      else if(_.every(xYalues, function(x) { return !isNaN(x.toString().charAt(0)); })) {
          var sorted = _.sortBy(tuples, function(t){
                              return t[0];
                          }); 
      }
      else {
          var cType = categoryType(xYalues);
          if(cType) {
              var compareList = dayList;
              if(cType == 'dayAbbr') {
                  compareList = dayListAbbr;
              }
              else if(cType == 'month') {
                  compareList = monthList;
              }
              else if(cType == 'monthAbbr') {
                  compareList = monthListAbbr;
              }

              // Sort asc by y
              var sorted = _.sortBy(tuples, function(t){
                                  return compareList.indexOf(t[0].toLowerCase());
                              }); 
          }
          else {
             // Sort asc by y
              var sorted = _.sortBy(tuples, function(t){
                                  return t[1] * -1;
                              }); 
          }
      }

      if(limit && _.size(sorted)>limit ) {
          var i=0;
          var nth = Math.floor(_.size(sorted) / limit);
          sorted = _.filter(sorted, function(item) {
                  i++;
                  return i % nth == 0;
              });
      }
      
      if(order=='asc' || order=='desc') {
          var descMultiply = (order=='desc'?-1:1)
          sorted = _.sortBy(sorted, function(t){
                      return t[1] * descMultiply;
                      });
      } 
      else if(order=='a-z' || order=='z-a') {
          if(_.every(xYalues, function(x) { return !isNaN(x); })) {
              sorted = _.sortBy(sorted, function(t){
                      return parseInt(t[0]);
                  }); 
          }
          else {
              sorted = _.sortBy(sorted, function(t){
                      return t[0];
                  }); 
          }
          if(order=='z-a')
              sorted = sorted.reverse();
      }
      return _.unzip(sorted);
  };

  var checkIsDateStr = function(str) {
    if (!isNaN((new Date(str).getTime()))) {
      return true;
    }
    return false;
  };

  window.popily.chart.chartData = {        
      sortData: sortData,
      cleanData: cleanData,
      cleanNanToZero: cleanNanToZero,
      c3ify: c3ify,
      c3ifyMulti: c3ifyMulti,
      checkIsDateStr: checkIsDateStr
  }

})(window);

'use strict';

(function(window) {


  window.popily.dataset = function(columns, options) {

    var labels, dataTypes, table, columnsCache;
    
    var initialize = function(columns) {
      labels = [];
      dataTypes = [];
      columnsCache = null;
      table = zip(columns);
    }
    
    var zip = function(columns) {
      var data = [];
      
      _.each(columns, function(column) {
        labels.push(column.column_header);
        dataTypes.push(column.data_type);
        data.push(column.values);
      });
      return _.zip.apply(null, data);
    };
    
    var unzip = function(data) {
      var columns = [];
      _.unzip(data).forEach(function(c, i) {
        columns.push({
          column_header:labels[i],
          values:c,
          data_type:dataTypes[i]
        });
      });
      return columns;
    }

    var columnIdx = function(column) {
      var idx = labels.indexOf(column);
      if(idx == -1)
        throw Error('column '+column+' not found in dataset');
      return idx;
    };
    
    var dataListeners = []
    var dataChanged = function() {
      columnsCache = null;
      dataListeners.forEach(function(listner) {
        listner();
      })
    }
    
    initialize(columns);
    
    return {
    
      orderBy: function(column) {
        var idx = columnIdx(column);
        table = _.sortBy(table, function(e) {
          return e[idx];
        });
        dataChanged();
        return this;
      },
      
      reverse: function() {
        table = table.reverse();
        dataChanged();
        return this;
      },
      
      filter: function(column, op, value) {
        if(_.isUndefined(value)) {
          value = op;
          op = 'eq';
        }
        var idx = columnIdx(column);
        
        if(op == 'eq')
          var testFunc = function(e) {return value.indexOf(e[idx])!==-1}
        else if(op == 'noteq')
          var testFunc = function(e) {return value.indexOf(e[idx])===-1}
        else if(op == 'gt')
          var testFunc = function(e) {return e[idx] > value}
        else if(op == 'gte')
          var testFunc = function(e) {return e[idx] >= value}
        else if(op == 'lt')
          var testFunc = function(e) { return e[idx] < value}
        else if(op == 'lte')
          var testFunc = function(e) {return e[idx] <= value}
        else {
          console.error('Unrecognized filter option: '+op);
          return this; 
        }
        
        table = _.filter(table, testFunc);
        dataChanged();
        return this;
      },
      
      limit : function(max) {
        if(max && _.size(table)>max ) {
          var i=0;
          var nth = Math.floor(_.size(sorted) / limit);
          table = _.filter(table, function() {
            i++;
            return i % nth == 0;
          });
          dataChanged();
        }
        return this;
      },
      
      groupBy: function(column, groupingFunction, grouppedDataType, grouppedColumnHeader ) {
        var idx = columnIdx(column);
        groupingFunction = groupingFunction || function(e) {return e;};
        grouppedColumnHeader = grouppedColumnHeader || 'groupped';
        grouppedDataType = grouppedDataType || 'numeric';

        var groupped = _.groupBy(table, function(e){ 
          return e[idx]; 
        });
        
        var keysColumn = { 
          column_header: labels[idx],
          data_type: dataTypes[idx],
          values: Object.keys(groupped)
        };
        
        var values = []
        _.map(keysColumn.values, function(k) {
          values.push(groupingFunction(groupped[k])); 
        });
        
        var grouppedColumn = {
          column_header: grouppedColumnHeader,
          data_type: grouppedDataType,
          values: values
        }
        initialize([keysColumn, grouppedColumn]);
        dataChanged();
        return this;
      },

      countUnique: function(column) {
        var idx = columnIdx(column);
        var column = this.getColumns()[idx];
        var counts = _.countBy(column.values, function(val) { return val; });
        var newColumns = [];

        var valColumn = {
          column_header: column.column_header,
          data_type: column.data_type,
          values: _(counts).keys()
        };
        var countColumn = {
          column_header: 'count_0',
          data_type: 'numeric',
          values: _(counts).values()
        };
        initialize([valColumn,countColumn]);
        dataChanged();
        return this;
      },
      
      replaceValues: function(column, replacements) {
        var idx = columnIdx(column);
        
        _.map(table, function(row) {
          if(row[idx] in replacements)
            row[idx] = replacements[row[idx]];
        });
        
        dataChanged();
        return this;
      },
      
      getColumns: function(cb) {
        if(!columnsCache)
          columnsCache = unzip(table);
        
        if(cb) {
          cb(columnsCache);
          return this;
        }
        else
          return columnsCache;
      },
      
      getColumn: function(column, cb) {
        var columns = this.getColumns();
        var column = _.find(columns, function(c) { return c.column_header === column });
        if(cb) {
          cb(column);
          return this;
        }
        else
          return column;
      },
      
      onChange: function(cb) {
        dataListeners.push(cb);
      }
    }
  }
  
  popily.dataset.count = function(arr) {
    return arr.length;
  }
  popily.dataset.count.dataType = 'numeric';
  popily.dataset.count.columnLabel = 'Count';
  
  popily.dataset.countUnique = function(arr) {
    return _.uniq(arr).length;
  }
  popily.dataset.countUnique.dataType = 'numeric';
  popily.dataset.countUnique.columnLabel = 'Count unique';

})(window);

(function(window) {
    var nan = -99999;

    var daysDiff = function(dateStrings) {
        var dates = _.map(dateStrings,function(d) { return new Date(d); });
        var minDate = _.min(dates);
        var maxDate = _.max(dates);
        var dateDiff = maxDate - minDate;
        var daysDiff = dateDiff / 1000 / 60 / 60 / 24;

        return daysDiff;
    };

    var formatNumbers = function(numberList) {
        var formatted = _.map(numberList, function(num) {
            num = parseFloat(num);

            if(num !== "nan" && _.isNumber(num) && !_.isNaN(num)) {
                return numeral(num).format('0[.00]');
            }
            return '0.00';
        });
        return formatted;
    };

    var toNumber = function(strList) {
        return _.map(strList, function(val) { 
              if(val.toString().indexOf('.') > 0) {
                  return parseFloat(val);
              }

              return parseInt(val,10) 
          });
    };


    function formatFromDayDiff(dayDiff) {
        if(dayDiff > 1000)
            return '%Y';
        if(dayDiff > 90)
            return '%Y %B';
        if(dayDiff > 3)
            return '%Y-%m-%d';
        return '%Y-%m-%d %H:%M:%S';
    }

    function formatFromInspection(xValues) {
        var times = _.map(xValues, function(xValue) { return xValue.split(' ')[1] });
        if(_.every(times, function(time) { return time == '00:00:00' })) {
            return '%Y-%m-%d';
        }
        return '%Y-%m-%d %H:%M:%S';
    }
        
    function formatFromInterval(interval) {
        if(interval == 'year')
            return '%Y';
        if(interval == 'month')
            return '%Y %B';
        if(interval == 'week')
            return '%Y-%m-%d';
        if(interval == 'day')
            return  '%Y-%m-%d';
        return '%Y-%m-%d %H:%M:%S';
    }

    function stepInterval(interval) {
        if(interval=='%Y') return function(d, step) {d.setFullYear(d.getFullYear()+step); return d;};
        if(interval=='%Y %B') return function(d, step) {d.setMonth(d.getMonth()+step); return d;};
        if(interval=='%Y-%m-%d') return function(d, step) {d.setDate(d.getDate()+step); return d;};
        return false;
    }

    function tickFormatValues(categories, tickFormatStr, dateFormat) {
        var stepFunc = stepInterval(tickFormatStr);
        if(!stepFunc)
            return null;
            
        var dates = _.map(categories, function(d) { return new Date(d); });
        var minDate = _.min(dates);
        var maxDate = _.max(dates);
        var dateDiff = maxDate - minDate;
        var maxSteps = 10;

        var stepDIff = stepFunc(new Date(1980), 1) - new Date(1980);
        var step = 1;
        var steps = dateDiff/stepDIff;
        if(steps > maxSteps)
            step = Math.floor(steps/maxSteps);
        
        var values = [];
        var date = new Date(minDate.getTime());
        for(; date<=maxDate; date = stepFunc(date, step))
        {
            values.push(dateFormat(date))
        }
        return values;
    }

    // Credit: https://gist.github.com/mathewbyrne/1280286
    function slugify(text) {
      return text.toString().toLowerCase()
        .replace(/\s+/g, '-')           // Replace spaces with -
        .replace(/[^\w\-]+/g, '')       // Remove all non-word chars
        .replace(/\-\-+/g, '-')         // Replace multiple - with single -
        .replace(/^-+/, '')             // Trim - from start of text
        .replace(/-+$/, '');            // Trim - from end of text
    }

    popily.chart.format = {
        formatNumbers: formatNumbers,
        toNumber: toNumber,
        daysDiff: daysDiff,
        formatFromDayDiff: formatFromDayDiff,
        formatFromInterval: formatFromInterval,
        formatFromInspection: formatFromInspection,
        tickFormatValues: tickFormatValues,
        slugify: slugify
    }
})(window);
(function(window) {
  var chartSize = function() {
      var height = window.innerHeight;
      var width = Math.min(window.innerWidth, 1052); // 1052 container max-width
      var mqTest = window.matchMedia( "(min-width: 48em)" );
      if(mqTest) {
          height = height - 460;
      } else {
          height = height - 150;
      }
      if (height > width)
          height = width;
      else if(height < 430)
          height = 430;
      return {'height': height};
  };

  var updateChart = function(element, chart, chartData, chartPadding, rotated) {
      return chart;
      // x axis label height
      var xLabel = element.querySelector('.c3-axis-x-label');
      var xLabelHeight = Math.ceil(xLabel.getBBox().height);
      // x axis labels box sizes
      var xLabelsBox = element.querySelector('.c3-axis.c3-axis-x');
      var xLabelsBoxHeight = Math.ceil(xLabelsBox.getBBox().height);
      var xLabelsBoxWidth = Math.ceil(xLabelsBox.getBBox().width);
      // y axis labels box sizes
      var yLabelsBox = element.querySelector('.c3-axis.c3-axis-y');
      var yLabelsBoxHeight = Math.ceil(yLabelsBox.getBBox().height);
      var yLabelsBoxWidth = Math.ceil(yLabelsBox.getBBox().width);
      // main chart sizes
      var chartBox = element.querySelector('.c3-zoom-rect');
      var chartBoxHeight = Math.ceil(chartBox.getBBox().height);
      var chartBoxWidth = Math.ceil(chartBox.getBBox().width);
      // main svg sizes
      var chartArea = element.querySelector('svg');
      if(!chartArea)
          var chartArea = element.querySelector('svg');
      
      var chartAreaWidth = chartArea.clientWidth || chartArea.parentNode.clientWidth;
      var chartAreaHeight = chartArea.clientHeight || chartArea.parentNode.clientHeight;;

      chartPadding.bottom = xLabelHeight;    
      
      if (!chart.internal.config.axis_rotated) {
            
          // check whether padding bottom is needed
          // add padding bottom if needed
          if (chartBoxHeight + xLabelsBoxHeight + chartPadding.top > chartAreaHeight) {
              var paddingBottom = Math.abs(chartAreaHeight - (chartBoxHeight + xLabelsBoxHeight + chartPadding.top));
              chartPadding.bottom = paddingBottom + xLabelHeight;
          }
          // check whether padding right is needed
          // add padding right if needed
          if (xLabelsBoxWidth > chartBoxWidth) {
              var paddingRight = Math.abs(chartBoxWidth - xLabelsBoxWidth);
              chartPadding.right = paddingRight;
          }
          // check whether padding left is needed
          // add padding left if needed
          if (chartBoxWidth + yLabelsBoxWidth > chartAreaWidth) {
              var paddingLeft = Math.abs(chartAreaWidth - (chartBoxWidth + yLabelsBoxWidth));
              chartPadding.left = paddingLeft;
          }
          chartPadding.left = 500;
          chart = chart.destroy();
          chart = c3.generate(chartData);
          
          // move x axis label on the bottom of the x axis labels box        
          var dyAttr = xLabel.getAttribute('dy');           
          var dyAttrValue = dyAttr.slice(0,-2);        
          function emToPx(emValue) {
              var emSize = parseFloat(getComputedStyle(document.querySelector('html')).getPropertyValue('font-size'));
              return (emSize * emValue);
          }
          var xLabelTop = Number(emToPx(dyAttrValue));        
          var xLabelTransform = xLabelsBoxHeight - xLabelTop - 4;    
          element.querySelector('.c3-axis-x-label').setAttribute('y', xLabelTransform);
      }
      else {
          // check whether padding left is needed
          // add padding left if needed
          if (chartBoxWidth + xLabelsBoxWidth > chartAreaWidth) {
              var paddingLeft = Math.abs(chartAreaWidth - (chartBoxWidth + xLabelsBoxWidth));
              chartPadding.left = paddingLeft;
          }
          // check whether padding bottom is needed
          // add padding bottom if needed
          if (xLabelsBoxHeight > chartBoxHeight) {
              var paddingBottom = Math.abs(chartBoxHeight - xLabelsBoxHeight);   
              chartPadding.bottom = paddingBottom;
          }
          // check whether padding right is needed
          // add padding right if needed
          if (yLabelsBoxWidth > chartBoxWidth) {
              var paddingRight = Math.abs(chartBoxWidth - yLabelsBoxWidth);
              chartPadding.right = paddingRight;
          }
          chart.destroy();
          chart = c3.generate(chartData);
      }
      return chart;
  };    

  var formatDataset = function(apiResponse, axisAssignments, analysisType) {
      var newData = _.extend({}, apiResponse);
      var possibleAxis = ['x','y','z','z2','y2'];

      newData.chartData = {}
      newData.analysisType = analysisType;

      _.each(possibleAxis, function(axis) {
        if(axisAssignments.hasOwnProperty(axis)) {
          newData.chartData[axis] = {
            values: axisAssignments[axis].values,
            label: axisAssignments[axis].column_header
          }
        }
      });

      if(apiResponse.insight_metadata) {
        newData.chartData.metadata = apiResponse.insight_metadata;
      }

      if(newData.analysisType.indexOf('geo') > -1) {
        newData.chartData.x.values = _.map(newData.chartData.x.values, JSON.parse);
      }

      return newData;
  };
  
  var createStyleElement = function(css) {
    var style = document.createElement('style');
    style.type = 'text/css';
    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
    return style;
  }
  
  var initialAnimation = function(chartData, options) {
    var endingValues = chartData.data.columns;
    if(!options.skipAnimation) {
      chartData.data.columns = [];
      endingValues.forEach(function(c) {
        if(chartData.data.xs)
          chartData.data.columns.push([c[0]]);
        else
          chartData.data.columns.push(c.slice(0).fill(0, 1));
      });
    }
    
    return {
      start: function(chart, cb) {
        if(!options.skipAnimation) {
          cb = cb || function() {};
          chart.load({
            columns: endingValues,
            done: function() {
              setTimeout(cb, 350);
            }
          });
        }
      }
    }
  }

  window.popily.chart.utils = {
    chartSize: chartSize,
    updateChart: updateChart,
    formatDataset: formatDataset,
    createStyleElement: createStyleElement,
    initialAnimation: initialAnimation };
})(window);

(function(window) {

  // Average number 1 of Category 1 
  
  
  var joinWithOr = function(arr) {
    if(arr.length < 2)
      return arr.join('');
    else
      return [arr.slice(0, -1).join(', '), arr.slice(-1)[0]].join(' or ');
  }
    
  window.popily.chart.generateLabels = function(calculation, axisAssignments, transformations) {
        
  
    var columnLabel = function(column, description) {
      if(!('column_header' in column))
        console.log(column);
      var label = '<span class="popily-title-variable" >'+ column.column_header + '</span>';
      var prefixes = [],
        sufixes = [];
      description = description || '';
      (transformations || []).forEach(function(t) {
        if(t.column==column.column_header) {
          if(t.op == 'eq')
            sufixes.push('equal '+ joinWithOr(t.values));
          else if(t.op == 'noteq')
            sufixes.push('not equal '+ joinWithOr(t.values));
          else if(t.op == 'gt')
            prefixes.push('greater than '+ t.value);
          else if(t.op == 'gte')
            prefixes.push('greater than or equal '+ t.value);
          else if(t.op == 'lt')
            prefixes.push('lower than '+ t.value);
          else if(t.op == 'lte')
            prefixes.push('lower than or equal '+ t.value);
          else if(t.op == 'countUnique')
            prefixes.push('number of unique');
        }
      });
      if(prefixes.length && !description)
        description = 'values of'
      
      return prefixes.join(' and ') +' '+ description + ' '+ label +' '+ sufixes.join(' and ');
    }
  
  
    if(calculation == 'count') {
      if(axisAssignments.z) {
        return {
          title: columnLabel(axisAssignments.z, 'Number of each') + ' grouped by ' + columnLabel(axisAssignments.x)
        }
      }
      else {
        return {
          title: columnLabel(axisAssignments.x, 'Number of each')
        }
      }
    }
    else if(calculation == 'sum' ) {
      if(axisAssignments.z) {
        return {
          title: columnLabel(axisAssignments.z, 'Total of') + ' by ' + columnLabel(axisAssignments.x) + ' grouped by ' + columnLabel(axisAssignments.x)
        }
      } else if(axisAssignments.y) {
        return {
          title: columnLabel(axisAssignments.y, 'Total of') + ' grouped by ' + columnLabel(axisAssignments.x)
        }
      } else {
        return {
          title: columnLabel(axisAssignments.x, 'Total of')
        }
      }
    }
    else if(calculation == 'average') {
      if(axisAssignments.z) {
        return {
          title: columnLabel(axisAssignments.z, 'Average of') + ' by ' + columnLabel(axisAssignments.x) + ' grouped by ' + columnLabel(axisAssignments.x)
        }
      } else if(axisAssignments.y) {
        return {
          title: columnLabel(axisAssignments.y, 'Average of') + ' grouped by ' + columnLabel(axisAssignments.x)
        }
      }
      else {
        return {
          title: columnLabel(axisAssignments.x, 'Average of')
        }
      }
    }
    else if(calculation == 'ratio') {
      if(axisAssignments.y) {
        return {
          title: columnLabel(axisAssignments.x, 'Ratio of records for each') + ' '
        }
      }
      else {
        return {
          title: columnLabel(axisAssignments.x, 'Ratio of each')
        }
      }
    }
    else if(calculation == 'comparison') {
      if(axisAssignments.z) {
        return {
          title: '' + columnLabel(axisAssignments.z) + ' compared to ' + columnLabel(axisAssignments.x) + ' by ' + columnLabel(axisAssignments.x)
        }
      } else {
        return {
          title: '' + columnLabel(axisAssignments.y) + ' compared to ' + columnLabel(axisAssignments.x)
        }
      }
    }
    else if(calculation == 'top') {
      // Top unique_row_label_1 Ranked by number_3
      return {
        title: '' + columnLabel(axisAssignments.x, 'Top') + ' Ranked by ' + columnLabel(axisAssignments.y)
      }
    }
    else if(calculation == 'geo') {
      if(axisAssignments.z) {
        return {
          title: columnLabel(axisAssignments.x, 'Number of') + ' for Each Location grouped by ' + columnLabel(axisAssignments.z)
        }
      }
      else if(axisAssignments.y) {
        return {
          title: columnLabel(axisAssignments.y, 'Number of') + ' for Each Location'
        }
      }
      else {
        return {
          title: 'Rowlabel for Each Location'
        }
      }
    }
    
    
    return {
      title: 'no title for '+calculation
    }
    
  }

})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  var chart = _.clone(popilyChart.baseChart);

  chart.prepData = function(rawData, options, group) {
    var that = this;
    var limit = that.defaults.categoryLimit;
    var cleanValues = that.cleanData(rawData);

    var analysisTypeCheck = 'count_by_value';
    if(group) {
      analysisTypeCheck = 'count_by_value_by_category';
    }

    if(rawData.analysisType == analysisTypeCheck) {
        var rangeBottoms = _.map(cleanValues[0], function(x) {
            return parseFloat(x.split(' to ')[0]);
        });

        cleanValues.push(rangeBottoms);
        var cleanZipped = _.zip(cleanValues[0],cleanValues[1],cleanValues[2],cleanValues[3]);
        cleanZipped = _.sortBy(cleanZipped, function(t){ 
                            return t[3]; 
                        });
        cleanValues = _.first(_.unzip(cleanZipped),limit);        
    }
    else {
        var order = options.order || 'auto';
        cleanValues = popilyChart.chartData.sortData(cleanValues[0],cleanValues[1],cleanValues[2],limit,order,cleanValues[3]);
    }

    var cleanXValues = cleanValues[0];
    
    if(rawData.analysisType.indexOf('date') > -1 && _.every(cleanXValues, popilyChart.chartData.checkIsDateStr)) {
      var dateFormatStr = popilyChart.format.formatFromInspection(cleanXValues);
      var dateFormat = d3.time.format(dateFormatStr);
      cleanXValues = _.map(cleanXValues, function(x) { return dateFormat((new Date(x))); });
    }

    var cleanYValues = popilyChart.format.formatNumbers(cleanValues[1]);
    var cleanZValues = cleanValues[2];
    var cleanZ2Values = cleanValues[3];

    return [cleanXValues, cleanYValues, cleanZValues, cleanZ2Values];
  };

  chart.getChartObject = function(kwargs) {
    var that = this;
    var element = kwargs.element;
    var data = kwargs.data;
    var zValues = kwargs.zValues;
    var z2Values = kwargs.z2Values;
    var xLabel = kwargs.xLabel;
    var yLabel = kwargs.yLabel;
    var options = kwargs.options;
    var rotated = kwargs.rotated;

    rotated = options.rotated || rotated;
        
    var chartData = {
      bindto: element,
      data: {
          columns: data.columns,
          type: 'bar'
      },
      padding: that.defaults.chartPadding(),
      axis: {
          x: {
              type: 'category',
              categories: data.categories,
              tick: {
                  rotate: 45,
                  multiline: false
              },
              label: {
                 text: options.xLabel || xLabel,
                 position: rotated?'outer-middle':'inner-right',
              }
          },
          y: {
              show: true,
              label: {
                  text: options.yLabel || yLabel,
                  position: rotated?'inner-right':'outer-middle'
              },
              tick: {
                  format: d3.format(","),
              }
          },
          rotated: rotated
      },
      color: {
          pattern: options.colors
      },
      legend: {
          position: 'bottom',
          show: (function() {
            if(options.showLegend) {
              return true;
            }
            if(z2Values && z2Values.length > 0) {
              return true;
            }
            if(zValues.length < 50) {
              return true; 
            }

            return false;
          })()
      },
      tooltip: {
          show: (_.isUndefined(options.tooltip)?true:options.tooltip),
          grouped: false,
      },
      size: {
          height: options.height
      },
      grid: {
        x: {
          show: _.isUndefined(options.xGrid)?false:options.xGrid
        },
        y: {
          show: _.isUndefined(options.yGrid)?true:options.yGrid
        }
      },
      bar: {
        width: {
          ratio: (options.barSize || 0.9)
        }
      },
      onresized: function() {
        console.log(1);
      }
    };
    return chartData;
  };

  chart.updateSpecials = function(element, rotated, options) {
      if(options.rotated || rotated) {
        d3.selectAll('.'+options.uniqueClassName+" .c3-axis-y .tick text").attr("transform", "rotate(45)").attr("y", -1).attr("x", 0).style("text-anchor", "start").style("display", "block");
        d3.selectAll('.'+options.uniqueClassName+" .c3-axis-y .tick tspan").attr("x", -6).attr("dy", "1.4em").attr("dx", 7.72);
        
      }
  }

  popilyChart.chartTypes.barCommon = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  
  var chart = _.clone(popilyChart.baseChart);

  chart.prepData = function(rawData, options) {
    var that = this;
    var limit = that.defaults.categoryLimit;
    var cleanValues = that.cleanData(rawData);

    var order = options.order || 'auto';
    cleanValues = _.unzip(_.zip(cleanValues).slice(0,5000))[0];
    var cleanXValues = popilyChart.format.toNumber(cleanValues[0]);
    var cleanYValues = popilyChart.format.toNumber(cleanValues[1]);

    cleanXValues = popilyChart.format.formatNumbers(cleanXValues);
    cleanYValues = popilyChart.format.formatNumbers(cleanYValues);
    var cleanZValues = cleanValues[2];
    if(!rawData.columns.z && rawData.chartData.metadata && rawData.chartData.metadata.rowlabels) {
      cleanZValues = rawData.chartData.metadata.rowlabels;
    }
    return [cleanXValues, cleanYValues, cleanZValues];
  };

  chart.render = function(element, options, columns, xs, xLabel, yLabel, tooltip) {
      var chartPadding = {right: 10, top: 10};

      var chartData = {
          bindto: element,
          data: {
              xs: xs,
              columns: columns,
              type: 'scatter'
          },
          padding: this.defaults.chartPadding(),
          size: {
              height: options.height
          },
          point: {
            r: (options.pointSize || 4)
          },
          axis: {
              x: {
                  label: {
                      text: options.xLabel || xLabel,
                      position: 'inner-right',
                  },
                  tick: {
                      fit: false,
                      rotate: 45
                  }
              },
              y: {
                  label: {
                      text: options.yLabel || yLabel,
                      position: 'outer-middle'
                  },
                  tick: {
                      format: d3.format(",")
                  }
              }
          },
          grid: {
            x: {
              show: _.isUndefined(options.xGrid)?true:options.xGrid
            },
            y: {
              show: _.isUndefined(options.yGrid)?true:options.yGrid
            }
          },
          color: {
              pattern: options.colors
          },
          legend: {
              position: 'outer-bottom',
              hide: true
          },
          tooltip: tooltip
      };

      var animation = popily.chart.utils.initialAnimation(chartData, options)
      var chart = c3.generate(chartData);
      chartData.bindto = element;
      
      animation.start(chart);
      
      return chart;
  };

  popilyChart.chartTypes.compare = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  var chart = _.clone(popilyChart.baseChart);

  chart.prepData = function(rawData, options) {
    var that = this;
    var limit = that.defaults.categoryLimit;
    rawData.chartData.y.values = popily.chart.chartData.cleanNanToZero(rawData.chartData.y.values)
    var cleanValues = that.cleanData(rawData);

    var order = options.order || 'auto';
    cleanValues = popilyChart.chartData.sortData(cleanValues[0],cleanValues[1],cleanValues[2],0,order);

    var cleanXValues = cleanValues[0];
    var cleanYValues = popilyChart.format.formatNumbers(cleanValues[1]);
    var cleanZValues = cleanValues[2];

    return [cleanXValues, cleanYValues, cleanZValues];
  };

  chart.getYMin = function(yValues) {
    var yMin = 0;
    var lowestY = _.min(yValues);
    if(lowestY < 0) {
        yMin = lowestY;
    }

    return yMin;
  };

  chart.getChartObject = function(kwargs) {
    var element = kwargs.element;
    var data = kwargs.data;
    var xLabel = kwargs.xLabel;
    var yLabel = kwargs.yLabel;
    var yMin = kwargs.yMin;
    var options = kwargs.options;
    var dateFormatStr = kwargs.dateFormatStr;
    var chartPadding = kwargs.chartPadding;
    var interval = kwargs.interval;
    var ticksValues = kwargs.ticksValues;
    var tickFormatStr = kwargs.tickFormatStr;
    
    var chartData = {
        bindto: element,
        data: {
            x: 'x',
            columns: data.columns,
            xFormat: dateFormatStr
        },
        padding: chartPadding,
        axis: {
            x: {
                type: (!options.order || options.order == 'auto' ? 'timeseries' : 'category'),
                tick: {
                    fit: false,
                    format: tickFormatStr,
                    rotate:45,
                    centered: true,
                    values: (!options.order || options.order == 'auto' ? ticksValues : null),
                    count: ticksValues.length
                },
                label: {
                    text: options.xLabel || xLabel,
                    position: 'inner-right'
                }
            },
            y: {
                show: true,
                min: yMin,
                label: {
                    text: options.yLabel || yLabel,
                    position: 'outer-middle'
                },
                tick: {
                    format: d3.format(",")
                },
                padding: {top:0, bottom:0}
            }
        },
        grid: {
          x: {
            show: _.isUndefined(options.xGrid)?false:options.xGrid
          },
          y: {
            show: _.isUndefined(options.yGrid)?true:options.yGrid
          }
        },
        color: {
            pattern: options.colors
        },
        point: {
          r: (options.pointSize || 2.5)
        },
        legend: {
            position: 'bottom',
            show: false
        },
        tooltip: {
            show: (_.isUndefined(options.tooltip)?true:options.tooltip)
        },
        size: {
            height: options.height
        }
    }
    if(options.order == 'auto') {
      chartData.tooltip.format = {
        title: function(d) {
          return dateFormat(d);
        } 
      }

      chartData.axis.x.tick.values = ticksValues;
    }

    return chartData;
  };

  chart.formatDates = function(xValues, data, options) {
    var dayDiff = popily.chart.format.daysDiff(xValues); 
    var tickFormatStr = popily.chart.format.formatFromDayDiff(dayDiff);
    
    var interval = options.interval;

    var dateFormatStr = popily.chart.format.formatFromInterval(interval);
    if(_.isUndefined(interval)) {
      dateFormatStr = popily.chart.format.formatFromInspection(xValues);
    }
    
    var dateFormat = d3.time.format(dateFormatStr);
    var tickFormat = d3.time.format(tickFormatStr);
    var fullFormat = d3.time.format('%Y-%m-%d %H:%M:%S');

    var ticksValues = popily.chart.format.tickFormatValues(xValues, tickFormatStr, dateFormat);
    
    if(dateFormat != fullFormat)
      data.categories = _.map(data.categories, function(d) {
                  return dateFormat(fullFormat.parse(d.split('.')[0]));
      });

    return {
      dateFormatStr: dateFormatStr,
      tickFormatStr: tickFormatStr,
      ticksValues: ticksValues
    }
  };

  chart.render = function(element, options, rawData, grouped) {
      var that = this;
      var preppedData = that.prepData(rawData, options);
      var xValues = preppedData[0];
      var yValues = preppedData[1];
      var zValues = preppedData[2];
      var xLabel = rawData.chartData.x.label;
      var yLabel = rawData.chartData.y.label;

      options.interval = options.interval || rawData.insight_metadata.intervals[0];
      var yMin = that.getYMin(yValues);
            
      var data = popilyChart.chartData.c3ify(xValues,yValues,zValues);
      var dateData = that.formatDates(xValues, data, options);

      data.categories.unshift('x');
      data.columns.unshift(data.categories); 
      var chartPadding = that.defaults.chartPadding;
      
      var kwargs = {
        element: element,
        data: data,
        xLabel: xLabel,
        yLabel: yLabel,
        yMin: yMin,
        options: options, 
        dateFormatStr: dateData.dateFormatStr,
        chartPadding: chartPadding,
        tickFormatStr: dateData.tickFormatStr,
        ticksValues: dateData.ticksValues
      };
      var chartData = that.getChartObject(kwargs);
      chartData.tooltip.grouped = (function() {
          if(_.uniq(zValues).length > 20) {
              return false;
          }
          else {
              return true;
          }
      })();

      if(!_.isUndefined(options.lineSize)) {
        var style = popily.chart.utils.createStyleElement('.'+options.uniqueClassName+' .c3-line { stroke-width: '+options.lineSize+'px; }')
        element.parentNode.appendChild(style);
      }

      if(grouped) {
        chartData.data.type = 'area';
        chartData.data.groups = [data.groups];
        if(data.groups.length < 5)
          chartData.tooltip.grouped = true;
      }
      
      
      animation = popily.chart.utils.initialAnimation(chartData, options);
      var chart = c3.generate(chartData);
      chart = popily.chart.utils.updateChart(element, chart, chartData, chartPadding);
      
      animation.start(chart);
      
      return chart;
  };

  popilyChart.chartTypes.linear = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'average_per_category_by_category',
    'sum_per_category_by_category',
    'count_by_value_by_category',
    'average_by_category_by_category',
    'sum_by_category_by_state',
    'count_by_value_by_state',
    'average_by_category_by_state'
  ];
  chart.accepts = [];

  chart.render = function(element, options, rawData) {
      var that = this;
      var preppedData = popilyChart.chartTypes.barCommon.prepData(rawData, options, true);
      var xValues = preppedData[0];
      var yValues = preppedData[1];
      var zValues = preppedData[2];
      var xLabel = rawData.chartData.x.label;
      var yLabel = rawData.chartData.y.label;

      var data = popilyChart.chartData.c3ify(xValues,yValues,zValues);
      var rotated = false;
      if(data.columns.length > 25) {
          rotated = true;
      }

      var kwargs = {
        options: options,
        data: data,
        zValues: zValues,
        rotated: rotated,
        xLabel: xLabel,
        yLabel: yLabel,
        element: element
      };
      var chartData = popilyChart.chartTypes.barCommon.getChartObject(kwargs);
      chartData.onresized = function() {
        popilyChart.chartTypes.barCommon.updateSpecials(element, rotated, options);
      };

      var animation = popily.chart.utils.initialAnimation(chartData, options);

      var chart = c3.generate(chartData);

      animation.start(chart, function() {
        popilyChart.chartTypes.barCommon.updateSpecials(element, rotated, options);
      });
      
      return chart;
  };

  popilyChart.chartTypes.barGrouped = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;

  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'count_by_value',
    'count_by_category',
    'average_by_category',
    'sum_by_category',
    'sum_sum_by_category',
    'sum_by_category_per_category',
    'average_by_category_per_category',
    'count_by_category_per_category',
    'count_per_category_by_category',
    'count_by_category_by_category_distinct',
    'count_by_category_by_datetime_distinct',
    'top_by_rowlabel'
  ];
  chart.accepts = [];

  chart.render = function(element, options, rawData) {
      var that = this;
      var xValues = rawData.chartData.x.values;
      var minY = _.min(rawData.chartData.y.values);
      var chartToUse = popilyChart.chartTypes.bubble;
      if(xValues.length < 30 || minY < 0) {
        chartToUse = popilyChart.chartTypes.bar;
      }

      return chartToUse.render(element, options, rawData);
  };

  popilyChart.chartTypes.barOrBubble = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  var chart = _.clone(popilyChart.baseChart);

  chart.defaultFor = [
    'sum_by_category_by_category',
    'count_by_category_by_category',
    'count_by_category_by_category_by_category'
  ];
  chart.accepts = [
    'average_per_category_by_category',
    'sum_per_category_by_category',
    'count_by_value_by_category',
    'average_by_category_by_category',
    'sum_per_category_by_datetime',
    'sum_by_category_by_datetime',
    'count_by_category_by_datetime'
  ];

  chart.render = function(element, options, rawData) {
      var that = this;
      var preppedData = popilyChart.chartTypes.barCommon.prepData(rawData, options, true);
      var xValues = preppedData[0];
      var yValues = preppedData[1];
      var zValues = preppedData[2];
      var z2Values = preppedData[3];
      var xLabel = rawData.chartData.x.label;
      var yLabel = rawData.chartData.y.label;

      var data;
      var groups;
      if(z2Values.length > 0) {
        data = popilyChart.chartData.c3ifyMulti(xValues,yValues,zValues,z2Values);
        groups = data.groups;
      }
      else {
        data = popilyChart.chartData.c3ify(xValues,yValues,zValues);
        groups = [data.groups];
      }
      data.categories.unshift('x');
      data.columns.unshift(data.categories);
      var rotated = false;
      if(data.columns[0].length > 40) {
          rotated = true;
      }

      var kwargs = {
        options: options,
        data: data,
        zValues: zValues,
        rotated: rotated,
        xLabel: xLabel,
        yLabel: yLabel,
        z2Values: z2Values,
        element: element
      };
      var chartData = popilyChart.chartTypes.barCommon.getChartObject(kwargs);
      chartData.data = {
          x: 'x',
          columns: data.columns,
          type: 'bar',
          groups: groups
      };

      if(z2Values.length > 0) {
        chartData.data.names = data.names;
        var uniqNames = _.uniq(_.values(data.names));
        var nameColors = _.zip(uniqNames,_.first(options.colors,uniqNames.length));
        var colors = {};

        _.each(nameColors, function(nameColor) {
          _.each(_.uniq(z2Values), function(z2) {
            colors[nameColor[0] + '___' + z2] = nameColor[1];
          });
        });

        chartData.data.colors = colors;
      }

      chartData.onresized = function() {
        popilyChart.chartTypes.barCommon.updateSpecials(element, rotated, options);
      };
      
      var animation = popily.chart.utils.initialAnimation(chartData, options);
      var chart = c3.generate(chartData);
      
      animation.start(chart, function() {
        popilyChart.chartTypes.barCommon.updateSpecials(element, rotated, options);
      });
      
      return chart;
  };

  popilyChart.chartTypes.barStacked = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  
  var bar = _.clone(popilyChart.baseChart);
  bar.defaultFor = [
  ];
  bar.accepts = [
    'count_by_datetime',
    'ratio_by_datetime',
    'sum_by_datetime',
    'average_by_datetime',
    'count_per_category_by_datetime',
    'average_per_category_by_datetime',
    'count_per_category_by_category',
    'count_by_category_by_category_distinct',
    'count_by_value',
    'count_by_category',
    'average_by_category',
    'sum_by_category',

    'count_by_state',
    'average_by_state',
    'sum_by_state',

    'count_by_country',
    'average_by_country',
    'sum_by_country',

    'sum_sum_by_category',
    'sum_by_category_per_category',
    'average_by_category_per_category',
    'count_by_category_per_category',
    'count_per_category_by_category',
    'count_by_category_by_datetime_distinct',
    'top_by_rowlabel'
  ];


  bar.render = function(element, options, rawData) {
      var that = this;
      var preppedData = popilyChart.chartTypes.barCommon.prepData(rawData, options);
      var xValues = preppedData[0];
      var yValues = preppedData[1];

      var chart;
        
      var rotated = options.rotated || false;
      //if(insight.options_rotate)
      //  rotated = true;
      if(yValues.length > 40) {
        rotated = true;
      }

      if(rotated == true) {
        if(yValues.length > 40)
          options.height = (yValues.length * 9) + 450;
      }

      var yLabel = rawData.chartData.y.label;
      yValues.unshift(yLabel);
      
      var chartData = {
        data: {
          columns: [yValues],
          type: 'bar'
        },
        bar: {
          width: {
            ratio: (options.barSize || 0.7)
          }
        },
        padding: that.defaults.chartPadding(),
        axis: {
          x: {
            type: 'category',
            categories: xValues,
            tick: {
              rotate: 45,
              multiline: false,
              fit: true
            },
            label: {
              text: options.xLabel || rawData.chartData.x.label,
              position: rotated?'outer-middle':'inner-right',
            }
          },
          y: {
            show: true,
            label: {
              text: options.yLabel || yLabel,
              position: rotated?'inner-right':'outer-middle'
            },
            tick: {
              format: d3.format(",")
            }
          },
          rotated: rotated
        },
        color: {                
          pattern: options.colors
        },       
        legend: {
          show: false
        },
        size: {
          height: options.height
        },
        grid: {
          x: {
            show: _.isUndefined(options.xGrid)?false:options.xGrid
          },
          y: {
            show: _.isUndefined(options.yGrid)?true:options.yGrid
          }
        },
        tooltip: (_.isUndefined(options.tooltip)?true:options.tooltip),
        onresized: function() {
          popilyChart.chartTypes.barCommon.updateSpecials(element, rotated, options);
        }
      }
    
      chartData.bindto = element;
      var animation = popily.chart.utils.initialAnimation(chartData, options);
      
      var chart = c3.generate(chartData);

      animation.start(chart, function() {
        popilyChart.chartTypes.barCommon.updateSpecials(element, rotated, options);
      });
      
      return chart;
  };

  popilyChart.chartTypes.bar = bar;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  
  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [];
  chart.accepts = [
    'count_by_value',
    'count_by_category',
    'average_by_category',
    'sum_by_category',
    'sum_sum_by_category',
    'sum_by_category_per_category',
    'average_by_category_per_category',
    'count_by_category_per_category',
    'count_per_category_by_category',
    'top_by_rowlabel'
  ];

  chart.prepData = function(rawData, options) {
    var that = this;
    var limit = that.defaults.categoryLimit;
    var cleanValues = that.cleanData(rawData);

    var cleanXValues = cleanValues[0];
    var cleanYValues = popilyChart.format.formatNumbers(cleanValues[1]);

    return [cleanXValues, cleanYValues];
  };

  chart.render = function(element, options, rawData) {
      var width = options.width,
        height = options.height,
        format = d3.format(",d"),
        //color = d3.scale.category20c();
        color = d3.scale.ordinal().range(options.colors);
    var data = {'children': [
            {'name': 'negative', 'children': []},
            {'name': 'positive', 'children': []},
        ]};
    if(typeof window.chartSize == 'undefined') {
        window.chartSize = function() { return {'height': width}; };
    }
        
    var preppedData = this.prepData(rawData, options);
    var xValues = preppedData[0];
    var yValues = preppedData[1];
    var xLabel = rawData.chartData.x.label;
    
    _.each(_.first(yValues,200), function(yValue,i) {
        if(yValue>0)
            data.children[1].children.push({category: xValues[i], className: 'data', showValue: yValue, value: parseFloat(yValue) });
        else
            data.children[0].children.push({category: yValues[i], className: 'data', showValue: yValue, value: -1*parseFloat(yValue) });
    });

    width = element.getBoundingClientRect().width;
    var size = popilyChart.utils.chartSize();
    height = size['height'];
    
    var transitionDuration = 350;
    if(options.skipAnimation)
      transitionDuration = 0;

    var bubble = d3.layout.pack()
        .sort(null)
        .size([width, height])
        .padding(4);

    var svg = d3.select(element).append("svg")
        .attr("width", width)
        .attr("height", height)
        .attr("class", "bubble");

    if((_.isUndefined(options.tooltip)?true:options.tooltip)) {
        var tip = d3.tip()
            .attr('class', 'd3-tips')
            .offset([-5, 0])
            .html(function(d) {
                var text = "<table class='c3-tooltip'><tr><th colspan='2'>" + d.category + "</th></tr>";
                text += "<tr class='c3-tooltip-name-'>";
                text += "<td class='name'><span style='background-color:" + color(d.category) + "'></span> " + xLabel + "</td>";
                text += "<td class='value'>" + d.showValue + "</td>";
                text += "</tr>";
                return text + "</table>"; 
            });
        svg.call(tip);
    }
    
    var node = svg.selectAll(".node")
        .data(
            bubble.nodes(data)
                .filter(function(d) { return !d.children})
        )
        .enter().append("g")
        .attr("class", "node")
        .attr("transform", function(d) {
            return "translate(" + d.x + "," + d.y + ")"; })
        .on('mouseover', function(d) {
            tip.show(d, d);
            d3.select(this.childNodes[0])
                .transition().duration(50)
                .attr("r", d.r+5)
                .transition().duration(100)
                .attr("r", d.r+3)
        })
        .on('mouseout', function(d) { 
            tip.hide(d);
            d3.select(this.childNodes[0])
                .transition().duration(10)
                .attr("r", d.r)
        });
  
    node.append("circle")
        .style("fill", function(d) { return color(d.category); })
        .attr("r", 0)
        .transition().duration(transitionDuration)
        .attr("r", function(d) { return d.r; });
        
    node.append("text")
        .attr("dy", ".3em")
        .style("text-anchor", "middle")
        .style("opacity", 0)
        .text(function(d) {
            if (d.r / 3 > 3) return d.category.substring(0, d.r / 3); 
            else return '';
        })
        .transition().duration(transitionDuration)
        .style("opacity", 1)
        .attr("pointer-events", "none");

    var onResize = function() {
        width = element.getBoundingClientRect().width;
        size = popilyChart.utils.chartSize();
        height = size['height'];
        svg
            .attr("width", width)
            .attr("height", height);

        var bubble = d3.layout.pack()
            .sort(null)
            .size([width, height])
            .padding(4);
        
        var node = svg.selectAll(".node")
            .data(
                bubble.nodes(data)
                   .filter(function(d) { return !d.children})
            );
        svg.selectAll("g")
            .attr("transform", function(d) {
                return "translate(" + d.x + "," + d.y + ")"; });
        
        svg.selectAll("circle")
            .attr("r", function(d) { return d.r; });
        svg.selectAll("text")
            .text(function(d) { 
                if (d.r / 3 > 3) return d.category.substring(0, d.r / 3); 
                else return '';
            })
        
    };

    window.onresize = onResize;
  };

  popilyChart.chartTypes.bubble = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  
  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'ratio_per_category'
  ];
  chart.accepts = [];

  chart.render = function(element, options, rawData) {
      var that = this;
      var yValues = rawData.chartData.y.values;

      var chartData = {
          bindto: element,
          data: {
              columns: [['data', parseFloat(yValues[0]) * 100]],
              type: 'gauge'
          },              
          color: {
              pattern: options.colors
          },              
          legend: {
              hide: true
          },
          size: {
            height: options.height
          },
          onresized: function() {
              if (window.innerWidth <= 768) {
                  chart.resize({height:220});
              }
              else {
                 chart.resize({height:340});
              }
          }
      };
      var animation = popily.chart.utils.initialAnimation(chartData, options)
      var chart = c3.generate(chartData); 
      animation.start(chart);

      return chart;
  };

  popilyChart.chartTypes.gauge = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;

  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'count_by_datetime',
    'ratio_by_datetime',
    'average_by_datetime',
    'count_per_category_by_datetime',
    'average_per_category_by_datetime'
  ];
  chart.accepts = [];

  chart.prepData = function(rawData, options) {
    var that = this;
    var limit = that.defaults.categoryLimit;
    var cleanValues = that.cleanData(rawData);

    var order = options.order || 'auto';
    cleanValues = popilyChart.chartData.sortData(cleanValues[0],cleanValues[1],[],limit,order);

    var cleanXValues = cleanValues[0];
    var cleanYValues = popilyChart.format.formatNumbers(cleanValues[1]);

    return [cleanXValues, cleanYValues];
  };

  chart.render = function(element, options, rawData) {
      var preppedData = this.prepData(rawData, options);
      var xValues = preppedData[0];
      var yValues = preppedData[1];
      var xLabel = rawData.chartData.x.label;
      var yLabel = rawData.chartData.y.label;

    
      var yMin = 0;
      var lowestY = _.min(yValues);
      if(lowestY < 0) {
          yMin = lowestY;
      }

      yValues.unshift(yLabel);

      var dayDiff = popily.chart.format.daysDiff(xValues); 
      var tickFormatStr = popily.chart.format.formatFromDayDiff(dayDiff);
      
      var interval = options.interval || rawData.insight_metadata.intervals[0];

      var dateFormatStr = popily.chart.format.formatFromInterval(interval);
      if(_.isUndefined(interval)) {
        dateFormatStr = popily.chart.format.formatFromInspection(xValues);
      }
      
      var dateFormat = d3.time.format(dateFormatStr);
      var tickFormat = d3.time.format(tickFormatStr);
      var fullFormat = d3.time.format('%Y-%m-%d %H:%M:%S');

      var ticksValues = popily.chart.format.tickFormatValues(xValues, tickFormatStr, dateFormat);
      
      if(dateFormat != fullFormat)
          xValues = _.map(xValues, function(d) {
                  return dateFormat(fullFormat.parse(d.split('.')[0]));
              });
          
      xValues.unshift('x');

      if(!_.isUndefined(options.lineSize)) {
        var style = popily.chart.utils.createStyleElement('.'+options.uniqueClassName+' .c3-line { stroke-width: '+options.lineSize+'px; }')
        element.parentNode.appendChild(style);
      }

      var chartData = {
          bindto: element,
          data: {
              x: 'x',
              xFormat: dateFormatStr, // 'xFormat' can be used as custom format of 'x'
              columns: [xValues,yValues]
          },
          padding: this.defaults.chartPadding(),
          axis: {
              x: {
                  type: (!options.order || options.order == 'auto' ? 'timeseries' : 'category'),
                  tick: {
                      fit: false,
                      format: tickFormatStr,
                      rotate:45,
                      multiline: false,
                      //height: 130,
                      values: (!options.order || options.order == 'auto' ? ticksValues : null),
                      count: xValues.length-1
                  },
                  label: {
                     text: xLabel,
                     position: 'inner-right'
                  }
              },
              y: {
                  show: true,
                  min: yMin,
                  label: {
                      text: yLabel,
                      position: 'outer-middle'
                  },
                  tick: {
                      format: d3.format(",")
                  }
              }
          },
          color: {
              pattern: options.colors
          },
          legend: {
              hide: true
          },
          size: {
              height: options.height
          },
          line: {
              connectNull: true
          },
          point: {
            r: (options.pointSize || 2.5)
          },
          grid: {
            x: {
              show: _.isUndefined(options.xGrid)?false:options.xGrid
            },
            y: {
              show: _.isUndefined(options.yGrid)?true:options.yGrid
            }
          },
          tooltip: (_.isUndefined(options.tooltip)?true:options.tooltip)
      }
      
      if(options.order == 'auto') {
        chartData.tooltip.format = {
          title: function(d) {
            return dateFormat(d);
          } 
        }

        chartData.axis.x.tick.values = ticksValues;
      }

      var animation = popily.chart.utils.initialAnimation(chartData, options);
      var chart = c3.generate(chartData);

      animation.start(chart);
      
      return chart;
  };

  popilyChart.chartTypes.line = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;

  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'average_by_category_by_datetime',
    'count_by_category_by_category_by_datetime'
  ];
  chart.accepts = [
    'sum_by_datetime',
    'ratio_by_datetime',
    'sum_per_category_by_datetime',
    'sum_by_category_by_datetime',
    'count_by_category_by_datetime'
  ];

  chart.render = function(element, options, rawData) {
      return popilyChart.chartTypes.linear.render(element, options, rawData);
  };

  popilyChart.chartTypes.multiLine = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  
  var pie = _.clone(popilyChart.baseChart);
  pie.defaultFor = [
    'ratio_by_category'
  ];
  pie.accepts = [
    'count_by_value',
    'count_by_category'
  ];

  pie.prepData = function(rawData, options) {
    var that = this;
    var limit = that.defaults.pieLimit;
    var cleanValues = that.cleanData(rawData);
    var order = options.order || 'auto';

    cleanValues = popilyChart.chartData.sortData(cleanValues[0],cleanValues[1],[],limit,order);

    var cleanXValues = cleanValues[0];
    var cleanYValues = popilyChart.format.formatNumbers(popilyChart.format.toNumber(cleanValues[1]));

    return [cleanXValues, cleanYValues];
  };

  pie.render = function(element, options, rawData) {
      var that = this;
      var preppedData = this.prepData(rawData, options);
      var columns = _.zip(preppedData[0],preppedData[1]);

      var chartData = {
          bindto: element,
          data: {
              columns: columns,
              type: 'pie',
              order:null
          },
          color: {
              pattern: options.colors
          },
          legend: {
              position: 'bottom',
              show: preppedData[0].length < 20 ? true : false
          },
          size: {
            height: options.height
          },
          tooltip: (_.isUndefined(options.tooltip)?true:options.tooltip)
      };
      
      
      var animation = popily.chart.utils.initialAnimation(chartData, options);
      var chart = c3.generate(chartData); 
      animation.start(chart);

      return chart;
  };

  popilyChart.chartTypes.pie = pie;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  
  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'scatterplot_by_category'
  ];
  chart.accepts = [];

  chart.render = function(element, options, rawData) {
      var preppedData = popilyChart.chartTypes.compare.prepData(rawData, options);
      var xValues = preppedData[0];
      var yValues = preppedData[1];
      var zValues = preppedData[2];
      var xLabel = rawData.chartData.x.label;
      var yLabel = rawData.chartData.y.label;
      var zLabel = rawData.chartData.z.label;    

      var columns = [];
      var xs = {};
      var zs = {};

      /*
      console.log(xValues);
      console.log(yValues);
      console.log(zValues);
      */
      _.each(_.uniq(zValues), function(z) {
          zs[z] = {xs:[],ys:[]};
      });

      _.each(zValues, function(z,i) {
          zs[z].ys.push(yValues[i]);
          zs[z].xs.push(xValues[i]);
      });
      
      _.each(_.keys(zs), function(z) {
          zs[z].xs.unshift(z+'_x');
          zs[z].ys.unshift(z);

          xs[z] = z+'_x';
          columns.push(zs[z].xs);
          columns.push(zs[z].ys);
      });

      var tooltip = options.tooltip || {
          contents: function (d, defaultTitleFormat, defaultValueFormat, color) {
              var markup = '<div class="popily-tooltip"><h3 ><span class="square" style="background-color:' + color(d[0].id) + '"></span> ' + xLabel + ':&nbsp;<strong>' + d[0].x + '</strong>, ' + yLabel + ':&nbsp;<strong>' + d[0].value + '</strong></h3>';
              markup += zLabel + ': <strong>';
              markup += d[0].name;
              markup += '</strong>';
              markup += '</div>';
              return markup;
          }
      };

      var showLegend = true;
      if(_.unique(zValues).length > 25) {
          showLegend = false;
      }

      return popilyChart.chartTypes.compare.render(element, options, columns, xs, xLabel, yLabel, tooltip);
  };

  popilyChart.chartTypes.scatterplotCategory = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;
  
  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'scatterplot',
    'scatterplot_per_category'
  ];
  chart.accepts = [];

  chart.render = function(element, options, rawData) {
      var preppedData = popilyChart.chartTypes.compare.prepData(rawData, options);
      var xValues = preppedData[0];
      var yValues = preppedData[1];
      var zValues = preppedData[2];
      var xLabel = rawData.chartData.x.label;
      var yLabel = rawData.chartData.y.label;    


      var columns = [];
      yValues.unshift(yLabel);
      xValues.unshift(xLabel);
      var xs = {};
      xs[yLabel] = xLabel;
      columns.push(xValues);
      columns.push(yValues);

      var tooltip = options.tooltip || {
          contents: function (d, defaultTitleFormat, defaultValueFormat, color) {
              var markup = '<div class="popily-tooltip"><h3>'+xLabel+':&nbsp;<strong>' + d[0].x + '</strong>, '+yLabel+':&nbsp;<strong>' + d[0].value + '</strong></h3>';
              markup += '<div style="max-width: 350px;"><strong>';
              if(!_.isUndefined(zValues[d[0].index]))
                markup += zValues[d[0].index];
              /*
              markup += '{{insight.z_title|escapejs|safe}}: <strong>';
              var found = [];
              _.each(_.zip(formatNumbers(cleanValues[0]),formatNumbers(cleanValues[1]),cleanValues[2]), function(val) {
                  if(val[0] == d[0].x && val[1] == d[0].value) {
                      found.push(val[2]);
                  }
              });

              if(found.length > 0) {
                  markup += (found.join(', '));
              }
              */
              
              markup += '</strong></div>';
              markup += '</div>';
              return markup;
          }
      };
        
      return popilyChart.chartTypes.compare.render(element, options, columns, xs, xLabel, yLabel, tooltip);
  };

  popilyChart.chartTypes.scatterplot = chart;
})(window);

(function(window) {
  var popilyChart = window.popily.chart;

  var chart = _.clone(popilyChart.baseChart);
  chart.defaultFor = [
    'sum_by_datetime',
    'ratio_by_datetime',
    'sum_per_category_by_datetime',
    'sum_by_category_by_datetime',
    'count_by_category_by_datetime',
    'count_by_datetime_by_state',
    'count_by_datetime_by_country'
  ];
  chart.accepts = [
    'count_by_datetime',
    'ratio_by_datetime',
    'average_by_datetime',
    'count_per_category_by_datetime',
    'average_per_category_by_datetime',
    'average_by_category_by_datetime'
  ];

  chart.render = function(element, options, rawData) {
      return popilyChart.chartTypes.linear.render(element, options, rawData, true);
  };

  popilyChart.chartTypes.stackedArea = chart;
})(window);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQzLm1pbi5qcyIsImQzLXRpcC5qcyIsInBhdGhzZWcuanMiLCJjMy5taW4uanMiLCJ1bmRlcnNjb3JlLm1pbi5qcyIsIm51bWVyYWwubWluLmpzIiwicG9waWx5LWFwaS5qcyIsInBvcGlseS5qcyIsImFuYWx5emUuanMiLCJjaGFydC1kYXRhLmpzIiwiZGF0YXNldC5qcyIsImZvcm1hdC5qcyIsInV0aWxzLmpzIiwibGFiZWwuanMiLCJiYXIuanMiLCJjb21wYXJlLmpzIiwibGluZWFyLmpzIiwiYmFyLWdyb3VwZWQuanMiLCJiYXItb3ItYnViYmxlLmpzIiwiYmFyLXN0YWNrZWQuanMiLCJidWJibGUuanMiLCJnYXVnZS5qcyIsImxpbmUuanMiLCJtdWx0aS1saW5lLmpzIiwicGllLmpzIiwic2NhdHRlcnBsb3QtY2F0ZWdvcnkuanMiLCJzY2F0dGVycGxvdC5qcyIsInN0YWNrZWQtYXJlYS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDblVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM5eUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMxckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM1WkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNyV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3ZQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM3TkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDdkhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2hMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDakpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDbkpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMzRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDcE5BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3hEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDbENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBTC9GQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBTXZJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUN2S0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzlDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDMUpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUN0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzdEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDMURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoicG9waWx5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbiYmKG4ub3duZXJEb2N1bWVudHx8bi5kb2N1bWVudHx8bikuZG9jdW1lbnRFbGVtZW50fWZ1bmN0aW9uIHQobil7cmV0dXJuIG4mJihuLm93bmVyRG9jdW1lbnQmJm4ub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8bi5kb2N1bWVudCYmbnx8bi5kZWZhdWx0Vmlldyl9ZnVuY3Rpb24gZShuLHQpe3JldHVybiB0Pm4/LTE6bj50PzE6bj49dD8wOk5hTn1mdW5jdGlvbiByKG4pe3JldHVybiBudWxsPT09bj9OYU46K259ZnVuY3Rpb24gdShuKXtyZXR1cm4haXNOYU4obil9ZnVuY3Rpb24gaShuKXtyZXR1cm57bGVmdDpmdW5jdGlvbih0LGUscix1KXtmb3IoYXJndW1lbnRzLmxlbmd0aDwzJiYocj0wKSxhcmd1bWVudHMubGVuZ3RoPDQmJih1PXQubGVuZ3RoKTt1PnI7KXt2YXIgaT1yK3U+Pj4xO24odFtpXSxlKTwwP3I9aSsxOnU9aX1yZXR1cm4gcn0scmlnaHQ6ZnVuY3Rpb24odCxlLHIsdSl7Zm9yKGFyZ3VtZW50cy5sZW5ndGg8MyYmKHI9MCksYXJndW1lbnRzLmxlbmd0aDw0JiYodT10Lmxlbmd0aCk7dT5yOyl7dmFyIGk9cit1Pj4+MTtuKHRbaV0sZSk+MD91PWk6cj1pKzF9cmV0dXJuIHJ9fX1mdW5jdGlvbiBhKG4pe3JldHVybiBuLmxlbmd0aH1mdW5jdGlvbiBvKG4pe2Zvcih2YXIgdD0xO24qdCUxOyl0Kj0xMDtyZXR1cm4gdH1mdW5jdGlvbiBsKG4sdCl7Zm9yKHZhciBlIGluIHQpT2JqZWN0LmRlZmluZVByb3BlcnR5KG4ucHJvdG90eXBlLGUse3ZhbHVlOnRbZV0sZW51bWVyYWJsZTohMX0pfWZ1bmN0aW9uIGMoKXt0aGlzLl89T2JqZWN0LmNyZWF0ZShudWxsKX1mdW5jdGlvbiBzKG4pe3JldHVybihuKz1cIlwiKT09PXhhfHxuWzBdPT09YmE/YmErbjpufWZ1bmN0aW9uIGYobil7cmV0dXJuKG4rPVwiXCIpWzBdPT09YmE/bi5zbGljZSgxKTpufWZ1bmN0aW9uIGgobil7cmV0dXJuIHMobilpbiB0aGlzLl99ZnVuY3Rpb24gZyhuKXtyZXR1cm4obj1zKG4pKWluIHRoaXMuXyYmZGVsZXRlIHRoaXMuX1tuXX1mdW5jdGlvbiBwKCl7dmFyIG49W107Zm9yKHZhciB0IGluIHRoaXMuXyluLnB1c2goZih0KSk7cmV0dXJuIG59ZnVuY3Rpb24gdigpe3ZhciBuPTA7Zm9yKHZhciB0IGluIHRoaXMuXykrK247cmV0dXJuIG59ZnVuY3Rpb24gZCgpe2Zvcih2YXIgbiBpbiB0aGlzLl8pcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gbSgpe3RoaXMuXz1PYmplY3QuY3JlYXRlKG51bGwpfWZ1bmN0aW9uIHkobil7cmV0dXJuIG59ZnVuY3Rpb24gTShuLHQsZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHI9ZS5hcHBseSh0LGFyZ3VtZW50cyk7cmV0dXJuIHI9PT10P246cn19ZnVuY3Rpb24geChuLHQpe2lmKHQgaW4gbilyZXR1cm4gdDt0PXQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKTtmb3IodmFyIGU9MCxyPV9hLmxlbmd0aDtyPmU7KytlKXt2YXIgdT1fYVtlXSt0O2lmKHUgaW4gbilyZXR1cm4gdX19ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBfKCl7fWZ1bmN0aW9uIHcobil7ZnVuY3Rpb24gdCgpe2Zvcih2YXIgdCxyPWUsdT0tMSxpPXIubGVuZ3RoOysrdTxpOykodD1yW3VdLm9uKSYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIG59dmFyIGU9W10scj1uZXcgYztyZXR1cm4gdC5vbj1mdW5jdGlvbih0LHUpe3ZhciBpLGE9ci5nZXQodCk7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8Mj9hJiZhLm9uOihhJiYoYS5vbj1udWxsLGU9ZS5zbGljZSgwLGk9ZS5pbmRleE9mKGEpKS5jb25jYXQoZS5zbGljZShpKzEpKSxyLnJlbW92ZSh0KSksdSYmZS5wdXNoKHIuc2V0KHQse29uOnV9KSksbil9LHR9ZnVuY3Rpb24gUygpe29hLmV2ZW50LnByZXZlbnREZWZhdWx0KCl9ZnVuY3Rpb24gaygpe2Zvcih2YXIgbix0PW9hLmV2ZW50O249dC5zb3VyY2VFdmVudDspdD1uO3JldHVybiB0fWZ1bmN0aW9uIE4obil7Zm9yKHZhciB0PW5ldyBfLGU9MCxyPWFyZ3VtZW50cy5sZW5ndGg7KytlPHI7KXRbYXJndW1lbnRzW2VdXT13KHQpO3JldHVybiB0Lm9mPWZ1bmN0aW9uKGUscil7cmV0dXJuIGZ1bmN0aW9uKHUpe3RyeXt2YXIgaT11LnNvdXJjZUV2ZW50PW9hLmV2ZW50O3UudGFyZ2V0PW4sb2EuZXZlbnQ9dSx0W3UudHlwZV0uYXBwbHkoZSxyKX1maW5hbGx5e29hLmV2ZW50PWl9fX0sdH1mdW5jdGlvbiBFKG4pe3JldHVybiBTYShuLEFhKSxufWZ1bmN0aW9uIEEobil7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOmZ1bmN0aW9uKCl7cmV0dXJuIGthKG4sdGhpcyl9fWZ1bmN0aW9uIEMobil7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOmZ1bmN0aW9uKCl7cmV0dXJuIE5hKG4sdGhpcyl9fWZ1bmN0aW9uIHoobix0KXtmdW5jdGlvbiBlKCl7dGhpcy5yZW1vdmVBdHRyaWJ1dGUobil9ZnVuY3Rpb24gcigpe3RoaXMucmVtb3ZlQXR0cmlidXRlTlMobi5zcGFjZSxuLmxvY2FsKX1mdW5jdGlvbiB1KCl7dGhpcy5zZXRBdHRyaWJ1dGUobix0KX1mdW5jdGlvbiBpKCl7dGhpcy5zZXRBdHRyaWJ1dGVOUyhuLnNwYWNlLG4ubG9jYWwsdCl9ZnVuY3Rpb24gYSgpe3ZhciBlPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpO251bGw9PWU/dGhpcy5yZW1vdmVBdHRyaWJ1dGUobik6dGhpcy5zZXRBdHRyaWJ1dGUobixlKX1mdW5jdGlvbiBvKCl7dmFyIGU9dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7bnVsbD09ZT90aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKG4uc3BhY2Usbi5sb2NhbCk6dGhpcy5zZXRBdHRyaWJ1dGVOUyhuLnNwYWNlLG4ubG9jYWwsZSl9cmV0dXJuIG49b2EubnMucXVhbGlmeShuKSxudWxsPT10P24ubG9jYWw/cjplOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/bi5sb2NhbD9vOmE6bi5sb2NhbD9pOnV9ZnVuY3Rpb24gTChuKXtyZXR1cm4gbi50cmltKCkucmVwbGFjZSgvXFxzKy9nLFwiIFwiKX1mdW5jdGlvbiBxKG4pe3JldHVybiBuZXcgUmVnRXhwKFwiKD86XnxcXFxccyspXCIrb2EucmVxdW90ZShuKStcIig/OlxcXFxzK3wkKVwiLFwiZ1wiKX1mdW5jdGlvbiBUKG4pe3JldHVybihuK1wiXCIpLnRyaW0oKS5zcGxpdCgvXnxcXHMrLyl9ZnVuY3Rpb24gUihuLHQpe2Z1bmN0aW9uIGUoKXtmb3IodmFyIGU9LTE7KytlPHU7KW5bZV0odGhpcyx0KX1mdW5jdGlvbiByKCl7Zm9yKHZhciBlPS0xLHI9dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7KytlPHU7KW5bZV0odGhpcyxyKX1uPVQobikubWFwKEQpO3ZhciB1PW4ubGVuZ3RoO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/cjplfWZ1bmN0aW9uIEQobil7dmFyIHQ9cShuKTtyZXR1cm4gZnVuY3Rpb24oZSxyKXtpZih1PWUuY2xhc3NMaXN0KXJldHVybiByP3UuYWRkKG4pOnUucmVtb3ZlKG4pO3ZhciB1PWUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIil8fFwiXCI7cj8odC5sYXN0SW5kZXg9MCx0LnRlc3QodSl8fGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixMKHUrXCIgXCIrbikpKTplLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsTCh1LnJlcGxhY2UodCxcIiBcIikpKX19ZnVuY3Rpb24gUChuLHQsZSl7ZnVuY3Rpb24gcigpe3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobil9ZnVuY3Rpb24gdSgpe3RoaXMuc3R5bGUuc2V0UHJvcGVydHkobix0LGUpfWZ1bmN0aW9uIGkoKXt2YXIgcj10LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtudWxsPT1yP3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobik6dGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuLHIsZSl9cmV0dXJuIG51bGw9PXQ/cjpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2k6dX1mdW5jdGlvbiBVKG4sdCl7ZnVuY3Rpb24gZSgpe2RlbGV0ZSB0aGlzW25dfWZ1bmN0aW9uIHIoKXt0aGlzW25dPXR9ZnVuY3Rpb24gdSgpe3ZhciBlPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpO251bGw9PWU/ZGVsZXRlIHRoaXNbbl06dGhpc1tuXT1lfXJldHVybiBudWxsPT10P2U6XCJmdW5jdGlvblwiPT10eXBlb2YgdD91OnJ9ZnVuY3Rpb24gaihuKXtmdW5jdGlvbiB0KCl7dmFyIHQ9dGhpcy5vd25lckRvY3VtZW50LGU9dGhpcy5uYW1lc3BhY2VVUkk7cmV0dXJuIGU9PT1DYSYmdC5kb2N1bWVudEVsZW1lbnQubmFtZXNwYWNlVVJJPT09Q2E/dC5jcmVhdGVFbGVtZW50KG4pOnQuY3JlYXRlRWxlbWVudE5TKGUsbil9ZnVuY3Rpb24gZSgpe3JldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKG4uc3BhY2Usbi5sb2NhbCl9cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOihuPW9hLm5zLnF1YWxpZnkobikpLmxvY2FsP2U6dH1mdW5jdGlvbiBGKCl7dmFyIG49dGhpcy5wYXJlbnROb2RlO24mJm4ucmVtb3ZlQ2hpbGQodGhpcyl9ZnVuY3Rpb24gSChuKXtyZXR1cm57X19kYXRhX186bn19ZnVuY3Rpb24gTyhuKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gRWEodGhpcyxuKX19ZnVuY3Rpb24gSShuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aHx8KG49ZSksZnVuY3Rpb24odCxlKXtyZXR1cm4gdCYmZT9uKHQuX19kYXRhX18sZS5fX2RhdGFfXyk6IXQtIWV9fWZ1bmN0aW9uIFkobix0KXtmb3IodmFyIGU9MCxyPW4ubGVuZ3RoO3I+ZTtlKyspZm9yKHZhciB1LGk9bltlXSxhPTAsbz1pLmxlbmd0aDtvPmE7YSsrKSh1PWlbYV0pJiZ0KHUsYSxlKTtyZXR1cm4gbn1mdW5jdGlvbiBaKG4pe3JldHVybiBTYShuLExhKSxufWZ1bmN0aW9uIFYobil7dmFyIHQsZTtyZXR1cm4gZnVuY3Rpb24ocix1LGkpe3ZhciBhLG89bltpXS51cGRhdGUsbD1vLmxlbmd0aDtmb3IoaSE9ZSYmKGU9aSx0PTApLHU+PXQmJih0PXUrMSk7IShhPW9bdF0pJiYrK3Q8bDspO3JldHVybiBhfX1mdW5jdGlvbiBYKG4sdCxlKXtmdW5jdGlvbiByKCl7dmFyIHQ9dGhpc1thXTt0JiYodGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG4sdCx0LiQpLGRlbGV0ZSB0aGlzW2FdKX1mdW5jdGlvbiB1KCl7dmFyIHU9bCh0LGNhKGFyZ3VtZW50cykpO3IuY2FsbCh0aGlzKSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIobix0aGlzW2FdPXUsdS4kPWUpLHUuXz10fWZ1bmN0aW9uIGkoKXt2YXIgdCxlPW5ldyBSZWdFeHAoXCJeX19vbihbXi5dKylcIitvYS5yZXF1b3RlKG4pK1wiJFwiKTtmb3IodmFyIHIgaW4gdGhpcylpZih0PXIubWF0Y2goZSkpe3ZhciB1PXRoaXNbcl07dGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHRbMV0sdSx1LiQpLGRlbGV0ZSB0aGlzW3JdfX12YXIgYT1cIl9fb25cIituLG89bi5pbmRleE9mKFwiLlwiKSxsPSQ7bz4wJiYobj1uLnNsaWNlKDAsbykpO3ZhciBjPXFhLmdldChuKTtyZXR1cm4gYyYmKG49YyxsPUIpLG8/dD91OnI6dD9iOml9ZnVuY3Rpb24gJChuLHQpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgcj1vYS5ldmVudDtvYS5ldmVudD1lLHRbMF09dGhpcy5fX2RhdGFfXzt0cnl7bi5hcHBseSh0aGlzLHQpfWZpbmFsbHl7b2EuZXZlbnQ9cn19fWZ1bmN0aW9uIEIobix0KXt2YXIgZT0kKG4sdCk7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciB0PXRoaXMscj1uLnJlbGF0ZWRUYXJnZXQ7ciYmKHI9PT10fHw4JnIuY29tcGFyZURvY3VtZW50UG9zaXRpb24odCkpfHxlLmNhbGwodCxuKX19ZnVuY3Rpb24gVyhlKXt2YXIgcj1cIi5kcmFnc3VwcHJlc3MtXCIrICsrUmEsdT1cImNsaWNrXCIrcixpPW9hLnNlbGVjdCh0KGUpKS5vbihcInRvdWNobW92ZVwiK3IsUykub24oXCJkcmFnc3RhcnRcIityLFMpLm9uKFwic2VsZWN0c3RhcnRcIityLFMpO2lmKG51bGw9PVRhJiYoVGE9XCJvbnNlbGVjdHN0YXJ0XCJpbiBlPyExOngoZS5zdHlsZSxcInVzZXJTZWxlY3RcIikpLFRhKXt2YXIgYT1uKGUpLnN0eWxlLG89YVtUYV07YVtUYV09XCJub25lXCJ9cmV0dXJuIGZ1bmN0aW9uKG4pe2lmKGkub24ocixudWxsKSxUYSYmKGFbVGFdPW8pLG4pe3ZhciB0PWZ1bmN0aW9uKCl7aS5vbih1LG51bGwpfTtpLm9uKHUsZnVuY3Rpb24oKXtTKCksdCgpfSwhMCksc2V0VGltZW91dCh0LDApfX19ZnVuY3Rpb24gSihuLGUpe2UuY2hhbmdlZFRvdWNoZXMmJihlPWUuY2hhbmdlZFRvdWNoZXNbMF0pO3ZhciByPW4ub3duZXJTVkdFbGVtZW50fHxuO2lmKHIuY3JlYXRlU1ZHUG9pbnQpe3ZhciB1PXIuY3JlYXRlU1ZHUG9pbnQoKTtpZigwPkRhKXt2YXIgaT10KG4pO2lmKGkuc2Nyb2xsWHx8aS5zY3JvbGxZKXtyPW9hLnNlbGVjdChcImJvZHlcIikuYXBwZW5kKFwic3ZnXCIpLnN0eWxlKHtwb3NpdGlvbjpcImFic29sdXRlXCIsdG9wOjAsbGVmdDowLG1hcmdpbjowLHBhZGRpbmc6MCxib3JkZXI6XCJub25lXCJ9LFwiaW1wb3J0YW50XCIpO3ZhciBhPXJbMF1bMF0uZ2V0U2NyZWVuQ1RNKCk7RGE9IShhLmZ8fGEuZSksci5yZW1vdmUoKX19cmV0dXJuIERhPyh1Lng9ZS5wYWdlWCx1Lnk9ZS5wYWdlWSk6KHUueD1lLmNsaWVudFgsdS55PWUuY2xpZW50WSksdT11Lm1hdHJpeFRyYW5zZm9ybShuLmdldFNjcmVlbkNUTSgpLmludmVyc2UoKSksW3UueCx1LnldfXZhciBvPW4uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJuW2UuY2xpZW50WC1vLmxlZnQtbi5jbGllbnRMZWZ0LGUuY2xpZW50WS1vLnRvcC1uLmNsaWVudFRvcF19ZnVuY3Rpb24gRygpe3JldHVybiBvYS5ldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5pZGVudGlmaWVyfWZ1bmN0aW9uIEsobil7cmV0dXJuIG4+MD8xOjA+bj8tMTowfWZ1bmN0aW9uIFEobix0LGUpe3JldHVybih0WzBdLW5bMF0pKihlWzFdLW5bMV0pLSh0WzFdLW5bMV0pKihlWzBdLW5bMF0pfWZ1bmN0aW9uIG5uKG4pe3JldHVybiBuPjE/MDotMT5uP2phOk1hdGguYWNvcyhuKX1mdW5jdGlvbiB0bihuKXtyZXR1cm4gbj4xP09hOi0xPm4/LU9hOk1hdGguYXNpbihuKX1mdW5jdGlvbiBlbihuKXtyZXR1cm4oKG49TWF0aC5leHAobikpLTEvbikvMn1mdW5jdGlvbiBybihuKXtyZXR1cm4oKG49TWF0aC5leHAobikpKzEvbikvMn1mdW5jdGlvbiB1bihuKXtyZXR1cm4oKG49TWF0aC5leHAoMipuKSktMSkvKG4rMSl9ZnVuY3Rpb24gYW4obil7cmV0dXJuKG49TWF0aC5zaW4obi8yKSkqbn1mdW5jdGlvbiBvbigpe31mdW5jdGlvbiBsbihuLHQsZSl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBsbj8odGhpcy5oPStuLHRoaXMucz0rdCx2b2lkKHRoaXMubD0rZSkpOmFyZ3VtZW50cy5sZW5ndGg8Mj9uIGluc3RhbmNlb2YgbG4/bmV3IGxuKG4uaCxuLnMsbi5sKTpfbihcIlwiK24sd24sbG4pOm5ldyBsbihuLHQsZSl9ZnVuY3Rpb24gY24obix0LGUpe2Z1bmN0aW9uIHIobil7cmV0dXJuIG4+MzYwP24tPTM2MDowPm4mJihuKz0zNjApLDYwPm4/aSsoYS1pKSpuLzYwOjE4MD5uP2E6MjQwPm4/aSsoYS1pKSooMjQwLW4pLzYwOml9ZnVuY3Rpb24gdShuKXtyZXR1cm4gTWF0aC5yb3VuZCgyNTUqcihuKSl9dmFyIGksYTtyZXR1cm4gbj1pc05hTihuKT8wOihuJT0zNjApPDA/biszNjA6bix0PWlzTmFOKHQpPzA6MD50PzA6dD4xPzE6dCxlPTA+ZT8wOmU+MT8xOmUsYT0uNT49ZT9lKigxK3QpOmUrdC1lKnQsaT0yKmUtYSxuZXcgeW4odShuKzEyMCksdShuKSx1KG4tMTIwKSl9ZnVuY3Rpb24gc24obix0LGUpe3JldHVybiB0aGlzIGluc3RhbmNlb2Ygc24/KHRoaXMuaD0rbix0aGlzLmM9K3Qsdm9pZCh0aGlzLmw9K2UpKTphcmd1bWVudHMubGVuZ3RoPDI/biBpbnN0YW5jZW9mIHNuP25ldyBzbihuLmgsbi5jLG4ubCk6biBpbnN0YW5jZW9mIGhuP3BuKG4ubCxuLmEsbi5iKTpwbigobj1Tbigobj1vYS5yZ2IobikpLnIsbi5nLG4uYikpLmwsbi5hLG4uYik6bmV3IHNuKG4sdCxlKX1mdW5jdGlvbiBmbihuLHQsZSl7cmV0dXJuIGlzTmFOKG4pJiYobj0wKSxpc05hTih0KSYmKHQ9MCksbmV3IGhuKGUsTWF0aC5jb3Mobio9SWEpKnQsTWF0aC5zaW4obikqdCl9ZnVuY3Rpb24gaG4obix0LGUpe3JldHVybiB0aGlzIGluc3RhbmNlb2YgaG4/KHRoaXMubD0rbix0aGlzLmE9K3Qsdm9pZCh0aGlzLmI9K2UpKTphcmd1bWVudHMubGVuZ3RoPDI/biBpbnN0YW5jZW9mIGhuP25ldyBobihuLmwsbi5hLG4uYik6biBpbnN0YW5jZW9mIHNuP2ZuKG4uaCxuLmMsbi5sKTpTbigobj15bihuKSkucixuLmcsbi5iKTpuZXcgaG4obix0LGUpfWZ1bmN0aW9uIGduKG4sdCxlKXt2YXIgcj0obisxNikvMTE2LHU9cit0LzUwMCxpPXItZS8yMDA7cmV0dXJuIHU9dm4odSkqUWEscj12bihyKSpubyxpPXZuKGkpKnRvLG5ldyB5bihtbigzLjI0MDQ1NDIqdS0xLjUzNzEzODUqci0uNDk4NTMxNCppKSxtbigtLjk2OTI2Nip1KzEuODc2MDEwOCpyKy4wNDE1NTYqaSksbW4oLjA1NTY0MzQqdS0uMjA0MDI1OSpyKzEuMDU3MjI1MippKSl9ZnVuY3Rpb24gcG4obix0LGUpe3JldHVybiBuPjA/bmV3IHNuKE1hdGguYXRhbjIoZSx0KSpZYSxNYXRoLnNxcnQodCp0K2UqZSksbik6bmV3IHNuKE5hTixOYU4sbil9ZnVuY3Rpb24gdm4obil7cmV0dXJuIG4+LjIwNjg5MzAzND9uKm4qbjoobi00LzI5KS83Ljc4NzAzN31mdW5jdGlvbiBkbihuKXtyZXR1cm4gbj4uMDA4ODU2P01hdGgucG93KG4sMS8zKTo3Ljc4NzAzNypuKzQvMjl9ZnVuY3Rpb24gbW4obil7cmV0dXJuIE1hdGgucm91bmQoMjU1KiguMDAzMDQ+PW4/MTIuOTIqbjoxLjA1NSpNYXRoLnBvdyhuLDEvMi40KS0uMDU1KSl9ZnVuY3Rpb24geW4obix0LGUpe3JldHVybiB0aGlzIGluc3RhbmNlb2YgeW4/KHRoaXMucj1+fm4sdGhpcy5nPX5+dCx2b2lkKHRoaXMuYj1+fmUpKTphcmd1bWVudHMubGVuZ3RoPDI/biBpbnN0YW5jZW9mIHluP25ldyB5bihuLnIsbi5nLG4uYik6X24oXCJcIituLHluLGNuKTpuZXcgeW4obix0LGUpfWZ1bmN0aW9uIE1uKG4pe3JldHVybiBuZXcgeW4obj4+MTYsbj4+OCYyNTUsMjU1Jm4pfWZ1bmN0aW9uIHhuKG4pe3JldHVybiBNbihuKStcIlwifWZ1bmN0aW9uIGJuKG4pe3JldHVybiAxNj5uP1wiMFwiK01hdGgubWF4KDAsbikudG9TdHJpbmcoMTYpOk1hdGgubWluKDI1NSxuKS50b1N0cmluZygxNil9ZnVuY3Rpb24gX24obix0LGUpe3ZhciByLHUsaSxhPTAsbz0wLGw9MDtpZihyPS8oW2Etel0rKVxcKCguKilcXCkvLmV4ZWMobj1uLnRvTG93ZXJDYXNlKCkpKXN3aXRjaCh1PXJbMl0uc3BsaXQoXCIsXCIpLHJbMV0pe2Nhc2VcImhzbFwiOnJldHVybiBlKHBhcnNlRmxvYXQodVswXSkscGFyc2VGbG9hdCh1WzFdKS8xMDAscGFyc2VGbG9hdCh1WzJdKS8xMDApO2Nhc2VcInJnYlwiOnJldHVybiB0KE5uKHVbMF0pLE5uKHVbMV0pLE5uKHVbMl0pKX1yZXR1cm4oaT11by5nZXQobikpP3QoaS5yLGkuZyxpLmIpOihudWxsPT1ufHxcIiNcIiE9PW4uY2hhckF0KDApfHxpc05hTihpPXBhcnNlSW50KG4uc2xpY2UoMSksMTYpKXx8KDQ9PT1uLmxlbmd0aD8oYT0oMzg0MCZpKT4+NCxhPWE+PjR8YSxvPTI0MCZpLG89bz4+NHxvLGw9MTUmaSxsPWw8PDR8bCk6Nz09PW4ubGVuZ3RoJiYoYT0oMTY3MTE2ODAmaSk+PjE2LG89KDY1MjgwJmkpPj44LGw9MjU1JmkpKSx0KGEsbyxsKSl9ZnVuY3Rpb24gd24obix0LGUpe3ZhciByLHUsaT1NYXRoLm1pbihuLz0yNTUsdC89MjU1LGUvPTI1NSksYT1NYXRoLm1heChuLHQsZSksbz1hLWksbD0oYStpKS8yO3JldHVybiBvPyh1PS41Pmw/by8oYStpKTpvLygyLWEtaSkscj1uPT1hPyh0LWUpL28rKGU+dD82OjApOnQ9PWE/KGUtbikvbysyOihuLXQpL28rNCxyKj02MCk6KHI9TmFOLHU9bD4wJiYxPmw/MDpyKSxuZXcgbG4ocix1LGwpfWZ1bmN0aW9uIFNuKG4sdCxlKXtuPWtuKG4pLHQ9a24odCksZT1rbihlKTt2YXIgcj1kbigoLjQxMjQ1NjQqbisuMzU3NTc2MSp0Ky4xODA0Mzc1KmUpL1FhKSx1PWRuKCguMjEyNjcyOSpuKy43MTUxNTIyKnQrLjA3MjE3NSplKS9ubyksaT1kbigoLjAxOTMzMzkqbisuMTE5MTkyKnQrLjk1MDMwNDEqZSkvdG8pO3JldHVybiBobigxMTYqdS0xNiw1MDAqKHItdSksMjAwKih1LWkpKX1mdW5jdGlvbiBrbihuKXtyZXR1cm4obi89MjU1KTw9LjA0MDQ1P24vMTIuOTI6TWF0aC5wb3coKG4rLjA1NSkvMS4wNTUsMi40KX1mdW5jdGlvbiBObihuKXt2YXIgdD1wYXJzZUZsb2F0KG4pO3JldHVyblwiJVwiPT09bi5jaGFyQXQobi5sZW5ndGgtMSk/TWF0aC5yb3VuZCgyLjU1KnQpOnR9ZnVuY3Rpb24gRW4obil7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOmZ1bmN0aW9uKCl7cmV0dXJuIG59fWZ1bmN0aW9uIEFuKG4pe3JldHVybiBmdW5jdGlvbih0LGUscil7cmV0dXJuIDI9PT1hcmd1bWVudHMubGVuZ3RoJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiYocj1lLGU9bnVsbCksQ24odCxlLG4scil9fWZ1bmN0aW9uIENuKG4sdCxlLHIpe2Z1bmN0aW9uIHUoKXt2YXIgbix0PWwuc3RhdHVzO2lmKCF0JiZMbihsKXx8dD49MjAwJiYzMDA+dHx8MzA0PT09dCl7dHJ5e249ZS5jYWxsKGksbCl9Y2F0Y2gocil7cmV0dXJuIHZvaWQgYS5lcnJvci5jYWxsKGkscil9YS5sb2FkLmNhbGwoaSxuKX1lbHNlIGEuZXJyb3IuY2FsbChpLGwpfXZhciBpPXt9LGE9b2EuZGlzcGF0Y2goXCJiZWZvcmVzZW5kXCIsXCJwcm9ncmVzc1wiLFwibG9hZFwiLFwiZXJyb3JcIiksbz17fSxsPW5ldyBYTUxIdHRwUmVxdWVzdCxjPW51bGw7cmV0dXJuIXRoaXMuWERvbWFpblJlcXVlc3R8fFwid2l0aENyZWRlbnRpYWxzXCJpbiBsfHwhL14oaHR0cChzKT86KT9cXC9cXC8vLnRlc3Qobil8fChsPW5ldyBYRG9tYWluUmVxdWVzdCksXCJvbmxvYWRcImluIGw/bC5vbmxvYWQ9bC5vbmVycm9yPXU6bC5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtsLnJlYWR5U3RhdGU+MyYmdSgpfSxsLm9ucHJvZ3Jlc3M9ZnVuY3Rpb24obil7dmFyIHQ9b2EuZXZlbnQ7b2EuZXZlbnQ9bjt0cnl7YS5wcm9ncmVzcy5jYWxsKGksbCl9ZmluYWxseXtvYS5ldmVudD10fX0saS5oZWFkZXI9ZnVuY3Rpb24obix0KXtyZXR1cm4gbj0obitcIlwiKS50b0xvd2VyQ2FzZSgpLGFyZ3VtZW50cy5sZW5ndGg8Mj9vW25dOihudWxsPT10P2RlbGV0ZSBvW25dOm9bbl09dCtcIlwiLGkpfSxpLm1pbWVUeXBlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PW51bGw9PW4/bnVsbDpuK1wiXCIsaSk6dH0saS5yZXNwb25zZVR5cGU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9bixpKTpjfSxpLnJlc3BvbnNlPWZ1bmN0aW9uKG4pe3JldHVybiBlPW4saX0sW1wiZ2V0XCIsXCJwb3N0XCJdLmZvckVhY2goZnVuY3Rpb24obil7aVtuXT1mdW5jdGlvbigpe3JldHVybiBpLnNlbmQuYXBwbHkoaSxbbl0uY29uY2F0KGNhKGFyZ3VtZW50cykpKX19KSxpLnNlbmQ9ZnVuY3Rpb24oZSxyLHUpe2lmKDI9PT1hcmd1bWVudHMubGVuZ3RoJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiYodT1yLHI9bnVsbCksbC5vcGVuKGUsbiwhMCksbnVsbD09dHx8XCJhY2NlcHRcImluIG98fChvLmFjY2VwdD10K1wiLCovKlwiKSxsLnNldFJlcXVlc3RIZWFkZXIpZm9yKHZhciBzIGluIG8pbC5zZXRSZXF1ZXN0SGVhZGVyKHMsb1tzXSk7cmV0dXJuIG51bGwhPXQmJmwub3ZlcnJpZGVNaW1lVHlwZSYmbC5vdmVycmlkZU1pbWVUeXBlKHQpLG51bGwhPWMmJihsLnJlc3BvbnNlVHlwZT1jKSxudWxsIT11JiZpLm9uKFwiZXJyb3JcIix1KS5vbihcImxvYWRcIixmdW5jdGlvbihuKXt1KG51bGwsbil9KSxhLmJlZm9yZXNlbmQuY2FsbChpLGwpLGwuc2VuZChudWxsPT1yP251bGw6ciksaX0saS5hYm9ydD1mdW5jdGlvbigpe3JldHVybiBsLmFib3J0KCksaX0sb2EucmViaW5kKGksYSxcIm9uXCIpLG51bGw9PXI/aTppLmdldCh6bihyKSl9ZnVuY3Rpb24gem4obil7cmV0dXJuIDE9PT1uLmxlbmd0aD9mdW5jdGlvbih0LGUpe24obnVsbD09dD9lOm51bGwpfTpufWZ1bmN0aW9uIExuKG4pe3ZhciB0PW4ucmVzcG9uc2VUeXBlO3JldHVybiB0JiZcInRleHRcIiE9PXQ/bi5yZXNwb25zZTpuLnJlc3BvbnNlVGV4dH1mdW5jdGlvbiBxbihuLHQsZSl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aDsyPnImJih0PTApLDM+ciYmKGU9RGF0ZS5ub3coKSk7dmFyIHU9ZSt0LGk9e2M6bix0OnUsbjpudWxsfTtyZXR1cm4gYW8/YW8ubj1pOmlvPWksYW89aSxvb3x8KGxvPWNsZWFyVGltZW91dChsbyksb289MSxjbyhUbikpLGl9ZnVuY3Rpb24gVG4oKXt2YXIgbj1SbigpLHQ9RG4oKS1uO3Q+MjQ/KGlzRmluaXRlKHQpJiYoY2xlYXJUaW1lb3V0KGxvKSxsbz1zZXRUaW1lb3V0KFRuLHQpKSxvbz0wKToob289MSxjbyhUbikpfWZ1bmN0aW9uIFJuKCl7Zm9yKHZhciBuPURhdGUubm93KCksdD1pbzt0OyluPj10LnQmJnQuYyhuLXQudCkmJih0LmM9bnVsbCksdD10Lm47cmV0dXJuIG59ZnVuY3Rpb24gRG4oKXtmb3IodmFyIG4sdD1pbyxlPTEvMDt0Oyl0LmM/KHQudDxlJiYoZT10LnQpLHQ9KG49dCkubik6dD1uP24ubj10Lm46aW89dC5uO3JldHVybiBhbz1uLGV9ZnVuY3Rpb24gUG4obix0KXtyZXR1cm4gdC0obj9NYXRoLmNlaWwoTWF0aC5sb2cobikvTWF0aC5MTjEwKToxKX1mdW5jdGlvbiBVbihuLHQpe3ZhciBlPU1hdGgucG93KDEwLDMqTWEoOC10KSk7cmV0dXJue3NjYWxlOnQ+OD9mdW5jdGlvbihuKXtyZXR1cm4gbi9lfTpmdW5jdGlvbihuKXtyZXR1cm4gbiplfSxzeW1ib2w6bn19ZnVuY3Rpb24gam4obil7dmFyIHQ9bi5kZWNpbWFsLGU9bi50aG91c2FuZHMscj1uLmdyb3VwaW5nLHU9bi5jdXJyZW5jeSxpPXImJmU/ZnVuY3Rpb24obix0KXtmb3IodmFyIHU9bi5sZW5ndGgsaT1bXSxhPTAsbz1yWzBdLGw9MDt1PjAmJm8+MCYmKGwrbysxPnQmJihvPU1hdGgubWF4KDEsdC1sKSksaS5wdXNoKG4uc3Vic3RyaW5nKHUtPW8sdStvKSksISgobCs9bysxKT50KSk7KW89clthPShhKzEpJXIubGVuZ3RoXTtyZXR1cm4gaS5yZXZlcnNlKCkuam9pbihlKX06eTtyZXR1cm4gZnVuY3Rpb24obil7dmFyIGU9Zm8uZXhlYyhuKSxyPWVbMV18fFwiIFwiLGE9ZVsyXXx8XCI+XCIsbz1lWzNdfHxcIi1cIixsPWVbNF18fFwiXCIsYz1lWzVdLHM9K2VbNl0sZj1lWzddLGg9ZVs4XSxnPWVbOV0scD0xLHY9XCJcIixkPVwiXCIsbT0hMSx5PSEwO3N3aXRjaChoJiYoaD0raC5zdWJzdHJpbmcoMSkpLChjfHxcIjBcIj09PXImJlwiPVwiPT09YSkmJihjPXI9XCIwXCIsYT1cIj1cIiksZyl7Y2FzZVwiblwiOmY9ITAsZz1cImdcIjticmVhaztjYXNlXCIlXCI6cD0xMDAsZD1cIiVcIixnPVwiZlwiO2JyZWFrO2Nhc2VcInBcIjpwPTEwMCxkPVwiJVwiLGc9XCJyXCI7YnJlYWs7Y2FzZVwiYlwiOmNhc2VcIm9cIjpjYXNlXCJ4XCI6Y2FzZVwiWFwiOlwiI1wiPT09bCYmKHY9XCIwXCIrZy50b0xvd2VyQ2FzZSgpKTtjYXNlXCJjXCI6eT0hMTtjYXNlXCJkXCI6bT0hMCxoPTA7YnJlYWs7Y2FzZVwic1wiOnA9LTEsZz1cInJcIn1cIiRcIj09PWwmJih2PXVbMF0sZD11WzFdKSxcInJcIiE9Z3x8aHx8KGc9XCJnXCIpLG51bGwhPWgmJihcImdcIj09Zz9oPU1hdGgubWF4KDEsTWF0aC5taW4oMjEsaCkpOihcImVcIj09Z3x8XCJmXCI9PWcpJiYoaD1NYXRoLm1heCgwLE1hdGgubWluKDIwLGgpKSkpLGc9aG8uZ2V0KGcpfHxGbjt2YXIgTT1jJiZmO3JldHVybiBmdW5jdGlvbihuKXt2YXIgZT1kO2lmKG0mJm4lMSlyZXR1cm5cIlwiO3ZhciB1PTA+bnx8MD09PW4mJjA+MS9uPyhuPS1uLFwiLVwiKTpcIi1cIj09PW8/XCJcIjpvO2lmKDA+cCl7dmFyIGw9b2EuZm9ybWF0UHJlZml4KG4saCk7bj1sLnNjYWxlKG4pLGU9bC5zeW1ib2wrZH1lbHNlIG4qPXA7bj1nKG4saCk7dmFyIHgsYixfPW4ubGFzdEluZGV4T2YoXCIuXCIpO2lmKDA+Xyl7dmFyIHc9eT9uLmxhc3RJbmRleE9mKFwiZVwiKTotMTswPnc/KHg9bixiPVwiXCIpOih4PW4uc3Vic3RyaW5nKDAsdyksYj1uLnN1YnN0cmluZyh3KSl9ZWxzZSB4PW4uc3Vic3RyaW5nKDAsXyksYj10K24uc3Vic3RyaW5nKF8rMSk7IWMmJmYmJih4PWkoeCwxLzApKTt2YXIgUz12Lmxlbmd0aCt4Lmxlbmd0aCtiLmxlbmd0aCsoTT8wOnUubGVuZ3RoKSxrPXM+Uz9uZXcgQXJyYXkoUz1zLVMrMSkuam9pbihyKTpcIlwiO3JldHVybiBNJiYoeD1pKGsreCxrLmxlbmd0aD9zLWIubGVuZ3RoOjEvMCkpLHUrPXYsbj14K2IsKFwiPFwiPT09YT91K24razpcIj5cIj09PWE/ayt1K246XCJeXCI9PT1hP2suc3Vic3RyaW5nKDAsUz4+PTEpK3UrbitrLnN1YnN0cmluZyhTKTp1KyhNP246aytuKSkrZX19fWZ1bmN0aW9uIEZuKG4pe3JldHVybiBuK1wiXCJ9ZnVuY3Rpb24gSG4oKXt0aGlzLl89bmV3IERhdGUoYXJndW1lbnRzLmxlbmd0aD4xP0RhdGUuVVRDLmFwcGx5KHRoaXMsYXJndW1lbnRzKTphcmd1bWVudHNbMF0pfWZ1bmN0aW9uIE9uKG4sdCxlKXtmdW5jdGlvbiByKHQpe3ZhciBlPW4odCkscj1pKGUsMSk7cmV0dXJuIHItdD50LWU/ZTpyfWZ1bmN0aW9uIHUoZSl7cmV0dXJuIHQoZT1uKG5ldyBwbyhlLTEpKSwxKSxlfWZ1bmN0aW9uIGkobixlKXtyZXR1cm4gdChuPW5ldyBwbygrbiksZSksbn1mdW5jdGlvbiBhKG4scixpKXt2YXIgYT11KG4pLG89W107aWYoaT4xKWZvcig7cj5hOyllKGEpJWl8fG8ucHVzaChuZXcgRGF0ZSgrYSkpLHQoYSwxKTtlbHNlIGZvcig7cj5hOylvLnB1c2gobmV3IERhdGUoK2EpKSx0KGEsMSk7cmV0dXJuIG99ZnVuY3Rpb24gbyhuLHQsZSl7dHJ5e3BvPUhuO3ZhciByPW5ldyBIbjtyZXR1cm4gci5fPW4sYShyLHQsZSl9ZmluYWxseXtwbz1EYXRlfX1uLmZsb29yPW4sbi5yb3VuZD1yLG4uY2VpbD11LG4ub2Zmc2V0PWksbi5yYW5nZT1hO3ZhciBsPW4udXRjPUluKG4pO3JldHVybiBsLmZsb29yPWwsbC5yb3VuZD1JbihyKSxsLmNlaWw9SW4odSksbC5vZmZzZXQ9SW4oaSksbC5yYW5nZT1vLG59ZnVuY3Rpb24gSW4obil7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7dHJ5e3BvPUhuO3ZhciByPW5ldyBIbjtyZXR1cm4gci5fPXQsbihyLGUpLl99ZmluYWxseXtwbz1EYXRlfX19ZnVuY3Rpb24gWW4obil7ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiB0KHQpe2Zvcih2YXIgZSx1LGksYT1bXSxvPS0xLGw9MDsrK288cjspMzc9PT1uLmNoYXJDb2RlQXQobykmJihhLnB1c2gobi5zbGljZShsLG8pKSxudWxsIT0odT1tb1tlPW4uY2hhckF0KCsrbyldKSYmKGU9bi5jaGFyQXQoKytvKSksKGk9QVtlXSkmJihlPWkodCxudWxsPT11P1wiZVwiPT09ZT9cIiBcIjpcIjBcIjp1KSksYS5wdXNoKGUpLGw9bysxKTtyZXR1cm4gYS5wdXNoKG4uc2xpY2UobCxvKSksYS5qb2luKFwiXCIpfXZhciByPW4ubGVuZ3RoO3JldHVybiB0LnBhcnNlPWZ1bmN0aW9uKHQpe3ZhciByPXt5OjE5MDAsbTowLGQ6MSxIOjAsTTowLFM6MCxMOjAsWjpudWxsfSx1PWUocixuLHQsMCk7aWYodSE9dC5sZW5ndGgpcmV0dXJuIG51bGw7XCJwXCJpbiByJiYoci5IPXIuSCUxMisxMipyLnApO3ZhciBpPW51bGwhPXIuWiYmcG8hPT1IbixhPW5ldyhpP0huOnBvKTtyZXR1cm5cImpcImluIHI/YS5zZXRGdWxsWWVhcihyLnksMCxyLmopOlwiV1wiaW4gcnx8XCJVXCJpbiByPyhcIndcImluIHJ8fChyLnc9XCJXXCJpbiByPzE6MCksYS5zZXRGdWxsWWVhcihyLnksMCwxKSxhLnNldEZ1bGxZZWFyKHIueSwwLFwiV1wiaW4gcj8oci53KzYpJTcrNypyLlctKGEuZ2V0RGF5KCkrNSklNzpyLncrNypyLlUtKGEuZ2V0RGF5KCkrNiklNykpOmEuc2V0RnVsbFllYXIoci55LHIubSxyLmQpLGEuc2V0SG91cnMoci5IKyhyLlovMTAwfDApLHIuTStyLlolMTAwLHIuUyxyLkwpLGk/YS5fOmF9LHQudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gbn0sdH1mdW5jdGlvbiBlKG4sdCxlLHIpe2Zvcih2YXIgdSxpLGEsbz0wLGw9dC5sZW5ndGgsYz1lLmxlbmd0aDtsPm87KXtpZihyPj1jKXJldHVybi0xO2lmKHU9dC5jaGFyQ29kZUF0KG8rKyksMzc9PT11KXtpZihhPXQuY2hhckF0KG8rKyksaT1DW2EgaW4gbW8/dC5jaGFyQXQobysrKTphXSwhaXx8KHI9aShuLGUscikpPDApcmV0dXJuLTF9ZWxzZSBpZih1IT1lLmNoYXJDb2RlQXQocisrKSlyZXR1cm4tMX1yZXR1cm4gcn1mdW5jdGlvbiByKG4sdCxlKXtfLmxhc3RJbmRleD0wO3ZhciByPV8uZXhlYyh0LnNsaWNlKGUpKTtyZXR1cm4gcj8obi53PXcuZ2V0KHJbMF0udG9Mb3dlckNhc2UoKSksZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gdShuLHQsZSl7eC5sYXN0SW5kZXg9MDt2YXIgcj14LmV4ZWModC5zbGljZShlKSk7cmV0dXJuIHI/KG4udz1iLmdldChyWzBdLnRvTG93ZXJDYXNlKCkpLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIGkobix0LGUpe04ubGFzdEluZGV4PTA7dmFyIHI9Ti5leGVjKHQuc2xpY2UoZSkpO3JldHVybiByPyhuLm09RS5nZXQoclswXS50b0xvd2VyQ2FzZSgpKSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBhKG4sdCxlKXtTLmxhc3RJbmRleD0wO3ZhciByPVMuZXhlYyh0LnNsaWNlKGUpKTtyZXR1cm4gcj8obi5tPWsuZ2V0KHJbMF0udG9Mb3dlckNhc2UoKSksZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gbyhuLHQscil7cmV0dXJuIGUobixBLmMudG9TdHJpbmcoKSx0LHIpfWZ1bmN0aW9uIGwobix0LHIpe3JldHVybiBlKG4sQS54LnRvU3RyaW5nKCksdCxyKX1mdW5jdGlvbiBjKG4sdCxyKXtyZXR1cm4gZShuLEEuWC50b1N0cmluZygpLHQscil9ZnVuY3Rpb24gcyhuLHQsZSl7dmFyIHI9TS5nZXQodC5zbGljZShlLGUrPTIpLnRvTG93ZXJDYXNlKCkpO3JldHVybiBudWxsPT1yPy0xOihuLnA9cixlKX12YXIgZj1uLmRhdGVUaW1lLGg9bi5kYXRlLGc9bi50aW1lLHA9bi5wZXJpb2RzLHY9bi5kYXlzLGQ9bi5zaG9ydERheXMsbT1uLm1vbnRocyx5PW4uc2hvcnRNb250aHM7dC51dGM9ZnVuY3Rpb24obil7ZnVuY3Rpb24gZShuKXt0cnl7cG89SG47dmFyIHQ9bmV3IHBvO3JldHVybiB0Ll89bixyKHQpfWZpbmFsbHl7cG89RGF0ZX19dmFyIHI9dChuKTtyZXR1cm4gZS5wYXJzZT1mdW5jdGlvbihuKXt0cnl7cG89SG47dmFyIHQ9ci5wYXJzZShuKTtyZXR1cm4gdCYmdC5ffWZpbmFsbHl7cG89RGF0ZX19LGUudG9TdHJpbmc9ci50b1N0cmluZyxlfSx0Lm11bHRpPXQudXRjLm11bHRpPWN0O3ZhciBNPW9hLm1hcCgpLHg9Vm4odiksYj1Ybih2KSxfPVZuKGQpLHc9WG4oZCksUz1WbihtKSxrPVhuKG0pLE49Vm4oeSksRT1Ybih5KTtwLmZvckVhY2goZnVuY3Rpb24obix0KXtNLnNldChuLnRvTG93ZXJDYXNlKCksdCl9KTt2YXIgQT17YTpmdW5jdGlvbihuKXtyZXR1cm4gZFtuLmdldERheSgpXX0sQTpmdW5jdGlvbihuKXtyZXR1cm4gdltuLmdldERheSgpXX0sYjpmdW5jdGlvbihuKXtyZXR1cm4geVtuLmdldE1vbnRoKCldfSxCOmZ1bmN0aW9uKG4pe3JldHVybiBtW24uZ2V0TW9udGgoKV19LGM6dChmKSxkOmZ1bmN0aW9uKG4sdCl7cmV0dXJuIFpuKG4uZ2V0RGF0ZSgpLHQsMil9LGU6ZnVuY3Rpb24obix0KXtyZXR1cm4gWm4obi5nZXREYXRlKCksdCwyKX0sSDpmdW5jdGlvbihuLHQpe3JldHVybiBabihuLmdldEhvdXJzKCksdCwyKX0sSTpmdW5jdGlvbihuLHQpe3JldHVybiBabihuLmdldEhvdXJzKCklMTJ8fDEyLHQsMil9LGo6ZnVuY3Rpb24obix0KXtyZXR1cm4gWm4oMStnby5kYXlPZlllYXIobiksdCwzKX0sTDpmdW5jdGlvbihuLHQpe3JldHVybiBabihuLmdldE1pbGxpc2Vjb25kcygpLHQsMyl9LG06ZnVuY3Rpb24obix0KXtyZXR1cm4gWm4obi5nZXRNb250aCgpKzEsdCwyKX0sTTpmdW5jdGlvbihuLHQpe3JldHVybiBabihuLmdldE1pbnV0ZXMoKSx0LDIpfSxwOmZ1bmN0aW9uKG4pe3JldHVybiBwWysobi5nZXRIb3VycygpPj0xMildfSxTOmZ1bmN0aW9uKG4sdCl7cmV0dXJuIFpuKG4uZ2V0U2Vjb25kcygpLHQsMil9LFU6ZnVuY3Rpb24obix0KXtyZXR1cm4gWm4oZ28uc3VuZGF5T2ZZZWFyKG4pLHQsMil9LHc6ZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0RGF5KCl9LFc6ZnVuY3Rpb24obix0KXtyZXR1cm4gWm4oZ28ubW9uZGF5T2ZZZWFyKG4pLHQsMil9LHg6dChoKSxYOnQoZykseTpmdW5jdGlvbihuLHQpe3JldHVybiBabihuLmdldEZ1bGxZZWFyKCklMTAwLHQsMil9LFk6ZnVuY3Rpb24obix0KXtyZXR1cm4gWm4obi5nZXRGdWxsWWVhcigpJTFlNCx0LDQpfSxaOm90LFwiJVwiOmZ1bmN0aW9uKCl7cmV0dXJuXCIlXCJ9fSxDPXthOnIsQTp1LGI6aSxCOmEsYzpvLGQ6dHQsZTp0dCxIOnJ0LEk6cnQsajpldCxMOmF0LG06bnQsTTp1dCxwOnMsUzppdCxVOkJuLHc6JG4sVzpXbix4OmwsWDpjLHk6R24sWTpKbixaOktuLFwiJVwiOmx0fTtyZXR1cm4gdH1mdW5jdGlvbiBabihuLHQsZSl7dmFyIHI9MD5uP1wiLVwiOlwiXCIsdT0ocj8tbjpuKStcIlwiLGk9dS5sZW5ndGg7cmV0dXJuIHIrKGU+aT9uZXcgQXJyYXkoZS1pKzEpLmpvaW4odCkrdTp1KX1mdW5jdGlvbiBWbihuKXtyZXR1cm4gbmV3IFJlZ0V4cChcIl4oPzpcIituLm1hcChvYS5yZXF1b3RlKS5qb2luKFwifFwiKStcIilcIixcImlcIil9ZnVuY3Rpb24gWG4obil7Zm9yKHZhciB0PW5ldyBjLGU9LTEscj1uLmxlbmd0aDsrK2U8cjspdC5zZXQobltlXS50b0xvd2VyQ2FzZSgpLGUpO3JldHVybiB0fWZ1bmN0aW9uICRuKG4sdCxlKXt5by5sYXN0SW5kZXg9MDt2YXIgcj15by5leGVjKHQuc2xpY2UoZSxlKzEpKTtyZXR1cm4gcj8obi53PStyWzBdLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIEJuKG4sdCxlKXt5by5sYXN0SW5kZXg9MDt2YXIgcj15by5leGVjKHQuc2xpY2UoZSkpO3JldHVybiByPyhuLlU9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gV24obix0LGUpe3lvLmxhc3RJbmRleD0wO3ZhciByPXlvLmV4ZWModC5zbGljZShlKSk7cmV0dXJuIHI/KG4uVz0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBKbihuLHQsZSl7eW8ubGFzdEluZGV4PTA7dmFyIHI9eW8uZXhlYyh0LnNsaWNlKGUsZSs0KSk7cmV0dXJuIHI/KG4ueT0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBHbihuLHQsZSl7eW8ubGFzdEluZGV4PTA7dmFyIHI9eW8uZXhlYyh0LnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KG4ueT1RbigrclswXSksZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gS24obix0LGUpe3JldHVybi9eWystXVxcZHs0fSQvLnRlc3QodD10LnNsaWNlKGUsZSs1KSk/KG4uWj0tdCxlKzUpOi0xfWZ1bmN0aW9uIFFuKG4pe3JldHVybiBuKyhuPjY4PzE5MDA6MmUzKX1mdW5jdGlvbiBudChuLHQsZSl7eW8ubGFzdEluZGV4PTA7dmFyIHI9eW8uZXhlYyh0LnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KG4ubT1yWzBdLTEsZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gdHQobix0LGUpe3lvLmxhc3RJbmRleD0wO3ZhciByPXlvLmV4ZWModC5zbGljZShlLGUrMikpO3JldHVybiByPyhuLmQ9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gZXQobix0LGUpe3lvLmxhc3RJbmRleD0wO3ZhciByPXlvLmV4ZWModC5zbGljZShlLGUrMykpO3JldHVybiByPyhuLmo9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcnQobix0LGUpe3lvLmxhc3RJbmRleD0wO3ZhciByPXlvLmV4ZWModC5zbGljZShlLGUrMikpO3JldHVybiByPyhuLkg9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gdXQobix0LGUpe3lvLmxhc3RJbmRleD0wO3ZhciByPXlvLmV4ZWModC5zbGljZShlLGUrMikpO3JldHVybiByPyhuLk09K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gaXQobix0LGUpe3lvLmxhc3RJbmRleD0wO3ZhciByPXlvLmV4ZWModC5zbGljZShlLGUrMikpO3JldHVybiByPyhuLlM9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gYXQobix0LGUpe3lvLmxhc3RJbmRleD0wO3ZhciByPXlvLmV4ZWModC5zbGljZShlLGUrMykpO3JldHVybiByPyhuLkw9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gb3Qobil7dmFyIHQ9bi5nZXRUaW1lem9uZU9mZnNldCgpLGU9dD4wP1wiLVwiOlwiK1wiLHI9TWEodCkvNjB8MCx1PU1hKHQpJTYwO3JldHVybiBlK1puKHIsXCIwXCIsMikrWm4odSxcIjBcIiwyKX1mdW5jdGlvbiBsdChuLHQsZSl7TW8ubGFzdEluZGV4PTA7dmFyIHI9TW8uZXhlYyh0LnNsaWNlKGUsZSsxKSk7cmV0dXJuIHI/ZStyWzBdLmxlbmd0aDotMX1mdW5jdGlvbiBjdChuKXtmb3IodmFyIHQ9bi5sZW5ndGgsZT0tMTsrK2U8dDspbltlXVswXT10aGlzKG5bZV1bMF0pO3JldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxyPW5bZV07IXJbMV0odCk7KXI9blsrK2VdO3JldHVybiByWzBdKHQpfX1mdW5jdGlvbiBzdCgpe31mdW5jdGlvbiBmdChuLHQsZSl7dmFyIHI9ZS5zPW4rdCx1PXItbixpPXItdTtlLnQ9bi1pKyh0LXUpfWZ1bmN0aW9uIGh0KG4sdCl7biYmd28uaGFzT3duUHJvcGVydHkobi50eXBlKSYmd29bbi50eXBlXShuLHQpfWZ1bmN0aW9uIGd0KG4sdCxlKXt2YXIgcix1PS0xLGk9bi5sZW5ndGgtZTtmb3IodC5saW5lU3RhcnQoKTsrK3U8aTspcj1uW3VdLHQucG9pbnQoclswXSxyWzFdLHJbMl0pO3QubGluZUVuZCgpfWZ1bmN0aW9uIHB0KG4sdCl7dmFyIGU9LTEscj1uLmxlbmd0aDtmb3IodC5wb2x5Z29uU3RhcnQoKTsrK2U8cjspZ3QobltlXSx0LDEpO3QucG9seWdvbkVuZCgpfWZ1bmN0aW9uIHZ0KCl7ZnVuY3Rpb24gbihuLHQpe24qPUlhLHQ9dCpJYS8yK2phLzQ7dmFyIGU9bi1yLGE9ZT49MD8xOi0xLG89YSplLGw9TWF0aC5jb3ModCksYz1NYXRoLnNpbih0KSxzPWkqYyxmPXUqbCtzKk1hdGguY29zKG8pLGg9cyphKk1hdGguc2luKG8pO2tvLmFkZChNYXRoLmF0YW4yKGgsZikpLHI9bix1PWwsaT1jfXZhciB0LGUscix1LGk7Tm8ucG9pbnQ9ZnVuY3Rpb24oYSxvKXtOby5wb2ludD1uLHI9KHQ9YSkqSWEsdT1NYXRoLmNvcyhvPShlPW8pKklhLzIramEvNCksaT1NYXRoLnNpbihvKX0sTm8ubGluZUVuZD1mdW5jdGlvbigpe24odCxlKX19ZnVuY3Rpb24gZHQobil7dmFyIHQ9blswXSxlPW5bMV0scj1NYXRoLmNvcyhlKTtyZXR1cm5bcipNYXRoLmNvcyh0KSxyKk1hdGguc2luKHQpLE1hdGguc2luKGUpXX1mdW5jdGlvbiBtdChuLHQpe3JldHVybiBuWzBdKnRbMF0rblsxXSp0WzFdK25bMl0qdFsyXX1mdW5jdGlvbiB5dChuLHQpe3JldHVybltuWzFdKnRbMl0tblsyXSp0WzFdLG5bMl0qdFswXS1uWzBdKnRbMl0sblswXSp0WzFdLW5bMV0qdFswXV19ZnVuY3Rpb24gTXQobix0KXtuWzBdKz10WzBdLG5bMV0rPXRbMV0sblsyXSs9dFsyXX1mdW5jdGlvbiB4dChuLHQpe3JldHVybltuWzBdKnQsblsxXSp0LG5bMl0qdF19ZnVuY3Rpb24gYnQobil7dmFyIHQ9TWF0aC5zcXJ0KG5bMF0qblswXStuWzFdKm5bMV0rblsyXSpuWzJdKTtuWzBdLz10LG5bMV0vPXQsblsyXS89dH1mdW5jdGlvbiBfdChuKXtyZXR1cm5bTWF0aC5hdGFuMihuWzFdLG5bMF0pLHRuKG5bMl0pXX1mdW5jdGlvbiB3dChuLHQpe3JldHVybiBNYShuWzBdLXRbMF0pPFBhJiZNYShuWzFdLXRbMV0pPFBhfWZ1bmN0aW9uIFN0KG4sdCl7bio9SWE7dmFyIGU9TWF0aC5jb3ModCo9SWEpO2t0KGUqTWF0aC5jb3MobiksZSpNYXRoLnNpbihuKSxNYXRoLnNpbih0KSl9ZnVuY3Rpb24ga3Qobix0LGUpeysrRW8sQ28rPShuLUNvKS9Fbyx6bys9KHQtem8pL0VvLExvKz0oZS1MbykvRW99ZnVuY3Rpb24gTnQoKXtmdW5jdGlvbiBuKG4sdSl7bio9SWE7dmFyIGk9TWF0aC5jb3ModSo9SWEpLGE9aSpNYXRoLmNvcyhuKSxvPWkqTWF0aC5zaW4obiksbD1NYXRoLnNpbih1KSxjPU1hdGguYXRhbjIoTWF0aC5zcXJ0KChjPWUqbC1yKm8pKmMrKGM9ciphLXQqbCkqYysoYz10Km8tZSphKSpjKSx0KmErZSpvK3IqbCk7QW8rPWMscW8rPWMqKHQrKHQ9YSkpLFRvKz1jKihlKyhlPW8pKSxSbys9Yyoocisocj1sKSksa3QodCxlLHIpfXZhciB0LGUscjtqby5wb2ludD1mdW5jdGlvbih1LGkpe3UqPUlhO3ZhciBhPU1hdGguY29zKGkqPUlhKTt0PWEqTWF0aC5jb3ModSksZT1hKk1hdGguc2luKHUpLHI9TWF0aC5zaW4oaSksam8ucG9pbnQ9bixrdCh0LGUscil9fWZ1bmN0aW9uIEV0KCl7am8ucG9pbnQ9U3R9ZnVuY3Rpb24gQXQoKXtmdW5jdGlvbiBuKG4sdCl7bio9SWE7dmFyIGU9TWF0aC5jb3ModCo9SWEpLGE9ZSpNYXRoLmNvcyhuKSxvPWUqTWF0aC5zaW4obiksbD1NYXRoLnNpbih0KSxjPXUqbC1pKm8scz1pKmEtcipsLGY9cipvLXUqYSxoPU1hdGguc3FydChjKmMrcypzK2YqZiksZz1yKmErdSpvK2kqbCxwPWgmJi1ubihnKS9oLHY9TWF0aC5hdGFuMihoLGcpO0RvKz1wKmMsUG8rPXAqcyxVbys9cCpmLEFvKz12LHFvKz12KihyKyhyPWEpKSxUbys9dioodSsodT1vKSksUm8rPXYqKGkrKGk9bCkpLGt0KHIsdSxpKX12YXIgdCxlLHIsdSxpO2pvLnBvaW50PWZ1bmN0aW9uKGEsbyl7dD1hLGU9byxqby5wb2ludD1uLGEqPUlhO3ZhciBsPU1hdGguY29zKG8qPUlhKTtyPWwqTWF0aC5jb3MoYSksdT1sKk1hdGguc2luKGEpLGk9TWF0aC5zaW4obyksa3Qocix1LGkpfSxqby5saW5lRW5kPWZ1bmN0aW9uKCl7bih0LGUpLGpvLmxpbmVFbmQ9RXQsam8ucG9pbnQ9U3R9fWZ1bmN0aW9uIEN0KG4sdCl7ZnVuY3Rpb24gZShlLHIpe3JldHVybiBlPW4oZSxyKSx0KGVbMF0sZVsxXSl9cmV0dXJuIG4uaW52ZXJ0JiZ0LmludmVydCYmKGUuaW52ZXJ0PWZ1bmN0aW9uKGUscil7cmV0dXJuIGU9dC5pbnZlcnQoZSxyKSxlJiZuLmludmVydChlWzBdLGVbMV0pfSksZX1mdW5jdGlvbiB6dCgpe3JldHVybiEwfWZ1bmN0aW9uIEx0KG4sdCxlLHIsdSl7dmFyIGk9W10sYT1bXTtpZihuLmZvckVhY2goZnVuY3Rpb24obil7aWYoISgodD1uLmxlbmd0aC0xKTw9MCkpe3ZhciB0LGU9blswXSxyPW5bdF07aWYod3QoZSxyKSl7dS5saW5lU3RhcnQoKTtmb3IodmFyIG89MDt0Pm87KytvKXUucG9pbnQoKGU9bltvXSlbMF0sZVsxXSk7cmV0dXJuIHZvaWQgdS5saW5lRW5kKCl9dmFyIGw9bmV3IFR0KGUsbixudWxsLCEwKSxjPW5ldyBUdChlLG51bGwsbCwhMSk7bC5vPWMsaS5wdXNoKGwpLGEucHVzaChjKSxsPW5ldyBUdChyLG4sbnVsbCwhMSksYz1uZXcgVHQocixudWxsLGwsITApLGwubz1jLGkucHVzaChsKSxhLnB1c2goYyl9fSksYS5zb3J0KHQpLHF0KGkpLHF0KGEpLGkubGVuZ3RoKXtmb3IodmFyIG89MCxsPWUsYz1hLmxlbmd0aDtjPm87KytvKWFbb10uZT1sPSFsO2Zvcih2YXIgcyxmLGg9aVswXTs7KXtmb3IodmFyIGc9aCxwPSEwO2cudjspaWYoKGc9Zy5uKT09PWgpcmV0dXJuO3M9Zy56LHUubGluZVN0YXJ0KCk7ZG97aWYoZy52PWcuby52PSEwLGcuZSl7aWYocClmb3IodmFyIG89MCxjPXMubGVuZ3RoO2M+bzsrK28pdS5wb2ludCgoZj1zW29dKVswXSxmWzFdKTtlbHNlIHIoZy54LGcubi54LDEsdSk7Zz1nLm59ZWxzZXtpZihwKXtzPWcucC56O2Zvcih2YXIgbz1zLmxlbmd0aC0xO28+PTA7LS1vKXUucG9pbnQoKGY9c1tvXSlbMF0sZlsxXSl9ZWxzZSByKGcueCxnLnAueCwtMSx1KTtnPWcucH1nPWcubyxzPWcueixwPSFwfXdoaWxlKCFnLnYpO3UubGluZUVuZCgpfX19ZnVuY3Rpb24gcXQobil7aWYodD1uLmxlbmd0aCl7Zm9yKHZhciB0LGUscj0wLHU9blswXTsrK3I8dDspdS5uPWU9bltyXSxlLnA9dSx1PWU7dS5uPWU9blswXSxlLnA9dX19ZnVuY3Rpb24gVHQobix0LGUscil7dGhpcy54PW4sdGhpcy56PXQsdGhpcy5vPWUsdGhpcy5lPXIsdGhpcy52PSExLHRoaXMubj10aGlzLnA9bnVsbH1mdW5jdGlvbiBSdChuLHQsZSxyKXtyZXR1cm4gZnVuY3Rpb24odSxpKXtmdW5jdGlvbiBhKHQsZSl7dmFyIHI9dSh0LGUpO24odD1yWzBdLGU9clsxXSkmJmkucG9pbnQodCxlKX1mdW5jdGlvbiBvKG4sdCl7dmFyIGU9dShuLHQpO2QucG9pbnQoZVswXSxlWzFdKX1mdW5jdGlvbiBsKCl7eS5wb2ludD1vLGQubGluZVN0YXJ0KCl9ZnVuY3Rpb24gYygpe3kucG9pbnQ9YSxkLmxpbmVFbmQoKX1mdW5jdGlvbiBzKG4sdCl7di5wdXNoKFtuLHRdKTt2YXIgZT11KG4sdCk7eC5wb2ludChlWzBdLGVbMV0pfWZ1bmN0aW9uIGYoKXt4LmxpbmVTdGFydCgpLHY9W119ZnVuY3Rpb24gaCgpe3ModlswXVswXSx2WzBdWzFdKSx4LmxpbmVFbmQoKTt2YXIgbix0PXguY2xlYW4oKSxlPU0uYnVmZmVyKCkscj1lLmxlbmd0aDtpZih2LnBvcCgpLHAucHVzaCh2KSx2PW51bGwscilpZigxJnQpe249ZVswXTt2YXIgdSxyPW4ubGVuZ3RoLTEsYT0tMTtpZihyPjApe2ZvcihifHwoaS5wb2x5Z29uU3RhcnQoKSxiPSEwKSxpLmxpbmVTdGFydCgpOysrYTxyOylpLnBvaW50KCh1PW5bYV0pWzBdLHVbMV0pO2kubGluZUVuZCgpfX1lbHNlIHI+MSYmMiZ0JiZlLnB1c2goZS5wb3AoKS5jb25jYXQoZS5zaGlmdCgpKSksZy5wdXNoKGUuZmlsdGVyKER0KSl9dmFyIGcscCx2LGQ9dChpKSxtPXUuaW52ZXJ0KHJbMF0sclsxXSkseT17cG9pbnQ6YSxsaW5lU3RhcnQ6bCxsaW5lRW5kOmMscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7eS5wb2ludD1zLHkubGluZVN0YXJ0PWYseS5saW5lRW5kPWgsZz1bXSxwPVtdfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7eS5wb2ludD1hLHkubGluZVN0YXJ0PWwseS5saW5lRW5kPWMsZz1vYS5tZXJnZShnKTt2YXIgbj1PdChtLHApO2cubGVuZ3RoPyhifHwoaS5wb2x5Z29uU3RhcnQoKSxiPSEwKSxMdChnLFV0LG4sZSxpKSk6biYmKGJ8fChpLnBvbHlnb25TdGFydCgpLGI9ITApLGkubGluZVN0YXJ0KCksZShudWxsLG51bGwsMSxpKSxpLmxpbmVFbmQoKSksYiYmKGkucG9seWdvbkVuZCgpLGI9ITEpLGc9cD1udWxsfSxzcGhlcmU6ZnVuY3Rpb24oKXtpLnBvbHlnb25TdGFydCgpLGkubGluZVN0YXJ0KCksZShudWxsLG51bGwsMSxpKSxpLmxpbmVFbmQoKSxpLnBvbHlnb25FbmQoKX19LE09UHQoKSx4PXQoTSksYj0hMTtyZXR1cm4geX19ZnVuY3Rpb24gRHQobil7cmV0dXJuIG4ubGVuZ3RoPjF9ZnVuY3Rpb24gUHQoKXt2YXIgbix0PVtdO3JldHVybntsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0LnB1c2gobj1bXSl9LHBvaW50OmZ1bmN0aW9uKHQsZSl7bi5wdXNoKFt0LGVdKX0sbGluZUVuZDpiLGJ1ZmZlcjpmdW5jdGlvbigpe3ZhciBlPXQ7cmV0dXJuIHQ9W10sbj1udWxsLGV9LHJlam9pbjpmdW5jdGlvbigpe3QubGVuZ3RoPjEmJnQucHVzaCh0LnBvcCgpLmNvbmNhdCh0LnNoaWZ0KCkpKX19fWZ1bmN0aW9uIFV0KG4sdCl7cmV0dXJuKChuPW4ueClbMF08MD9uWzFdLU9hLVBhOk9hLW5bMV0pLSgodD10LngpWzBdPDA/dFsxXS1PYS1QYTpPYS10WzFdKX1mdW5jdGlvbiBqdChuKXt2YXIgdCxlPU5hTixyPU5hTix1PU5hTjtyZXR1cm57bGluZVN0YXJ0OmZ1bmN0aW9uKCl7bi5saW5lU3RhcnQoKSx0PTF9LHBvaW50OmZ1bmN0aW9uKGksYSl7dmFyIG89aT4wP2phOi1qYSxsPU1hKGktZSk7TWEobC1qYSk8UGE/KG4ucG9pbnQoZSxyPShyK2EpLzI+MD9PYTotT2EpLG4ucG9pbnQodSxyKSxuLmxpbmVFbmQoKSxuLmxpbmVTdGFydCgpLG4ucG9pbnQobyxyKSxuLnBvaW50KGksciksdD0wKTp1IT09byYmbD49amEmJihNYShlLXUpPFBhJiYoZS09dSpQYSksTWEoaS1vKTxQYSYmKGktPW8qUGEpLHI9RnQoZSxyLGksYSksbi5wb2ludCh1LHIpLG4ubGluZUVuZCgpLG4ubGluZVN0YXJ0KCksbi5wb2ludChvLHIpLHQ9MCksbi5wb2ludChlPWkscj1hKSx1PW99LGxpbmVFbmQ6ZnVuY3Rpb24oKXtuLmxpbmVFbmQoKSxlPXI9TmFOfSxjbGVhbjpmdW5jdGlvbigpe3JldHVybiAyLXR9fX1mdW5jdGlvbiBGdChuLHQsZSxyKXt2YXIgdSxpLGE9TWF0aC5zaW4obi1lKTtyZXR1cm4gTWEoYSk+UGE/TWF0aC5hdGFuKChNYXRoLnNpbih0KSooaT1NYXRoLmNvcyhyKSkqTWF0aC5zaW4oZSktTWF0aC5zaW4ocikqKHU9TWF0aC5jb3ModCkpKk1hdGguc2luKG4pKS8odSppKmEpKToodCtyKS8yfWZ1bmN0aW9uIEh0KG4sdCxlLHIpe3ZhciB1O2lmKG51bGw9PW4pdT1lKk9hLHIucG9pbnQoLWphLHUpLHIucG9pbnQoMCx1KSxyLnBvaW50KGphLHUpLHIucG9pbnQoamEsMCksci5wb2ludChqYSwtdSksci5wb2ludCgwLC11KSxyLnBvaW50KC1qYSwtdSksci5wb2ludCgtamEsMCksci5wb2ludCgtamEsdSk7ZWxzZSBpZihNYShuWzBdLXRbMF0pPlBhKXt2YXIgaT1uWzBdPHRbMF0/amE6LWphO3U9ZSppLzIsci5wb2ludCgtaSx1KSxyLnBvaW50KDAsdSksci5wb2ludChpLHUpfWVsc2Ugci5wb2ludCh0WzBdLHRbMV0pfWZ1bmN0aW9uIE90KG4sdCl7dmFyIGU9blswXSxyPW5bMV0sdT1bTWF0aC5zaW4oZSksLU1hdGguY29zKGUpLDBdLGk9MCxhPTA7a28ucmVzZXQoKTtmb3IodmFyIG89MCxsPXQubGVuZ3RoO2w+bzsrK28pe3ZhciBjPXRbb10scz1jLmxlbmd0aDtpZihzKWZvcih2YXIgZj1jWzBdLGg9ZlswXSxnPWZbMV0vMitqYS80LHA9TWF0aC5zaW4oZyksdj1NYXRoLmNvcyhnKSxkPTE7Oyl7ZD09PXMmJihkPTApLG49Y1tkXTt2YXIgbT1uWzBdLHk9blsxXS8yK2phLzQsTT1NYXRoLnNpbih5KSx4PU1hdGguY29zKHkpLGI9bS1oLF89Yj49MD8xOi0xLHc9XypiLFM9dz5qYSxrPXAqTTtpZihrby5hZGQoTWF0aC5hdGFuMihrKl8qTWF0aC5zaW4odyksdip4K2sqTWF0aC5jb3ModykpKSxpKz1TP2IrXypGYTpiLFNeaD49ZV5tPj1lKXt2YXIgTj15dChkdChmKSxkdChuKSk7YnQoTik7dmFyIEU9eXQodSxOKTtidChFKTt2YXIgQT0oU15iPj0wPy0xOjEpKnRuKEVbMl0pOyhyPkF8fHI9PT1BJiYoTlswXXx8TlsxXSkpJiYoYSs9U15iPj0wPzE6LTEpfWlmKCFkKyspYnJlYWs7aD1tLHA9TSx2PXgsZj1ufX1yZXR1cm4oLVBhPml8fFBhPmkmJjA+a28pXjEmYX1mdW5jdGlvbiBJdChuKXtmdW5jdGlvbiB0KG4sdCl7cmV0dXJuIE1hdGguY29zKG4pKk1hdGguY29zKHQpPml9ZnVuY3Rpb24gZShuKXt2YXIgZSxpLGwsYyxzO3JldHVybntsaW5lU3RhcnQ6ZnVuY3Rpb24oKXtjPWw9ITEscz0xfSxwb2ludDpmdW5jdGlvbihmLGgpe3ZhciBnLHA9W2YsaF0sdj10KGYsaCksZD1hP3Y/MDp1KGYsaCk6dj91KGYrKDA+Zj9qYTotamEpLGgpOjA7aWYoIWUmJihjPWw9dikmJm4ubGluZVN0YXJ0KCksdiE9PWwmJihnPXIoZSxwKSwod3QoZSxnKXx8d3QocCxnKSkmJihwWzBdKz1QYSxwWzFdKz1QYSx2PXQocFswXSxwWzFdKSkpLHYhPT1sKXM9MCx2PyhuLmxpbmVTdGFydCgpLGc9cihwLGUpLG4ucG9pbnQoZ1swXSxnWzFdKSk6KGc9cihlLHApLG4ucG9pbnQoZ1swXSxnWzFdKSxuLmxpbmVFbmQoKSksZT1nO2Vsc2UgaWYobyYmZSYmYV52KXt2YXIgbTtkJml8fCEobT1yKHAsZSwhMCkpfHwocz0wLGE/KG4ubGluZVN0YXJ0KCksbi5wb2ludChtWzBdWzBdLG1bMF1bMV0pLG4ucG9pbnQobVsxXVswXSxtWzFdWzFdKSxuLmxpbmVFbmQoKSk6KG4ucG9pbnQobVsxXVswXSxtWzFdWzFdKSxuLmxpbmVFbmQoKSxuLmxpbmVTdGFydCgpLG4ucG9pbnQobVswXVswXSxtWzBdWzFdKSkpfSF2fHxlJiZ3dChlLHApfHxuLnBvaW50KHBbMF0scFsxXSksZT1wLGw9dixpPWR9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtsJiZuLmxpbmVFbmQoKSxlPW51bGx9LGNsZWFuOmZ1bmN0aW9uKCl7cmV0dXJuIHN8KGMmJmwpPDwxfX19ZnVuY3Rpb24gcihuLHQsZSl7dmFyIHI9ZHQobiksdT1kdCh0KSxhPVsxLDAsMF0sbz15dChyLHUpLGw9bXQobyxvKSxjPW9bMF0scz1sLWMqYztpZighcylyZXR1cm4hZSYmbjt2YXIgZj1pKmwvcyxoPS1pKmMvcyxnPXl0KGEsbykscD14dChhLGYpLHY9eHQobyxoKTtNdChwLHYpO3ZhciBkPWcsbT1tdChwLGQpLHk9bXQoZCxkKSxNPW0qbS15KihtdChwLHApLTEpO2lmKCEoMD5NKSl7dmFyIHg9TWF0aC5zcXJ0KE0pLGI9eHQoZCwoLW0teCkveSk7aWYoTXQoYixwKSxiPV90KGIpLCFlKXJldHVybiBiO3ZhciBfLHc9blswXSxTPXRbMF0saz1uWzFdLE49dFsxXTt3PlMmJihfPXcsdz1TLFM9Xyk7dmFyIEU9Uy13LEE9TWEoRS1qYSk8UGEsQz1BfHxQYT5FO2lmKCFBJiZrPk4mJihfPWssaz1OLE49XyksQz9BP2srTj4wXmJbMV08KE1hKGJbMF0tdyk8UGE/azpOKTprPD1iWzFdJiZiWzFdPD1OOkU+amFeKHc8PWJbMF0mJmJbMF08PVMpKXt2YXIgej14dChkLCgtbSt4KS95KTtyZXR1cm4gTXQoeixwKSxbYixfdCh6KV19fX1mdW5jdGlvbiB1KHQsZSl7dmFyIHI9YT9uOmphLW4sdT0wO3JldHVybi1yPnQ/dXw9MTp0PnImJih1fD0yKSwtcj5lP3V8PTQ6ZT5yJiYodXw9OCksdX12YXIgaT1NYXRoLmNvcyhuKSxhPWk+MCxvPU1hKGkpPlBhLGw9dmUobiw2KklhKTtyZXR1cm4gUnQodCxlLGwsYT9bMCwtbl06Wy1qYSxuLWphXSl9ZnVuY3Rpb24gWXQobix0LGUscil7cmV0dXJuIGZ1bmN0aW9uKHUpe3ZhciBpLGE9dS5hLG89dS5iLGw9YS54LGM9YS55LHM9by54LGY9by55LGg9MCxnPTEscD1zLWwsdj1mLWM7aWYoaT1uLWwscHx8IShpPjApKXtpZihpLz1wLDA+cCl7aWYoaD5pKXJldHVybjtnPmkmJihnPWkpfWVsc2UgaWYocD4wKXtpZihpPmcpcmV0dXJuO2k+aCYmKGg9aSl9aWYoaT1lLWwscHx8ISgwPmkpKXtpZihpLz1wLDA+cCl7aWYoaT5nKXJldHVybjtpPmgmJihoPWkpfWVsc2UgaWYocD4wKXtpZihoPmkpcmV0dXJuO2c+aSYmKGc9aSl9aWYoaT10LWMsdnx8IShpPjApKXtpZihpLz12LDA+dil7aWYoaD5pKXJldHVybjtnPmkmJihnPWkpfWVsc2UgaWYodj4wKXtpZihpPmcpcmV0dXJuO2k+aCYmKGg9aSl9aWYoaT1yLWMsdnx8ISgwPmkpKXtpZihpLz12LDA+dil7aWYoaT5nKXJldHVybjtpPmgmJihoPWkpfWVsc2UgaWYodj4wKXtpZihoPmkpcmV0dXJuO2c+aSYmKGc9aSl9cmV0dXJuIGg+MCYmKHUuYT17eDpsK2gqcCx5OmMraCp2fSksMT5nJiYodS5iPXt4OmwrZypwLHk6YytnKnZ9KSx1fX19fX19ZnVuY3Rpb24gWnQobix0LGUscil7ZnVuY3Rpb24gdShyLHUpe3JldHVybiBNYShyWzBdLW4pPFBhP3U+MD8wOjM6TWEoclswXS1lKTxQYT91PjA/MjoxOk1hKHJbMV0tdCk8UGE/dT4wPzE6MDp1PjA/MzoyfWZ1bmN0aW9uIGkobix0KXtyZXR1cm4gYShuLngsdC54KX1mdW5jdGlvbiBhKG4sdCl7dmFyIGU9dShuLDEpLHI9dSh0LDEpO3JldHVybiBlIT09cj9lLXI6MD09PWU/dFsxXS1uWzFdOjE9PT1lP25bMF0tdFswXToyPT09ZT9uWzFdLXRbMV06dFswXS1uWzBdfXJldHVybiBmdW5jdGlvbihvKXtmdW5jdGlvbiBsKG4pe2Zvcih2YXIgdD0wLGU9ZC5sZW5ndGgscj1uWzFdLHU9MDtlPnU7Kyt1KWZvcih2YXIgaSxhPTEsbz1kW3VdLGw9by5sZW5ndGgsYz1vWzBdO2w+YTsrK2EpaT1vW2FdLGNbMV08PXI/aVsxXT5yJiZRKGMsaSxuKT4wJiYrK3Q6aVsxXTw9ciYmUShjLGksbik8MCYmLS10LGM9aTtyZXR1cm4gMCE9PXR9ZnVuY3Rpb24gYyhpLG8sbCxjKXt2YXIgcz0wLGY9MDtpZihudWxsPT1pfHwocz11KGksbCkpIT09KGY9dShvLGwpKXx8YShpLG8pPDBebD4wKXtkbyBjLnBvaW50KDA9PT1zfHwzPT09cz9uOmUscz4xP3I6dCk7d2hpbGUoKHM9KHMrbCs0KSU0KSE9PWYpfWVsc2UgYy5wb2ludChvWzBdLG9bMV0pfWZ1bmN0aW9uIHModSxpKXtyZXR1cm4gdT49biYmZT49dSYmaT49dCYmcj49aX1mdW5jdGlvbiBmKG4sdCl7cyhuLHQpJiZvLnBvaW50KG4sdCl9ZnVuY3Rpb24gaCgpe0MucG9pbnQ9cCxkJiZkLnB1c2gobT1bXSksUz0hMCx3PSExLGI9Xz1OYU59ZnVuY3Rpb24gZygpe3YmJihwKHksTSkseCYmdyYmRS5yZWpvaW4oKSx2LnB1c2goRS5idWZmZXIoKSkpLEMucG9pbnQ9Zix3JiZvLmxpbmVFbmQoKX1mdW5jdGlvbiBwKG4sdCl7bj1NYXRoLm1heCgtSG8sTWF0aC5taW4oSG8sbikpLHQ9TWF0aC5tYXgoLUhvLE1hdGgubWluKEhvLHQpKTt2YXIgZT1zKG4sdCk7aWYoZCYmbS5wdXNoKFtuLHRdKSxTKXk9bixNPXQseD1lLFM9ITEsZSYmKG8ubGluZVN0YXJ0KCksby5wb2ludChuLHQpKTtlbHNlIGlmKGUmJncpby5wb2ludChuLHQpO2Vsc2V7dmFyIHI9e2E6e3g6Yix5Ol99LGI6e3g6bix5OnR9fTtBKHIpPyh3fHwoby5saW5lU3RhcnQoKSxvLnBvaW50KHIuYS54LHIuYS55KSksby5wb2ludChyLmIueCxyLmIueSksZXx8by5saW5lRW5kKCksaz0hMSk6ZSYmKG8ubGluZVN0YXJ0KCksby5wb2ludChuLHQpLGs9ITEpfWI9bixfPXQsdz1lfXZhciB2LGQsbSx5LE0seCxiLF8sdyxTLGssTj1vLEU9UHQoKSxBPVl0KG4sdCxlLHIpLEM9e3BvaW50OmYsbGluZVN0YXJ0OmgsbGluZUVuZDpnLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe289RSx2PVtdLGQ9W10saz0hMH0scG9seWdvbkVuZDpmdW5jdGlvbigpe289Tix2PW9hLm1lcmdlKHYpO3ZhciB0PWwoW24scl0pLGU9ayYmdCx1PXYubGVuZ3RoOyhlfHx1KSYmKG8ucG9seWdvblN0YXJ0KCksZSYmKG8ubGluZVN0YXJ0KCksYyhudWxsLG51bGwsMSxvKSxvLmxpbmVFbmQoKSksdSYmTHQodixpLHQsYyxvKSxvLnBvbHlnb25FbmQoKSksdj1kPW09bnVsbH19O3JldHVybiBDfX1mdW5jdGlvbiBWdChuKXt2YXIgdD0wLGU9amEvMyxyPW9lKG4pLHU9cih0LGUpO3JldHVybiB1LnBhcmFsbGVscz1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9yKHQ9blswXSpqYS8xODAsZT1uWzFdKmphLzE4MCk6W3QvamEqMTgwLGUvamEqMTgwXX0sdX1mdW5jdGlvbiBYdChuLHQpe2Z1bmN0aW9uIGUobix0KXt2YXIgZT1NYXRoLnNxcnQoaS0yKnUqTWF0aC5zaW4odCkpL3U7cmV0dXJuW2UqTWF0aC5zaW4obio9dSksYS1lKk1hdGguY29zKG4pXX12YXIgcj1NYXRoLnNpbihuKSx1PShyK01hdGguc2luKHQpKS8yLGk9MStyKigyKnUtciksYT1NYXRoLnNxcnQoaSkvdTtyZXR1cm4gZS5pbnZlcnQ9ZnVuY3Rpb24obix0KXt2YXIgZT1hLXQ7cmV0dXJuW01hdGguYXRhbjIobixlKS91LHRuKChpLShuKm4rZSplKSp1KnUpLygyKnUpKV19LGV9ZnVuY3Rpb24gJHQoKXtmdW5jdGlvbiBuKG4sdCl7SW8rPXUqbi1yKnQscj1uLHU9dH12YXIgdCxlLHIsdTskby5wb2ludD1mdW5jdGlvbihpLGEpeyRvLnBvaW50PW4sdD1yPWksZT11PWF9LCRvLmxpbmVFbmQ9ZnVuY3Rpb24oKXtuKHQsZSl9fWZ1bmN0aW9uIEJ0KG4sdCl7WW8+biYmKFlvPW4pLG4+Vm8mJihWbz1uKSxabz50JiYoWm89dCksdD5YbyYmKFhvPXQpfWZ1bmN0aW9uIFd0KCl7ZnVuY3Rpb24gbihuLHQpe2EucHVzaChcIk1cIixuLFwiLFwiLHQsaSl9ZnVuY3Rpb24gdChuLHQpe2EucHVzaChcIk1cIixuLFwiLFwiLHQpLG8ucG9pbnQ9ZX1mdW5jdGlvbiBlKG4sdCl7YS5wdXNoKFwiTFwiLG4sXCIsXCIsdCl9ZnVuY3Rpb24gcigpe28ucG9pbnQ9bn1mdW5jdGlvbiB1KCl7YS5wdXNoKFwiWlwiKX12YXIgaT1KdCg0LjUpLGE9W10sbz17cG9pbnQ6bixsaW5lU3RhcnQ6ZnVuY3Rpb24oKXtvLnBvaW50PXR9LGxpbmVFbmQ6cixwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtvLmxpbmVFbmQ9dX0scG9seWdvbkVuZDpmdW5jdGlvbigpe28ubGluZUVuZD1yLG8ucG9pbnQ9bn0scG9pbnRSYWRpdXM6ZnVuY3Rpb24obil7cmV0dXJuIGk9SnQobiksb30scmVzdWx0OmZ1bmN0aW9uKCl7aWYoYS5sZW5ndGgpe3ZhciBuPWEuam9pbihcIlwiKTtyZXR1cm4gYT1bXSxufX19O3JldHVybiBvfWZ1bmN0aW9uIEp0KG4pe3JldHVyblwibTAsXCIrbitcImFcIituK1wiLFwiK24rXCIgMCAxLDEgMCxcIistMipuK1wiYVwiK24rXCIsXCIrbitcIiAwIDEsMSAwLFwiKzIqbitcInpcIn1mdW5jdGlvbiBHdChuLHQpe0NvKz1uLHpvKz10LCsrTG99ZnVuY3Rpb24gS3QoKXtmdW5jdGlvbiBuKG4scil7dmFyIHU9bi10LGk9ci1lLGE9TWF0aC5zcXJ0KHUqdStpKmkpO3FvKz1hKih0K24pLzIsVG8rPWEqKGUrcikvMixSbys9YSxHdCh0PW4sZT1yKX12YXIgdCxlO1dvLnBvaW50PWZ1bmN0aW9uKHIsdSl7V28ucG9pbnQ9bixHdCh0PXIsZT11KX19ZnVuY3Rpb24gUXQoKXtXby5wb2ludD1HdH1mdW5jdGlvbiBuZSgpe2Z1bmN0aW9uIG4obix0KXt2YXIgZT1uLXIsaT10LXUsYT1NYXRoLnNxcnQoZSplK2kqaSk7cW8rPWEqKHIrbikvMixUbys9YSoodSt0KS8yLFJvKz1hLGE9dSpuLXIqdCxEbys9YSoocituKSxQbys9YSoodSt0KSxVbys9MyphLEd0KHI9bix1PXQpfXZhciB0LGUscix1O1dvLnBvaW50PWZ1bmN0aW9uKGksYSl7V28ucG9pbnQ9bixHdCh0PXI9aSxlPXU9YSl9LFdvLmxpbmVFbmQ9ZnVuY3Rpb24oKXtuKHQsZSl9fWZ1bmN0aW9uIHRlKG4pe2Z1bmN0aW9uIHQodCxlKXtuLm1vdmVUbyh0K2EsZSksbi5hcmModCxlLGEsMCxGYSl9ZnVuY3Rpb24gZSh0LGUpe24ubW92ZVRvKHQsZSksby5wb2ludD1yfWZ1bmN0aW9uIHIodCxlKXtuLmxpbmVUbyh0LGUpfWZ1bmN0aW9uIHUoKXtvLnBvaW50PXR9ZnVuY3Rpb24gaSgpe24uY2xvc2VQYXRoKCl9dmFyIGE9NC41LG89e3BvaW50OnQsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7by5wb2ludD1lfSxsaW5lRW5kOnUscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7by5saW5lRW5kPWl9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtvLmxpbmVFbmQ9dSxvLnBvaW50PXR9LHBvaW50UmFkaXVzOmZ1bmN0aW9uKG4pe3JldHVybiBhPW4sb30scmVzdWx0OmJ9O3JldHVybiBvfWZ1bmN0aW9uIGVlKG4pe2Z1bmN0aW9uIHQobil7cmV0dXJuKG8/cjplKShuKX1mdW5jdGlvbiBlKHQpe3JldHVybiBpZSh0LGZ1bmN0aW9uKGUscil7ZT1uKGUsciksdC5wb2ludChlWzBdLGVbMV0pfSl9ZnVuY3Rpb24gcih0KXtmdW5jdGlvbiBlKGUscil7ZT1uKGUsciksdC5wb2ludChlWzBdLGVbMV0pfWZ1bmN0aW9uIHIoKXtNPU5hTixTLnBvaW50PWksdC5saW5lU3RhcnQoKX1mdW5jdGlvbiBpKGUscil7dmFyIGk9ZHQoW2Uscl0pLGE9bihlLHIpO3UoTSx4LHksYixfLHcsTT1hWzBdLHg9YVsxXSx5PWUsYj1pWzBdLF89aVsxXSx3PWlbMl0sbyx0KSx0LnBvaW50KE0seCl9ZnVuY3Rpb24gYSgpe1MucG9pbnQ9ZSx0LmxpbmVFbmQoKX1mdW5jdGlvbiBsKCl7XG5yKCksUy5wb2ludD1jLFMubGluZUVuZD1zfWZ1bmN0aW9uIGMobix0KXtpKGY9bixoPXQpLGc9TSxwPXgsdj1iLGQ9XyxtPXcsUy5wb2ludD1pfWZ1bmN0aW9uIHMoKXt1KE0seCx5LGIsXyx3LGcscCxmLHYsZCxtLG8sdCksUy5saW5lRW5kPWEsYSgpfXZhciBmLGgsZyxwLHYsZCxtLHksTSx4LGIsXyx3LFM9e3BvaW50OmUsbGluZVN0YXJ0OnIsbGluZUVuZDphLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe3QucG9seWdvblN0YXJ0KCksUy5saW5lU3RhcnQ9bH0scG9seWdvbkVuZDpmdW5jdGlvbigpe3QucG9seWdvbkVuZCgpLFMubGluZVN0YXJ0PXJ9fTtyZXR1cm4gU31mdW5jdGlvbiB1KHQsZSxyLG8sbCxjLHMsZixoLGcscCx2LGQsbSl7dmFyIHk9cy10LE09Zi1lLHg9eSp5K00qTTtpZih4PjQqaSYmZC0tKXt2YXIgYj1vK2csXz1sK3Asdz1jK3YsUz1NYXRoLnNxcnQoYipiK18qXyt3KncpLGs9TWF0aC5hc2luKHcvPVMpLE49TWEoTWEodyktMSk8UGF8fE1hKHItaCk8UGE/KHIraCkvMjpNYXRoLmF0YW4yKF8sYiksRT1uKE4sayksQT1FWzBdLEM9RVsxXSx6PUEtdCxMPUMtZSxxPU0qei15Kkw7KHEqcS94Pml8fE1hKCh5KnorTSpMKS94LS41KT4uM3x8YT5vKmcrbCpwK2MqdikmJih1KHQsZSxyLG8sbCxjLEEsQyxOLGIvPVMsXy89Uyx3LGQsbSksbS5wb2ludChBLEMpLHUoQSxDLE4sYixfLHcscyxmLGgsZyxwLHYsZCxtKSl9fXZhciBpPS41LGE9TWF0aC5jb3MoMzAqSWEpLG89MTY7cmV0dXJuIHQucHJlY2lzaW9uPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPShpPW4qbik+MCYmMTYsdCk6TWF0aC5zcXJ0KGkpfSx0fWZ1bmN0aW9uIHJlKG4pe3ZhciB0PWVlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG4oW3QqWWEsZSpZYV0pfSk7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBsZSh0KG4pKX19ZnVuY3Rpb24gdWUobil7dGhpcy5zdHJlYW09bn1mdW5jdGlvbiBpZShuLHQpe3JldHVybntwb2ludDp0LHNwaGVyZTpmdW5jdGlvbigpe24uc3BoZXJlKCl9LGxpbmVTdGFydDpmdW5jdGlvbigpe24ubGluZVN0YXJ0KCl9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtuLmxpbmVFbmQoKX0scG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7bi5wb2x5Z29uU3RhcnQoKX0scG9seWdvbkVuZDpmdW5jdGlvbigpe24ucG9seWdvbkVuZCgpfX19ZnVuY3Rpb24gYWUobil7cmV0dXJuIG9lKGZ1bmN0aW9uKCl7cmV0dXJuIG59KSgpfWZ1bmN0aW9uIG9lKG4pe2Z1bmN0aW9uIHQobil7cmV0dXJuIG49byhuWzBdKklhLG5bMV0qSWEpLFtuWzBdKmgrbCxjLW5bMV0qaF19ZnVuY3Rpb24gZShuKXtyZXR1cm4gbj1vLmludmVydCgoblswXS1sKS9oLChjLW5bMV0pL2gpLG4mJltuWzBdKllhLG5bMV0qWWFdfWZ1bmN0aW9uIHIoKXtvPUN0KGE9ZmUobSxNLHgpLGkpO3ZhciBuPWkodixkKTtyZXR1cm4gbD1nLW5bMF0qaCxjPXArblsxXSpoLHUoKX1mdW5jdGlvbiB1KCl7cmV0dXJuIHMmJihzLnZhbGlkPSExLHM9bnVsbCksdH12YXIgaSxhLG8sbCxjLHMsZj1lZShmdW5jdGlvbihuLHQpe3JldHVybiBuPWkobix0KSxbblswXSpoK2wsYy1uWzFdKmhdfSksaD0xNTAsZz00ODAscD0yNTAsdj0wLGQ9MCxtPTAsTT0wLHg9MCxiPUZvLF89eSx3PW51bGwsUz1udWxsO3JldHVybiB0LnN0cmVhbT1mdW5jdGlvbihuKXtyZXR1cm4gcyYmKHMudmFsaWQ9ITEpLHM9bGUoYihhLGYoXyhuKSkpKSxzLnZhbGlkPSEwLHN9LHQuY2xpcEFuZ2xlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhiPW51bGw9PW4/KHc9bixGbyk6SXQoKHc9K24pKklhKSx1KCkpOnd9LHQuY2xpcEV4dGVudD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oUz1uLF89bj9adChuWzBdWzBdLG5bMF1bMV0sblsxXVswXSxuWzFdWzFdKTp5LHUoKSk6U30sdC5zY2FsZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaD0rbixyKCkpOmh9LHQudHJhbnNsYXRlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhnPStuWzBdLHA9K25bMV0scigpKTpbZyxwXX0sdC5jZW50ZXI9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHY9blswXSUzNjAqSWEsZD1uWzFdJTM2MCpJYSxyKCkpOlt2KllhLGQqWWFdfSx0LnJvdGF0ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obT1uWzBdJTM2MCpJYSxNPW5bMV0lMzYwKklhLHg9bi5sZW5ndGg+Mj9uWzJdJTM2MCpJYTowLHIoKSk6W20qWWEsTSpZYSx4KllhXX0sb2EucmViaW5kKHQsZixcInByZWNpc2lvblwiKSxmdW5jdGlvbigpe3JldHVybiBpPW4uYXBwbHkodGhpcyxhcmd1bWVudHMpLHQuaW52ZXJ0PWkuaW52ZXJ0JiZlLHIoKX19ZnVuY3Rpb24gbGUobil7cmV0dXJuIGllKG4sZnVuY3Rpb24odCxlKXtuLnBvaW50KHQqSWEsZSpJYSl9KX1mdW5jdGlvbiBjZShuLHQpe3JldHVybltuLHRdfWZ1bmN0aW9uIHNlKG4sdCl7cmV0dXJuW24+amE/bi1GYTotamE+bj9uK0ZhOm4sdF19ZnVuY3Rpb24gZmUobix0LGUpe3JldHVybiBuP3R8fGU/Q3QoZ2UobikscGUodCxlKSk6Z2Uobik6dHx8ZT9wZSh0LGUpOnNlfWZ1bmN0aW9uIGhlKG4pe3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiB0Kz1uLFt0PmphP3QtRmE6LWphPnQ/dCtGYTp0LGVdfX1mdW5jdGlvbiBnZShuKXt2YXIgdD1oZShuKTtyZXR1cm4gdC5pbnZlcnQ9aGUoLW4pLHR9ZnVuY3Rpb24gcGUobix0KXtmdW5jdGlvbiBlKG4sdCl7dmFyIGU9TWF0aC5jb3ModCksbz1NYXRoLmNvcyhuKSplLGw9TWF0aC5zaW4obikqZSxjPU1hdGguc2luKHQpLHM9YypyK28qdTtyZXR1cm5bTWF0aC5hdGFuMihsKmktcyphLG8qci1jKnUpLHRuKHMqaStsKmEpXX12YXIgcj1NYXRoLmNvcyhuKSx1PU1hdGguc2luKG4pLGk9TWF0aC5jb3ModCksYT1NYXRoLnNpbih0KTtyZXR1cm4gZS5pbnZlcnQ9ZnVuY3Rpb24obix0KXt2YXIgZT1NYXRoLmNvcyh0KSxvPU1hdGguY29zKG4pKmUsbD1NYXRoLnNpbihuKSplLGM9TWF0aC5zaW4odCkscz1jKmktbCphO3JldHVybltNYXRoLmF0YW4yKGwqaStjKmEsbypyK3MqdSksdG4ocypyLW8qdSldfSxlfWZ1bmN0aW9uIHZlKG4sdCl7dmFyIGU9TWF0aC5jb3Mobikscj1NYXRoLnNpbihuKTtyZXR1cm4gZnVuY3Rpb24odSxpLGEsbyl7dmFyIGw9YSp0O251bGwhPXU/KHU9ZGUoZSx1KSxpPWRlKGUsaSksKGE+MD9pPnU6dT5pKSYmKHUrPWEqRmEpKToodT1uK2EqRmEsaT1uLS41KmwpO2Zvcih2YXIgYyxzPXU7YT4wP3M+aTppPnM7cy09bClvLnBvaW50KChjPV90KFtlLC1yKk1hdGguY29zKHMpLC1yKk1hdGguc2luKHMpXSkpWzBdLGNbMV0pfX1mdW5jdGlvbiBkZShuLHQpe3ZhciBlPWR0KHQpO2VbMF0tPW4sYnQoZSk7dmFyIHI9bm4oLWVbMV0pO3JldHVybigoLWVbMl08MD8tcjpyKSsyKk1hdGguUEktUGEpJSgyKk1hdGguUEkpfWZ1bmN0aW9uIG1lKG4sdCxlKXt2YXIgcj1vYS5yYW5nZShuLHQtUGEsZSkuY29uY2F0KHQpO3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gci5tYXAoZnVuY3Rpb24odCl7cmV0dXJuW24sdF19KX19ZnVuY3Rpb24geWUobix0LGUpe3ZhciByPW9hLnJhbmdlKG4sdC1QYSxlKS5jb25jYXQodCk7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiByLm1hcChmdW5jdGlvbih0KXtyZXR1cm5bdCxuXX0pfX1mdW5jdGlvbiBNZShuKXtyZXR1cm4gbi5zb3VyY2V9ZnVuY3Rpb24geGUobil7cmV0dXJuIG4udGFyZ2V0fWZ1bmN0aW9uIGJlKG4sdCxlLHIpe3ZhciB1PU1hdGguY29zKHQpLGk9TWF0aC5zaW4odCksYT1NYXRoLmNvcyhyKSxvPU1hdGguc2luKHIpLGw9dSpNYXRoLmNvcyhuKSxjPXUqTWF0aC5zaW4obikscz1hKk1hdGguY29zKGUpLGY9YSpNYXRoLnNpbihlKSxoPTIqTWF0aC5hc2luKE1hdGguc3FydChhbihyLXQpK3UqYSphbihlLW4pKSksZz0xL01hdGguc2luKGgpLHA9aD9mdW5jdGlvbihuKXt2YXIgdD1NYXRoLnNpbihuKj1oKSpnLGU9TWF0aC5zaW4oaC1uKSpnLHI9ZSpsK3Qqcyx1PWUqYyt0KmYsYT1lKmkrdCpvO3JldHVybltNYXRoLmF0YW4yKHUscikqWWEsTWF0aC5hdGFuMihhLE1hdGguc3FydChyKnIrdSp1KSkqWWFdfTpmdW5jdGlvbigpe3JldHVybltuKllhLHQqWWFdfTtyZXR1cm4gcC5kaXN0YW5jZT1oLHB9ZnVuY3Rpb24gX2UoKXtmdW5jdGlvbiBuKG4sdSl7dmFyIGk9TWF0aC5zaW4odSo9SWEpLGE9TWF0aC5jb3ModSksbz1NYSgobio9SWEpLXQpLGw9TWF0aC5jb3Mobyk7Sm8rPU1hdGguYXRhbjIoTWF0aC5zcXJ0KChvPWEqTWF0aC5zaW4obykpKm8rKG89cippLWUqYSpsKSpvKSxlKmkrciphKmwpLHQ9bixlPWkscj1hfXZhciB0LGUscjtHby5wb2ludD1mdW5jdGlvbih1LGkpe3Q9dSpJYSxlPU1hdGguc2luKGkqPUlhKSxyPU1hdGguY29zKGkpLEdvLnBvaW50PW59LEdvLmxpbmVFbmQ9ZnVuY3Rpb24oKXtHby5wb2ludD1Hby5saW5lRW5kPWJ9fWZ1bmN0aW9uIHdlKG4sdCl7ZnVuY3Rpb24gZSh0LGUpe3ZhciByPU1hdGguY29zKHQpLHU9TWF0aC5jb3MoZSksaT1uKHIqdSk7cmV0dXJuW2kqdSpNYXRoLnNpbih0KSxpKk1hdGguc2luKGUpXX1yZXR1cm4gZS5pbnZlcnQ9ZnVuY3Rpb24obixlKXt2YXIgcj1NYXRoLnNxcnQobipuK2UqZSksdT10KHIpLGk9TWF0aC5zaW4odSksYT1NYXRoLmNvcyh1KTtyZXR1cm5bTWF0aC5hdGFuMihuKmksciphKSxNYXRoLmFzaW4ociYmZSppL3IpXX0sZX1mdW5jdGlvbiBTZShuLHQpe2Z1bmN0aW9uIGUobix0KXthPjA/LU9hK1BhPnQmJih0PS1PYStQYSk6dD5PYS1QYSYmKHQ9T2EtUGEpO3ZhciBlPWEvTWF0aC5wb3codSh0KSxpKTtyZXR1cm5bZSpNYXRoLnNpbihpKm4pLGEtZSpNYXRoLmNvcyhpKm4pXX12YXIgcj1NYXRoLmNvcyhuKSx1PWZ1bmN0aW9uKG4pe3JldHVybiBNYXRoLnRhbihqYS80K24vMil9LGk9bj09PXQ/TWF0aC5zaW4obik6TWF0aC5sb2coci9NYXRoLmNvcyh0KSkvTWF0aC5sb2codSh0KS91KG4pKSxhPXIqTWF0aC5wb3codShuKSxpKS9pO3JldHVybiBpPyhlLmludmVydD1mdW5jdGlvbihuLHQpe3ZhciBlPWEtdCxyPUsoaSkqTWF0aC5zcXJ0KG4qbitlKmUpO3JldHVybltNYXRoLmF0YW4yKG4sZSkvaSwyKk1hdGguYXRhbihNYXRoLnBvdyhhL3IsMS9pKSktT2FdfSxlKTpOZX1mdW5jdGlvbiBrZShuLHQpe2Z1bmN0aW9uIGUobix0KXt2YXIgZT1pLXQ7cmV0dXJuW2UqTWF0aC5zaW4odSpuKSxpLWUqTWF0aC5jb3ModSpuKV19dmFyIHI9TWF0aC5jb3MobiksdT1uPT09dD9NYXRoLnNpbihuKTooci1NYXRoLmNvcyh0KSkvKHQtbiksaT1yL3UrbjtyZXR1cm4gTWEodSk8UGE/Y2U6KGUuaW52ZXJ0PWZ1bmN0aW9uKG4sdCl7dmFyIGU9aS10O3JldHVybltNYXRoLmF0YW4yKG4sZSkvdSxpLUsodSkqTWF0aC5zcXJ0KG4qbitlKmUpXX0sZSl9ZnVuY3Rpb24gTmUobix0KXtyZXR1cm5bbixNYXRoLmxvZyhNYXRoLnRhbihqYS80K3QvMikpXX1mdW5jdGlvbiBFZShuKXt2YXIgdCxlPWFlKG4pLHI9ZS5zY2FsZSx1PWUudHJhbnNsYXRlLGk9ZS5jbGlwRXh0ZW50O3JldHVybiBlLnNjYWxlPWZ1bmN0aW9uKCl7dmFyIG49ci5hcHBseShlLGFyZ3VtZW50cyk7cmV0dXJuIG49PT1lP3Q/ZS5jbGlwRXh0ZW50KG51bGwpOmU6bn0sZS50cmFuc2xhdGU9ZnVuY3Rpb24oKXt2YXIgbj11LmFwcGx5KGUsYXJndW1lbnRzKTtyZXR1cm4gbj09PWU/dD9lLmNsaXBFeHRlbnQobnVsbCk6ZTpufSxlLmNsaXBFeHRlbnQ9ZnVuY3Rpb24obil7dmFyIGE9aS5hcHBseShlLGFyZ3VtZW50cyk7aWYoYT09PWUpe2lmKHQ9bnVsbD09bil7dmFyIG89amEqcigpLGw9dSgpO2koW1tsWzBdLW8sbFsxXS1vXSxbbFswXStvLGxbMV0rb11dKX19ZWxzZSB0JiYoYT1udWxsKTtyZXR1cm4gYX0sZS5jbGlwRXh0ZW50KG51bGwpfWZ1bmN0aW9uIEFlKG4sdCl7cmV0dXJuW01hdGgubG9nKE1hdGgudGFuKGphLzQrdC8yKSksLW5dfWZ1bmN0aW9uIENlKG4pe3JldHVybiBuWzBdfWZ1bmN0aW9uIHplKG4pe3JldHVybiBuWzFdfWZ1bmN0aW9uIExlKG4pe2Zvcih2YXIgdD1uLmxlbmd0aCxlPVswLDFdLHI9Mix1PTI7dD51O3UrKyl7Zm9yKDtyPjEmJlEobltlW3ItMl1dLG5bZVtyLTFdXSxuW3VdKTw9MDspLS1yO2VbcisrXT11fXJldHVybiBlLnNsaWNlKDAscil9ZnVuY3Rpb24gcWUobix0KXtyZXR1cm4gblswXS10WzBdfHxuWzFdLXRbMV19ZnVuY3Rpb24gVGUobix0LGUpe3JldHVybihlWzBdLXRbMF0pKihuWzFdLXRbMV0pPChlWzFdLXRbMV0pKihuWzBdLXRbMF0pfWZ1bmN0aW9uIFJlKG4sdCxlLHIpe3ZhciB1PW5bMF0saT1lWzBdLGE9dFswXS11LG89clswXS1pLGw9blsxXSxjPWVbMV0scz10WzFdLWwsZj1yWzFdLWMsaD0obyoobC1jKS1mKih1LWkpKS8oZiphLW8qcyk7cmV0dXJuW3UraCphLGwraCpzXX1mdW5jdGlvbiBEZShuKXt2YXIgdD1uWzBdLGU9bltuLmxlbmd0aC0xXTtyZXR1cm4hKHRbMF0tZVswXXx8dFsxXS1lWzFdKX1mdW5jdGlvbiBQZSgpe3JyKHRoaXMpLHRoaXMuZWRnZT10aGlzLnNpdGU9dGhpcy5jaXJjbGU9bnVsbH1mdW5jdGlvbiBVZShuKXt2YXIgdD1jbC5wb3AoKXx8bmV3IFBlO3JldHVybiB0LnNpdGU9bix0fWZ1bmN0aW9uIGplKG4pe0JlKG4pLGFsLnJlbW92ZShuKSxjbC5wdXNoKG4pLHJyKG4pfWZ1bmN0aW9uIEZlKG4pe3ZhciB0PW4uY2lyY2xlLGU9dC54LHI9dC5jeSx1PXt4OmUseTpyfSxpPW4uUCxhPW4uTixvPVtuXTtqZShuKTtmb3IodmFyIGw9aTtsLmNpcmNsZSYmTWEoZS1sLmNpcmNsZS54KTxQYSYmTWEoci1sLmNpcmNsZS5jeSk8UGE7KWk9bC5QLG8udW5zaGlmdChsKSxqZShsKSxsPWk7by51bnNoaWZ0KGwpLEJlKGwpO2Zvcih2YXIgYz1hO2MuY2lyY2xlJiZNYShlLWMuY2lyY2xlLngpPFBhJiZNYShyLWMuY2lyY2xlLmN5KTxQYTspYT1jLk4sby5wdXNoKGMpLGplKGMpLGM9YTtvLnB1c2goYyksQmUoYyk7dmFyIHMsZj1vLmxlbmd0aDtmb3Iocz0xO2Y+czsrK3MpYz1vW3NdLGw9b1tzLTFdLG5yKGMuZWRnZSxsLnNpdGUsYy5zaXRlLHUpO2w9b1swXSxjPW9bZi0xXSxjLmVkZ2U9S2UobC5zaXRlLGMuc2l0ZSxudWxsLHUpLCRlKGwpLCRlKGMpfWZ1bmN0aW9uIEhlKG4pe2Zvcih2YXIgdCxlLHIsdSxpPW4ueCxhPW4ueSxvPWFsLl87bzspaWYocj1PZShvLGEpLWkscj5QYSlvPW8uTDtlbHNle2lmKHU9aS1JZShvLGEpLCEodT5QYSkpe3I+LVBhPyh0PW8uUCxlPW8pOnU+LVBhPyh0PW8sZT1vLk4pOnQ9ZT1vO2JyZWFrfWlmKCFvLlIpe3Q9bzticmVha31vPW8uUn12YXIgbD1VZShuKTtpZihhbC5pbnNlcnQodCxsKSx0fHxlKXtpZih0PT09ZSlyZXR1cm4gQmUodCksZT1VZSh0LnNpdGUpLGFsLmluc2VydChsLGUpLGwuZWRnZT1lLmVkZ2U9S2UodC5zaXRlLGwuc2l0ZSksJGUodCksdm9pZCAkZShlKTtpZighZSlyZXR1cm4gdm9pZChsLmVkZ2U9S2UodC5zaXRlLGwuc2l0ZSkpO0JlKHQpLEJlKGUpO3ZhciBjPXQuc2l0ZSxzPWMueCxmPWMueSxoPW4ueC1zLGc9bi55LWYscD1lLnNpdGUsdj1wLngtcyxkPXAueS1mLG09MiooaCpkLWcqdikseT1oKmgrZypnLE09dip2K2QqZCx4PXt4OihkKnktZypNKS9tK3MseTooaCpNLXYqeSkvbStmfTtucihlLmVkZ2UsYyxwLHgpLGwuZWRnZT1LZShjLG4sbnVsbCx4KSxlLmVkZ2U9S2UobixwLG51bGwseCksJGUodCksJGUoZSl9fWZ1bmN0aW9uIE9lKG4sdCl7dmFyIGU9bi5zaXRlLHI9ZS54LHU9ZS55LGk9dS10O2lmKCFpKXJldHVybiByO3ZhciBhPW4uUDtpZighYSlyZXR1cm4tKDEvMCk7ZT1hLnNpdGU7dmFyIG89ZS54LGw9ZS55LGM9bC10O2lmKCFjKXJldHVybiBvO3ZhciBzPW8tcixmPTEvaS0xL2MsaD1zL2M7cmV0dXJuIGY/KC1oK01hdGguc3FydChoKmgtMipmKihzKnMvKC0yKmMpLWwrYy8yK3UtaS8yKSkpL2YrcjoocitvKS8yfWZ1bmN0aW9uIEllKG4sdCl7dmFyIGU9bi5OO2lmKGUpcmV0dXJuIE9lKGUsdCk7dmFyIHI9bi5zaXRlO3JldHVybiByLnk9PT10P3IueDoxLzB9ZnVuY3Rpb24gWWUobil7dGhpcy5zaXRlPW4sdGhpcy5lZGdlcz1bXX1mdW5jdGlvbiBaZShuKXtmb3IodmFyIHQsZSxyLHUsaSxhLG8sbCxjLHMsZj1uWzBdWzBdLGg9blsxXVswXSxnPW5bMF1bMV0scD1uWzFdWzFdLHY9aWwsZD12Lmxlbmd0aDtkLS07KWlmKGk9dltkXSxpJiZpLnByZXBhcmUoKSlmb3Iobz1pLmVkZ2VzLGw9by5sZW5ndGgsYT0wO2w+YTspcz1vW2FdLmVuZCgpLHI9cy54LHU9cy55LGM9b1srK2ElbF0uc3RhcnQoKSx0PWMueCxlPWMueSwoTWEoci10KT5QYXx8TWEodS1lKT5QYSkmJihvLnNwbGljZShhLDAsbmV3IHRyKFFlKGkuc2l0ZSxzLE1hKHItZik8UGEmJnAtdT5QYT97eDpmLHk6TWEodC1mKTxQYT9lOnB9Ok1hKHUtcCk8UGEmJmgtcj5QYT97eDpNYShlLXApPFBhP3Q6aCx5OnB9Ok1hKHItaCk8UGEmJnUtZz5QYT97eDpoLHk6TWEodC1oKTxQYT9lOmd9Ok1hKHUtZyk8UGEmJnItZj5QYT97eDpNYShlLWcpPFBhP3Q6Zix5Omd9Om51bGwpLGkuc2l0ZSxudWxsKSksKytsKX1mdW5jdGlvbiBWZShuLHQpe3JldHVybiB0LmFuZ2xlLW4uYW5nbGV9ZnVuY3Rpb24gWGUoKXtycih0aGlzKSx0aGlzLng9dGhpcy55PXRoaXMuYXJjPXRoaXMuc2l0ZT10aGlzLmN5PW51bGx9ZnVuY3Rpb24gJGUobil7dmFyIHQ9bi5QLGU9bi5OO2lmKHQmJmUpe3ZhciByPXQuc2l0ZSx1PW4uc2l0ZSxpPWUuc2l0ZTtpZihyIT09aSl7dmFyIGE9dS54LG89dS55LGw9ci54LWEsYz1yLnktbyxzPWkueC1hLGY9aS55LW8saD0yKihsKmYtYypzKTtpZighKGg+PS1VYSkpe3ZhciBnPWwqbCtjKmMscD1zKnMrZipmLHY9KGYqZy1jKnApL2gsZD0obCpwLXMqZykvaCxmPWQrbyxtPXNsLnBvcCgpfHxuZXcgWGU7bS5hcmM9bixtLnNpdGU9dSxtLng9dithLG0ueT1mK01hdGguc3FydCh2KnYrZCpkKSxtLmN5PWYsbi5jaXJjbGU9bTtmb3IodmFyIHk9bnVsbCxNPWxsLl87TTspaWYobS55PE0ueXx8bS55PT09TS55JiZtLng8PU0ueCl7aWYoIU0uTCl7eT1NLlA7YnJlYWt9TT1NLkx9ZWxzZXtpZighTS5SKXt5PU07YnJlYWt9TT1NLlJ9bGwuaW5zZXJ0KHksbSkseXx8KG9sPW0pfX19fWZ1bmN0aW9uIEJlKG4pe3ZhciB0PW4uY2lyY2xlO3QmJih0LlB8fChvbD10Lk4pLGxsLnJlbW92ZSh0KSxzbC5wdXNoKHQpLHJyKHQpLG4uY2lyY2xlPW51bGwpfWZ1bmN0aW9uIFdlKG4pe2Zvcih2YXIgdCxlPXVsLHI9WXQoblswXVswXSxuWzBdWzFdLG5bMV1bMF0sblsxXVsxXSksdT1lLmxlbmd0aDt1LS07KXQ9ZVt1XSwoIUplKHQsbil8fCFyKHQpfHxNYSh0LmEueC10LmIueCk8UGEmJk1hKHQuYS55LXQuYi55KTxQYSkmJih0LmE9dC5iPW51bGwsZS5zcGxpY2UodSwxKSl9ZnVuY3Rpb24gSmUobix0KXt2YXIgZT1uLmI7aWYoZSlyZXR1cm4hMDt2YXIgcix1LGk9bi5hLGE9dFswXVswXSxvPXRbMV1bMF0sbD10WzBdWzFdLGM9dFsxXVsxXSxzPW4ubCxmPW4ucixoPXMueCxnPXMueSxwPWYueCx2PWYueSxkPShoK3ApLzIsbT0oZyt2KS8yO2lmKHY9PT1nKXtpZihhPmR8fGQ+PW8pcmV0dXJuO2lmKGg+cCl7aWYoaSl7aWYoaS55Pj1jKXJldHVybn1lbHNlIGk9e3g6ZCx5Omx9O2U9e3g6ZCx5OmN9fWVsc2V7aWYoaSl7aWYoaS55PGwpcmV0dXJufWVsc2UgaT17eDpkLHk6Y307ZT17eDpkLHk6bH19fWVsc2UgaWYocj0oaC1wKS8odi1nKSx1PW0tcipkLC0xPnJ8fHI+MSlpZihoPnApe2lmKGkpe2lmKGkueT49YylyZXR1cm59ZWxzZSBpPXt4OihsLXUpL3IseTpsfTtlPXt4OihjLXUpL3IseTpjfX1lbHNle2lmKGkpe2lmKGkueTxsKXJldHVybn1lbHNlIGk9e3g6KGMtdSkvcix5OmN9O2U9e3g6KGwtdSkvcix5Omx9fWVsc2UgaWYodj5nKXtpZihpKXtpZihpLng+PW8pcmV0dXJufWVsc2UgaT17eDphLHk6ciphK3V9O2U9e3g6byx5OnIqbyt1fX1lbHNle2lmKGkpe2lmKGkueDxhKXJldHVybn1lbHNlIGk9e3g6byx5OnIqbyt1fTtlPXt4OmEseTpyKmErdX19cmV0dXJuIG4uYT1pLG4uYj1lLCEwfWZ1bmN0aW9uIEdlKG4sdCl7dGhpcy5sPW4sdGhpcy5yPXQsdGhpcy5hPXRoaXMuYj1udWxsfWZ1bmN0aW9uIEtlKG4sdCxlLHIpe3ZhciB1PW5ldyBHZShuLHQpO3JldHVybiB1bC5wdXNoKHUpLGUmJm5yKHUsbix0LGUpLHImJm5yKHUsdCxuLHIpLGlsW24uaV0uZWRnZXMucHVzaChuZXcgdHIodSxuLHQpKSxpbFt0LmldLmVkZ2VzLnB1c2gobmV3IHRyKHUsdCxuKSksdX1mdW5jdGlvbiBRZShuLHQsZSl7dmFyIHI9bmV3IEdlKG4sbnVsbCk7cmV0dXJuIHIuYT10LHIuYj1lLHVsLnB1c2gocikscn1mdW5jdGlvbiBucihuLHQsZSxyKXtuLmF8fG4uYj9uLmw9PT1lP24uYj1yOm4uYT1yOihuLmE9cixuLmw9dCxuLnI9ZSl9ZnVuY3Rpb24gdHIobix0LGUpe3ZhciByPW4uYSx1PW4uYjt0aGlzLmVkZ2U9bix0aGlzLnNpdGU9dCx0aGlzLmFuZ2xlPWU/TWF0aC5hdGFuMihlLnktdC55LGUueC10LngpOm4ubD09PXQ/TWF0aC5hdGFuMih1Lngtci54LHIueS11LnkpOk1hdGguYXRhbjIoci54LXUueCx1Lnktci55KX1mdW5jdGlvbiBlcigpe3RoaXMuXz1udWxsfWZ1bmN0aW9uIHJyKG4pe24uVT1uLkM9bi5MPW4uUj1uLlA9bi5OPW51bGx9ZnVuY3Rpb24gdXIobix0KXt2YXIgZT10LHI9dC5SLHU9ZS5VO3U/dS5MPT09ZT91Lkw9cjp1LlI9cjpuLl89cixyLlU9dSxlLlU9cixlLlI9ci5MLGUuUiYmKGUuUi5VPWUpLHIuTD1lfWZ1bmN0aW9uIGlyKG4sdCl7dmFyIGU9dCxyPXQuTCx1PWUuVTt1P3UuTD09PWU/dS5MPXI6dS5SPXI6bi5fPXIsci5VPXUsZS5VPXIsZS5MPXIuUixlLkwmJihlLkwuVT1lKSxyLlI9ZX1mdW5jdGlvbiBhcihuKXtmb3IoO24uTDspbj1uLkw7cmV0dXJuIG59ZnVuY3Rpb24gb3Iobix0KXt2YXIgZSxyLHUsaT1uLnNvcnQobHIpLnBvcCgpO2Zvcih1bD1bXSxpbD1uZXcgQXJyYXkobi5sZW5ndGgpLGFsPW5ldyBlcixsbD1uZXcgZXI7OylpZih1PW9sLGkmJighdXx8aS55PHUueXx8aS55PT09dS55JiZpLng8dS54KSkoaS54IT09ZXx8aS55IT09cikmJihpbFtpLmldPW5ldyBZZShpKSxIZShpKSxlPWkueCxyPWkueSksaT1uLnBvcCgpO2Vsc2V7aWYoIXUpYnJlYWs7RmUodS5hcmMpfXQmJihXZSh0KSxaZSh0KSk7dmFyIGE9e2NlbGxzOmlsLGVkZ2VzOnVsfTtyZXR1cm4gYWw9bGw9dWw9aWw9bnVsbCxhfWZ1bmN0aW9uIGxyKG4sdCl7cmV0dXJuIHQueS1uLnl8fHQueC1uLnh9ZnVuY3Rpb24gY3Iobix0LGUpe3JldHVybihuLngtZS54KSoodC55LW4ueSktKG4ueC10LngpKihlLnktbi55KX1mdW5jdGlvbiBzcihuKXtyZXR1cm4gbi54fWZ1bmN0aW9uIGZyKG4pe3JldHVybiBuLnl9ZnVuY3Rpb24gaHIoKXtyZXR1cm57bGVhZjohMCxub2RlczpbXSxwb2ludDpudWxsLHg6bnVsbCx5Om51bGx9fWZ1bmN0aW9uIGdyKG4sdCxlLHIsdSxpKXtpZighbih0LGUscix1LGkpKXt2YXIgYT0uNSooZSt1KSxvPS41KihyK2kpLGw9dC5ub2RlcztsWzBdJiZncihuLGxbMF0sZSxyLGEsbyksbFsxXSYmZ3IobixsWzFdLGEscix1LG8pLGxbMl0mJmdyKG4sbFsyXSxlLG8sYSxpKSxsWzNdJiZncihuLGxbM10sYSxvLHUsaSl9fWZ1bmN0aW9uIHByKG4sdCxlLHIsdSxpLGEpe3ZhciBvLGw9MS8wO3JldHVybiBmdW5jdGlvbiBjKG4scyxmLGgsZyl7aWYoIShzPml8fGY+YXx8cj5ofHx1PmcpKXtpZihwPW4ucG9pbnQpe3ZhciBwLHY9dC1uLngsZD1lLW4ueSxtPXYqditkKmQ7aWYobD5tKXt2YXIgeT1NYXRoLnNxcnQobD1tKTtyPXQteSx1PWUteSxpPXQreSxhPWUreSxvPXB9fWZvcih2YXIgTT1uLm5vZGVzLHg9LjUqKHMraCksYj0uNSooZitnKSxfPXQ+PXgsdz1lPj1iLFM9dzw8MXxfLGs9Uys0O2s+UzsrK1MpaWYobj1NWzMmU10pc3dpdGNoKDMmUyl7Y2FzZSAwOmMobixzLGYseCxiKTticmVhaztjYXNlIDE6YyhuLHgsZixoLGIpO2JyZWFrO2Nhc2UgMjpjKG4scyxiLHgsZyk7YnJlYWs7Y2FzZSAzOmMobix4LGIsaCxnKX19fShuLHIsdSxpLGEpLG99ZnVuY3Rpb24gdnIobix0KXtuPW9hLnJnYihuKSx0PW9hLnJnYih0KTt2YXIgZT1uLnIscj1uLmcsdT1uLmIsaT10LnItZSxhPXQuZy1yLG89dC5iLXU7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVyblwiI1wiK2JuKE1hdGgucm91bmQoZStpKm4pKStibihNYXRoLnJvdW5kKHIrYSpuKSkrYm4oTWF0aC5yb3VuZCh1K28qbikpfX1mdW5jdGlvbiBkcihuLHQpe3ZhciBlLHI9e30sdT17fTtmb3IoZSBpbiBuKWUgaW4gdD9yW2VdPU1yKG5bZV0sdFtlXSk6dVtlXT1uW2VdO2ZvcihlIGluIHQpZSBpbiBufHwodVtlXT10W2VdKTtyZXR1cm4gZnVuY3Rpb24obil7Zm9yKGUgaW4gcil1W2VdPXJbZV0obik7cmV0dXJuIHV9fWZ1bmN0aW9uIG1yKG4sdCl7cmV0dXJuIG49K24sdD0rdCxmdW5jdGlvbihlKXtyZXR1cm4gbiooMS1lKSt0KmV9fWZ1bmN0aW9uIHlyKG4sdCl7dmFyIGUscix1LGk9aGwubGFzdEluZGV4PWdsLmxhc3RJbmRleD0wLGE9LTEsbz1bXSxsPVtdO2ZvcihuKz1cIlwiLHQrPVwiXCI7KGU9aGwuZXhlYyhuKSkmJihyPWdsLmV4ZWModCkpOykodT1yLmluZGV4KT5pJiYodT10LnNsaWNlKGksdSksb1thXT9vW2FdKz11Om9bKythXT11KSwoZT1lWzBdKT09PShyPXJbMF0pP29bYV0/b1thXSs9cjpvWysrYV09cjoob1srK2FdPW51bGwsbC5wdXNoKHtpOmEseDptcihlLHIpfSkpLGk9Z2wubGFzdEluZGV4O3JldHVybiBpPHQubGVuZ3RoJiYodT10LnNsaWNlKGkpLG9bYV0/b1thXSs9dTpvWysrYV09dSksby5sZW5ndGg8Mj9sWzBdPyh0PWxbMF0ueCxmdW5jdGlvbihuKXtyZXR1cm4gdChuKStcIlwifSk6ZnVuY3Rpb24oKXtyZXR1cm4gdH06KHQ9bC5sZW5ndGgsZnVuY3Rpb24obil7Zm9yKHZhciBlLHI9MDt0PnI7KytyKW9bKGU9bFtyXSkuaV09ZS54KG4pO3JldHVybiBvLmpvaW4oXCJcIil9KX1mdW5jdGlvbiBNcihuLHQpe2Zvcih2YXIgZSxyPW9hLmludGVycG9sYXRvcnMubGVuZ3RoOy0tcj49MCYmIShlPW9hLmludGVycG9sYXRvcnNbcl0obix0KSk7KTtyZXR1cm4gZX1mdW5jdGlvbiB4cihuLHQpe3ZhciBlLHI9W10sdT1bXSxpPW4ubGVuZ3RoLGE9dC5sZW5ndGgsbz1NYXRoLm1pbihuLmxlbmd0aCx0Lmxlbmd0aCk7Zm9yKGU9MDtvPmU7KytlKXIucHVzaChNcihuW2VdLHRbZV0pKTtmb3IoO2k+ZTsrK2UpdVtlXT1uW2VdO2Zvcig7YT5lOysrZSl1W2VdPXRbZV07cmV0dXJuIGZ1bmN0aW9uKG4pe2ZvcihlPTA7bz5lOysrZSl1W2VdPXJbZV0obik7cmV0dXJuIHV9fWZ1bmN0aW9uIGJyKG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gMD49dD8wOnQ+PTE/MTpuKHQpfX1mdW5jdGlvbiBfcihuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIDEtbigxLXQpfX1mdW5jdGlvbiB3cihuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuLjUqKC41PnQ/bigyKnQpOjItbigyLTIqdCkpfX1mdW5jdGlvbiBTcihuKXtyZXR1cm4gbipufWZ1bmN0aW9uIGtyKG4pe3JldHVybiBuKm4qbn1mdW5jdGlvbiBOcihuKXtpZigwPj1uKXJldHVybiAwO2lmKG4+PTEpcmV0dXJuIDE7dmFyIHQ9bipuLGU9dCpuO3JldHVybiA0KiguNT5uP2U6Myoobi10KStlLS43NSl9ZnVuY3Rpb24gRXIobil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnBvdyh0LG4pfX1mdW5jdGlvbiBBcihuKXtyZXR1cm4gMS1NYXRoLmNvcyhuKk9hKX1mdW5jdGlvbiBDcihuKXtyZXR1cm4gTWF0aC5wb3coMiwxMCoobi0xKSl9ZnVuY3Rpb24genIobil7cmV0dXJuIDEtTWF0aC5zcXJ0KDEtbipuKX1mdW5jdGlvbiBMcihuLHQpe3ZhciBlO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDImJih0PS40NSksYXJndW1lbnRzLmxlbmd0aD9lPXQvRmEqTWF0aC5hc2luKDEvbik6KG49MSxlPXQvNCksZnVuY3Rpb24ocil7cmV0dXJuIDErbipNYXRoLnBvdygyLC0xMCpyKSpNYXRoLnNpbigoci1lKSpGYS90KX19ZnVuY3Rpb24gcXIobil7cmV0dXJuIG58fChuPTEuNzAxNTgpLGZ1bmN0aW9uKHQpe3JldHVybiB0KnQqKChuKzEpKnQtbil9fWZ1bmN0aW9uIFRyKG4pe3JldHVybiAxLzIuNzU+bj83LjU2MjUqbipuOjIvMi43NT5uPzcuNTYyNSoobi09MS41LzIuNzUpKm4rLjc1OjIuNS8yLjc1Pm4/Ny41NjI1KihuLT0yLjI1LzIuNzUpKm4rLjkzNzU6Ny41NjI1KihuLT0yLjYyNS8yLjc1KSpuKy45ODQzNzV9ZnVuY3Rpb24gUnIobix0KXtuPW9hLmhjbChuKSx0PW9hLmhjbCh0KTt2YXIgZT1uLmgscj1uLmMsdT1uLmwsaT10LmgtZSxhPXQuYy1yLG89dC5sLXU7cmV0dXJuIGlzTmFOKGEpJiYoYT0wLHI9aXNOYU4ocik/dC5jOnIpLGlzTmFOKGkpPyhpPTAsZT1pc05hTihlKT90Lmg6ZSk6aT4xODA/aS09MzYwOi0xODA+aSYmKGkrPTM2MCksZnVuY3Rpb24obil7cmV0dXJuIGZuKGUraSpuLHIrYSpuLHUrbypuKStcIlwifX1mdW5jdGlvbiBEcihuLHQpe249b2EuaHNsKG4pLHQ9b2EuaHNsKHQpO3ZhciBlPW4uaCxyPW4ucyx1PW4ubCxpPXQuaC1lLGE9dC5zLXIsbz10LmwtdTtyZXR1cm4gaXNOYU4oYSkmJihhPTAscj1pc05hTihyKT90LnM6ciksaXNOYU4oaSk/KGk9MCxlPWlzTmFOKGUpP3QuaDplKTppPjE4MD9pLT0zNjA6LTE4MD5pJiYoaSs9MzYwKSxmdW5jdGlvbihuKXtyZXR1cm4gY24oZStpKm4scithKm4sdStvKm4pK1wiXCJ9fWZ1bmN0aW9uIFByKG4sdCl7bj1vYS5sYWIobiksdD1vYS5sYWIodCk7dmFyIGU9bi5sLHI9bi5hLHU9bi5iLGk9dC5sLWUsYT10LmEtcixvPXQuYi11O3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gZ24oZStpKm4scithKm4sdStvKm4pK1wiXCJ9fWZ1bmN0aW9uIFVyKG4sdCl7cmV0dXJuIHQtPW4sZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgucm91bmQobit0KmUpfX1mdW5jdGlvbiBqcihuKXt2YXIgdD1bbi5hLG4uYl0sZT1bbi5jLG4uZF0scj1Icih0KSx1PUZyKHQsZSksaT1IcihPcihlLHQsLXUpKXx8MDt0WzBdKmVbMV08ZVswXSp0WzFdJiYodFswXSo9LTEsdFsxXSo9LTEscio9LTEsdSo9LTEpLHRoaXMucm90YXRlPShyP01hdGguYXRhbjIodFsxXSx0WzBdKTpNYXRoLmF0YW4yKC1lWzBdLGVbMV0pKSpZYSx0aGlzLnRyYW5zbGF0ZT1bbi5lLG4uZl0sdGhpcy5zY2FsZT1bcixpXSx0aGlzLnNrZXc9aT9NYXRoLmF0YW4yKHUsaSkqWWE6MH1mdW5jdGlvbiBGcihuLHQpe3JldHVybiBuWzBdKnRbMF0rblsxXSp0WzFdfWZ1bmN0aW9uIEhyKG4pe3ZhciB0PU1hdGguc3FydChGcihuLG4pKTtyZXR1cm4gdCYmKG5bMF0vPXQsblsxXS89dCksdH1mdW5jdGlvbiBPcihuLHQsZSl7cmV0dXJuIG5bMF0rPWUqdFswXSxuWzFdKz1lKnRbMV0sbn1mdW5jdGlvbiBJcihuKXtyZXR1cm4gbi5sZW5ndGg/bi5wb3AoKStcIixcIjpcIlwifWZ1bmN0aW9uIFlyKG4sdCxlLHIpe2lmKG5bMF0hPT10WzBdfHxuWzFdIT09dFsxXSl7dmFyIHU9ZS5wdXNoKFwidHJhbnNsYXRlKFwiLG51bGwsXCIsXCIsbnVsbCxcIilcIik7ci5wdXNoKHtpOnUtNCx4Om1yKG5bMF0sdFswXSl9LHtpOnUtMix4Om1yKG5bMV0sdFsxXSl9KX1lbHNlKHRbMF18fHRbMV0pJiZlLnB1c2goXCJ0cmFuc2xhdGUoXCIrdCtcIilcIil9ZnVuY3Rpb24gWnIobix0LGUscil7biE9PXQ/KG4tdD4xODA/dCs9MzYwOnQtbj4xODAmJihuKz0zNjApLHIucHVzaCh7aTplLnB1c2goSXIoZSkrXCJyb3RhdGUoXCIsbnVsbCxcIilcIiktMix4Om1yKG4sdCl9KSk6dCYmZS5wdXNoKElyKGUpK1wicm90YXRlKFwiK3QrXCIpXCIpfWZ1bmN0aW9uIFZyKG4sdCxlLHIpe24hPT10P3IucHVzaCh7aTplLnB1c2goSXIoZSkrXCJza2V3WChcIixudWxsLFwiKVwiKS0yLHg6bXIobix0KX0pOnQmJmUucHVzaChJcihlKStcInNrZXdYKFwiK3QrXCIpXCIpfWZ1bmN0aW9uIFhyKG4sdCxlLHIpe2lmKG5bMF0hPT10WzBdfHxuWzFdIT09dFsxXSl7dmFyIHU9ZS5wdXNoKElyKGUpK1wic2NhbGUoXCIsbnVsbCxcIixcIixudWxsLFwiKVwiKTtyLnB1c2goe2k6dS00LHg6bXIoblswXSx0WzBdKX0se2k6dS0yLHg6bXIoblsxXSx0WzFdKX0pfWVsc2UoMSE9PXRbMF18fDEhPT10WzFdKSYmZS5wdXNoKElyKGUpK1wic2NhbGUoXCIrdCtcIilcIil9ZnVuY3Rpb24gJHIobix0KXt2YXIgZT1bXSxyPVtdO3JldHVybiBuPW9hLnRyYW5zZm9ybShuKSx0PW9hLnRyYW5zZm9ybSh0KSxZcihuLnRyYW5zbGF0ZSx0LnRyYW5zbGF0ZSxlLHIpLFpyKG4ucm90YXRlLHQucm90YXRlLGUsciksVnIobi5za2V3LHQuc2tldyxlLHIpLFhyKG4uc2NhbGUsdC5zY2FsZSxlLHIpLG49dD1udWxsLGZ1bmN0aW9uKG4pe2Zvcih2YXIgdCx1PS0xLGk9ci5sZW5ndGg7Kyt1PGk7KWVbKHQ9clt1XSkuaV09dC54KG4pO3JldHVybiBlLmpvaW4oXCJcIil9fWZ1bmN0aW9uIEJyKG4sdCl7cmV0dXJuIHQ9KHQtPW49K24pfHwxL3QsZnVuY3Rpb24oZSl7cmV0dXJuKGUtbikvdH19ZnVuY3Rpb24gV3Iobix0KXtyZXR1cm4gdD0odC09bj0rbil8fDEvdCxmdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5tYXgoMCxNYXRoLm1pbigxLChlLW4pL3QpKX19ZnVuY3Rpb24gSnIobil7Zm9yKHZhciB0PW4uc291cmNlLGU9bi50YXJnZXQscj1Lcih0LGUpLHU9W3RdO3QhPT1yOyl0PXQucGFyZW50LHUucHVzaCh0KTtmb3IodmFyIGk9dS5sZW5ndGg7ZSE9PXI7KXUuc3BsaWNlKGksMCxlKSxlPWUucGFyZW50O3JldHVybiB1fWZ1bmN0aW9uIEdyKG4pe2Zvcih2YXIgdD1bXSxlPW4ucGFyZW50O251bGwhPWU7KXQucHVzaChuKSxuPWUsZT1lLnBhcmVudDtyZXR1cm4gdC5wdXNoKG4pLHR9ZnVuY3Rpb24gS3Iobix0KXtpZihuPT09dClyZXR1cm4gbjtmb3IodmFyIGU9R3Iobikscj1Hcih0KSx1PWUucG9wKCksaT1yLnBvcCgpLGE9bnVsbDt1PT09aTspYT11LHU9ZS5wb3AoKSxpPXIucG9wKCk7cmV0dXJuIGF9ZnVuY3Rpb24gUXIobil7bi5maXhlZHw9Mn1mdW5jdGlvbiBudShuKXtuLmZpeGVkJj0tN31mdW5jdGlvbiB0dShuKXtuLmZpeGVkfD00LG4ucHg9bi54LG4ucHk9bi55fWZ1bmN0aW9uIGV1KG4pe24uZml4ZWQmPS01fWZ1bmN0aW9uIHJ1KG4sdCxlKXt2YXIgcj0wLHU9MDtpZihuLmNoYXJnZT0wLCFuLmxlYWYpZm9yKHZhciBpLGE9bi5ub2RlcyxvPWEubGVuZ3RoLGw9LTE7KytsPG87KWk9YVtsXSxudWxsIT1pJiYocnUoaSx0LGUpLG4uY2hhcmdlKz1pLmNoYXJnZSxyKz1pLmNoYXJnZSppLmN4LHUrPWkuY2hhcmdlKmkuY3kpO2lmKG4ucG9pbnQpe24ubGVhZnx8KG4ucG9pbnQueCs9TWF0aC5yYW5kb20oKS0uNSxuLnBvaW50LnkrPU1hdGgucmFuZG9tKCktLjUpO3ZhciBjPXQqZVtuLnBvaW50LmluZGV4XTtuLmNoYXJnZSs9bi5wb2ludENoYXJnZT1jLHIrPWMqbi5wb2ludC54LHUrPWMqbi5wb2ludC55fW4uY3g9ci9uLmNoYXJnZSxuLmN5PXUvbi5jaGFyZ2V9ZnVuY3Rpb24gdXUobix0KXtyZXR1cm4gb2EucmViaW5kKG4sdCxcInNvcnRcIixcImNoaWxkcmVuXCIsXCJ2YWx1ZVwiKSxuLm5vZGVzPW4sbi5saW5rcz1zdSxufWZ1bmN0aW9uIGl1KG4sdCl7Zm9yKHZhciBlPVtuXTtudWxsIT0obj1lLnBvcCgpKTspaWYodChuKSwodT1uLmNoaWxkcmVuKSYmKHI9dS5sZW5ndGgpKWZvcih2YXIgcix1Oy0tcj49MDspZS5wdXNoKHVbcl0pfWZ1bmN0aW9uIGF1KG4sdCl7Zm9yKHZhciBlPVtuXSxyPVtdO251bGwhPShuPWUucG9wKCkpOylpZihyLnB1c2gobiksKGk9bi5jaGlsZHJlbikmJih1PWkubGVuZ3RoKSlmb3IodmFyIHUsaSxhPS0xOysrYTx1OyllLnB1c2goaVthXSk7Zm9yKDtudWxsIT0obj1yLnBvcCgpKTspdChuKX1mdW5jdGlvbiBvdShuKXtyZXR1cm4gbi5jaGlsZHJlbn1mdW5jdGlvbiBsdShuKXtyZXR1cm4gbi52YWx1ZX1mdW5jdGlvbiBjdShuLHQpe3JldHVybiB0LnZhbHVlLW4udmFsdWV9ZnVuY3Rpb24gc3Uobil7cmV0dXJuIG9hLm1lcmdlKG4ubWFwKGZ1bmN0aW9uKG4pe3JldHVybihuLmNoaWxkcmVufHxbXSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybntzb3VyY2U6bix0YXJnZXQ6dH19KX0pKX1mdW5jdGlvbiBmdShuKXtyZXR1cm4gbi54fWZ1bmN0aW9uIGh1KG4pe3JldHVybiBuLnl9ZnVuY3Rpb24gZ3Uobix0LGUpe24ueTA9dCxuLnk9ZX1mdW5jdGlvbiBwdShuKXtyZXR1cm4gb2EucmFuZ2Uobi5sZW5ndGgpfWZ1bmN0aW9uIHZ1KG4pe2Zvcih2YXIgdD0tMSxlPW5bMF0ubGVuZ3RoLHI9W107Kyt0PGU7KXJbdF09MDtyZXR1cm4gcn1mdW5jdGlvbiBkdShuKXtmb3IodmFyIHQsZT0xLHI9MCx1PW5bMF1bMV0saT1uLmxlbmd0aDtpPmU7KytlKSh0PW5bZV1bMV0pPnUmJihyPWUsdT10KTtyZXR1cm4gcn1mdW5jdGlvbiBtdShuKXtyZXR1cm4gbi5yZWR1Y2UoeXUsMCl9ZnVuY3Rpb24geXUobix0KXtyZXR1cm4gbit0WzFdfWZ1bmN0aW9uIE11KG4sdCl7cmV0dXJuIHh1KG4sTWF0aC5jZWlsKE1hdGgubG9nKHQubGVuZ3RoKS9NYXRoLkxOMisxKSl9ZnVuY3Rpb24geHUobix0KXtmb3IodmFyIGU9LTEscj0rblswXSx1PShuWzFdLXIpL3QsaT1bXTsrK2U8PXQ7KWlbZV09dSplK3I7cmV0dXJuIGl9ZnVuY3Rpb24gYnUobil7cmV0dXJuW29hLm1pbihuKSxvYS5tYXgobildfWZ1bmN0aW9uIF91KG4sdCl7cmV0dXJuIG4udmFsdWUtdC52YWx1ZX1mdW5jdGlvbiB3dShuLHQpe3ZhciBlPW4uX3BhY2tfbmV4dDtuLl9wYWNrX25leHQ9dCx0Ll9wYWNrX3ByZXY9bix0Ll9wYWNrX25leHQ9ZSxlLl9wYWNrX3ByZXY9dH1mdW5jdGlvbiBTdShuLHQpe24uX3BhY2tfbmV4dD10LHQuX3BhY2tfcHJldj1ufWZ1bmN0aW9uIGt1KG4sdCl7dmFyIGU9dC54LW4ueCxyPXQueS1uLnksdT1uLnIrdC5yO3JldHVybi45OTkqdSp1PmUqZStyKnJ9ZnVuY3Rpb24gTnUobil7ZnVuY3Rpb24gdChuKXtzPU1hdGgubWluKG4ueC1uLnIscyksZj1NYXRoLm1heChuLngrbi5yLGYpLGg9TWF0aC5taW4obi55LW4ucixoKSxnPU1hdGgubWF4KG4ueStuLnIsZyl9aWYoKGU9bi5jaGlsZHJlbikmJihjPWUubGVuZ3RoKSl7dmFyIGUscix1LGksYSxvLGwsYyxzPTEvMCxmPS0oMS8wKSxoPTEvMCxnPS0oMS8wKTtpZihlLmZvckVhY2goRXUpLHI9ZVswXSxyLng9LXIucixyLnk9MCx0KHIpLGM+MSYmKHU9ZVsxXSx1Lng9dS5yLHUueT0wLHQodSksYz4yKSlmb3IoaT1lWzJdLHp1KHIsdSxpKSx0KGkpLHd1KHIsaSksci5fcGFja19wcmV2PWksd3UoaSx1KSx1PXIuX3BhY2tfbmV4dCxhPTM7Yz5hO2ErKyl7enUocix1LGk9ZVthXSk7dmFyIHA9MCx2PTEsZD0xO2ZvcihvPXUuX3BhY2tfbmV4dDtvIT09dTtvPW8uX3BhY2tfbmV4dCx2KyspaWYoa3UobyxpKSl7cD0xO2JyZWFrfWlmKDE9PXApZm9yKGw9ci5fcGFja19wcmV2O2whPT1vLl9wYWNrX3ByZXYmJiFrdShsLGkpO2w9bC5fcGFja19wcmV2LGQrKyk7cD8oZD52fHx2PT1kJiZ1LnI8ci5yP1N1KHIsdT1vKTpTdShyPWwsdSksYS0tKTood3UocixpKSx1PWksdChpKSl9dmFyIG09KHMrZikvMix5PShoK2cpLzIsTT0wO2ZvcihhPTA7Yz5hO2ErKylpPWVbYV0saS54LT1tLGkueS09eSxNPU1hdGgubWF4KE0saS5yK01hdGguc3FydChpLngqaS54K2kueSppLnkpKTtuLnI9TSxlLmZvckVhY2goQXUpfX1mdW5jdGlvbiBFdShuKXtuLl9wYWNrX25leHQ9bi5fcGFja19wcmV2PW59ZnVuY3Rpb24gQXUobil7ZGVsZXRlIG4uX3BhY2tfbmV4dCxkZWxldGUgbi5fcGFja19wcmV2fWZ1bmN0aW9uIEN1KG4sdCxlLHIpe3ZhciB1PW4uY2hpbGRyZW47aWYobi54PXQrPXIqbi54LG4ueT1lKz1yKm4ueSxuLnIqPXIsdSlmb3IodmFyIGk9LTEsYT11Lmxlbmd0aDsrK2k8YTspQ3UodVtpXSx0LGUscil9ZnVuY3Rpb24genUobix0LGUpe3ZhciByPW4ucitlLnIsdT10Lngtbi54LGk9dC55LW4ueTtpZihyJiYodXx8aSkpe3ZhciBhPXQucitlLnIsbz11KnUraSppO2EqPWEscio9cjt2YXIgbD0uNSsoci1hKS8oMipvKSxjPU1hdGguc3FydChNYXRoLm1heCgwLDIqYSoocitvKS0oci09bykqci1hKmEpKS8oMipvKTtlLng9bi54K2wqdStjKmksZS55PW4ueStsKmktYyp1fWVsc2UgZS54PW4ueCtyLGUueT1uLnl9ZnVuY3Rpb24gTHUobix0KXtyZXR1cm4gbi5wYXJlbnQ9PXQucGFyZW50PzE6Mn1mdW5jdGlvbiBxdShuKXt2YXIgdD1uLmNoaWxkcmVuO3JldHVybiB0Lmxlbmd0aD90WzBdOm4udH1mdW5jdGlvbiBUdShuKXt2YXIgdCxlPW4uY2hpbGRyZW47cmV0dXJuKHQ9ZS5sZW5ndGgpP2VbdC0xXTpuLnR9ZnVuY3Rpb24gUnUobix0LGUpe3ZhciByPWUvKHQuaS1uLmkpO3QuYy09cix0LnMrPWUsbi5jKz1yLHQueis9ZSx0Lm0rPWV9ZnVuY3Rpb24gRHUobil7Zm9yKHZhciB0LGU9MCxyPTAsdT1uLmNoaWxkcmVuLGk9dS5sZW5ndGg7LS1pPj0wOyl0PXVbaV0sdC56Kz1lLHQubSs9ZSxlKz10LnMrKHIrPXQuYyl9ZnVuY3Rpb24gUHUobix0LGUpe3JldHVybiBuLmEucGFyZW50PT09dC5wYXJlbnQ/bi5hOmV9ZnVuY3Rpb24gVXUobil7cmV0dXJuIDErb2EubWF4KG4sZnVuY3Rpb24obil7cmV0dXJuIG4ueX0pfWZ1bmN0aW9uIGp1KG4pe3JldHVybiBuLnJlZHVjZShmdW5jdGlvbihuLHQpe3JldHVybiBuK3QueH0sMCkvbi5sZW5ndGh9ZnVuY3Rpb24gRnUobil7dmFyIHQ9bi5jaGlsZHJlbjtyZXR1cm4gdCYmdC5sZW5ndGg/RnUodFswXSk6bn1mdW5jdGlvbiBIdShuKXt2YXIgdCxlPW4uY2hpbGRyZW47cmV0dXJuIGUmJih0PWUubGVuZ3RoKT9IdShlW3QtMV0pOm59ZnVuY3Rpb24gT3Uobil7cmV0dXJue3g6bi54LHk6bi55LGR4Om4uZHgsZHk6bi5keX19ZnVuY3Rpb24gSXUobix0KXt2YXIgZT1uLngrdFszXSxyPW4ueSt0WzBdLHU9bi5keC10WzFdLXRbM10saT1uLmR5LXRbMF0tdFsyXTtyZXR1cm4gMD51JiYoZSs9dS8yLHU9MCksMD5pJiYocis9aS8yLGk9MCkse3g6ZSx5OnIsZHg6dSxkeTppfX1mdW5jdGlvbiBZdShuKXt2YXIgdD1uWzBdLGU9bltuLmxlbmd0aC0xXTtyZXR1cm4gZT50P1t0LGVdOltlLHRdfWZ1bmN0aW9uIFp1KG4pe3JldHVybiBuLnJhbmdlRXh0ZW50P24ucmFuZ2VFeHRlbnQoKTpZdShuLnJhbmdlKCkpfWZ1bmN0aW9uIFZ1KG4sdCxlLHIpe3ZhciB1PWUoblswXSxuWzFdKSxpPXIodFswXSx0WzFdKTtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIGkodShuKSl9fWZ1bmN0aW9uIFh1KG4sdCl7dmFyIGUscj0wLHU9bi5sZW5ndGgtMSxpPW5bcl0sYT1uW3VdO3JldHVybiBpPmEmJihlPXIscj11LHU9ZSxlPWksaT1hLGE9ZSksbltyXT10LmZsb29yKGkpLG5bdV09dC5jZWlsKGEpLG59ZnVuY3Rpb24gJHUobil7cmV0dXJuIG4/e2Zsb29yOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmZsb29yKHQvbikqbn0sY2VpbDpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5jZWlsKHQvbikqbn19OlNsfWZ1bmN0aW9uIEJ1KG4sdCxlLHIpe3ZhciB1PVtdLGk9W10sYT0wLG89TWF0aC5taW4obi5sZW5ndGgsdC5sZW5ndGgpLTE7Zm9yKG5bb108blswXSYmKG49bi5zbGljZSgpLnJldmVyc2UoKSx0PXQuc2xpY2UoKS5yZXZlcnNlKCkpOysrYTw9bzspdS5wdXNoKGUoblthLTFdLG5bYV0pKSxpLnB1c2gocih0W2EtMV0sdFthXSkpO3JldHVybiBmdW5jdGlvbih0KXt2YXIgZT1vYS5iaXNlY3Qobix0LDEsbyktMTtyZXR1cm4gaVtlXSh1W2VdKHQpKX19ZnVuY3Rpb24gV3Uobix0LGUscil7ZnVuY3Rpb24gdSgpe3ZhciB1PU1hdGgubWluKG4ubGVuZ3RoLHQubGVuZ3RoKT4yP0J1OlZ1LGw9cj9XcjpCcjtyZXR1cm4gYT11KG4sdCxsLGUpLG89dSh0LG4sbCxNciksaX1mdW5jdGlvbiBpKG4pe3JldHVybiBhKG4pfXZhciBhLG87cmV0dXJuIGkuaW52ZXJ0PWZ1bmN0aW9uKG4pe3JldHVybiBvKG4pfSxpLmRvbWFpbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj10Lm1hcChOdW1iZXIpLHUoKSk6bn0saS5yYW5nZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1uLHUoKSk6dH0saS5yYW5nZVJvdW5kPWZ1bmN0aW9uKG4pe3JldHVybiBpLnJhbmdlKG4pLmludGVycG9sYXRlKFVyKX0saS5jbGFtcD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1uLHUoKSk6cn0saS5pbnRlcnBvbGF0ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1uLHUoKSk6ZX0saS50aWNrcz1mdW5jdGlvbih0KXtyZXR1cm4gUXUobix0KX0saS50aWNrRm9ybWF0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5pKG4sdCxlKX0saS5uaWNlPWZ1bmN0aW9uKHQpe3JldHVybiBHdShuLHQpLHUoKX0saS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIFd1KG4sdCxlLHIpfSx1KCl9ZnVuY3Rpb24gSnUobix0KXtyZXR1cm4gb2EucmViaW5kKG4sdCxcInJhbmdlXCIsXCJyYW5nZVJvdW5kXCIsXCJpbnRlcnBvbGF0ZVwiLFwiY2xhbXBcIil9ZnVuY3Rpb24gR3Uobix0KXtyZXR1cm4gWHUobiwkdShLdShuLHQpWzJdKSksWHUobiwkdShLdShuLHQpWzJdKSksbn1mdW5jdGlvbiBLdShuLHQpe251bGw9PXQmJih0PTEwKTt2YXIgZT1ZdShuKSxyPWVbMV0tZVswXSx1PU1hdGgucG93KDEwLE1hdGguZmxvb3IoTWF0aC5sb2coci90KS9NYXRoLkxOMTApKSxpPXQvcip1O3JldHVybi4xNT49aT91Kj0xMDouMzU+PWk/dSo9NTouNzU+PWkmJih1Kj0yKSxlWzBdPU1hdGguY2VpbChlWzBdL3UpKnUsZVsxXT1NYXRoLmZsb29yKGVbMV0vdSkqdSsuNSp1LGVbMl09dSxlfWZ1bmN0aW9uIFF1KG4sdCl7cmV0dXJuIG9hLnJhbmdlLmFwcGx5KG9hLEt1KG4sdCkpfWZ1bmN0aW9uIG5pKG4sdCxlKXt2YXIgcj1LdShuLHQpO2lmKGUpe3ZhciB1PWZvLmV4ZWMoZSk7aWYodS5zaGlmdCgpLFwic1wiPT09dVs4XSl7dmFyIGk9b2EuZm9ybWF0UHJlZml4KE1hdGgubWF4KE1hKHJbMF0pLE1hKHJbMV0pKSk7cmV0dXJuIHVbN118fCh1WzddPVwiLlwiK3RpKGkuc2NhbGUoclsyXSkpKSx1WzhdPVwiZlwiLGU9b2EuZm9ybWF0KHUuam9pbihcIlwiKSksZnVuY3Rpb24obil7cmV0dXJuIGUoaS5zY2FsZShuKSkraS5zeW1ib2x9fXVbN118fCh1WzddPVwiLlwiK2VpKHVbOF0scikpLGU9dS5qb2luKFwiXCIpfWVsc2UgZT1cIiwuXCIrdGkoclsyXSkrXCJmXCI7cmV0dXJuIG9hLmZvcm1hdChlKX1mdW5jdGlvbiB0aShuKXtyZXR1cm4tTWF0aC5mbG9vcihNYXRoLmxvZyhuKS9NYXRoLkxOMTArLjAxKX1mdW5jdGlvbiBlaShuLHQpe3ZhciBlPXRpKHRbMl0pO3JldHVybiBuIGluIGtsP01hdGguYWJzKGUtdGkoTWF0aC5tYXgoTWEodFswXSksTWEodFsxXSkpKSkrICsoXCJlXCIhPT1uKTplLTIqKFwiJVwiPT09bil9ZnVuY3Rpb24gcmkobix0LGUscil7ZnVuY3Rpb24gdShuKXtyZXR1cm4oZT9NYXRoLmxvZygwPm4/MDpuKTotTWF0aC5sb2cobj4wPzA6LW4pKS9NYXRoLmxvZyh0KX1mdW5jdGlvbiBpKG4pe3JldHVybiBlP01hdGgucG93KHQsbik6LU1hdGgucG93KHQsLW4pfWZ1bmN0aW9uIGEodCl7cmV0dXJuIG4odSh0KSl9cmV0dXJuIGEuaW52ZXJ0PWZ1bmN0aW9uKHQpe3JldHVybiBpKG4uaW52ZXJ0KHQpKX0sYS5kb21haW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9dFswXT49MCxuLmRvbWFpbigocj10Lm1hcChOdW1iZXIpKS5tYXAodSkpLGEpOnJ9LGEuYmFzZT1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD0rZSxuLmRvbWFpbihyLm1hcCh1KSksYSk6dH0sYS5uaWNlPWZ1bmN0aW9uKCl7dmFyIHQ9WHUoci5tYXAodSksZT9NYXRoOkVsKTtyZXR1cm4gbi5kb21haW4odCkscj10Lm1hcChpKSxhfSxhLnRpY2tzPWZ1bmN0aW9uKCl7dmFyIG49WXUociksYT1bXSxvPW5bMF0sbD1uWzFdLGM9TWF0aC5mbG9vcih1KG8pKSxzPU1hdGguY2VpbCh1KGwpKSxmPXQlMT8yOnQ7aWYoaXNGaW5pdGUocy1jKSl7aWYoZSl7Zm9yKDtzPmM7YysrKWZvcih2YXIgaD0xO2Y+aDtoKyspYS5wdXNoKGkoYykqaCk7YS5wdXNoKGkoYykpfWVsc2UgZm9yKGEucHVzaChpKGMpKTtjKys8czspZm9yKHZhciBoPWYtMTtoPjA7aC0tKWEucHVzaChpKGMpKmgpO2ZvcihjPTA7YVtjXTxvO2MrKyk7Zm9yKHM9YS5sZW5ndGg7YVtzLTFdPmw7cy0tKTthPWEuc2xpY2UoYyxzKX1yZXR1cm4gYX0sYS50aWNrRm9ybWF0PWZ1bmN0aW9uKG4sZSl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIE5sO2FyZ3VtZW50cy5sZW5ndGg8Mj9lPU5sOlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJihlPW9hLmZvcm1hdChlKSk7dmFyIHI9TWF0aC5tYXgoMSx0Km4vYS50aWNrcygpLmxlbmd0aCk7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBhPW4vaShNYXRoLnJvdW5kKHUobikpKTtyZXR1cm4gdC0uNT5hKnQmJihhKj10KSxyPj1hP2Uobik6XCJcIn19LGEuY29weT1mdW5jdGlvbigpe3JldHVybiByaShuLmNvcHkoKSx0LGUscil9LEp1KGEsbil9ZnVuY3Rpb24gdWkobix0LGUpe2Z1bmN0aW9uIHIodCl7cmV0dXJuIG4odSh0KSl9dmFyIHU9aWkodCksaT1paSgxL3QpO3JldHVybiByLmludmVydD1mdW5jdGlvbih0KXtyZXR1cm4gaShuLmludmVydCh0KSl9LHIuZG9tYWluPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuLmRvbWFpbigoZT10Lm1hcChOdW1iZXIpKS5tYXAodSkpLHIpOmV9LHIudGlja3M9ZnVuY3Rpb24obil7cmV0dXJuIFF1KGUsbil9LHIudGlja0Zvcm1hdD1mdW5jdGlvbihuLHQpe3JldHVybiBuaShlLG4sdCl9LHIubmljZT1mdW5jdGlvbihuKXtyZXR1cm4gci5kb21haW4oR3UoZSxuKSl9LHIuZXhwb25lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9aWkodD1hKSxpPWlpKDEvdCksbi5kb21haW4oZS5tYXAodSkpLHIpOnR9LHIuY29weT1mdW5jdGlvbigpe3JldHVybiB1aShuLmNvcHkoKSx0LGUpfSxKdShyLG4pfWZ1bmN0aW9uIGlpKG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gMD50Py1NYXRoLnBvdygtdCxuKTpNYXRoLnBvdyh0LG4pfX1mdW5jdGlvbiBhaShuLHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIGlbKCh1LmdldChlKXx8KFwicmFuZ2VcIj09PXQudD91LnNldChlLG4ucHVzaChlKSk6TmFOKSktMSklaS5sZW5ndGhdfWZ1bmN0aW9uIHIodCxlKXtyZXR1cm4gb2EucmFuZ2Uobi5sZW5ndGgpLm1hcChmdW5jdGlvbihuKXtyZXR1cm4gdCtlKm59KX12YXIgdSxpLGE7cmV0dXJuIGUuZG9tYWluPWZ1bmN0aW9uKHIpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBuO249W10sdT1uZXcgYztmb3IodmFyIGksYT0tMSxvPXIubGVuZ3RoOysrYTxvOyl1LmhhcyhpPXJbYV0pfHx1LnNldChpLG4ucHVzaChpKSk7cmV0dXJuIGVbdC50XS5hcHBseShlLHQuYSl9LGUucmFuZ2U9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9bixhPTAsdD17dDpcInJhbmdlXCIsYTphcmd1bWVudHN9LGUpOml9LGUucmFuZ2VQb2ludHM9ZnVuY3Rpb24odSxvKXthcmd1bWVudHMubGVuZ3RoPDImJihvPTApO3ZhciBsPXVbMF0sYz11WzFdLHM9bi5sZW5ndGg8Mj8obD0obCtjKS8yLDApOihjLWwpLyhuLmxlbmd0aC0xK28pO3JldHVybiBpPXIobCtzKm8vMixzKSxhPTAsdD17dDpcInJhbmdlUG9pbnRzXCIsYTphcmd1bWVudHN9LGV9LGUucmFuZ2VSb3VuZFBvaW50cz1mdW5jdGlvbih1LG8pe2FyZ3VtZW50cy5sZW5ndGg8MiYmKG89MCk7dmFyIGw9dVswXSxjPXVbMV0scz1uLmxlbmd0aDwyPyhsPWM9TWF0aC5yb3VuZCgobCtjKS8yKSwwKTooYy1sKS8obi5sZW5ndGgtMStvKXwwO3JldHVybiBpPXIobCtNYXRoLnJvdW5kKHMqby8yKyhjLWwtKG4ubGVuZ3RoLTErbykqcykvMikscyksYT0wLHQ9e3Q6XCJyYW5nZVJvdW5kUG9pbnRzXCIsYTphcmd1bWVudHN9LGV9LGUucmFuZ2VCYW5kcz1mdW5jdGlvbih1LG8sbCl7YXJndW1lbnRzLmxlbmd0aDwyJiYobz0wKSxhcmd1bWVudHMubGVuZ3RoPDMmJihsPW8pO3ZhciBjPXVbMV08dVswXSxzPXVbYy0wXSxmPXVbMS1jXSxoPShmLXMpLyhuLmxlbmd0aC1vKzIqbCk7cmV0dXJuIGk9cihzK2gqbCxoKSxjJiZpLnJldmVyc2UoKSxhPWgqKDEtbyksdD17dDpcInJhbmdlQmFuZHNcIixhOmFyZ3VtZW50c30sZX0sZS5yYW5nZVJvdW5kQmFuZHM9ZnVuY3Rpb24odSxvLGwpe2FyZ3VtZW50cy5sZW5ndGg8MiYmKG89MCksYXJndW1lbnRzLmxlbmd0aDwzJiYobD1vKTt2YXIgYz11WzFdPHVbMF0scz11W2MtMF0sZj11WzEtY10saD1NYXRoLmZsb29yKChmLXMpLyhuLmxlbmd0aC1vKzIqbCkpO3JldHVybiBpPXIocytNYXRoLnJvdW5kKChmLXMtKG4ubGVuZ3RoLW8pKmgpLzIpLGgpLGMmJmkucmV2ZXJzZSgpLGE9TWF0aC5yb3VuZChoKigxLW8pKSx0PXt0OlwicmFuZ2VSb3VuZEJhbmRzXCIsYTphcmd1bWVudHN9LGV9LGUucmFuZ2VCYW5kPWZ1bmN0aW9uKCl7cmV0dXJuIGF9LGUucmFuZ2VFeHRlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gWXUodC5hWzBdKX0sZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGFpKG4sdCl9LGUuZG9tYWluKG4pfWZ1bmN0aW9uIG9pKG4sdCl7ZnVuY3Rpb24gaSgpe3ZhciBlPTAscj10Lmxlbmd0aDtmb3Iobz1bXTsrK2U8cjspb1tlLTFdPW9hLnF1YW50aWxlKG4sZS9yKTtyZXR1cm4gYX1mdW5jdGlvbiBhKG4pe3JldHVybiBpc05hTihuPStuKT92b2lkIDA6dFtvYS5iaXNlY3QobyxuKV19dmFyIG87cmV0dXJuIGEuZG9tYWluPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPXQubWFwKHIpLmZpbHRlcih1KS5zb3J0KGUpLGkoKSk6bn0sYS5yYW5nZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1uLGkoKSk6dH0sYS5xdWFudGlsZXM9ZnVuY3Rpb24oKXtyZXR1cm4gb30sYS5pbnZlcnRFeHRlbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9dC5pbmRleE9mKGUpLDA+ZT9bTmFOLE5hTl06W2U+MD9vW2UtMV06blswXSxlPG8ubGVuZ3RoP29bZV06bltuLmxlbmd0aC0xXV19LGEuY29weT1mdW5jdGlvbigpe3JldHVybiBvaShuLHQpfSxpKCl9ZnVuY3Rpb24gbGkobix0LGUpe2Z1bmN0aW9uIHIodCl7cmV0dXJuIGVbTWF0aC5tYXgoMCxNYXRoLm1pbihhLE1hdGguZmxvb3IoaSoodC1uKSkpKV19ZnVuY3Rpb24gdSgpe3JldHVybiBpPWUubGVuZ3RoLyh0LW4pLGE9ZS5sZW5ndGgtMSxyfXZhciBpLGE7cmV0dXJuIHIuZG9tYWluPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPStlWzBdLHQ9K2VbZS5sZW5ndGgtMV0sdSgpKTpbbix0XX0sci5yYW5nZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1uLHUoKSk6ZX0sci5pbnZlcnRFeHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9ZS5pbmRleE9mKHQpLHQ9MD50P05hTjp0L2krbixbdCx0KzEvaV19LHIuY29weT1mdW5jdGlvbigpe3JldHVybiBsaShuLHQsZSl9LHUoKX1mdW5jdGlvbiBjaShuLHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIGU+PWU/dFtvYS5iaXNlY3QobixlKV06dm9pZCAwfXJldHVybiBlLmRvbWFpbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj10LGUpOm59LGUucmFuZ2U9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9bixlKTp0fSxlLmludmVydEV4dGVudD1mdW5jdGlvbihlKXtyZXR1cm4gZT10LmluZGV4T2YoZSksW25bZS0xXSxuW2VdXX0sZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGNpKG4sdCl9LGV9ZnVuY3Rpb24gc2kobil7ZnVuY3Rpb24gdChuKXtyZXR1cm4rbn1yZXR1cm4gdC5pbnZlcnQ9dCx0LmRvbWFpbj10LnJhbmdlPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPWUubWFwKHQpLHQpOm59LHQudGlja3M9ZnVuY3Rpb24odCl7cmV0dXJuIFF1KG4sdCl9LHQudGlja0Zvcm1hdD1mdW5jdGlvbih0LGUpe3JldHVybiBuaShuLHQsZSl9LHQuY29weT1mdW5jdGlvbigpe3JldHVybiBzaShuKX0sdH1mdW5jdGlvbiBmaSgpe3JldHVybiAwfWZ1bmN0aW9uIGhpKG4pe3JldHVybiBuLmlubmVyUmFkaXVzfWZ1bmN0aW9uIGdpKG4pe3JldHVybiBuLm91dGVyUmFkaXVzfWZ1bmN0aW9uIHBpKG4pe3JldHVybiBuLnN0YXJ0QW5nbGV9ZnVuY3Rpb24gdmkobil7cmV0dXJuIG4uZW5kQW5nbGV9ZnVuY3Rpb24gZGkobil7cmV0dXJuIG4mJm4ucGFkQW5nbGV9ZnVuY3Rpb24gbWkobix0LGUscil7cmV0dXJuKG4tZSkqdC0odC1yKSpuPjA/MDoxfWZ1bmN0aW9uIHlpKG4sdCxlLHIsdSl7dmFyIGk9blswXS10WzBdLGE9blsxXS10WzFdLG89KHU/cjotcikvTWF0aC5zcXJ0KGkqaSthKmEpLGw9byphLGM9LW8qaSxzPW5bMF0rbCxmPW5bMV0rYyxoPXRbMF0rbCxnPXRbMV0rYyxwPShzK2gpLzIsdj0oZitnKS8yLGQ9aC1zLG09Zy1mLHk9ZCpkK20qbSxNPWUtcix4PXMqZy1oKmYsYj0oMD5tPy0xOjEpKk1hdGguc3FydChNYXRoLm1heCgwLE0qTSp5LXgqeCkpLF89KHgqbS1kKmIpL3ksdz0oLXgqZC1tKmIpL3ksUz0oeCptK2QqYikveSxrPSgteCpkK20qYikveSxOPV8tcCxFPXctdixBPVMtcCxDPWstdjtyZXR1cm4gTipOK0UqRT5BKkErQypDJiYoXz1TLHc9ayksW1tfLWwsdy1jXSxbXyplL00sdyplL01dXX1mdW5jdGlvbiBNaShuKXtmdW5jdGlvbiB0KHQpe2Z1bmN0aW9uIGEoKXtjLnB1c2goXCJNXCIsaShuKHMpLG8pKX1mb3IodmFyIGwsYz1bXSxzPVtdLGY9LTEsaD10Lmxlbmd0aCxnPUVuKGUpLHA9RW4ocik7KytmPGg7KXUuY2FsbCh0aGlzLGw9dFtmXSxmKT9zLnB1c2goWytnLmNhbGwodGhpcyxsLGYpLCtwLmNhbGwodGhpcyxsLGYpXSk6cy5sZW5ndGgmJihhKCkscz1bXSk7cmV0dXJuIHMubGVuZ3RoJiZhKCksYy5sZW5ndGg/Yy5qb2luKFwiXCIpOm51bGx9dmFyIGU9Q2Uscj16ZSx1PXp0LGk9eGksYT1pLmtleSxvPS43O3JldHVybiB0Lng9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9bix0KTplfSx0Lnk9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9bix0KTpyfSx0LmRlZmluZWQ9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9bix0KTp1fSx0LmludGVycG9sYXRlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/aT1uOihpPVRsLmdldChuKXx8eGkpLmtleSx0KTphfSx0LnRlbnNpb249ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89bix0KTpvfSx0fWZ1bmN0aW9uIHhpKG4pe3JldHVybiBuLmxlbmd0aD4xP24uam9pbihcIkxcIik6bitcIlpcIn1mdW5jdGlvbiBiaShuKXtyZXR1cm4gbi5qb2luKFwiTFwiKStcIlpcIn1mdW5jdGlvbiBfaShuKXtmb3IodmFyIHQ9MCxlPW4ubGVuZ3RoLHI9blswXSx1PVtyWzBdLFwiLFwiLHJbMV1dOysrdDxlOyl1LnB1c2goXCJIXCIsKHJbMF0rKHI9blt0XSlbMF0pLzIsXCJWXCIsclsxXSk7cmV0dXJuIGU+MSYmdS5wdXNoKFwiSFwiLHJbMF0pLHUuam9pbihcIlwiKX1mdW5jdGlvbiB3aShuKXtmb3IodmFyIHQ9MCxlPW4ubGVuZ3RoLHI9blswXSx1PVtyWzBdLFwiLFwiLHJbMV1dOysrdDxlOyl1LnB1c2goXCJWXCIsKHI9blt0XSlbMV0sXCJIXCIsclswXSk7cmV0dXJuIHUuam9pbihcIlwiKX1mdW5jdGlvbiBTaShuKXtmb3IodmFyIHQ9MCxlPW4ubGVuZ3RoLHI9blswXSx1PVtyWzBdLFwiLFwiLHJbMV1dOysrdDxlOyl1LnB1c2goXCJIXCIsKHI9blt0XSlbMF0sXCJWXCIsclsxXSk7cmV0dXJuIHUuam9pbihcIlwiKX1mdW5jdGlvbiBraShuLHQpe3JldHVybiBuLmxlbmd0aDw0P3hpKG4pOm5bMV0rQWkobi5zbGljZSgxLC0xKSxDaShuLHQpKX1mdW5jdGlvbiBOaShuLHQpe3JldHVybiBuLmxlbmd0aDwzP2JpKG4pOm5bMF0rQWkoKG4ucHVzaChuWzBdKSxuKSxDaShbbltuLmxlbmd0aC0yXV0uY29uY2F0KG4sW25bMV1dKSx0KSl9ZnVuY3Rpb24gRWkobix0KXtyZXR1cm4gbi5sZW5ndGg8Mz94aShuKTpuWzBdK0FpKG4sQ2kobix0KSl9ZnVuY3Rpb24gQWkobix0KXtpZih0Lmxlbmd0aDwxfHxuLmxlbmd0aCE9dC5sZW5ndGgmJm4ubGVuZ3RoIT10Lmxlbmd0aCsyKXJldHVybiB4aShuKTt2YXIgZT1uLmxlbmd0aCE9dC5sZW5ndGgscj1cIlwiLHU9blswXSxpPW5bMV0sYT10WzBdLG89YSxsPTE7aWYoZSYmKHIrPVwiUVwiKyhpWzBdLTIqYVswXS8zKStcIixcIisoaVsxXS0yKmFbMV0vMykrXCIsXCIraVswXStcIixcIitpWzFdLHU9blsxXSxsPTIpLHQubGVuZ3RoPjEpe289dFsxXSxpPW5bbF0sbCsrLHIrPVwiQ1wiKyh1WzBdK2FbMF0pK1wiLFwiKyh1WzFdK2FbMV0pK1wiLFwiKyhpWzBdLW9bMF0pK1wiLFwiKyhpWzFdLW9bMV0pK1wiLFwiK2lbMF0rXCIsXCIraVsxXTtmb3IodmFyIGM9MjtjPHQubGVuZ3RoO2MrKyxsKyspaT1uW2xdLG89dFtjXSxyKz1cIlNcIisoaVswXS1vWzBdKStcIixcIisoaVsxXS1vWzFdKStcIixcIitpWzBdK1wiLFwiK2lbMV19aWYoZSl7dmFyIHM9bltsXTtyKz1cIlFcIisoaVswXSsyKm9bMF0vMykrXCIsXCIrKGlbMV0rMipvWzFdLzMpK1wiLFwiK3NbMF0rXCIsXCIrc1sxXX1yZXR1cm4gcn1mdW5jdGlvbiBDaShuLHQpe2Zvcih2YXIgZSxyPVtdLHU9KDEtdCkvMixpPW5bMF0sYT1uWzFdLG89MSxsPW4ubGVuZ3RoOysrbzxsOyllPWksaT1hLGE9bltvXSxyLnB1c2goW3UqKGFbMF0tZVswXSksdSooYVsxXS1lWzFdKV0pO3JldHVybiByfWZ1bmN0aW9uIHppKG4pe2lmKG4ubGVuZ3RoPDMpcmV0dXJuIHhpKG4pO3ZhciB0PTEsZT1uLmxlbmd0aCxyPW5bMF0sdT1yWzBdLGk9clsxXSxhPVt1LHUsdSwocj1uWzFdKVswXV0sbz1baSxpLGksclsxXV0sbD1bdSxcIixcIixpLFwiTFwiLFJpKFBsLGEpLFwiLFwiLFJpKFBsLG8pXTtmb3Iobi5wdXNoKG5bZS0xXSk7Kyt0PD1lOylyPW5bdF0sYS5zaGlmdCgpLGEucHVzaChyWzBdKSxvLnNoaWZ0KCksby5wdXNoKHJbMV0pLERpKGwsYSxvKTtyZXR1cm4gbi5wb3AoKSxsLnB1c2goXCJMXCIsciksbC5qb2luKFwiXCIpfWZ1bmN0aW9uIExpKG4pe2lmKG4ubGVuZ3RoPDQpcmV0dXJuIHhpKG4pO2Zvcih2YXIgdCxlPVtdLHI9LTEsdT1uLmxlbmd0aCxpPVswXSxhPVswXTsrK3I8MzspdD1uW3JdLGkucHVzaCh0WzBdKSxhLnB1c2godFsxXSk7Zm9yKGUucHVzaChSaShQbCxpKStcIixcIitSaShQbCxhKSksLS1yOysrcjx1Oyl0PW5bcl0saS5zaGlmdCgpLGkucHVzaCh0WzBdKSxhLnNoaWZ0KCksYS5wdXNoKHRbMV0pLERpKGUsaSxhKTtyZXR1cm4gZS5qb2luKFwiXCIpfWZ1bmN0aW9uIHFpKG4pe2Zvcih2YXIgdCxlLHI9LTEsdT1uLmxlbmd0aCxpPXUrNCxhPVtdLG89W107KytyPDQ7KWU9bltyJXVdLGEucHVzaChlWzBdKSxvLnB1c2goZVsxXSk7Zm9yKHQ9W1JpKFBsLGEpLFwiLFwiLFJpKFBsLG8pXSwtLXI7KytyPGk7KWU9bltyJXVdLGEuc2hpZnQoKSxhLnB1c2goZVswXSksby5zaGlmdCgpLG8ucHVzaChlWzFdKSxEaSh0LGEsbyk7cmV0dXJuIHQuam9pbihcIlwiKX1mdW5jdGlvbiBUaShuLHQpe3ZhciBlPW4ubGVuZ3RoLTE7aWYoZSlmb3IodmFyIHIsdSxpPW5bMF1bMF0sYT1uWzBdWzFdLG89bltlXVswXS1pLGw9bltlXVsxXS1hLGM9LTE7KytjPD1lOylyPW5bY10sdT1jL2UsclswXT10KnJbMF0rKDEtdCkqKGkrdSpvKSxyWzFdPXQqclsxXSsoMS10KSooYSt1KmwpO3JldHVybiB6aShuKX1mdW5jdGlvbiBSaShuLHQpe3JldHVybiBuWzBdKnRbMF0rblsxXSp0WzFdK25bMl0qdFsyXStuWzNdKnRbM119ZnVuY3Rpb24gRGkobix0LGUpe24ucHVzaChcIkNcIixSaShSbCx0KSxcIixcIixSaShSbCxlKSxcIixcIixSaShEbCx0KSxcIixcIixSaShEbCxlKSxcIixcIixSaShQbCx0KSxcIixcIixSaShQbCxlKSl9ZnVuY3Rpb24gUGkobix0KXtyZXR1cm4odFsxXS1uWzFdKS8odFswXS1uWzBdKX1mdW5jdGlvbiBVaShuKXtmb3IodmFyIHQ9MCxlPW4ubGVuZ3RoLTEscj1bXSx1PW5bMF0saT1uWzFdLGE9clswXT1QaSh1LGkpOysrdDxlOylyW3RdPShhKyhhPVBpKHU9aSxpPW5bdCsxXSkpKS8yO3JldHVybiByW3RdPWEscn1mdW5jdGlvbiBqaShuKXtmb3IodmFyIHQsZSxyLHUsaT1bXSxhPVVpKG4pLG89LTEsbD1uLmxlbmd0aC0xOysrbzxsOyl0PVBpKG5bb10sbltvKzFdKSxNYSh0KTxQYT9hW29dPWFbbysxXT0wOihlPWFbb10vdCxyPWFbbysxXS90LHU9ZSplK3Iqcix1PjkmJih1PTMqdC9NYXRoLnNxcnQodSksYVtvXT11KmUsYVtvKzFdPXUqcikpO2ZvcihvPS0xOysrbzw9bDspdT0obltNYXRoLm1pbihsLG8rMSldWzBdLW5bTWF0aC5tYXgoMCxvLTEpXVswXSkvKDYqKDErYVtvXSphW29dKSksaS5wdXNoKFt1fHwwLGFbb10qdXx8MF0pO3JldHVybiBpfWZ1bmN0aW9uIEZpKG4pe3JldHVybiBuLmxlbmd0aDwzP3hpKG4pOm5bMF0rQWkobixqaShuKSl9ZnVuY3Rpb24gSGkobil7Zm9yKHZhciB0LGUscix1PS0xLGk9bi5sZW5ndGg7Kyt1PGk7KXQ9blt1XSxlPXRbMF0scj10WzFdLU9hLHRbMF09ZSpNYXRoLmNvcyhyKSx0WzFdPWUqTWF0aC5zaW4ocik7cmV0dXJuIG59ZnVuY3Rpb24gT2kobil7ZnVuY3Rpb24gdCh0KXtmdW5jdGlvbiBsKCl7di5wdXNoKFwiTVwiLG8obihtKSxmKSxzLGMobihkLnJldmVyc2UoKSksZiksXCJaXCIpfWZvcih2YXIgaCxnLHAsdj1bXSxkPVtdLG09W10seT0tMSxNPXQubGVuZ3RoLHg9RW4oZSksYj1Fbih1KSxfPWU9PT1yP2Z1bmN0aW9uKCl7XG5yZXR1cm4gZ306RW4ociksdz11PT09aT9mdW5jdGlvbigpe3JldHVybiBwfTpFbihpKTsrK3k8TTspYS5jYWxsKHRoaXMsaD10W3ldLHkpPyhkLnB1c2goW2c9K3guY2FsbCh0aGlzLGgseSkscD0rYi5jYWxsKHRoaXMsaCx5KV0pLG0ucHVzaChbK18uY2FsbCh0aGlzLGgseSksK3cuY2FsbCh0aGlzLGgseSldKSk6ZC5sZW5ndGgmJihsKCksZD1bXSxtPVtdKTtyZXR1cm4gZC5sZW5ndGgmJmwoKSx2Lmxlbmd0aD92LmpvaW4oXCJcIik6bnVsbH12YXIgZT1DZSxyPUNlLHU9MCxpPXplLGE9enQsbz14aSxsPW8ua2V5LGM9byxzPVwiTFwiLGY9Ljc7cmV0dXJuIHQueD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1yPW4sdCk6cn0sdC54MD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1uLHQpOmV9LHQueDE9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9bix0KTpyfSx0Lnk9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9aT1uLHQpOml9LHQueTA9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9bix0KTp1fSx0LnkxPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPW4sdCk6aX0sdC5kZWZpbmVkPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPW4sdCk6YX0sdC5pbnRlcnBvbGF0ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP289bjoobz1UbC5nZXQobil8fHhpKS5rZXksYz1vLnJldmVyc2V8fG8scz1vLmNsb3NlZD9cIk1cIjpcIkxcIix0KTpsfSx0LnRlbnNpb249ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9bix0KTpmfSx0fWZ1bmN0aW9uIElpKG4pe3JldHVybiBuLnJhZGl1c31mdW5jdGlvbiBZaShuKXtyZXR1cm5bbi54LG4ueV19ZnVuY3Rpb24gWmkobil7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyksZT10WzBdLHI9dFsxXS1PYTtyZXR1cm5bZSpNYXRoLmNvcyhyKSxlKk1hdGguc2luKHIpXX19ZnVuY3Rpb24gVmkoKXtyZXR1cm4gNjR9ZnVuY3Rpb24gWGkoKXtyZXR1cm5cImNpcmNsZVwifWZ1bmN0aW9uICRpKG4pe3ZhciB0PU1hdGguc3FydChuL2phKTtyZXR1cm5cIk0wLFwiK3QrXCJBXCIrdCtcIixcIit0K1wiIDAgMSwxIDAsXCIrLXQrXCJBXCIrdCtcIixcIit0K1wiIDAgMSwxIDAsXCIrdCtcIlpcIn1mdW5jdGlvbiBCaShuKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdCxlLHI7KHQ9dGhpc1tuXSkmJihyPXRbZT10LmFjdGl2ZV0pJiYoci50aW1lci5jPW51bGwsci50aW1lci50PU5hTiwtLXQuY291bnQ/ZGVsZXRlIHRbZV06ZGVsZXRlIHRoaXNbbl0sdC5hY3RpdmUrPS41LHIuZXZlbnQmJnIuZXZlbnQuaW50ZXJydXB0LmNhbGwodGhpcyx0aGlzLl9fZGF0YV9fLHIuaW5kZXgpKX19ZnVuY3Rpb24gV2kobix0LGUpe3JldHVybiBTYShuLFlsKSxuLm5hbWVzcGFjZT10LG4uaWQ9ZSxufWZ1bmN0aW9uIEppKG4sdCxlLHIpe3ZhciB1PW4uaWQsaT1uLm5hbWVzcGFjZTtyZXR1cm4gWShuLFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZnVuY3Rpb24obixhLG8pe25baV1bdV0udHdlZW4uc2V0KHQscihlLmNhbGwobixuLl9fZGF0YV9fLGEsbykpKX06KGU9cihlKSxmdW5jdGlvbihuKXtuW2ldW3VdLnR3ZWVuLnNldCh0LGUpfSkpfWZ1bmN0aW9uIEdpKG4pe3JldHVybiBudWxsPT1uJiYobj1cIlwiKSxmdW5jdGlvbigpe3RoaXMudGV4dENvbnRlbnQ9bn19ZnVuY3Rpb24gS2kobil7cmV0dXJuIG51bGw9PW4/XCJfX3RyYW5zaXRpb25fX1wiOlwiX190cmFuc2l0aW9uX1wiK24rXCJfX1wifWZ1bmN0aW9uIFFpKG4sdCxlLHIsdSl7ZnVuY3Rpb24gaShuKXt2YXIgdD12LmRlbGF5O3JldHVybiBzLnQ9dCtsLG4+PXQ/YShuLXQpOnZvaWQocy5jPWEpfWZ1bmN0aW9uIGEoZSl7dmFyIHU9cC5hY3RpdmUsaT1wW3VdO2kmJihpLnRpbWVyLmM9bnVsbCxpLnRpbWVyLnQ9TmFOLC0tcC5jb3VudCxkZWxldGUgcFt1XSxpLmV2ZW50JiZpLmV2ZW50LmludGVycnVwdC5jYWxsKG4sbi5fX2RhdGFfXyxpLmluZGV4KSk7Zm9yKHZhciBhIGluIHApaWYocj4rYSl7dmFyIGM9cFthXTtjLnRpbWVyLmM9bnVsbCxjLnRpbWVyLnQ9TmFOLC0tcC5jb3VudCxkZWxldGUgcFthXX1zLmM9byxxbihmdW5jdGlvbigpe3JldHVybiBzLmMmJm8oZXx8MSkmJihzLmM9bnVsbCxzLnQ9TmFOKSwxfSwwLGwpLHAuYWN0aXZlPXIsdi5ldmVudCYmdi5ldmVudC5zdGFydC5jYWxsKG4sbi5fX2RhdGFfXyx0KSxnPVtdLHYudHdlZW4uZm9yRWFjaChmdW5jdGlvbihlLHIpeyhyPXIuY2FsbChuLG4uX19kYXRhX18sdCkpJiZnLnB1c2gocil9KSxoPXYuZWFzZSxmPXYuZHVyYXRpb259ZnVuY3Rpb24gbyh1KXtmb3IodmFyIGk9dS9mLGE9aChpKSxvPWcubGVuZ3RoO28+MDspZ1stLW9dLmNhbGwobixhKTtyZXR1cm4gaT49MT8odi5ldmVudCYmdi5ldmVudC5lbmQuY2FsbChuLG4uX19kYXRhX18sdCksLS1wLmNvdW50P2RlbGV0ZSBwW3JdOmRlbGV0ZSBuW2VdLDEpOnZvaWQgMH12YXIgbCxzLGYsaCxnLHA9bltlXXx8KG5bZV09e2FjdGl2ZTowLGNvdW50OjB9KSx2PXBbcl07dnx8KGw9dS50aW1lLHM9cW4oaSwwLGwpLHY9cFtyXT17dHdlZW46bmV3IGMsdGltZTpsLHRpbWVyOnMsZGVsYXk6dS5kZWxheSxkdXJhdGlvbjp1LmR1cmF0aW9uLGVhc2U6dS5lYXNlLGluZGV4OnR9LHU9bnVsbCwrK3AuY291bnQpfWZ1bmN0aW9uIG5hKG4sdCxlKXtuLmF0dHIoXCJ0cmFuc2Zvcm1cIixmdW5jdGlvbihuKXt2YXIgcj10KG4pO3JldHVyblwidHJhbnNsYXRlKFwiKyhpc0Zpbml0ZShyKT9yOmUobikpK1wiLDApXCJ9KX1mdW5jdGlvbiB0YShuLHQsZSl7bi5hdHRyKFwidHJhbnNmb3JtXCIsZnVuY3Rpb24obil7dmFyIHI9dChuKTtyZXR1cm5cInRyYW5zbGF0ZSgwLFwiKyhpc0Zpbml0ZShyKT9yOmUobikpK1wiKVwifSl9ZnVuY3Rpb24gZWEobil7cmV0dXJuIG4udG9JU09TdHJpbmcoKX1mdW5jdGlvbiByYShuLHQsZSl7ZnVuY3Rpb24gcih0KXtyZXR1cm4gbih0KX1mdW5jdGlvbiB1KG4sZSl7dmFyIHI9blsxXS1uWzBdLHU9ci9lLGk9b2EuYmlzZWN0KEtsLHUpO3JldHVybiBpPT1LbC5sZW5ndGg/W3QueWVhcixLdShuLm1hcChmdW5jdGlvbihuKXtyZXR1cm4gbi8zMTUzNmU2fSksZSlbMl1dOmk/dFt1L0tsW2ktMV08S2xbaV0vdT9pLTE6aV06W3RjLEt1KG4sZSlbMl1dfXJldHVybiByLmludmVydD1mdW5jdGlvbih0KXtyZXR1cm4gdWEobi5pbnZlcnQodCkpfSxyLmRvbWFpbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obi5kb21haW4odCkscik6bi5kb21haW4oKS5tYXAodWEpfSxyLm5pY2U9ZnVuY3Rpb24obix0KXtmdW5jdGlvbiBlKGUpe3JldHVybiFpc05hTihlKSYmIW4ucmFuZ2UoZSx1YSgrZSsxKSx0KS5sZW5ndGh9dmFyIGk9ci5kb21haW4oKSxhPVl1KGkpLG89bnVsbD09bj91KGEsMTApOlwibnVtYmVyXCI9PXR5cGVvZiBuJiZ1KGEsbik7cmV0dXJuIG8mJihuPW9bMF0sdD1vWzFdKSxyLmRvbWFpbihYdShpLHQ+MT97Zmxvb3I6ZnVuY3Rpb24odCl7Zm9yKDtlKHQ9bi5mbG9vcih0KSk7KXQ9dWEodC0xKTtyZXR1cm4gdH0sY2VpbDpmdW5jdGlvbih0KXtmb3IoO2UodD1uLmNlaWwodCkpOyl0PXVhKCt0KzEpO3JldHVybiB0fX06bikpfSxyLnRpY2tzPWZ1bmN0aW9uKG4sdCl7dmFyIGU9WXUoci5kb21haW4oKSksaT1udWxsPT1uP3UoZSwxMCk6XCJudW1iZXJcIj09dHlwZW9mIG4/dShlLG4pOiFuLnJhbmdlJiZbe3JhbmdlOm59LHRdO3JldHVybiBpJiYobj1pWzBdLHQ9aVsxXSksbi5yYW5nZShlWzBdLHVhKCtlWzFdKzEpLDE+dD8xOnQpfSxyLnRpY2tGb3JtYXQ9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sci5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIHJhKG4uY29weSgpLHQsZSl9LEp1KHIsbil9ZnVuY3Rpb24gdWEobil7cmV0dXJuIG5ldyBEYXRlKG4pfWZ1bmN0aW9uIGlhKG4pe3JldHVybiBKU09OLnBhcnNlKG4ucmVzcG9uc2VUZXh0KX1mdW5jdGlvbiBhYShuKXt2YXIgdD1zYS5jcmVhdGVSYW5nZSgpO3JldHVybiB0LnNlbGVjdE5vZGUoc2EuYm9keSksdC5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQobi5yZXNwb25zZVRleHQpfXZhciBvYT17dmVyc2lvbjpcIjMuNS4xNlwifSxsYT1bXS5zbGljZSxjYT1mdW5jdGlvbihuKXtyZXR1cm4gbGEuY2FsbChuKX0sc2E9dGhpcy5kb2N1bWVudDtpZihzYSl0cnl7Y2Eoc2EuZG9jdW1lbnRFbGVtZW50LmNoaWxkTm9kZXMpWzBdLm5vZGVUeXBlfWNhdGNoKGZhKXtjYT1mdW5jdGlvbihuKXtmb3IodmFyIHQ9bi5sZW5ndGgsZT1uZXcgQXJyYXkodCk7dC0tOyllW3RdPW5bdF07cmV0dXJuIGV9fWlmKERhdGUubm93fHwoRGF0ZS5ub3c9ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9KSxzYSl0cnl7c2EuY3JlYXRlRWxlbWVudChcIkRJVlwiKS5zdHlsZS5zZXRQcm9wZXJ0eShcIm9wYWNpdHlcIiwwLFwiXCIpfWNhdGNoKGhhKXt2YXIgZ2E9dGhpcy5FbGVtZW50LnByb3RvdHlwZSxwYT1nYS5zZXRBdHRyaWJ1dGUsdmE9Z2Euc2V0QXR0cmlidXRlTlMsZGE9dGhpcy5DU1NTdHlsZURlY2xhcmF0aW9uLnByb3RvdHlwZSxtYT1kYS5zZXRQcm9wZXJ0eTtnYS5zZXRBdHRyaWJ1dGU9ZnVuY3Rpb24obix0KXtwYS5jYWxsKHRoaXMsbix0K1wiXCIpfSxnYS5zZXRBdHRyaWJ1dGVOUz1mdW5jdGlvbihuLHQsZSl7dmEuY2FsbCh0aGlzLG4sdCxlK1wiXCIpfSxkYS5zZXRQcm9wZXJ0eT1mdW5jdGlvbihuLHQsZSl7bWEuY2FsbCh0aGlzLG4sdCtcIlwiLGUpfX1vYS5hc2NlbmRpbmc9ZSxvYS5kZXNjZW5kaW5nPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4+dD8tMTp0Pm4/MTp0Pj1uPzA6TmFOfSxvYS5taW49ZnVuY3Rpb24obix0KXt2YXIgZSxyLHU9LTEsaT1uLmxlbmd0aDtpZigxPT09YXJndW1lbnRzLmxlbmd0aCl7Zm9yKDsrK3U8aTspaWYobnVsbCE9KHI9blt1XSkmJnI+PXIpe2U9cjticmVha31mb3IoOysrdTxpOyludWxsIT0ocj1uW3VdKSYmZT5yJiYoZT1yKX1lbHNle2Zvcig7Kyt1PGk7KWlmKG51bGwhPShyPXQuY2FsbChuLG5bdV0sdSkpJiZyPj1yKXtlPXI7YnJlYWt9Zm9yKDsrK3U8aTspbnVsbCE9KHI9dC5jYWxsKG4sblt1XSx1KSkmJmU+ciYmKGU9cil9cmV0dXJuIGV9LG9hLm1heD1mdW5jdGlvbihuLHQpe3ZhciBlLHIsdT0tMSxpPW4ubGVuZ3RoO2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXtmb3IoOysrdTxpOylpZihudWxsIT0ocj1uW3VdKSYmcj49cil7ZT1yO2JyZWFrfWZvcig7Kyt1PGk7KW51bGwhPShyPW5bdV0pJiZyPmUmJihlPXIpfWVsc2V7Zm9yKDsrK3U8aTspaWYobnVsbCE9KHI9dC5jYWxsKG4sblt1XSx1KSkmJnI+PXIpe2U9cjticmVha31mb3IoOysrdTxpOyludWxsIT0ocj10LmNhbGwobixuW3VdLHUpKSYmcj5lJiYoZT1yKX1yZXR1cm4gZX0sb2EuZXh0ZW50PWZ1bmN0aW9uKG4sdCl7dmFyIGUscix1LGk9LTEsYT1uLmxlbmd0aDtpZigxPT09YXJndW1lbnRzLmxlbmd0aCl7Zm9yKDsrK2k8YTspaWYobnVsbCE9KHI9bltpXSkmJnI+PXIpe2U9dT1yO2JyZWFrfWZvcig7KytpPGE7KW51bGwhPShyPW5baV0pJiYoZT5yJiYoZT1yKSxyPnUmJih1PXIpKX1lbHNle2Zvcig7KytpPGE7KWlmKG51bGwhPShyPXQuY2FsbChuLG5baV0saSkpJiZyPj1yKXtlPXU9cjticmVha31mb3IoOysraTxhOyludWxsIT0ocj10LmNhbGwobixuW2ldLGkpKSYmKGU+ciYmKGU9cikscj51JiYodT1yKSl9cmV0dXJuW2UsdV19LG9hLnN1bT1mdW5jdGlvbihuLHQpe3ZhciBlLHI9MCxpPW4ubGVuZ3RoLGE9LTE7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpZm9yKDsrK2E8aTspdShlPStuW2FdKSYmKHIrPWUpO2Vsc2UgZm9yKDsrK2E8aTspdShlPSt0LmNhbGwobixuW2FdLGEpKSYmKHIrPWUpO3JldHVybiByfSxvYS5tZWFuPWZ1bmN0aW9uKG4sdCl7dmFyIGUsaT0wLGE9bi5sZW5ndGgsbz0tMSxsPWE7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpZm9yKDsrK288YTspdShlPXIobltvXSkpP2krPWU6LS1sO2Vsc2UgZm9yKDsrK288YTspdShlPXIodC5jYWxsKG4sbltvXSxvKSkpP2krPWU6LS1sO3JldHVybiBsP2kvbDp2b2lkIDB9LG9hLnF1YW50aWxlPWZ1bmN0aW9uKG4sdCl7dmFyIGU9KG4ubGVuZ3RoLTEpKnQrMSxyPU1hdGguZmxvb3IoZSksdT0rbltyLTFdLGk9ZS1yO3JldHVybiBpP3UraSoobltyXS11KTp1fSxvYS5tZWRpYW49ZnVuY3Rpb24obix0KXt2YXIgaSxhPVtdLG89bi5sZW5ndGgsbD0tMTtpZigxPT09YXJndW1lbnRzLmxlbmd0aClmb3IoOysrbDxvOyl1KGk9cihuW2xdKSkmJmEucHVzaChpKTtlbHNlIGZvcig7KytsPG87KXUoaT1yKHQuY2FsbChuLG5bbF0sbCkpKSYmYS5wdXNoKGkpO3JldHVybiBhLmxlbmd0aD9vYS5xdWFudGlsZShhLnNvcnQoZSksLjUpOnZvaWQgMH0sb2EudmFyaWFuY2U9ZnVuY3Rpb24obix0KXt2YXIgZSxpLGE9bi5sZW5ndGgsbz0wLGw9MCxjPS0xLHM9MDtpZigxPT09YXJndW1lbnRzLmxlbmd0aClmb3IoOysrYzxhOyl1KGU9cihuW2NdKSkmJihpPWUtbyxvKz1pLysrcyxsKz1pKihlLW8pKTtlbHNlIGZvcig7KytjPGE7KXUoZT1yKHQuY2FsbChuLG5bY10sYykpKSYmKGk9ZS1vLG8rPWkvKytzLGwrPWkqKGUtbykpO3JldHVybiBzPjE/bC8ocy0xKTp2b2lkIDB9LG9hLmRldmlhdGlvbj1mdW5jdGlvbigpe3ZhciBuPW9hLnZhcmlhbmNlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gbj9NYXRoLnNxcnQobik6bn07dmFyIHlhPWkoZSk7b2EuYmlzZWN0TGVmdD15YS5sZWZ0LG9hLmJpc2VjdD1vYS5iaXNlY3RSaWdodD15YS5yaWdodCxvYS5iaXNlY3Rvcj1mdW5jdGlvbihuKXtyZXR1cm4gaSgxPT09bi5sZW5ndGg/ZnVuY3Rpb24odCxyKXtyZXR1cm4gZShuKHQpLHIpfTpuKX0sb2Euc2h1ZmZsZT1mdW5jdGlvbihuLHQsZSl7KGk9YXJndW1lbnRzLmxlbmd0aCk8MyYmKGU9bi5sZW5ndGgsMj5pJiYodD0wKSk7Zm9yKHZhciByLHUsaT1lLXQ7aTspdT1NYXRoLnJhbmRvbSgpKmktLXwwLHI9bltpK3RdLG5baSt0XT1uW3UrdF0sblt1K3RdPXI7cmV0dXJuIG59LG9hLnBlcm11dGU9ZnVuY3Rpb24obix0KXtmb3IodmFyIGU9dC5sZW5ndGgscj1uZXcgQXJyYXkoZSk7ZS0tOylyW2VdPW5bdFtlXV07cmV0dXJuIHJ9LG9hLnBhaXJzPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdCxlPTAscj1uLmxlbmd0aC0xLHU9blswXSxpPW5ldyBBcnJheSgwPnI/MDpyKTtyPmU7KWlbZV09W3Q9dSx1PW5bKytlXV07cmV0dXJuIGl9LG9hLnRyYW5zcG9zZT1mdW5jdGlvbihuKXtpZighKHU9bi5sZW5ndGgpKXJldHVybltdO2Zvcih2YXIgdD0tMSxlPW9hLm1pbihuLGEpLHI9bmV3IEFycmF5KGUpOysrdDxlOylmb3IodmFyIHUsaT0tMSxvPXJbdF09bmV3IEFycmF5KHUpOysraTx1OylvW2ldPW5baV1bdF07cmV0dXJuIHJ9LG9hLnppcD1mdW5jdGlvbigpe3JldHVybiBvYS50cmFuc3Bvc2UoYXJndW1lbnRzKX0sb2Eua2V5cz1mdW5jdGlvbihuKXt2YXIgdD1bXTtmb3IodmFyIGUgaW4gbil0LnB1c2goZSk7cmV0dXJuIHR9LG9hLnZhbHVlcz1mdW5jdGlvbihuKXt2YXIgdD1bXTtmb3IodmFyIGUgaW4gbil0LnB1c2gobltlXSk7cmV0dXJuIHR9LG9hLmVudHJpZXM9ZnVuY3Rpb24obil7dmFyIHQ9W107Zm9yKHZhciBlIGluIG4pdC5wdXNoKHtrZXk6ZSx2YWx1ZTpuW2VdfSk7cmV0dXJuIHR9LG9hLm1lcmdlPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdCxlLHIsdT1uLmxlbmd0aCxpPS0xLGE9MDsrK2k8dTspYSs9bltpXS5sZW5ndGg7Zm9yKGU9bmV3IEFycmF5KGEpOy0tdT49MDspZm9yKHI9blt1XSx0PXIubGVuZ3RoOy0tdD49MDspZVstLWFdPXJbdF07cmV0dXJuIGV9O3ZhciBNYT1NYXRoLmFicztvYS5yYW5nZT1mdW5jdGlvbihuLHQsZSl7aWYoYXJndW1lbnRzLmxlbmd0aDwzJiYoZT0xLGFyZ3VtZW50cy5sZW5ndGg8MiYmKHQ9bixuPTApKSwodC1uKS9lPT09MS8wKXRocm93IG5ldyBFcnJvcihcImluZmluaXRlIHJhbmdlXCIpO3ZhciByLHU9W10saT1vKE1hKGUpKSxhPS0xO2lmKG4qPWksdCo9aSxlKj1pLDA+ZSlmb3IoOyhyPW4rZSorK2EpPnQ7KXUucHVzaChyL2kpO2Vsc2UgZm9yKDsocj1uK2UqKythKTx0Oyl1LnB1c2goci9pKTtyZXR1cm4gdX0sb2EubWFwPWZ1bmN0aW9uKG4sdCl7dmFyIGU9bmV3IGM7aWYobiBpbnN0YW5jZW9mIGMpbi5mb3JFYWNoKGZ1bmN0aW9uKG4sdCl7ZS5zZXQobix0KX0pO2Vsc2UgaWYoQXJyYXkuaXNBcnJheShuKSl7dmFyIHIsdT0tMSxpPW4ubGVuZ3RoO2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKWZvcig7Kyt1PGk7KWUuc2V0KHUsblt1XSk7ZWxzZSBmb3IoOysrdTxpOyllLnNldCh0LmNhbGwobixyPW5bdV0sdSkscil9ZWxzZSBmb3IodmFyIGEgaW4gbillLnNldChhLG5bYV0pO3JldHVybiBlfTt2YXIgeGE9XCJfX3Byb3RvX19cIixiYT1cIlxceDAwXCI7bChjLHtoYXM6aCxnZXQ6ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuX1tzKG4pXX0sc2V0OmZ1bmN0aW9uKG4sdCl7cmV0dXJuIHRoaXMuX1tzKG4pXT10fSxyZW1vdmU6ZyxrZXlzOnAsdmFsdWVzOmZ1bmN0aW9uKCl7dmFyIG49W107Zm9yKHZhciB0IGluIHRoaXMuXyluLnB1c2godGhpcy5fW3RdKTtyZXR1cm4gbn0sZW50cmllczpmdW5jdGlvbigpe3ZhciBuPVtdO2Zvcih2YXIgdCBpbiB0aGlzLl8pbi5wdXNoKHtrZXk6Zih0KSx2YWx1ZTp0aGlzLl9bdF19KTtyZXR1cm4gbn0sc2l6ZTp2LGVtcHR5OmQsZm9yRWFjaDpmdW5jdGlvbihuKXtmb3IodmFyIHQgaW4gdGhpcy5fKW4uY2FsbCh0aGlzLGYodCksdGhpcy5fW3RdKX19KSxvYS5uZXN0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbih0LGEsbyl7aWYobz49aS5sZW5ndGgpcmV0dXJuIHI/ci5jYWxsKHUsYSk6ZT9hLnNvcnQoZSk6YTtmb3IodmFyIGwscyxmLGgsZz0tMSxwPWEubGVuZ3RoLHY9aVtvKytdLGQ9bmV3IGM7KytnPHA7KShoPWQuZ2V0KGw9dihzPWFbZ10pKSk/aC5wdXNoKHMpOmQuc2V0KGwsW3NdKTtyZXR1cm4gdD8ocz10KCksZj1mdW5jdGlvbihlLHIpe3Muc2V0KGUsbih0LHIsbykpfSk6KHM9e30sZj1mdW5jdGlvbihlLHIpe3NbZV09bih0LHIsbyl9KSxkLmZvckVhY2goZiksc31mdW5jdGlvbiB0KG4sZSl7aWYoZT49aS5sZW5ndGgpcmV0dXJuIG47dmFyIHI9W10sdT1hW2UrK107cmV0dXJuIG4uZm9yRWFjaChmdW5jdGlvbihuLHUpe3IucHVzaCh7a2V5Om4sdmFsdWVzOnQodSxlKX0pfSksdT9yLnNvcnQoZnVuY3Rpb24obix0KXtyZXR1cm4gdShuLmtleSx0LmtleSl9KTpyfXZhciBlLHIsdT17fSxpPVtdLGE9W107cmV0dXJuIHUubWFwPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG4oZSx0LDApfSx1LmVudHJpZXM9ZnVuY3Rpb24oZSl7cmV0dXJuIHQobihvYS5tYXAsZSwwKSwwKX0sdS5rZXk9ZnVuY3Rpb24obil7cmV0dXJuIGkucHVzaChuKSx1fSx1LnNvcnRLZXlzPWZ1bmN0aW9uKG4pe3JldHVybiBhW2kubGVuZ3RoLTFdPW4sdX0sdS5zb3J0VmFsdWVzPWZ1bmN0aW9uKG4pe3JldHVybiBlPW4sdX0sdS5yb2xsdXA9ZnVuY3Rpb24obil7cmV0dXJuIHI9bix1fSx1fSxvYS5zZXQ9ZnVuY3Rpb24obil7dmFyIHQ9bmV3IG07aWYobilmb3IodmFyIGU9MCxyPW4ubGVuZ3RoO3I+ZTsrK2UpdC5hZGQobltlXSk7cmV0dXJuIHR9LGwobSx7aGFzOmgsYWRkOmZ1bmN0aW9uKG4pe3JldHVybiB0aGlzLl9bcyhuKz1cIlwiKV09ITAsbn0scmVtb3ZlOmcsdmFsdWVzOnAsc2l6ZTp2LGVtcHR5OmQsZm9yRWFjaDpmdW5jdGlvbihuKXtmb3IodmFyIHQgaW4gdGhpcy5fKW4uY2FsbCh0aGlzLGYodCkpfX0pLG9hLmJlaGF2aW9yPXt9LG9hLnJlYmluZD1mdW5jdGlvbihuLHQpe2Zvcih2YXIgZSxyPTEsdT1hcmd1bWVudHMubGVuZ3RoOysrcjx1OyluW2U9YXJndW1lbnRzW3JdXT1NKG4sdCx0W2VdKTtyZXR1cm4gbn07dmFyIF9hPVtcIndlYmtpdFwiLFwibXNcIixcIm1velwiLFwiTW96XCIsXCJvXCIsXCJPXCJdO29hLmRpc3BhdGNoPWZ1bmN0aW9uKCl7Zm9yKHZhciBuPW5ldyBfLHQ9LTEsZT1hcmd1bWVudHMubGVuZ3RoOysrdDxlOyluW2FyZ3VtZW50c1t0XV09dyhuKTtyZXR1cm4gbn0sXy5wcm90b3R5cGUub249ZnVuY3Rpb24obix0KXt2YXIgZT1uLmluZGV4T2YoXCIuXCIpLHI9XCJcIjtpZihlPj0wJiYocj1uLnNsaWNlKGUrMSksbj1uLnNsaWNlKDAsZSkpLG4pcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8Mj90aGlzW25dLm9uKHIpOnRoaXNbbl0ub24ocix0KTtpZigyPT09YXJndW1lbnRzLmxlbmd0aCl7aWYobnVsbD09dClmb3IobiBpbiB0aGlzKXRoaXMuaGFzT3duUHJvcGVydHkobikmJnRoaXNbbl0ub24ocixudWxsKTtyZXR1cm4gdGhpc319LG9hLmV2ZW50PW51bGwsb2EucmVxdW90ZT1mdW5jdGlvbihuKXtyZXR1cm4gbi5yZXBsYWNlKHdhLFwiXFxcXCQmXCIpfTt2YXIgd2E9L1tcXFxcXFxeXFwkXFwqXFwrXFw/XFx8XFxbXFxdXFwoXFwpXFwuXFx7XFx9XS9nLFNhPXt9Ll9fcHJvdG9fXz9mdW5jdGlvbihuLHQpe24uX19wcm90b19fPXR9OmZ1bmN0aW9uKG4sdCl7Zm9yKHZhciBlIGluIHQpbltlXT10W2VdfSxrYT1mdW5jdGlvbihuLHQpe3JldHVybiB0LnF1ZXJ5U2VsZWN0b3Iobil9LE5hPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIHQucXVlcnlTZWxlY3RvckFsbChuKX0sRWE9ZnVuY3Rpb24obix0KXt2YXIgZT1uLm1hdGNoZXN8fG5beChuLFwibWF0Y2hlc1NlbGVjdG9yXCIpXTtyZXR1cm4oRWE9ZnVuY3Rpb24obix0KXtyZXR1cm4gZS5jYWxsKG4sdCl9KShuLHQpfTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBTaXp6bGUmJihrYT1mdW5jdGlvbihuLHQpe3JldHVybiBTaXp6bGUobix0KVswXXx8bnVsbH0sTmE9U2l6emxlLEVhPVNpenpsZS5tYXRjaGVzU2VsZWN0b3IpLG9hLnNlbGVjdGlvbj1mdW5jdGlvbigpe3JldHVybiBvYS5zZWxlY3Qoc2EuZG9jdW1lbnRFbGVtZW50KX07dmFyIEFhPW9hLnNlbGVjdGlvbi5wcm90b3R5cGU9W107QWEuc2VsZWN0PWZ1bmN0aW9uKG4pe3ZhciB0LGUscix1LGk9W107bj1BKG4pO2Zvcih2YXIgYT0tMSxvPXRoaXMubGVuZ3RoOysrYTxvOyl7aS5wdXNoKHQ9W10pLHQucGFyZW50Tm9kZT0ocj10aGlzW2FdKS5wYXJlbnROb2RlO2Zvcih2YXIgbD0tMSxjPXIubGVuZ3RoOysrbDxjOykodT1yW2xdKT8odC5wdXNoKGU9bi5jYWxsKHUsdS5fX2RhdGFfXyxsLGEpKSxlJiZcIl9fZGF0YV9fXCJpbiB1JiYoZS5fX2RhdGFfXz11Ll9fZGF0YV9fKSk6dC5wdXNoKG51bGwpfXJldHVybiBFKGkpfSxBYS5zZWxlY3RBbGw9ZnVuY3Rpb24obil7dmFyIHQsZSxyPVtdO249QyhuKTtmb3IodmFyIHU9LTEsaT10aGlzLmxlbmd0aDsrK3U8aTspZm9yKHZhciBhPXRoaXNbdV0sbz0tMSxsPWEubGVuZ3RoOysrbzxsOykoZT1hW29dKSYmKHIucHVzaCh0PWNhKG4uY2FsbChlLGUuX19kYXRhX18sbyx1KSkpLHQucGFyZW50Tm9kZT1lKTtyZXR1cm4gRShyKX07dmFyIENhPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLHphPXtzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLHhodG1sOkNhLHhsaW5rOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLHhtbDpcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLHhtbG5zOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cIn07b2EubnM9e3ByZWZpeDp6YSxxdWFsaWZ5OmZ1bmN0aW9uKG4pe3ZhciB0PW4uaW5kZXhPZihcIjpcIiksZT1uO3JldHVybiB0Pj0wJiZcInhtbG5zXCIhPT0oZT1uLnNsaWNlKDAsdCkpJiYobj1uLnNsaWNlKHQrMSkpLHphLmhhc093blByb3BlcnR5KGUpP3tzcGFjZTp6YVtlXSxsb2NhbDpufTpufX0sQWEuYXR0cj1mdW5jdGlvbihuLHQpe2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4pe3ZhciBlPXRoaXMubm9kZSgpO3JldHVybiBuPW9hLm5zLnF1YWxpZnkobiksbi5sb2NhbD9lLmdldEF0dHJpYnV0ZU5TKG4uc3BhY2Usbi5sb2NhbCk6ZS5nZXRBdHRyaWJ1dGUobil9Zm9yKHQgaW4gbil0aGlzLmVhY2goeih0LG5bdF0pKTtyZXR1cm4gdGhpc31yZXR1cm4gdGhpcy5lYWNoKHoobix0KSl9LEFhLmNsYXNzZWQ9ZnVuY3Rpb24obix0KXtpZihhcmd1bWVudHMubGVuZ3RoPDIpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBuKXt2YXIgZT10aGlzLm5vZGUoKSxyPShuPVQobikpLmxlbmd0aCx1PS0xO2lmKHQ9ZS5jbGFzc0xpc3Qpe2Zvcig7Kyt1PHI7KWlmKCF0LmNvbnRhaW5zKG5bdV0pKXJldHVybiExfWVsc2UgZm9yKHQ9ZS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKTsrK3U8cjspaWYoIXEoblt1XSkudGVzdCh0KSlyZXR1cm4hMTtyZXR1cm4hMH1mb3IodCBpbiBuKXRoaXMuZWFjaChSKHQsblt0XSkpO3JldHVybiB0aGlzfXJldHVybiB0aGlzLmVhY2goUihuLHQpKX0sQWEuc3R5bGU9ZnVuY3Rpb24obixlLHIpe3ZhciB1PWFyZ3VtZW50cy5sZW5ndGg7aWYoMz51KXtpZihcInN0cmluZ1wiIT10eXBlb2Ygbil7Mj51JiYoZT1cIlwiKTtmb3IociBpbiBuKXRoaXMuZWFjaChQKHIsbltyXSxlKSk7cmV0dXJuIHRoaXN9aWYoMj51KXt2YXIgaT10aGlzLm5vZGUoKTtyZXR1cm4gdChpKS5nZXRDb21wdXRlZFN0eWxlKGksbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShuKX1yPVwiXCJ9cmV0dXJuIHRoaXMuZWFjaChQKG4sZSxyKSl9LEFhLnByb3BlcnR5PWZ1bmN0aW9uKG4sdCl7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXtpZihcInN0cmluZ1wiPT10eXBlb2YgbilyZXR1cm4gdGhpcy5ub2RlKClbbl07Zm9yKHQgaW4gbil0aGlzLmVhY2goVSh0LG5bdF0pKTtyZXR1cm4gdGhpc31yZXR1cm4gdGhpcy5lYWNoKFUobix0KSl9LEFhLnRleHQ9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lYWNoKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4/ZnVuY3Rpb24oKXt2YXIgdD1uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnRleHRDb250ZW50PW51bGw9PXQ/XCJcIjp0fTpudWxsPT1uP2Z1bmN0aW9uKCl7dGhpcy50ZXh0Q29udGVudD1cIlwifTpmdW5jdGlvbigpe3RoaXMudGV4dENvbnRlbnQ9bn0pOnRoaXMubm9kZSgpLnRleHRDb250ZW50fSxBYS5odG1sPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuZWFjaChcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP2Z1bmN0aW9uKCl7dmFyIHQ9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5pbm5lckhUTUw9bnVsbD09dD9cIlwiOnR9Om51bGw9PW4/ZnVuY3Rpb24oKXt0aGlzLmlubmVySFRNTD1cIlwifTpmdW5jdGlvbigpe3RoaXMuaW5uZXJIVE1MPW59KTp0aGlzLm5vZGUoKS5pbm5lckhUTUx9LEFhLmFwcGVuZD1mdW5jdGlvbihuKXtyZXR1cm4gbj1qKG4pLHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXBwZW5kQ2hpbGQobi5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSl9LEFhLmluc2VydD1mdW5jdGlvbihuLHQpe3JldHVybiBuPWoobiksdD1BKHQpLHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5zZXJ0QmVmb3JlKG4uYXBwbHkodGhpcyxhcmd1bWVudHMpLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHxudWxsKX0pfSxBYS5yZW1vdmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lYWNoKEYpfSxBYS5kYXRhPWZ1bmN0aW9uKG4sdCl7ZnVuY3Rpb24gZShuLGUpe3ZhciByLHUsaSxhPW4ubGVuZ3RoLGY9ZS5sZW5ndGgsaD1NYXRoLm1pbihhLGYpLGc9bmV3IEFycmF5KGYpLHA9bmV3IEFycmF5KGYpLHY9bmV3IEFycmF5KGEpO2lmKHQpe3ZhciBkLG09bmV3IGMseT1uZXcgQXJyYXkoYSk7Zm9yKHI9LTE7KytyPGE7KSh1PW5bcl0pJiYobS5oYXMoZD10LmNhbGwodSx1Ll9fZGF0YV9fLHIpKT92W3JdPXU6bS5zZXQoZCx1KSx5W3JdPWQpO2ZvcihyPS0xOysrcjxmOykodT1tLmdldChkPXQuY2FsbChlLGk9ZVtyXSxyKSkpP3UhPT0hMCYmKGdbcl09dSx1Ll9fZGF0YV9fPWkpOnBbcl09SChpKSxtLnNldChkLCEwKTtmb3Iocj0tMTsrK3I8YTspciBpbiB5JiZtLmdldCh5W3JdKSE9PSEwJiYodltyXT1uW3JdKX1lbHNle2ZvcihyPS0xOysrcjxoOyl1PW5bcl0saT1lW3JdLHU/KHUuX19kYXRhX189aSxnW3JdPXUpOnBbcl09SChpKTtmb3IoO2Y+cjsrK3IpcFtyXT1IKGVbcl0pO2Zvcig7YT5yOysrcil2W3JdPW5bcl19cC51cGRhdGU9ZyxwLnBhcmVudE5vZGU9Zy5wYXJlbnROb2RlPXYucGFyZW50Tm9kZT1uLnBhcmVudE5vZGUsby5wdXNoKHApLGwucHVzaChnKSxzLnB1c2godil9dmFyIHIsdSxpPS0xLGE9dGhpcy5sZW5ndGg7aWYoIWFyZ3VtZW50cy5sZW5ndGgpe2ZvcihuPW5ldyBBcnJheShhPShyPXRoaXNbMF0pLmxlbmd0aCk7KytpPGE7KSh1PXJbaV0pJiYobltpXT11Ll9fZGF0YV9fKTtyZXR1cm4gbn12YXIgbz1aKFtdKSxsPUUoW10pLHM9RShbXSk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygbilmb3IoOysraTxhOyllKHI9dGhpc1tpXSxuLmNhbGwocixyLnBhcmVudE5vZGUuX19kYXRhX18saSkpO2Vsc2UgZm9yKDsrK2k8YTspZShyPXRoaXNbaV0sbik7cmV0dXJuIGwuZW50ZXI9ZnVuY3Rpb24oKXtyZXR1cm4gb30sbC5leGl0PWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGx9LEFhLmRhdHVtPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiLG4pOnRoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiKX0sQWEuZmlsdGVyPWZ1bmN0aW9uKG4pe3ZhciB0LGUscix1PVtdO1wiZnVuY3Rpb25cIiE9dHlwZW9mIG4mJihuPU8obikpO2Zvcih2YXIgaT0wLGE9dGhpcy5sZW5ndGg7YT5pO2krKyl7dS5wdXNoKHQ9W10pLHQucGFyZW50Tm9kZT0oZT10aGlzW2ldKS5wYXJlbnROb2RlO2Zvcih2YXIgbz0wLGw9ZS5sZW5ndGg7bD5vO28rKykocj1lW29dKSYmbi5jYWxsKHIsci5fX2RhdGFfXyxvLGkpJiZ0LnB1c2gocil9cmV0dXJuIEUodSl9LEFhLm9yZGVyPWZ1bmN0aW9uKCl7Zm9yKHZhciBuPS0xLHQ9dGhpcy5sZW5ndGg7KytuPHQ7KWZvcih2YXIgZSxyPXRoaXNbbl0sdT1yLmxlbmd0aC0xLGk9clt1XTstLXU+PTA7KShlPXJbdV0pJiYoaSYmaSE9PWUubmV4dFNpYmxpbmcmJmkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZSxpKSxpPWUpO3JldHVybiB0aGlzfSxBYS5zb3J0PWZ1bmN0aW9uKG4pe249SS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7Zm9yKHZhciB0PS0xLGU9dGhpcy5sZW5ndGg7Kyt0PGU7KXRoaXNbdF0uc29ydChuKTtyZXR1cm4gdGhpcy5vcmRlcigpfSxBYS5lYWNoPWZ1bmN0aW9uKG4pe3JldHVybiBZKHRoaXMsZnVuY3Rpb24odCxlLHIpe24uY2FsbCh0LHQuX19kYXRhX18sZSxyKX0pfSxBYS5jYWxsPWZ1bmN0aW9uKG4pe3ZhciB0PWNhKGFyZ3VtZW50cyk7cmV0dXJuIG4uYXBwbHkodFswXT10aGlzLHQpLHRoaXN9LEFhLmVtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMubm9kZSgpfSxBYS5ub2RlPWZ1bmN0aW9uKCl7Zm9yKHZhciBuPTAsdD10aGlzLmxlbmd0aDt0Pm47bisrKWZvcih2YXIgZT10aGlzW25dLHI9MCx1PWUubGVuZ3RoO3U+cjtyKyspe3ZhciBpPWVbcl07aWYoaSlyZXR1cm4gaX1yZXR1cm4gbnVsbH0sQWEuc2l6ZT1mdW5jdGlvbigpe3ZhciBuPTA7cmV0dXJuIFkodGhpcyxmdW5jdGlvbigpeysrbn0pLG59O3ZhciBMYT1bXTtvYS5zZWxlY3Rpb24uZW50ZXI9WixvYS5zZWxlY3Rpb24uZW50ZXIucHJvdG90eXBlPUxhLExhLmFwcGVuZD1BYS5hcHBlbmQsTGEuZW1wdHk9QWEuZW1wdHksTGEubm9kZT1BYS5ub2RlLExhLmNhbGw9QWEuY2FsbCxMYS5zaXplPUFhLnNpemUsTGEuc2VsZWN0PWZ1bmN0aW9uKG4pe2Zvcih2YXIgdCxlLHIsdSxpLGE9W10sbz0tMSxsPXRoaXMubGVuZ3RoOysrbzxsOyl7cj0odT10aGlzW29dKS51cGRhdGUsYS5wdXNoKHQ9W10pLHQucGFyZW50Tm9kZT11LnBhcmVudE5vZGU7Zm9yKHZhciBjPS0xLHM9dS5sZW5ndGg7KytjPHM7KShpPXVbY10pPyh0LnB1c2gocltjXT1lPW4uY2FsbCh1LnBhcmVudE5vZGUsaS5fX2RhdGFfXyxjLG8pKSxlLl9fZGF0YV9fPWkuX19kYXRhX18pOnQucHVzaChudWxsKX1yZXR1cm4gRShhKX0sTGEuaW5zZXJ0PWZ1bmN0aW9uKG4sdCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8MiYmKHQ9Vih0aGlzKSksQWEuaW5zZXJ0LmNhbGwodGhpcyxuLHQpfSxvYS5zZWxlY3Q9ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/KGU9W2thKHQsc2EpXSxlLnBhcmVudE5vZGU9c2EuZG9jdW1lbnRFbGVtZW50KTooZT1bdF0sZS5wYXJlbnROb2RlPW4odCkpLEUoW2VdKX0sb2Euc2VsZWN0QWxsPWZ1bmN0aW9uKG4pe3ZhciB0O3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBuPyh0PWNhKE5hKG4sc2EpKSx0LnBhcmVudE5vZGU9c2EuZG9jdW1lbnRFbGVtZW50KToodD1jYShuKSx0LnBhcmVudE5vZGU9bnVsbCksRShbdF0pfSxBYS5vbj1mdW5jdGlvbihuLHQsZSl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aDtpZigzPnIpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBuKXsyPnImJih0PSExKTtmb3IoZSBpbiBuKXRoaXMuZWFjaChYKGUsbltlXSx0KSk7cmV0dXJuIHRoaXN9aWYoMj5yKXJldHVybihyPXRoaXMubm9kZSgpW1wiX19vblwiK25dKSYmci5fO2U9ITF9cmV0dXJuIHRoaXMuZWFjaChYKG4sdCxlKSl9O3ZhciBxYT1vYS5tYXAoe21vdXNlZW50ZXI6XCJtb3VzZW92ZXJcIixtb3VzZWxlYXZlOlwibW91c2VvdXRcIn0pO3NhJiZxYS5mb3JFYWNoKGZ1bmN0aW9uKG4pe1wib25cIituIGluIHNhJiZxYS5yZW1vdmUobil9KTt2YXIgVGEsUmE9MDtvYS5tb3VzZT1mdW5jdGlvbihuKXtyZXR1cm4gSihuLGsoKSl9O3ZhciBEYT10aGlzLm5hdmlnYXRvciYmL1dlYktpdC8udGVzdCh0aGlzLm5hdmlnYXRvci51c2VyQWdlbnQpPy0xOjA7b2EudG91Y2g9ZnVuY3Rpb24obix0LGUpe2lmKGFyZ3VtZW50cy5sZW5ndGg8MyYmKGU9dCx0PWsoKS5jaGFuZ2VkVG91Y2hlcyksdClmb3IodmFyIHIsdT0wLGk9dC5sZW5ndGg7aT51OysrdSlpZigocj10W3VdKS5pZGVudGlmaWVyPT09ZSlyZXR1cm4gSihuLHIpfSxvYS5iZWhhdmlvci5kcmFnPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbigpe3RoaXMub24oXCJtb3VzZWRvd24uZHJhZ1wiLGkpLm9uKFwidG91Y2hzdGFydC5kcmFnXCIsYSl9ZnVuY3Rpb24gZShuLHQsZSxpLGEpe3JldHVybiBmdW5jdGlvbigpe2Z1bmN0aW9uIG8oKXt2YXIgbixlLHI9dChoLHYpO3ImJihuPXJbMF0tTVswXSxlPXJbMV0tTVsxXSxwfD1ufGUsTT1yLGcoe3R5cGU6XCJkcmFnXCIseDpyWzBdK2NbMF0seTpyWzFdK2NbMV0sZHg6bixkeTplfSkpfWZ1bmN0aW9uIGwoKXt0KGgsdikmJihtLm9uKGkrZCxudWxsKS5vbihhK2QsbnVsbCkseShwKSxnKHt0eXBlOlwiZHJhZ2VuZFwifSkpfXZhciBjLHM9dGhpcyxmPW9hLmV2ZW50LnRhcmdldC5jb3JyZXNwb25kaW5nRWxlbWVudHx8b2EuZXZlbnQudGFyZ2V0LGg9cy5wYXJlbnROb2RlLGc9ci5vZihzLGFyZ3VtZW50cykscD0wLHY9bigpLGQ9XCIuZHJhZ1wiKyhudWxsPT12P1wiXCI6XCItXCIrdiksbT1vYS5zZWxlY3QoZShmKSkub24oaStkLG8pLm9uKGErZCxsKSx5PVcoZiksTT10KGgsdik7dT8oYz11LmFwcGx5KHMsYXJndW1lbnRzKSxjPVtjLngtTVswXSxjLnktTVsxXV0pOmM9WzAsMF0sZyh7dHlwZTpcImRyYWdzdGFydFwifSl9fXZhciByPU4obixcImRyYWdcIixcImRyYWdzdGFydFwiLFwiZHJhZ2VuZFwiKSx1PW51bGwsaT1lKGIsb2EubW91c2UsdCxcIm1vdXNlbW92ZVwiLFwibW91c2V1cFwiKSxhPWUoRyxvYS50b3VjaCx5LFwidG91Y2htb3ZlXCIsXCJ0b3VjaGVuZFwiKTtyZXR1cm4gbi5vcmlnaW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9dCxuKTp1fSxvYS5yZWJpbmQobixyLFwib25cIil9LG9hLnRvdWNoZXM9ZnVuY3Rpb24obix0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aDwyJiYodD1rKCkudG91Y2hlcyksdD9jYSh0KS5tYXAoZnVuY3Rpb24odCl7dmFyIGU9SihuLHQpO3JldHVybiBlLmlkZW50aWZpZXI9dC5pZGVudGlmaWVyLGV9KTpbXX07dmFyIFBhPTFlLTYsVWE9UGEqUGEsamE9TWF0aC5QSSxGYT0yKmphLEhhPUZhLVBhLE9hPWphLzIsSWE9amEvMTgwLFlhPTE4MC9qYSxaYT1NYXRoLlNRUlQyLFZhPTIsWGE9NDtvYS5pbnRlcnBvbGF0ZVpvb209ZnVuY3Rpb24obix0KXt2YXIgZSxyLHU9blswXSxpPW5bMV0sYT1uWzJdLG89dFswXSxsPXRbMV0sYz10WzJdLHM9by11LGY9bC1pLGg9cypzK2YqZjtpZihVYT5oKXI9TWF0aC5sb2coYy9hKS9aYSxlPWZ1bmN0aW9uKG4pe3JldHVyblt1K24qcyxpK24qZixhKk1hdGguZXhwKFphKm4qcildfTtlbHNle3ZhciBnPU1hdGguc3FydChoKSxwPShjKmMtYSphK1hhKmgpLygyKmEqVmEqZyksdj0oYypjLWEqYS1YYSpoKS8oMipjKlZhKmcpLGQ9TWF0aC5sb2coTWF0aC5zcXJ0KHAqcCsxKS1wKSxtPU1hdGgubG9nKE1hdGguc3FydCh2KnYrMSktdik7cj0obS1kKS9aYSxlPWZ1bmN0aW9uKG4pe3ZhciB0PW4qcixlPXJuKGQpLG89YS8oVmEqZykqKGUqdW4oWmEqdCtkKS1lbihkKSk7cmV0dXJuW3UrbypzLGkrbypmLGEqZS9ybihaYSp0K2QpXX19cmV0dXJuIGUuZHVyYXRpb249MWUzKnIsZX0sb2EuYmVoYXZpb3Iuem9vbT1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obil7bi5vbihMLGYpLm9uKEJhK1wiLnpvb21cIixnKS5vbihcImRibGNsaWNrLnpvb21cIixwKS5vbihSLGgpfWZ1bmN0aW9uIGUobil7cmV0dXJuWyhuWzBdLWsueCkvay5rLChuWzFdLWsueSkvay5rXX1mdW5jdGlvbiByKG4pe3JldHVybltuWzBdKmsuaytrLngsblsxXSprLmsray55XX1mdW5jdGlvbiB1KG4pe2suaz1NYXRoLm1heChBWzBdLE1hdGgubWluKEFbMV0sbikpfWZ1bmN0aW9uIGkobix0KXt0PXIodCksay54Kz1uWzBdLXRbMF0say55Kz1uWzFdLXRbMV19ZnVuY3Rpb24gYSh0LGUscixhKXt0Ll9fY2hhcnRfXz17eDprLngseTprLnksazprLmt9LHUoTWF0aC5wb3coMixhKSksaShkPWUsciksdD1vYS5zZWxlY3QodCksQz4wJiYodD10LnRyYW5zaXRpb24oKS5kdXJhdGlvbihDKSksdC5jYWxsKG4uZXZlbnQpfWZ1bmN0aW9uIG8oKXtiJiZiLmRvbWFpbih4LnJhbmdlKCkubWFwKGZ1bmN0aW9uKG4pe3JldHVybihuLWsueCkvay5rfSkubWFwKHguaW52ZXJ0KSksdyYmdy5kb21haW4oXy5yYW5nZSgpLm1hcChmdW5jdGlvbihuKXtyZXR1cm4obi1rLnkpL2sua30pLm1hcChfLmludmVydCkpfWZ1bmN0aW9uIGwobil7eisrfHxuKHt0eXBlOlwiem9vbXN0YXJ0XCJ9KX1mdW5jdGlvbiBjKG4pe28oKSxuKHt0eXBlOlwiem9vbVwiLHNjYWxlOmsuayx0cmFuc2xhdGU6W2sueCxrLnldfSl9ZnVuY3Rpb24gcyhuKXstLXp8fChuKHt0eXBlOlwiem9vbWVuZFwifSksZD1udWxsKX1mdW5jdGlvbiBmKCl7ZnVuY3Rpb24gbigpe289MSxpKG9hLm1vdXNlKHUpLGgpLGMoYSl9ZnVuY3Rpb24gcigpe2Yub24ocSxudWxsKS5vbihULG51bGwpLGcobykscyhhKX12YXIgdT10aGlzLGE9RC5vZih1LGFyZ3VtZW50cyksbz0wLGY9b2Euc2VsZWN0KHQodSkpLm9uKHEsbikub24oVCxyKSxoPWUob2EubW91c2UodSkpLGc9Vyh1KTtJbC5jYWxsKHUpLGwoYSl9ZnVuY3Rpb24gaCgpe2Z1bmN0aW9uIG4oKXt2YXIgbj1vYS50b3VjaGVzKHApO3JldHVybiBnPWsuayxuLmZvckVhY2goZnVuY3Rpb24obil7bi5pZGVudGlmaWVyIGluIGQmJihkW24uaWRlbnRpZmllcl09ZShuKSl9KSxufWZ1bmN0aW9uIHQoKXt2YXIgdD1vYS5ldmVudC50YXJnZXQ7b2Euc2VsZWN0KHQpLm9uKHgscikub24oYixvKSxfLnB1c2godCk7Zm9yKHZhciBlPW9hLmV2ZW50LmNoYW5nZWRUb3VjaGVzLHU9MCxpPWUubGVuZ3RoO2k+dTsrK3UpZFtlW3VdLmlkZW50aWZpZXJdPW51bGw7dmFyIGw9bigpLGM9RGF0ZS5ub3coKTtpZigxPT09bC5sZW5ndGgpe2lmKDUwMD5jLU0pe3ZhciBzPWxbMF07YShwLHMsZFtzLmlkZW50aWZpZXJdLE1hdGguZmxvb3IoTWF0aC5sb2coay5rKS9NYXRoLkxOMikrMSksUygpfU09Y31lbHNlIGlmKGwubGVuZ3RoPjEpe3ZhciBzPWxbMF0sZj1sWzFdLGg9c1swXS1mWzBdLGc9c1sxXS1mWzFdO209aCpoK2cqZ319ZnVuY3Rpb24gcigpe3ZhciBuLHQsZSxyLGE9b2EudG91Y2hlcyhwKTtJbC5jYWxsKHApO2Zvcih2YXIgbz0wLGw9YS5sZW5ndGg7bD5vOysrbyxyPW51bGwpaWYoZT1hW29dLHI9ZFtlLmlkZW50aWZpZXJdKXtpZih0KWJyZWFrO249ZSx0PXJ9aWYocil7dmFyIHM9KHM9ZVswXS1uWzBdKSpzKyhzPWVbMV0tblsxXSkqcyxmPW0mJk1hdGguc3FydChzL20pO249WyhuWzBdK2VbMF0pLzIsKG5bMV0rZVsxXSkvMl0sdD1bKHRbMF0rclswXSkvMiwodFsxXStyWzFdKS8yXSx1KGYqZyl9TT1udWxsLGkobix0KSxjKHYpfWZ1bmN0aW9uIG8oKXtpZihvYS5ldmVudC50b3VjaGVzLmxlbmd0aCl7Zm9yKHZhciB0PW9hLmV2ZW50LmNoYW5nZWRUb3VjaGVzLGU9MCxyPXQubGVuZ3RoO3I+ZTsrK2UpZGVsZXRlIGRbdFtlXS5pZGVudGlmaWVyXTtmb3IodmFyIHUgaW4gZClyZXR1cm4gdm9pZCBuKCl9b2Euc2VsZWN0QWxsKF8pLm9uKHksbnVsbCksdy5vbihMLGYpLm9uKFIsaCksTigpLHModil9dmFyIGcscD10aGlzLHY9RC5vZihwLGFyZ3VtZW50cyksZD17fSxtPTAseT1cIi56b29tLVwiK29hLmV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmlkZW50aWZpZXIseD1cInRvdWNobW92ZVwiK3ksYj1cInRvdWNoZW5kXCIreSxfPVtdLHc9b2Euc2VsZWN0KHApLE49VyhwKTt0KCksbCh2KSx3Lm9uKEwsbnVsbCkub24oUix0KX1mdW5jdGlvbiBnKCl7dmFyIG49RC5vZih0aGlzLGFyZ3VtZW50cyk7eT9jbGVhclRpbWVvdXQoeSk6KElsLmNhbGwodGhpcyksdj1lKGQ9bXx8b2EubW91c2UodGhpcykpLGwobikpLHk9c2V0VGltZW91dChmdW5jdGlvbigpe3k9bnVsbCxzKG4pfSw1MCksUygpLHUoTWF0aC5wb3coMiwuMDAyKiRhKCkpKmsuayksaShkLHYpLGMobil9ZnVuY3Rpb24gcCgpe3ZhciBuPW9hLm1vdXNlKHRoaXMpLHQ9TWF0aC5sb2coay5rKS9NYXRoLkxOMjthKHRoaXMsbixlKG4pLG9hLmV2ZW50LnNoaWZ0S2V5P01hdGguY2VpbCh0KS0xOk1hdGguZmxvb3IodCkrMSl9dmFyIHYsZCxtLHksTSx4LGIsXyx3LGs9e3g6MCx5OjAsazoxfSxFPVs5NjAsNTAwXSxBPVdhLEM9MjUwLHo9MCxMPVwibW91c2Vkb3duLnpvb21cIixxPVwibW91c2Vtb3ZlLnpvb21cIixUPVwibW91c2V1cC56b29tXCIsUj1cInRvdWNoc3RhcnQuem9vbVwiLEQ9TihuLFwiem9vbXN0YXJ0XCIsXCJ6b29tXCIsXCJ6b29tZW5kXCIpO3JldHVybiBCYXx8KEJhPVwib253aGVlbFwiaW4gc2E/KCRhPWZ1bmN0aW9uKCl7cmV0dXJuLW9hLmV2ZW50LmRlbHRhWSoob2EuZXZlbnQuZGVsdGFNb2RlPzEyMDoxKX0sXCJ3aGVlbFwiKTpcIm9ubW91c2V3aGVlbFwiaW4gc2E/KCRhPWZ1bmN0aW9uKCl7cmV0dXJuIG9hLmV2ZW50LndoZWVsRGVsdGF9LFwibW91c2V3aGVlbFwiKTooJGE9ZnVuY3Rpb24oKXtyZXR1cm4tb2EuZXZlbnQuZGV0YWlsfSxcIk1vek1vdXNlUGl4ZWxTY3JvbGxcIikpLG4uZXZlbnQ9ZnVuY3Rpb24obil7bi5lYWNoKGZ1bmN0aW9uKCl7dmFyIG49RC5vZih0aGlzLGFyZ3VtZW50cyksdD1rO0hsP29hLnNlbGVjdCh0aGlzKS50cmFuc2l0aW9uKCkuZWFjaChcInN0YXJ0Lnpvb21cIixmdW5jdGlvbigpe2s9dGhpcy5fX2NoYXJ0X198fHt4OjAseTowLGs6MX0sbChuKX0pLnR3ZWVuKFwiem9vbTp6b29tXCIsZnVuY3Rpb24oKXt2YXIgZT1FWzBdLHI9RVsxXSx1PWQ/ZFswXTplLzIsaT1kP2RbMV06ci8yLGE9b2EuaW50ZXJwb2xhdGVab29tKFsodS1rLngpL2suaywoaS1rLnkpL2suayxlL2sua10sWyh1LXQueCkvdC5rLChpLXQueSkvdC5rLGUvdC5rXSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciByPWEodCksbz1lL3JbMl07dGhpcy5fX2NoYXJ0X189az17eDp1LXJbMF0qbyx5OmktclsxXSpvLGs6b30sYyhuKX19KS5lYWNoKFwiaW50ZXJydXB0Lnpvb21cIixmdW5jdGlvbigpe3Mobil9KS5lYWNoKFwiZW5kLnpvb21cIixmdW5jdGlvbigpe3Mobil9KToodGhpcy5fX2NoYXJ0X189ayxsKG4pLGMobikscyhuKSl9KX0sbi50cmFuc2xhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGs9e3g6K3RbMF0seTordFsxXSxrOmsua30sbygpLG4pOltrLngsay55XX0sbi5zY2FsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaz17eDprLngseTprLnksazpudWxsfSx1KCt0KSxvKCksbik6ay5rfSxuLnNjYWxlRXh0ZW50PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhBPW51bGw9PXQ/V2E6Wyt0WzBdLCt0WzFdXSxuKTpBfSxuLmNlbnRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obT10JiZbK3RbMF0sK3RbMV1dLG4pOm19LG4uc2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oRT10JiZbK3RbMF0sK3RbMV1dLG4pOkV9LG4uZHVyYXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KEM9K3Qsbik6Q30sbi54PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhiPXQseD10LmNvcHkoKSxrPXt4OjAseTowLGs6MX0sbik6Yn0sbi55PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh3PXQsXz10LmNvcHkoKSxrPXt4OjAseTowLGs6MX0sbik6d30sb2EucmViaW5kKG4sRCxcIm9uXCIpfTt2YXIgJGEsQmEsV2E9WzAsMS8wXTtvYS5jb2xvcj1vbixvbi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZ2IoKStcIlwifSxvYS5oc2w9bG47dmFyIEphPWxuLnByb3RvdHlwZT1uZXcgb247SmEuYnJpZ2h0ZXI9ZnVuY3Rpb24obil7cmV0dXJuIG49TWF0aC5wb3coLjcsYXJndW1lbnRzLmxlbmd0aD9uOjEpLG5ldyBsbih0aGlzLmgsdGhpcy5zLHRoaXMubC9uKX0sSmEuZGFya2VyPWZ1bmN0aW9uKG4pe3JldHVybiBuPU1hdGgucG93KC43LGFyZ3VtZW50cy5sZW5ndGg/bjoxKSxuZXcgbG4odGhpcy5oLHRoaXMucyxuKnRoaXMubCl9LEphLnJnYj1mdW5jdGlvbigpe3JldHVybiBjbih0aGlzLmgsdGhpcy5zLHRoaXMubCl9LG9hLmhjbD1zbjt2YXIgR2E9c24ucHJvdG90eXBlPW5ldyBvbjtHYS5icmlnaHRlcj1mdW5jdGlvbihuKXtyZXR1cm4gbmV3IHNuKHRoaXMuaCx0aGlzLmMsTWF0aC5taW4oMTAwLHRoaXMubCtLYSooYXJndW1lbnRzLmxlbmd0aD9uOjEpKSl9LEdhLmRhcmtlcj1mdW5jdGlvbihuKXtyZXR1cm4gbmV3IHNuKHRoaXMuaCx0aGlzLmMsTWF0aC5tYXgoMCx0aGlzLmwtS2EqKGFyZ3VtZW50cy5sZW5ndGg/bjoxKSkpfSxHYS5yZ2I9ZnVuY3Rpb24oKXtyZXR1cm4gZm4odGhpcy5oLHRoaXMuYyx0aGlzLmwpLnJnYigpfSxvYS5sYWI9aG47dmFyIEthPTE4LFFhPS45NTA0Nyxubz0xLHRvPTEuMDg4ODMsZW89aG4ucHJvdG90eXBlPW5ldyBvbjtlby5icmlnaHRlcj1mdW5jdGlvbihuKXtyZXR1cm4gbmV3IGhuKE1hdGgubWluKDEwMCx0aGlzLmwrS2EqKGFyZ3VtZW50cy5sZW5ndGg/bjoxKSksdGhpcy5hLHRoaXMuYil9LGVvLmRhcmtlcj1mdW5jdGlvbihuKXtyZXR1cm4gbmV3IGhuKE1hdGgubWF4KDAsdGhpcy5sLUthKihhcmd1bWVudHMubGVuZ3RoP246MSkpLHRoaXMuYSx0aGlzLmIpfSxlby5yZ2I9ZnVuY3Rpb24oKXtyZXR1cm4gZ24odGhpcy5sLHRoaXMuYSx0aGlzLmIpfSxvYS5yZ2I9eW47dmFyIHJvPXluLnByb3RvdHlwZT1uZXcgb247cm8uYnJpZ2h0ZXI9ZnVuY3Rpb24obil7bj1NYXRoLnBvdyguNyxhcmd1bWVudHMubGVuZ3RoP246MSk7dmFyIHQ9dGhpcy5yLGU9dGhpcy5nLHI9dGhpcy5iLHU9MzA7cmV0dXJuIHR8fGV8fHI/KHQmJnU+dCYmKHQ9dSksZSYmdT5lJiYoZT11KSxyJiZ1PnImJihyPXUpLG5ldyB5bihNYXRoLm1pbigyNTUsdC9uKSxNYXRoLm1pbigyNTUsZS9uKSxNYXRoLm1pbigyNTUsci9uKSkpOm5ldyB5bih1LHUsdSl9LHJvLmRhcmtlcj1mdW5jdGlvbihuKXtyZXR1cm4gbj1NYXRoLnBvdyguNyxhcmd1bWVudHMubGVuZ3RoP246MSksbmV3IHluKG4qdGhpcy5yLG4qdGhpcy5nLG4qdGhpcy5iKX0scm8uaHNsPWZ1bmN0aW9uKCl7cmV0dXJuIHduKHRoaXMucix0aGlzLmcsdGhpcy5iKX0scm8udG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIiNcIitibih0aGlzLnIpK2JuKHRoaXMuZykrYm4odGhpcy5iKX07dmFyIHVvPW9hLm1hcCh7YWxpY2VibHVlOjE1NzkyMzgzLGFudGlxdWV3aGl0ZToxNjQ0NDM3NSxhcXVhOjY1NTM1LGFxdWFtYXJpbmU6ODM4ODU2NCxhenVyZToxNTc5NDE3NSxiZWlnZToxNjExOTI2MCxiaXNxdWU6MTY3NzAyNDQsYmxhY2s6MCxibGFuY2hlZGFsbW9uZDoxNjc3MjA0NSxibHVlOjI1NSxibHVldmlvbGV0OjkwNTUyMDIsYnJvd246MTA4MjQyMzQsYnVybHl3b29kOjE0NTk2MjMxLGNhZGV0Ymx1ZTo2MjY2NTI4LGNoYXJ0cmV1c2U6ODM4ODM1MixjaG9jb2xhdGU6MTM3ODk0NzAsY29yYWw6MTY3NDQyNzIsY29ybmZsb3dlcmJsdWU6NjU5MTk4MSxjb3Juc2lsazoxNjc3NTM4OCxjcmltc29uOjE0NDIzMTAwLGN5YW46NjU1MzUsZGFya2JsdWU6MTM5LGRhcmtjeWFuOjM1NzIzLGRhcmtnb2xkZW5yb2Q6MTIwOTI5MzksZGFya2dyYXk6MTExMTkwMTcsZGFya2dyZWVuOjI1NjAwLGRhcmtncmV5OjExMTE5MDE3LGRhcmtraGFraToxMjQzMzI1OSxkYXJrbWFnZW50YTo5MTA5NjQzLGRhcmtvbGl2ZWdyZWVuOjU1OTc5OTksZGFya29yYW5nZToxNjc0NzUyMCxkYXJrb3JjaGlkOjEwMDQwMDEyLGRhcmtyZWQ6OTEwOTUwNCxkYXJrc2FsbW9uOjE1MzA4NDEwLGRhcmtzZWFncmVlbjo5NDE5OTE5LGRhcmtzbGF0ZWJsdWU6NDczNDM0NyxkYXJrc2xhdGVncmF5OjMxMDA0OTUsZGFya3NsYXRlZ3JleTozMTAwNDk1LGRhcmt0dXJxdW9pc2U6NTI5NDUsZGFya3Zpb2xldDo5Njk5NTM5LGRlZXBwaW5rOjE2NzE2OTQ3LGRlZXBza3libHVlOjQ5MTUxLGRpbWdyYXk6NjkwODI2NSxkaW1ncmV5OjY5MDgyNjUsZG9kZ2VyYmx1ZToyMDAzMTk5LGZpcmVicmljazoxMTY3NDE0NixmbG9yYWx3aGl0ZToxNjc3NTkyMCxmb3Jlc3RncmVlbjoyMjYzODQyLGZ1Y2hzaWE6MTY3MTE5MzUsZ2FpbnNib3JvOjE0NDc0NDYwLGdob3N0d2hpdGU6MTYzMTY2NzEsZ29sZDoxNjc2NjcyMCxnb2xkZW5yb2Q6MTQzMjkxMjAsZ3JheTo4NDIxNTA0LGdyZWVuOjMyNzY4LGdyZWVueWVsbG93OjExNDAzMDU1LGdyZXk6ODQyMTUwNCxob25leWRldzoxNTc5NDE2MCxob3RwaW5rOjE2NzM4NzQwLGluZGlhbnJlZDoxMzQ1ODUyNCxpbmRpZ286NDkxNTMzMCxpdm9yeToxNjc3NzIwMCxraGFraToxNTc4NzY2MCxsYXZlbmRlcjoxNTEzMjQxMCxsYXZlbmRlcmJsdXNoOjE2NzczMzY1LGxhd25ncmVlbjo4MTkwOTc2LGxlbW9uY2hpZmZvbjoxNjc3NTg4NSxsaWdodGJsdWU6MTEzOTMyNTQsbGlnaHRjb3JhbDoxNTc2MTUzNixsaWdodGN5YW46MTQ3NDU1OTksbGlnaHRnb2xkZW5yb2R5ZWxsb3c6MTY0NDgyMTAsbGlnaHRncmF5OjEzODgyMzIzLGxpZ2h0Z3JlZW46OTQ5ODI1NixsaWdodGdyZXk6MTM4ODIzMjMsbGlnaHRwaW5rOjE2NzU4NDY1LGxpZ2h0c2FsbW9uOjE2NzUyNzYyLGxpZ2h0c2VhZ3JlZW46MjE0Mjg5MCxsaWdodHNreWJsdWU6ODkwMDM0NixsaWdodHNsYXRlZ3JheTo3ODMzNzUzLGxpZ2h0c2xhdGVncmV5Ojc4MzM3NTMsbGlnaHRzdGVlbGJsdWU6MTE1ODQ3MzQsbGlnaHR5ZWxsb3c6MTY3NzcxODQsbGltZTo2NTI4MCxsaW1lZ3JlZW46MzMyOTMzMCxsaW5lbjoxNjQ0NTY3MCxtYWdlbnRhOjE2NzExOTM1LG1hcm9vbjo4Mzg4NjA4LG1lZGl1bWFxdWFtYXJpbmU6NjczNzMyMixtZWRpdW1ibHVlOjIwNSxtZWRpdW1vcmNoaWQ6MTIyMTE2NjcsbWVkaXVtcHVycGxlOjk2NjI2ODMsbWVkaXVtc2VhZ3JlZW46Mzk3ODA5NyxtZWRpdW1zbGF0ZWJsdWU6ODA4Nzc5MCxtZWRpdW1zcHJpbmdncmVlbjo2NDE1NCxtZWRpdW10dXJxdW9pc2U6NDc3MjMwMCxtZWRpdW12aW9sZXRyZWQ6MTMwNDcxNzMsbWlkbmlnaHRibHVlOjE2NDQ5MTIsbWludGNyZWFtOjE2MTIxODUwLG1pc3R5cm9zZToxNjc3MDI3Myxtb2NjYXNpbjoxNjc3MDIyOSxuYXZham93aGl0ZToxNjc2ODY4NSxuYXZ5OjEyOCxvbGRsYWNlOjE2NjQzNTU4LG9saXZlOjg0MjEzNzYsb2xpdmVkcmFiOjcwNDg3Mzksb3JhbmdlOjE2NzUzOTIwLG9yYW5nZXJlZDoxNjcyOTM0NCxvcmNoaWQ6MTQzMTU3MzQscGFsZWdvbGRlbnJvZDoxNTY1NzEzMCxwYWxlZ3JlZW46MTAwMjU4ODAscGFsZXR1cnF1b2lzZToxMTUyOTk2NixwYWxldmlvbGV0cmVkOjE0MzgxMjAzLHBhcGF5YXdoaXA6MTY3NzMwNzcscGVhY2hwdWZmOjE2NzY3NjczLHBlcnU6MTM0Njg5OTEscGluazoxNjc2MTAzNSxwbHVtOjE0NTI0NjM3LHBvd2RlcmJsdWU6MTE1OTE5MTAscHVycGxlOjgzODg3MzYscmViZWNjYXB1cnBsZTo2Njk3ODgxLHJlZDoxNjcxMTY4MCxyb3N5YnJvd246MTIzNTc1MTkscm95YWxibHVlOjQyODY5NDUsc2FkZGxlYnJvd246OTEyNzE4NyxzYWxtb246MTY0MTY4ODIsc2FuZHlicm93bjoxNjAzMjg2NCxzZWFncmVlbjozMDUwMzI3LHNlYXNoZWxsOjE2Nzc0NjM4LHNpZW5uYToxMDUwNjc5NyxzaWx2ZXI6MTI2MzIyNTYsc2t5Ymx1ZTo4OTAwMzMxLHNsYXRlYmx1ZTo2OTcwMDYxLHNsYXRlZ3JheTo3MzcyOTQ0LHNsYXRlZ3JleTo3MzcyOTQ0LHNub3c6MTY3NzU5MzAsc3ByaW5nZ3JlZW46NjU0MDcsc3RlZWxibHVlOjQ2MjA5ODAsdGFuOjEzODA4NzgwLHRlYWw6MzI4OTYsdGhpc3RsZToxNDIwNDg4OCx0b21hdG86MTY3MzcwOTUsdHVycXVvaXNlOjQyNTE4NTYsdmlvbGV0OjE1NjMxMDg2LHdoZWF0OjE2MTEzMzMxLHdoaXRlOjE2Nzc3MjE1LHdoaXRlc21va2U6MTYxMTkyODUseWVsbG93OjE2Nzc2OTYwLHllbGxvd2dyZWVuOjEwMTQ1MDc0fSk7dW8uZm9yRWFjaChmdW5jdGlvbihuLHQpe3VvLnNldChuLE1uKHQpKX0pLG9hLmZ1bmN0b3I9RW4sb2EueGhyPUFuKHkpLG9hLmRzdj1mdW5jdGlvbihuLHQpe2Z1bmN0aW9uIGUobixlLGkpe2FyZ3VtZW50cy5sZW5ndGg8MyYmKGk9ZSxlPW51bGwpO3ZhciBhPUNuKG4sdCxudWxsPT1lP3I6dShlKSxpKTtyZXR1cm4gYS5yb3c9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/YS5yZXNwb25zZShudWxsPT0oZT1uKT9yOnUobikpOmV9LGF9ZnVuY3Rpb24gcihuKXtyZXR1cm4gZS5wYXJzZShuLnJlc3BvbnNlVGV4dCl9ZnVuY3Rpb24gdShuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGUucGFyc2UodC5yZXNwb25zZVRleHQsbil9fWZ1bmN0aW9uIGkodCl7cmV0dXJuIHQubWFwKGEpLmpvaW4obil9ZnVuY3Rpb24gYShuKXtyZXR1cm4gby50ZXN0KG4pPydcIicrbi5yZXBsYWNlKC9cXFwiL2csJ1wiXCInKSsnXCInOm59dmFyIG89bmV3IFJlZ0V4cCgnW1wiJytuK1wiXFxuXVwiKSxsPW4uY2hhckNvZGVBdCgwKTtyZXR1cm4gZS5wYXJzZT1mdW5jdGlvbihuLHQpe3ZhciByO3JldHVybiBlLnBhcnNlUm93cyhuLGZ1bmN0aW9uKG4sZSl7aWYocilyZXR1cm4gcihuLGUtMSk7dmFyIHU9bmV3IEZ1bmN0aW9uKFwiZFwiLFwicmV0dXJuIHtcIituLm1hcChmdW5jdGlvbihuLHQpe3JldHVybiBKU09OLnN0cmluZ2lmeShuKStcIjogZFtcIit0K1wiXVwifSkuam9pbihcIixcIikrXCJ9XCIpO3I9dD9mdW5jdGlvbihuLGUpe3JldHVybiB0KHUobiksZSl9OnV9KX0sZS5wYXJzZVJvd3M9ZnVuY3Rpb24obix0KXtmdW5jdGlvbiBlKCl7aWYocz49YylyZXR1cm4gYTtpZih1KXJldHVybiB1PSExLGk7dmFyIHQ9cztpZigzND09PW4uY2hhckNvZGVBdCh0KSl7Zm9yKHZhciBlPXQ7ZSsrPGM7KWlmKDM0PT09bi5jaGFyQ29kZUF0KGUpKXtpZigzNCE9PW4uY2hhckNvZGVBdChlKzEpKWJyZWFrOysrZX1zPWUrMjt2YXIgcj1uLmNoYXJDb2RlQXQoZSsxKTtyZXR1cm4gMTM9PT1yPyh1PSEwLDEwPT09bi5jaGFyQ29kZUF0KGUrMikmJisrcyk6MTA9PT1yJiYodT0hMCksbi5zbGljZSh0KzEsZSkucmVwbGFjZSgvXCJcIi9nLCdcIicpfWZvcig7Yz5zOyl7dmFyIHI9bi5jaGFyQ29kZUF0KHMrKyksbz0xO2lmKDEwPT09cil1PSEwO2Vsc2UgaWYoMTM9PT1yKXU9ITAsMTA9PT1uLmNoYXJDb2RlQXQocykmJigrK3MsKytvKTtlbHNlIGlmKHIhPT1sKWNvbnRpbnVlO3JldHVybiBuLnNsaWNlKHQscy1vKX1yZXR1cm4gbi5zbGljZSh0KX1mb3IodmFyIHIsdSxpPXt9LGE9e30sbz1bXSxjPW4ubGVuZ3RoLHM9MCxmPTA7KHI9ZSgpKSE9PWE7KXtmb3IodmFyIGg9W107ciE9PWkmJnIhPT1hOyloLnB1c2gocikscj1lKCk7dCYmbnVsbD09KGg9dChoLGYrKykpfHxvLnB1c2goaCl9cmV0dXJuIG99LGUuZm9ybWF0PWZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodFswXSkpcmV0dXJuIGUuZm9ybWF0Um93cyh0KTt2YXIgcj1uZXcgbSx1PVtdO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24obil7Zm9yKHZhciB0IGluIG4pci5oYXModCl8fHUucHVzaChyLmFkZCh0KSl9KSxbdS5tYXAoYSkuam9pbihuKV0uY29uY2F0KHQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB1Lm1hcChmdW5jdGlvbihuKXtyZXR1cm4gYSh0W25dKX0pLmpvaW4obil9KSkuam9pbihcIlxcblwiKX0sZS5mb3JtYXRSb3dzPWZ1bmN0aW9uKG4pe3JldHVybiBuLm1hcChpKS5qb2luKFwiXFxuXCIpfSxlfSxvYS5jc3Y9b2EuZHN2KFwiLFwiLFwidGV4dC9jc3ZcIiksb2EudHN2PW9hLmRzdihcIiAgICBcIixcInRleHQvdGFiLXNlcGFyYXRlZC12YWx1ZXNcIik7dmFyIGlvLGFvLG9vLGxvLGNvPXRoaXNbeCh0aGlzLFwicmVxdWVzdEFuaW1hdGlvbkZyYW1lXCIpXXx8ZnVuY3Rpb24obil7c2V0VGltZW91dChuLDE3KX07b2EudGltZXI9ZnVuY3Rpb24oKXtxbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LG9hLnRpbWVyLmZsdXNoPWZ1bmN0aW9uKCl7Um4oKSxEbigpfSxvYS5yb3VuZD1mdW5jdGlvbihuLHQpe3JldHVybiB0P01hdGgucm91bmQobioodD1NYXRoLnBvdygxMCx0KSkpL3Q6TWF0aC5yb3VuZChuKX07dmFyIHNvPVtcInlcIixcInpcIixcImFcIixcImZcIixcInBcIixcIm5cIixcIlxceGI1XCIsXCJtXCIsXCJcIixcImtcIixcIk1cIixcIkdcIixcIlRcIixcIlBcIixcIkVcIixcIlpcIixcIllcIl0ubWFwKFVuKTtvYS5mb3JtYXRQcmVmaXg9ZnVuY3Rpb24obix0KXt2YXIgZT0wO3JldHVybihuPStuKSYmKDA+biYmKG4qPS0xKSx0JiYobj1vYS5yb3VuZChuLFBuKG4sdCkpKSxlPTErTWF0aC5mbG9vcigxZS0xMitNYXRoLmxvZyhuKS9NYXRoLkxOMTApLGU9TWF0aC5tYXgoLTI0LE1hdGgubWluKDI0LDMqTWF0aC5mbG9vcigoZS0xKS8zKSkpKSxzb1s4K2UvM119O3ZhciBmbz0vKD86KFtee10pPyhbPD49Xl0pKT8oWytcXC0gXSk/KFskI10pPygwKT8oXFxkKyk/KCwpPyhcXC4tP1xcZCspPyhbYS16JV0pPy9pLGhvPW9hLm1hcCh7YjpmdW5jdGlvbihuKXtyZXR1cm4gbi50b1N0cmluZygyKX0sYzpmdW5jdGlvbihuKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShuKX0sbzpmdW5jdGlvbihuKXtyZXR1cm4gbi50b1N0cmluZyg4KX0seDpmdW5jdGlvbihuKXtyZXR1cm4gbi50b1N0cmluZygxNil9LFg6ZnVuY3Rpb24obil7cmV0dXJuIG4udG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9LGc6ZnVuY3Rpb24obix0KXtyZXR1cm4gbi50b1ByZWNpc2lvbih0KX0sZTpmdW5jdGlvbihuLHQpe3JldHVybiBuLnRvRXhwb25lbnRpYWwodCl9LGY6ZnVuY3Rpb24obix0KXtyZXR1cm4gbi50b0ZpeGVkKHQpfSxyOmZ1bmN0aW9uKG4sdCl7cmV0dXJuKG49b2Eucm91bmQobixQbihuLHQpKSkudG9GaXhlZChNYXRoLm1heCgwLE1hdGgubWluKDIwLFBuKG4qKDErMWUtMTUpLHQpKSkpfX0pLGdvPW9hLnRpbWU9e30scG89RGF0ZTtIbi5wcm90b3R5cGU9e2dldERhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fLmdldFVUQ0RhdGUoKX0sZ2V0RGF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuXy5nZXRVVENEYXkoKX0sZ2V0RnVsbFllYXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fLmdldFVUQ0Z1bGxZZWFyKCl9LGdldEhvdXJzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuXy5nZXRVVENIb3VycygpfSxnZXRNaWxsaXNlY29uZHM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fLmdldFVUQ01pbGxpc2Vjb25kcygpfSxnZXRNaW51dGVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuXy5nZXRVVENNaW51dGVzKCl9LGdldE1vbnRoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuXy5nZXRVVENNb250aCgpfSxnZXRTZWNvbmRzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuXy5nZXRVVENTZWNvbmRzKCl9LGdldFRpbWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fLmdldFRpbWUoKX0sZ2V0VGltZXpvbmVPZmZzZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMH0sdmFsdWVPZjpmdW5jdGlvbigpe3JldHVybiB0aGlzLl8udmFsdWVPZigpfSxzZXREYXRlOmZ1bmN0aW9uKCl7dm8uc2V0VVRDRGF0ZS5hcHBseSh0aGlzLl8sYXJndW1lbnRzKX0sc2V0RGF5OmZ1bmN0aW9uKCl7dm8uc2V0VVRDRGF5LmFwcGx5KHRoaXMuXyxhcmd1bWVudHMpfSxzZXRGdWxsWWVhcjpmdW5jdGlvbigpe3ZvLnNldFVUQ0Z1bGxZZWFyLmFwcGx5KHRoaXMuXyxhcmd1bWVudHMpfSxzZXRIb3VyczpmdW5jdGlvbigpe3ZvLnNldFVUQ0hvdXJzLmFwcGx5KHRoaXMuXyxhcmd1bWVudHMpfSxzZXRNaWxsaXNlY29uZHM6ZnVuY3Rpb24oKXt2by5zZXRVVENNaWxsaXNlY29uZHMuYXBwbHkodGhpcy5fLGFyZ3VtZW50cyl9LHNldE1pbnV0ZXM6ZnVuY3Rpb24oKXt2by5zZXRVVENNaW51dGVzLmFwcGx5KHRoaXMuXyxhcmd1bWVudHMpfSxzZXRNb250aDpmdW5jdGlvbigpe3ZvLnNldFVUQ01vbnRoLmFwcGx5KHRoaXMuXyxhcmd1bWVudHMpfSxzZXRTZWNvbmRzOmZ1bmN0aW9uKCl7dm8uc2V0VVRDU2Vjb25kcy5hcHBseSh0aGlzLl8sYXJndW1lbnRzKX0sc2V0VGltZTpmdW5jdGlvbigpe3ZvLnNldFRpbWUuYXBwbHkodGhpcy5fLGFyZ3VtZW50cyl9fTt2YXIgdm89RGF0ZS5wcm90b3R5cGU7Z28ueWVhcj1PbihmdW5jdGlvbihuKXtyZXR1cm4gbj1nby5kYXkobiksbi5zZXRNb250aCgwLDEpLG59LGZ1bmN0aW9uKG4sdCl7bi5zZXRGdWxsWWVhcihuLmdldEZ1bGxZZWFyKCkrdCl9LGZ1bmN0aW9uKG4pe3JldHVybiBuLmdldEZ1bGxZZWFyKCl9KSxnby55ZWFycz1nby55ZWFyLnJhbmdlLGdvLnllYXJzLnV0Yz1nby55ZWFyLnV0Yy5yYW5nZSxnby5kYXk9T24oZnVuY3Rpb24obil7dmFyIHQ9bmV3IHBvKDJlMywwKTtyZXR1cm4gdC5zZXRGdWxsWWVhcihuLmdldEZ1bGxZZWFyKCksbi5nZXRNb250aCgpLG4uZ2V0RGF0ZSgpKSx0fSxmdW5jdGlvbihuLHQpe24uc2V0RGF0ZShuLmdldERhdGUoKSt0KX0sZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0RGF0ZSgpLTF9KSxnby5kYXlzPWdvLmRheS5yYW5nZSxnby5kYXlzLnV0Yz1nby5kYXkudXRjLnJhbmdlLGdvLmRheU9mWWVhcj1mdW5jdGlvbihuKXt2YXIgdD1nby55ZWFyKG4pO3JldHVybiBNYXRoLmZsb29yKChuLXQtNmU0KihuLmdldFRpbWV6b25lT2Zmc2V0KCktdC5nZXRUaW1lem9uZU9mZnNldCgpKSkvODY0ZTUpfSxbXCJzdW5kYXlcIixcIm1vbmRheVwiLFwidHVlc2RheVwiLFwid2VkbmVzZGF5XCIsXCJ0aHVyc2RheVwiLFwiZnJpZGF5XCIsXCJzYXR1cmRheVwiXS5mb3JFYWNoKGZ1bmN0aW9uKG4sdCl7dD03LXQ7dmFyIGU9Z29bbl09T24oZnVuY3Rpb24obil7cmV0dXJuKG49Z28uZGF5KG4pKS5zZXREYXRlKG4uZ2V0RGF0ZSgpLShuLmdldERheSgpK3QpJTcpLG59LGZ1bmN0aW9uKG4sdCl7bi5zZXREYXRlKG4uZ2V0RGF0ZSgpKzcqTWF0aC5mbG9vcih0KSl9LGZ1bmN0aW9uKG4pe3ZhciBlPWdvLnllYXIobikuZ2V0RGF5KCk7cmV0dXJuIE1hdGguZmxvb3IoKGdvLmRheU9mWWVhcihuKSsoZSt0KSU3KS83KS0oZSE9PXQpfSk7Z29bbitcInNcIl09ZS5yYW5nZSxnb1tuK1wic1wiXS51dGM9ZS51dGMucmFuZ2UsZ29bbitcIk9mWWVhclwiXT1mdW5jdGlvbihuKXt2YXIgZT1nby55ZWFyKG4pLmdldERheSgpO3JldHVybiBNYXRoLmZsb29yKChnby5kYXlPZlllYXIobikrKGUrdCklNykvNyl9fSksZ28ud2Vlaz1nby5zdW5kYXksZ28ud2Vla3M9Z28uc3VuZGF5LnJhbmdlLGdvLndlZWtzLnV0Yz1nby5zdW5kYXkudXRjLnJhbmdlLGdvLndlZWtPZlllYXI9Z28uc3VuZGF5T2ZZZWFyO3ZhciBtbz17XCItXCI6XCJcIixfOlwiIFwiLDA6XCIwXCJ9LHlvPS9eXFxzKlxcZCsvLE1vPS9eJS87b2EubG9jYWxlPWZ1bmN0aW9uKG4pe3JldHVybntudW1iZXJGb3JtYXQ6am4obiksdGltZUZvcm1hdDpZbihuKX19O3ZhciB4bz1vYS5sb2NhbGUoe2RlY2ltYWw6XCIuXCIsdGhvdXNhbmRzOlwiLFwiLGdyb3VwaW5nOlszXSxjdXJyZW5jeTpbXCIkXCIsXCJcIl0sZGF0ZVRpbWU6XCIlYSAlYiAlZSAlWCAlWVwiLGRhdGU6XCIlbS8lZC8lWVwiLHRpbWU6XCIlSDolTTolU1wiLHBlcmlvZHM6W1wiQU1cIixcIlBNXCJdLGRheXM6W1wiU3VuZGF5XCIsXCJNb25kYXlcIixcIlR1ZXNkYXlcIixcIldlZG5lc2RheVwiLFwiVGh1cnNkYXlcIixcIkZyaWRheVwiLFwiU2F0dXJkYXlcIl0sXG5zaG9ydERheXM6W1wiU3VuXCIsXCJNb25cIixcIlR1ZVwiLFwiV2VkXCIsXCJUaHVcIixcIkZyaVwiLFwiU2F0XCJdLG1vbnRoczpbXCJKYW51YXJ5XCIsXCJGZWJydWFyeVwiLFwiTWFyY2hcIixcIkFwcmlsXCIsXCJNYXlcIixcIkp1bmVcIixcIkp1bHlcIixcIkF1Z3VzdFwiLFwiU2VwdGVtYmVyXCIsXCJPY3RvYmVyXCIsXCJOb3ZlbWJlclwiLFwiRGVjZW1iZXJcIl0sc2hvcnRNb250aHM6W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiXX0pO29hLmZvcm1hdD14by5udW1iZXJGb3JtYXQsb2EuZ2VvPXt9LHN0LnByb3RvdHlwZT17czowLHQ6MCxhZGQ6ZnVuY3Rpb24obil7ZnQobix0aGlzLnQsYm8pLGZ0KGJvLnMsdGhpcy5zLHRoaXMpLHRoaXMucz90aGlzLnQrPWJvLnQ6dGhpcy5zPWJvLnR9LHJlc2V0OmZ1bmN0aW9uKCl7dGhpcy5zPXRoaXMudD0wfSx2YWx1ZU9mOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc319O3ZhciBibz1uZXcgc3Q7b2EuZ2VvLnN0cmVhbT1mdW5jdGlvbihuLHQpe24mJl9vLmhhc093blByb3BlcnR5KG4udHlwZSk/X29bbi50eXBlXShuLHQpOmh0KG4sdCl9O3ZhciBfbz17RmVhdHVyZTpmdW5jdGlvbihuLHQpe2h0KG4uZ2VvbWV0cnksdCl9LEZlYXR1cmVDb2xsZWN0aW9uOmZ1bmN0aW9uKG4sdCl7Zm9yKHZhciBlPW4uZmVhdHVyZXMscj0tMSx1PWUubGVuZ3RoOysrcjx1OylodChlW3JdLmdlb21ldHJ5LHQpfX0sd289e1NwaGVyZTpmdW5jdGlvbihuLHQpe3Quc3BoZXJlKCl9LFBvaW50OmZ1bmN0aW9uKG4sdCl7bj1uLmNvb3JkaW5hdGVzLHQucG9pbnQoblswXSxuWzFdLG5bMl0pfSxNdWx0aVBvaW50OmZ1bmN0aW9uKG4sdCl7Zm9yKHZhciBlPW4uY29vcmRpbmF0ZXMscj0tMSx1PWUubGVuZ3RoOysrcjx1OyluPWVbcl0sdC5wb2ludChuWzBdLG5bMV0sblsyXSl9LExpbmVTdHJpbmc6ZnVuY3Rpb24obix0KXtndChuLmNvb3JkaW5hdGVzLHQsMCl9LE11bHRpTGluZVN0cmluZzpmdW5jdGlvbihuLHQpe2Zvcih2YXIgZT1uLmNvb3JkaW5hdGVzLHI9LTEsdT1lLmxlbmd0aDsrK3I8dTspZ3QoZVtyXSx0LDApfSxQb2x5Z29uOmZ1bmN0aW9uKG4sdCl7cHQobi5jb29yZGluYXRlcyx0KX0sTXVsdGlQb2x5Z29uOmZ1bmN0aW9uKG4sdCl7Zm9yKHZhciBlPW4uY29vcmRpbmF0ZXMscj0tMSx1PWUubGVuZ3RoOysrcjx1OylwdChlW3JdLHQpfSxHZW9tZXRyeUNvbGxlY3Rpb246ZnVuY3Rpb24obix0KXtmb3IodmFyIGU9bi5nZW9tZXRyaWVzLHI9LTEsdT1lLmxlbmd0aDsrK3I8dTspaHQoZVtyXSx0KX19O29hLmdlby5hcmVhPWZ1bmN0aW9uKG4pe3JldHVybiBTbz0wLG9hLmdlby5zdHJlYW0obixObyksU299O3ZhciBTbyxrbz1uZXcgc3QsTm89e3NwaGVyZTpmdW5jdGlvbigpe1NvKz00KmphfSxwb2ludDpiLGxpbmVTdGFydDpiLGxpbmVFbmQ6Yixwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtrby5yZXNldCgpLE5vLmxpbmVTdGFydD12dH0scG9seWdvbkVuZDpmdW5jdGlvbigpe3ZhciBuPTIqa287U28rPTA+bj80KmphK246bixOby5saW5lU3RhcnQ9Tm8ubGluZUVuZD1Oby5wb2ludD1ifX07b2EuZ2VvLmJvdW5kcz1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obix0KXtNLnB1c2goeD1bcz1uLGg9bl0pLGY+dCYmKGY9dCksdD5nJiYoZz10KX1mdW5jdGlvbiB0KHQsZSl7dmFyIHI9ZHQoW3QqSWEsZSpJYV0pO2lmKG0pe3ZhciB1PXl0KG0sciksaT1bdVsxXSwtdVswXSwwXSxhPXl0KGksdSk7YnQoYSksYT1fdChhKTt2YXIgbD10LXAsYz1sPjA/MTotMSx2PWFbMF0qWWEqYyxkPU1hKGwpPjE4MDtpZihkXih2PmMqcCYmYyp0PnYpKXt2YXIgeT1hWzFdKllhO3k+ZyYmKGc9eSl9ZWxzZSBpZih2PSh2KzM2MCklMzYwLTE4MCxkXih2PmMqcCYmYyp0PnYpKXt2YXIgeT0tYVsxXSpZYTtmPnkmJihmPXkpfWVsc2UgZj5lJiYoZj1lKSxlPmcmJihnPWUpO2Q/cD50P28ocyx0KT5vKHMsaCkmJihoPXQpOm8odCxoKT5vKHMsaCkmJihzPXQpOmg+PXM/KHM+dCYmKHM9dCksdD5oJiYoaD10KSk6dD5wP28ocyx0KT5vKHMsaCkmJihoPXQpOm8odCxoKT5vKHMsaCkmJihzPXQpfWVsc2Ugbih0LGUpO209cixwPXR9ZnVuY3Rpb24gZSgpe2IucG9pbnQ9dH1mdW5jdGlvbiByKCl7eFswXT1zLHhbMV09aCxiLnBvaW50PW4sbT1udWxsfWZ1bmN0aW9uIHUobixlKXtpZihtKXt2YXIgcj1uLXA7eSs9TWEocik+MTgwP3IrKHI+MD8zNjA6LTM2MCk6cn1lbHNlIHY9bixkPWU7Tm8ucG9pbnQobixlKSx0KG4sZSl9ZnVuY3Rpb24gaSgpe05vLmxpbmVTdGFydCgpfWZ1bmN0aW9uIGEoKXt1KHYsZCksTm8ubGluZUVuZCgpLE1hKHkpPlBhJiYocz0tKGg9MTgwKSkseFswXT1zLHhbMV09aCxtPW51bGx9ZnVuY3Rpb24gbyhuLHQpe3JldHVybih0LT1uKTwwP3QrMzYwOnR9ZnVuY3Rpb24gbChuLHQpe3JldHVybiBuWzBdLXRbMF19ZnVuY3Rpb24gYyhuLHQpe3JldHVybiB0WzBdPD10WzFdP3RbMF08PW4mJm48PXRbMV06bjx0WzBdfHx0WzFdPG59dmFyIHMsZixoLGcscCx2LGQsbSx5LE0seCxiPXtwb2ludDpuLGxpbmVTdGFydDplLGxpbmVFbmQ6cixwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtiLnBvaW50PXUsYi5saW5lU3RhcnQ9aSxiLmxpbmVFbmQ9YSx5PTAsTm8ucG9seWdvblN0YXJ0KCl9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtOby5wb2x5Z29uRW5kKCksYi5wb2ludD1uLGIubGluZVN0YXJ0PWUsYi5saW5lRW5kPXIsMD5rbz8ocz0tKGg9MTgwKSxmPS0oZz05MCkpOnk+UGE/Zz05MDotUGE+eSYmKGY9LTkwKSx4WzBdPXMseFsxXT1ofX07cmV0dXJuIGZ1bmN0aW9uKG4pe2c9aD0tKHM9Zj0xLzApLE09W10sb2EuZ2VvLnN0cmVhbShuLGIpO3ZhciB0PU0ubGVuZ3RoO2lmKHQpe00uc29ydChsKTtmb3IodmFyIGUscj0xLHU9TVswXSxpPVt1XTt0PnI7KytyKWU9TVtyXSxjKGVbMF0sdSl8fGMoZVsxXSx1KT8obyh1WzBdLGVbMV0pPm8odVswXSx1WzFdKSYmKHVbMV09ZVsxXSksbyhlWzBdLHVbMV0pPm8odVswXSx1WzFdKSYmKHVbMF09ZVswXSkpOmkucHVzaCh1PWUpO2Zvcih2YXIgYSxlLHA9LSgxLzApLHQ9aS5sZW5ndGgtMSxyPTAsdT1pW3RdO3Q+PXI7dT1lLCsrcillPWlbcl0sKGE9byh1WzFdLGVbMF0pKT5wJiYocD1hLHM9ZVswXSxoPXVbMV0pfXJldHVybiBNPXg9bnVsbCxzPT09MS8wfHxmPT09MS8wP1tbTmFOLE5hTl0sW05hTixOYU5dXTpbW3MsZl0sW2gsZ11dfX0oKSxvYS5nZW8uY2VudHJvaWQ9ZnVuY3Rpb24obil7RW89QW89Q289em89TG89cW89VG89Um89RG89UG89VW89MCxvYS5nZW8uc3RyZWFtKG4sam8pO3ZhciB0PURvLGU9UG8scj1Vbyx1PXQqdCtlKmUrcipyO3JldHVybiBVYT51JiYodD1xbyxlPVRvLHI9Um8sUGE+QW8mJih0PUNvLGU9em8scj1MbyksdT10KnQrZSplK3IqcixVYT51KT9bTmFOLE5hTl06W01hdGguYXRhbjIoZSx0KSpZYSx0bihyL01hdGguc3FydCh1KSkqWWFdfTt2YXIgRW8sQW8sQ28sem8sTG8scW8sVG8sUm8sRG8sUG8sVW8sam89e3NwaGVyZTpiLHBvaW50OlN0LGxpbmVTdGFydDpOdCxsaW5lRW5kOkV0LHBvbHlnb25TdGFydDpmdW5jdGlvbigpe2pvLmxpbmVTdGFydD1BdH0scG9seWdvbkVuZDpmdW5jdGlvbigpe2pvLmxpbmVTdGFydD1OdH19LEZvPVJ0KHp0LGp0LEh0LFstamEsLWphLzJdKSxIbz0xZTk7b2EuZ2VvLmNsaXBFeHRlbnQ9ZnVuY3Rpb24oKXt2YXIgbix0LGUscix1LGksYT17c3RyZWFtOmZ1bmN0aW9uKG4pe3JldHVybiB1JiYodS52YWxpZD0hMSksdT1pKG4pLHUudmFsaWQ9ITAsdX0sZXh0ZW50OmZ1bmN0aW9uKG8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPVp0KG49K29bMF1bMF0sdD0rb1swXVsxXSxlPStvWzFdWzBdLHI9K29bMV1bMV0pLHUmJih1LnZhbGlkPSExLHU9bnVsbCksYSk6W1tuLHRdLFtlLHJdXX19O3JldHVybiBhLmV4dGVudChbWzAsMF0sWzk2MCw1MDBdXSl9LChvYS5nZW8uY29uaWNFcXVhbEFyZWE9ZnVuY3Rpb24oKXtyZXR1cm4gVnQoWHQpfSkucmF3PVh0LG9hLmdlby5hbGJlcnM9ZnVuY3Rpb24oKXtyZXR1cm4gb2EuZ2VvLmNvbmljRXF1YWxBcmVhKCkucm90YXRlKFs5NiwwXSkuY2VudGVyKFstLjYsMzguN10pLnBhcmFsbGVscyhbMjkuNSw0NS41XSkuc2NhbGUoMTA3MCl9LG9hLmdlby5hbGJlcnNVc2E9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4pe3ZhciBpPW5bMF0sYT1uWzFdO3JldHVybiB0PW51bGwsZShpLGEpLHR8fChyKGksYSksdCl8fHUoaSxhKSx0fXZhciB0LGUscix1LGk9b2EuZ2VvLmFsYmVycygpLGE9b2EuZ2VvLmNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsxNTQsMF0pLmNlbnRlcihbLTIsNTguNV0pLnBhcmFsbGVscyhbNTUsNjVdKSxvPW9hLmdlby5jb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbMTU3LDBdKS5jZW50ZXIoWy0zLDE5LjldKS5wYXJhbGxlbHMoWzgsMThdKSxsPXtwb2ludDpmdW5jdGlvbihuLGUpe3Q9W24sZV19fTtyZXR1cm4gbi5pbnZlcnQ9ZnVuY3Rpb24obil7dmFyIHQ9aS5zY2FsZSgpLGU9aS50cmFuc2xhdGUoKSxyPShuWzBdLWVbMF0pL3QsdT0oblsxXS1lWzFdKS90O3JldHVybih1Pj0uMTImJi4yMzQ+dSYmcj49LS40MjUmJi0uMjE0PnI/YTp1Pj0uMTY2JiYuMjM0PnUmJnI+PS0uMjE0JiYtLjExNT5yP286aSkuaW52ZXJ0KG4pfSxuLnN0cmVhbT1mdW5jdGlvbihuKXt2YXIgdD1pLnN0cmVhbShuKSxlPWEuc3RyZWFtKG4pLHI9by5zdHJlYW0obik7cmV0dXJue3BvaW50OmZ1bmN0aW9uKG4sdSl7dC5wb2ludChuLHUpLGUucG9pbnQobix1KSxyLnBvaW50KG4sdSl9LHNwaGVyZTpmdW5jdGlvbigpe3Quc3BoZXJlKCksZS5zcGhlcmUoKSxyLnNwaGVyZSgpfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0LmxpbmVTdGFydCgpLGUubGluZVN0YXJ0KCksci5saW5lU3RhcnQoKX0sbGluZUVuZDpmdW5jdGlvbigpe3QubGluZUVuZCgpLGUubGluZUVuZCgpLHIubGluZUVuZCgpfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXt0LnBvbHlnb25TdGFydCgpLGUucG9seWdvblN0YXJ0KCksci5wb2x5Z29uU3RhcnQoKX0scG9seWdvbkVuZDpmdW5jdGlvbigpe3QucG9seWdvbkVuZCgpLGUucG9seWdvbkVuZCgpLHIucG9seWdvbkVuZCgpfX19LG4ucHJlY2lzaW9uPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpLnByZWNpc2lvbih0KSxhLnByZWNpc2lvbih0KSxvLnByZWNpc2lvbih0KSxuKTppLnByZWNpc2lvbigpfSxuLnNjYWxlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpLnNjYWxlKHQpLGEuc2NhbGUoLjM1KnQpLG8uc2NhbGUodCksbi50cmFuc2xhdGUoaS50cmFuc2xhdGUoKSkpOmkuc2NhbGUoKX0sbi50cmFuc2xhdGU9ZnVuY3Rpb24odCl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGkudHJhbnNsYXRlKCk7dmFyIGM9aS5zY2FsZSgpLHM9K3RbMF0sZj0rdFsxXTtyZXR1cm4gZT1pLnRyYW5zbGF0ZSh0KS5jbGlwRXh0ZW50KFtbcy0uNDU1KmMsZi0uMjM4KmNdLFtzKy40NTUqYyxmKy4yMzgqY11dKS5zdHJlYW0obCkucG9pbnQscj1hLnRyYW5zbGF0ZShbcy0uMzA3KmMsZisuMjAxKmNdKS5jbGlwRXh0ZW50KFtbcy0uNDI1KmMrUGEsZisuMTIqYytQYV0sW3MtLjIxNCpjLVBhLGYrLjIzNCpjLVBhXV0pLnN0cmVhbShsKS5wb2ludCx1PW8udHJhbnNsYXRlKFtzLS4yMDUqYyxmKy4yMTIqY10pLmNsaXBFeHRlbnQoW1tzLS4yMTQqYytQYSxmKy4xNjYqYytQYV0sW3MtLjExNSpjLVBhLGYrLjIzNCpjLVBhXV0pLnN0cmVhbShsKS5wb2ludCxufSxuLnNjYWxlKDEwNzApfTt2YXIgT28sSW8sWW8sWm8sVm8sWG8sJG89e3BvaW50OmIsbGluZVN0YXJ0OmIsbGluZUVuZDpiLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe0lvPTAsJG8ubGluZVN0YXJ0PSR0fSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7JG8ubGluZVN0YXJ0PSRvLmxpbmVFbmQ9JG8ucG9pbnQ9YixPbys9TWEoSW8vMil9fSxCbz17cG9pbnQ6QnQsbGluZVN0YXJ0OmIsbGluZUVuZDpiLHBvbHlnb25TdGFydDpiLHBvbHlnb25FbmQ6Yn0sV289e3BvaW50Okd0LGxpbmVTdGFydDpLdCxsaW5lRW5kOlF0LHBvbHlnb25TdGFydDpmdW5jdGlvbigpe1dvLmxpbmVTdGFydD1uZX0scG9seWdvbkVuZDpmdW5jdGlvbigpe1dvLnBvaW50PUd0LFdvLmxpbmVTdGFydD1LdCxXby5saW5lRW5kPVF0fX07b2EuZ2VvLnBhdGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4pe3JldHVybiBuJiYoXCJmdW5jdGlvblwiPT10eXBlb2YgbyYmaS5wb2ludFJhZGl1cygrby5hcHBseSh0aGlzLGFyZ3VtZW50cykpLGEmJmEudmFsaWR8fChhPXUoaSkpLG9hLmdlby5zdHJlYW0obixhKSksaS5yZXN1bHQoKX1mdW5jdGlvbiB0KCl7cmV0dXJuIGE9bnVsbCxufXZhciBlLHIsdSxpLGEsbz00LjU7cmV0dXJuIG4uYXJlYT1mdW5jdGlvbihuKXtyZXR1cm4gT289MCxvYS5nZW8uc3RyZWFtKG4sdSgkbykpLE9vfSxuLmNlbnRyb2lkPWZ1bmN0aW9uKG4pe3JldHVybiBDbz16bz1Mbz1xbz1Ubz1Sbz1Ebz1Qbz1Vbz0wLG9hLmdlby5zdHJlYW0obix1KFdvKSksVW8/W0RvL1VvLFBvL1VvXTpSbz9bcW8vUm8sVG8vUm9dOkxvP1tDby9Mbyx6by9Mb106W05hTixOYU5dfSxuLmJvdW5kcz1mdW5jdGlvbihuKXtyZXR1cm4gVm89WG89LShZbz1abz0xLzApLG9hLmdlby5zdHJlYW0obix1KEJvKSksW1tZbyxab10sW1ZvLFhvXV19LG4ucHJvamVjdGlvbj1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT0oZT1uKT9uLnN0cmVhbXx8cmUobik6eSx0KCkpOmV9LG4uY29udGV4dD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1udWxsPT0ocj1uKT9uZXcgV3Q6bmV3IHRlKG4pLFwiZnVuY3Rpb25cIiE9dHlwZW9mIG8mJmkucG9pbnRSYWRpdXMobyksdCgpKTpyfSxuLnBvaW50UmFkaXVzPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDooaS5wb2ludFJhZGl1cygrdCksK3QpLG4pOm99LG4ucHJvamVjdGlvbihvYS5nZW8uYWxiZXJzVXNhKCkpLmNvbnRleHQobnVsbCl9LG9hLmdlby50cmFuc2Zvcm09ZnVuY3Rpb24obil7cmV0dXJue3N0cmVhbTpmdW5jdGlvbih0KXt2YXIgZT1uZXcgdWUodCk7Zm9yKHZhciByIGluIG4pZVtyXT1uW3JdO3JldHVybiBlfX19LHVlLnByb3RvdHlwZT17cG9pbnQ6ZnVuY3Rpb24obix0KXt0aGlzLnN0cmVhbS5wb2ludChuLHQpfSxzcGhlcmU6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5zcGhlcmUoKX0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5zdHJlYW0ubGluZVN0YXJ0KCl9LGxpbmVFbmQ6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5saW5lRW5kKCl9LHBvbHlnb25TdGFydDpmdW5jdGlvbigpe3RoaXMuc3RyZWFtLnBvbHlnb25TdGFydCgpfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7dGhpcy5zdHJlYW0ucG9seWdvbkVuZCgpfX0sb2EuZ2VvLnByb2plY3Rpb249YWUsb2EuZ2VvLnByb2plY3Rpb25NdXRhdG9yPW9lLChvYS5nZW8uZXF1aXJlY3Rhbmd1bGFyPWZ1bmN0aW9uKCl7cmV0dXJuIGFlKGNlKX0pLnJhdz1jZS5pbnZlcnQ9Y2Usb2EuZ2VvLnJvdGF0aW9uPWZ1bmN0aW9uKG4pe2Z1bmN0aW9uIHQodCl7cmV0dXJuIHQ9bih0WzBdKklhLHRbMV0qSWEpLHRbMF0qPVlhLHRbMV0qPVlhLHR9cmV0dXJuIG49ZmUoblswXSUzNjAqSWEsblsxXSpJYSxuLmxlbmd0aD4yP25bMl0qSWE6MCksdC5pbnZlcnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bi5pbnZlcnQodFswXSpJYSx0WzFdKklhKSx0WzBdKj1ZYSx0WzFdKj1ZYSx0fSx0fSxzZS5pbnZlcnQ9Y2Usb2EuZ2VvLmNpcmNsZT1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oKXt2YXIgbj1cImZ1bmN0aW9uXCI9PXR5cGVvZiByP3IuYXBwbHkodGhpcyxhcmd1bWVudHMpOnIsdD1mZSgtblswXSpJYSwtblsxXSpJYSwwKS5pbnZlcnQsdT1bXTtyZXR1cm4gZShudWxsLG51bGwsMSx7cG9pbnQ6ZnVuY3Rpb24obixlKXt1LnB1c2gobj10KG4sZSkpLG5bMF0qPVlhLG5bMV0qPVlhfX0pLHt0eXBlOlwiUG9seWdvblwiLGNvb3JkaW5hdGVzOlt1XX19dmFyIHQsZSxyPVswLDBdLHU9NjtyZXR1cm4gbi5vcmlnaW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9dCxuKTpyfSxuLmFuZ2xlPWZ1bmN0aW9uKHIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXZlKCh0PStyKSpJYSx1KklhKSxuKTp0fSxuLnByZWNpc2lvbj1mdW5jdGlvbihyKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT12ZSh0KklhLCh1PStyKSpJYSksbik6dX0sbi5hbmdsZSg5MCl9LG9hLmdlby5kaXN0YW5jZT1mdW5jdGlvbihuLHQpe3ZhciBlLHI9KHRbMF0tblswXSkqSWEsdT1uWzFdKklhLGk9dFsxXSpJYSxhPU1hdGguc2luKHIpLG89TWF0aC5jb3MociksbD1NYXRoLnNpbih1KSxjPU1hdGguY29zKHUpLHM9TWF0aC5zaW4oaSksZj1NYXRoLmNvcyhpKTtyZXR1cm4gTWF0aC5hdGFuMihNYXRoLnNxcnQoKGU9ZiphKSplKyhlPWMqcy1sKmYqbykqZSksbCpzK2MqZipvKX0sb2EuZ2VvLmdyYXRpY3VsZT1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oKXtyZXR1cm57dHlwZTpcIk11bHRpTGluZVN0cmluZ1wiLGNvb3JkaW5hdGVzOnQoKX19ZnVuY3Rpb24gdCgpe3JldHVybiBvYS5yYW5nZShNYXRoLmNlaWwoaS9kKSpkLHUsZCkubWFwKGgpLmNvbmNhdChvYS5yYW5nZShNYXRoLmNlaWwoYy9tKSptLGwsbSkubWFwKGcpKS5jb25jYXQob2EucmFuZ2UoTWF0aC5jZWlsKHIvcCkqcCxlLHApLmZpbHRlcihmdW5jdGlvbihuKXtyZXR1cm4gTWEobiVkKT5QYX0pLm1hcChzKSkuY29uY2F0KG9hLnJhbmdlKE1hdGguY2VpbChvL3YpKnYsYSx2KS5maWx0ZXIoZnVuY3Rpb24obil7cmV0dXJuIE1hKG4lbSk+UGF9KS5tYXAoZikpfXZhciBlLHIsdSxpLGEsbyxsLGMscyxmLGgsZyxwPTEwLHY9cCxkPTkwLG09MzYwLHk9Mi41O3JldHVybiBuLmxpbmVzPWZ1bmN0aW9uKCl7cmV0dXJuIHQoKS5tYXAoZnVuY3Rpb24obil7cmV0dXJue3R5cGU6XCJMaW5lU3RyaW5nXCIsY29vcmRpbmF0ZXM6bn19KX0sbi5vdXRsaW5lPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6XCJQb2x5Z29uXCIsY29vcmRpbmF0ZXM6W2goaSkuY29uY2F0KGcobCkuc2xpY2UoMSksaCh1KS5yZXZlcnNlKCkuc2xpY2UoMSksZyhjKS5yZXZlcnNlKCkuc2xpY2UoMSkpXX19LG4uZXh0ZW50PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP24ubWFqb3JFeHRlbnQodCkubWlub3JFeHRlbnQodCk6bi5taW5vckV4dGVudCgpfSxuLm1ham9yRXh0ZW50PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSt0WzBdWzBdLHU9K3RbMV1bMF0sYz0rdFswXVsxXSxsPSt0WzFdWzFdLGk+dSYmKHQ9aSxpPXUsdT10KSxjPmwmJih0PWMsYz1sLGw9dCksbi5wcmVjaXNpb24oeSkpOltbaSxjXSxbdSxsXV19LG4ubWlub3JFeHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9K3RbMF1bMF0sZT0rdFsxXVswXSxvPSt0WzBdWzFdLGE9K3RbMV1bMV0scj5lJiYodD1yLHI9ZSxlPXQpLG8+YSYmKHQ9byxvPWEsYT10KSxuLnByZWNpc2lvbih5KSk6W1tyLG9dLFtlLGFdXX0sbi5zdGVwPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP24ubWFqb3JTdGVwKHQpLm1pbm9yU3RlcCh0KTpuLm1pbm9yU3RlcCgpfSxuLm1ham9yU3RlcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZD0rdFswXSxtPSt0WzFdLG4pOltkLG1dfSxuLm1pbm9yU3RlcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocD0rdFswXSx2PSt0WzFdLG4pOltwLHZdfSxuLnByZWNpc2lvbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeT0rdCxzPW1lKG8sYSw5MCksZj15ZShyLGUseSksaD1tZShjLGwsOTApLGc9eWUoaSx1LHkpLG4pOnl9LG4ubWFqb3JFeHRlbnQoW1stMTgwLC05MCtQYV0sWzE4MCw5MC1QYV1dKS5taW5vckV4dGVudChbWy0xODAsLTgwLVBhXSxbMTgwLDgwK1BhXV0pfSxvYS5nZW8uZ3JlYXRBcmM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7cmV0dXJue3R5cGU6XCJMaW5lU3RyaW5nXCIsY29vcmRpbmF0ZXM6W3R8fHIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGV8fHUuYXBwbHkodGhpcyxhcmd1bWVudHMpXX19dmFyIHQsZSxyPU1lLHU9eGU7cmV0dXJuIG4uZGlzdGFuY2U9ZnVuY3Rpb24oKXtyZXR1cm4gb2EuZ2VvLmRpc3RhbmNlKHR8fHIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGV8fHUuYXBwbHkodGhpcyxhcmd1bWVudHMpKX0sbi5zb3VyY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9ZSx0PVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/bnVsbDplLG4pOnJ9LG4udGFyZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PXQsZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P251bGw6dCxuKTp1fSxuLnByZWNpc2lvbj1mdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP246MH0sbn0sb2EuZ2VvLmludGVycG9sYXRlPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIGJlKG5bMF0qSWEsblsxXSpJYSx0WzBdKklhLHRbMV0qSWEpfSxvYS5nZW8ubGVuZ3RoPWZ1bmN0aW9uKG4pe3JldHVybiBKbz0wLG9hLmdlby5zdHJlYW0obixHbyksSm99O3ZhciBKbyxHbz17c3BoZXJlOmIscG9pbnQ6YixsaW5lU3RhcnQ6X2UsbGluZUVuZDpiLHBvbHlnb25TdGFydDpiLHBvbHlnb25FbmQ6Yn0sS289d2UoZnVuY3Rpb24obil7cmV0dXJuIE1hdGguc3FydCgyLygxK24pKX0sZnVuY3Rpb24obil7cmV0dXJuIDIqTWF0aC5hc2luKG4vMil9KTsob2EuZ2VvLmF6aW11dGhhbEVxdWFsQXJlYT1mdW5jdGlvbigpe3JldHVybiBhZShLbyl9KS5yYXc9S287dmFyIFFvPXdlKGZ1bmN0aW9uKG4pe3ZhciB0PU1hdGguYWNvcyhuKTtyZXR1cm4gdCYmdC9NYXRoLnNpbih0KX0seSk7KG9hLmdlby5hemltdXRoYWxFcXVpZGlzdGFudD1mdW5jdGlvbigpe3JldHVybiBhZShRbyl9KS5yYXc9UW8sKG9hLmdlby5jb25pY0NvbmZvcm1hbD1mdW5jdGlvbigpe3JldHVybiBWdChTZSl9KS5yYXc9U2UsKG9hLmdlby5jb25pY0VxdWlkaXN0YW50PWZ1bmN0aW9uKCl7cmV0dXJuIFZ0KGtlKX0pLnJhdz1rZTt2YXIgbmw9d2UoZnVuY3Rpb24obil7cmV0dXJuIDEvbn0sTWF0aC5hdGFuKTsob2EuZ2VvLmdub21vbmljPWZ1bmN0aW9uKCl7cmV0dXJuIGFlKG5sKX0pLnJhdz1ubCxOZS5pbnZlcnQ9ZnVuY3Rpb24obix0KXtyZXR1cm5bbiwyKk1hdGguYXRhbihNYXRoLmV4cCh0KSktT2FdfSwob2EuZ2VvLm1lcmNhdG9yPWZ1bmN0aW9uKCl7cmV0dXJuIEVlKE5lKX0pLnJhdz1OZTt2YXIgdGw9d2UoZnVuY3Rpb24oKXtyZXR1cm4gMX0sTWF0aC5hc2luKTsob2EuZ2VvLm9ydGhvZ3JhcGhpYz1mdW5jdGlvbigpe3JldHVybiBhZSh0bCl9KS5yYXc9dGw7dmFyIGVsPXdlKGZ1bmN0aW9uKG4pe3JldHVybiAxLygxK24pfSxmdW5jdGlvbihuKXtyZXR1cm4gMipNYXRoLmF0YW4obil9KTsob2EuZ2VvLnN0ZXJlb2dyYXBoaWM9ZnVuY3Rpb24oKXtyZXR1cm4gYWUoZWwpfSkucmF3PWVsLEFlLmludmVydD1mdW5jdGlvbihuLHQpe3JldHVyblstdCwyKk1hdGguYXRhbihNYXRoLmV4cChuKSktT2FdfSwob2EuZ2VvLnRyYW5zdmVyc2VNZXJjYXRvcj1mdW5jdGlvbigpe3ZhciBuPUVlKEFlKSx0PW4uY2VudGVyLGU9bi5yb3RhdGU7cmV0dXJuIG4uY2VudGVyPWZ1bmN0aW9uKG4pe3JldHVybiBuP3QoWy1uWzFdLG5bMF1dKToobj10KCksW25bMV0sLW5bMF1dKX0sbi5yb3RhdGU9ZnVuY3Rpb24obil7cmV0dXJuIG4/ZShbblswXSxuWzFdLG4ubGVuZ3RoPjI/blsyXSs5MDo5MF0pOihuPWUoKSxbblswXSxuWzFdLG5bMl0tOTBdKX0sZShbMCwwLDkwXSl9KS5yYXc9QWUsb2EuZ2VvbT17fSxvYS5nZW9tLmh1bGw9ZnVuY3Rpb24obil7ZnVuY3Rpb24gdChuKXtpZihuLmxlbmd0aDwzKXJldHVybltdO3ZhciB0LHU9RW4oZSksaT1FbihyKSxhPW4ubGVuZ3RoLG89W10sbD1bXTtmb3IodD0wO2E+dDt0Kyspby5wdXNoKFsrdS5jYWxsKHRoaXMsblt0XSx0KSwraS5jYWxsKHRoaXMsblt0XSx0KSx0XSk7Zm9yKG8uc29ydChxZSksdD0wO2E+dDt0KyspbC5wdXNoKFtvW3RdWzBdLC1vW3RdWzFdXSk7dmFyIGM9TGUobykscz1MZShsKSxmPXNbMF09PT1jWzBdLGg9c1tzLmxlbmd0aC0xXT09PWNbYy5sZW5ndGgtMV0sZz1bXTtmb3IodD1jLmxlbmd0aC0xO3Q+PTA7LS10KWcucHVzaChuW29bY1t0XV1bMl1dKTtmb3IodD0rZjt0PHMubGVuZ3RoLWg7Kyt0KWcucHVzaChuW29bc1t0XV1bMl1dKTtyZXR1cm4gZ312YXIgZT1DZSxyPXplO3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3Qobik6KHQueD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1uLHQpOmV9LHQueT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1uLHQpOnJ9LHQpfSxvYS5nZW9tLnBvbHlnb249ZnVuY3Rpb24obil7cmV0dXJuIFNhKG4scmwpLG59O3ZhciBybD1vYS5nZW9tLnBvbHlnb24ucHJvdG90eXBlPVtdO3JsLmFyZWE9ZnVuY3Rpb24oKXtmb3IodmFyIG4sdD0tMSxlPXRoaXMubGVuZ3RoLHI9dGhpc1tlLTFdLHU9MDsrK3Q8ZTspbj1yLHI9dGhpc1t0XSx1Kz1uWzFdKnJbMF0tblswXSpyWzFdO3JldHVybi41KnV9LHJsLmNlbnRyb2lkPWZ1bmN0aW9uKG4pe3ZhciB0LGUscj0tMSx1PXRoaXMubGVuZ3RoLGk9MCxhPTAsbz10aGlzW3UtMV07Zm9yKGFyZ3VtZW50cy5sZW5ndGh8fChuPS0xLyg2KnRoaXMuYXJlYSgpKSk7KytyPHU7KXQ9byxvPXRoaXNbcl0sZT10WzBdKm9bMV0tb1swXSp0WzFdLGkrPSh0WzBdK29bMF0pKmUsYSs9KHRbMV0rb1sxXSkqZTtyZXR1cm5baSpuLGEqbl19LHJsLmNsaXA9ZnVuY3Rpb24obil7Zm9yKHZhciB0LGUscix1LGksYSxvPURlKG4pLGw9LTEsYz10aGlzLmxlbmd0aC1EZSh0aGlzKSxzPXRoaXNbYy0xXTsrK2w8Yzspe2Zvcih0PW4uc2xpY2UoKSxuLmxlbmd0aD0wLHU9dGhpc1tsXSxpPXRbKHI9dC5sZW5ndGgtbyktMV0sZT0tMTsrK2U8cjspYT10W2VdLFRlKGEscyx1KT8oVGUoaSxzLHUpfHxuLnB1c2goUmUoaSxhLHMsdSkpLG4ucHVzaChhKSk6VGUoaSxzLHUpJiZuLnB1c2goUmUoaSxhLHMsdSkpLGk9YTtvJiZuLnB1c2goblswXSkscz11fXJldHVybiBufTt2YXIgdWwsaWwsYWwsb2wsbGwsY2w9W10sc2w9W107WWUucHJvdG90eXBlLnByZXBhcmU9ZnVuY3Rpb24oKXtmb3IodmFyIG4sdD10aGlzLmVkZ2VzLGU9dC5sZW5ndGg7ZS0tOyluPXRbZV0uZWRnZSxuLmImJm4uYXx8dC5zcGxpY2UoZSwxKTtyZXR1cm4gdC5zb3J0KFZlKSx0Lmxlbmd0aH0sdHIucHJvdG90eXBlPXtzdGFydDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVkZ2UubD09PXRoaXMuc2l0ZT90aGlzLmVkZ2UuYTp0aGlzLmVkZ2UuYn0sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWRnZS5sPT09dGhpcy5zaXRlP3RoaXMuZWRnZS5iOnRoaXMuZWRnZS5hfX0sZXIucHJvdG90eXBlPXtpbnNlcnQ6ZnVuY3Rpb24obix0KXt2YXIgZSxyLHU7aWYobil7aWYodC5QPW4sdC5OPW4uTixuLk4mJihuLk4uUD10KSxuLk49dCxuLlIpe2ZvcihuPW4uUjtuLkw7KW49bi5MO24uTD10fWVsc2Ugbi5SPXQ7ZT1ufWVsc2UgdGhpcy5fPyhuPWFyKHRoaXMuXyksdC5QPW51bGwsdC5OPW4sbi5QPW4uTD10LGU9bik6KHQuUD10Lk49bnVsbCx0aGlzLl89dCxlPW51bGwpO2Zvcih0Lkw9dC5SPW51bGwsdC5VPWUsdC5DPSEwLG49dDtlJiZlLkM7KXI9ZS5VLGU9PT1yLkw/KHU9ci5SLHUmJnUuQz8oZS5DPXUuQz0hMSxyLkM9ITAsbj1yKToobj09PWUuUiYmKHVyKHRoaXMsZSksbj1lLGU9bi5VKSxlLkM9ITEsci5DPSEwLGlyKHRoaXMscikpKToodT1yLkwsdSYmdS5DPyhlLkM9dS5DPSExLHIuQz0hMCxuPXIpOihuPT09ZS5MJiYoaXIodGhpcyxlKSxuPWUsZT1uLlUpLGUuQz0hMSxyLkM9ITAsdXIodGhpcyxyKSkpLGU9bi5VO3RoaXMuXy5DPSExfSxyZW1vdmU6ZnVuY3Rpb24obil7bi5OJiYobi5OLlA9bi5QKSxuLlAmJihuLlAuTj1uLk4pLG4uTj1uLlA9bnVsbDt2YXIgdCxlLHIsdT1uLlUsaT1uLkwsYT1uLlI7aWYoZT1pP2E/YXIoYSk6aTphLHU/dS5MPT09bj91Lkw9ZTp1LlI9ZTp0aGlzLl89ZSxpJiZhPyhyPWUuQyxlLkM9bi5DLGUuTD1pLGkuVT1lLGUhPT1hPyh1PWUuVSxlLlU9bi5VLG49ZS5SLHUuTD1uLGUuUj1hLGEuVT1lKTooZS5VPXUsdT1lLG49ZS5SKSk6KHI9bi5DLG49ZSksbiYmKG4uVT11KSwhcil7aWYobiYmbi5DKXJldHVybiB2b2lkKG4uQz0hMSk7ZG97aWYobj09PXRoaXMuXylicmVhaztpZihuPT09dS5MKXtpZih0PXUuUix0LkMmJih0LkM9ITEsdS5DPSEwLHVyKHRoaXMsdSksdD11LlIpLHQuTCYmdC5MLkN8fHQuUiYmdC5SLkMpe3QuUiYmdC5SLkN8fCh0LkwuQz0hMSx0LkM9ITAsaXIodGhpcyx0KSx0PXUuUiksdC5DPXUuQyx1LkM9dC5SLkM9ITEsdXIodGhpcyx1KSxuPXRoaXMuXzticmVha319ZWxzZSBpZih0PXUuTCx0LkMmJih0LkM9ITEsdS5DPSEwLGlyKHRoaXMsdSksdD11LkwpLHQuTCYmdC5MLkN8fHQuUiYmdC5SLkMpe3QuTCYmdC5MLkN8fCh0LlIuQz0hMSx0LkM9ITAsdXIodGhpcyx0KSx0PXUuTCksdC5DPXUuQyx1LkM9dC5MLkM9ITEsaXIodGhpcyx1KSxuPXRoaXMuXzticmVha310LkM9ITAsbj11LHU9dS5VfXdoaWxlKCFuLkMpO24mJihuLkM9ITEpfX19LG9hLmdlb20udm9yb25vaT1mdW5jdGlvbihuKXtmdW5jdGlvbiB0KG4pe3ZhciB0PW5ldyBBcnJheShuLmxlbmd0aCkscj1vWzBdWzBdLHU9b1swXVsxXSxpPW9bMV1bMF0sYT1vWzFdWzFdO3JldHVybiBvcihlKG4pLG8pLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oZSxvKXt2YXIgbD1lLmVkZ2VzLGM9ZS5zaXRlLHM9dFtvXT1sLmxlbmd0aD9sLm1hcChmdW5jdGlvbihuKXt2YXIgdD1uLnN0YXJ0KCk7cmV0dXJuW3QueCx0LnldfSk6Yy54Pj1yJiZjLng8PWkmJmMueT49dSYmYy55PD1hP1tbcixhXSxbaSxhXSxbaSx1XSxbcix1XV06W107cy5wb2ludD1uW29dfSksdH1mdW5jdGlvbiBlKG4pe3JldHVybiBuLm1hcChmdW5jdGlvbihuLHQpe3JldHVybnt4Ok1hdGgucm91bmQoaShuLHQpL1BhKSpQYSx5Ok1hdGgucm91bmQoYShuLHQpL1BhKSpQYSxpOnR9fSl9dmFyIHI9Q2UsdT16ZSxpPXIsYT11LG89Zmw7cmV0dXJuIG4/dChuKToodC5saW5rcz1mdW5jdGlvbihuKXtyZXR1cm4gb3IoZShuKSkuZWRnZXMuZmlsdGVyKGZ1bmN0aW9uKG4pe3JldHVybiBuLmwmJm4ucn0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm57c291cmNlOm5bdC5sLmldLHRhcmdldDpuW3Quci5pXX19KX0sdC50cmlhbmdsZXM9ZnVuY3Rpb24obil7dmFyIHQ9W107cmV0dXJuIG9yKGUobikpLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oZSxyKXtmb3IodmFyIHUsaSxhPWUuc2l0ZSxvPWUuZWRnZXMuc29ydChWZSksbD0tMSxjPW8ubGVuZ3RoLHM9b1tjLTFdLmVkZ2UsZj1zLmw9PT1hP3MucjpzLmw7KytsPGM7KXU9cyxpPWYscz1vW2xdLmVkZ2UsZj1zLmw9PT1hP3MucjpzLmwscjxpLmkmJnI8Zi5pJiZjcihhLGksZik8MCYmdC5wdXNoKFtuW3JdLG5baS5pXSxuW2YuaV1dKX0pLHR9LHQueD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1FbihyPW4pLHQpOnJ9LHQueT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT1Fbih1PW4pLHQpOnV9LHQuY2xpcEV4dGVudD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1udWxsPT1uP2ZsOm4sdCk6bz09PWZsP251bGw6b30sdC5zaXplPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3QuY2xpcEV4dGVudChuJiZbWzAsMF0sbl0pOm89PT1mbD9udWxsOm8mJm9bMV19LHQpfTt2YXIgZmw9W1stMWU2LC0xZTZdLFsxZTYsMWU2XV07b2EuZ2VvbS5kZWxhdW5heT1mdW5jdGlvbihuKXtyZXR1cm4gb2EuZ2VvbS52b3Jvbm9pKCkudHJpYW5nbGVzKG4pfSxvYS5nZW9tLnF1YWR0cmVlPWZ1bmN0aW9uKG4sdCxlLHIsdSl7ZnVuY3Rpb24gaShuKXtmdW5jdGlvbiBpKG4sdCxlLHIsdSxpLGEsbyl7aWYoIWlzTmFOKGUpJiYhaXNOYU4ocikpaWYobi5sZWFmKXt2YXIgbD1uLngscz1uLnk7aWYobnVsbCE9bClpZihNYShsLWUpK01hKHMtcik8LjAxKWMobix0LGUscix1LGksYSxvKTtlbHNle3ZhciBmPW4ucG9pbnQ7bi54PW4ueT1uLnBvaW50PW51bGwsYyhuLGYsbCxzLHUsaSxhLG8pLGMobix0LGUscix1LGksYSxvKX1lbHNlIG4ueD1lLG4ueT1yLG4ucG9pbnQ9dH1lbHNlIGMobix0LGUscix1LGksYSxvKX1mdW5jdGlvbiBjKG4sdCxlLHIsdSxhLG8sbCl7dmFyIGM9LjUqKHUrbykscz0uNSooYStsKSxmPWU+PWMsaD1yPj1zLGc9aDw8MXxmO24ubGVhZj0hMSxuPW4ubm9kZXNbZ118fChuLm5vZGVzW2ddPWhyKCkpLGY/dT1jOm89YyxoP2E9czpsPXMsaShuLHQsZSxyLHUsYSxvLGwpfXZhciBzLGYsaCxnLHAsdixkLG0seSxNPUVuKG8pLHg9RW4obCk7aWYobnVsbCE9dCl2PXQsZD1lLG09cix5PXU7ZWxzZSBpZihtPXk9LSh2PWQ9MS8wKSxmPVtdLGg9W10scD1uLmxlbmd0aCxhKWZvcihnPTA7cD5nOysrZylzPW5bZ10scy54PHYmJih2PXMueCkscy55PGQmJihkPXMueSkscy54Pm0mJihtPXMueCkscy55PnkmJih5PXMueSksZi5wdXNoKHMueCksaC5wdXNoKHMueSk7ZWxzZSBmb3IoZz0wO3A+ZzsrK2cpe3ZhciBiPStNKHM9bltnXSxnKSxfPSt4KHMsZyk7dj5iJiYodj1iKSxkPl8mJihkPV8pLGI+bSYmKG09YiksXz55JiYoeT1fKSxmLnB1c2goYiksaC5wdXNoKF8pfXZhciB3PW0tdixTPXktZDt3PlM/eT1kK3c6bT12K1M7dmFyIGs9aHIoKTtpZihrLmFkZD1mdW5jdGlvbihuKXtpKGssbiwrTShuLCsrZyksK3gobixnKSx2LGQsbSx5KX0say52aXNpdD1mdW5jdGlvbihuKXtncihuLGssdixkLG0seSl9LGsuZmluZD1mdW5jdGlvbihuKXtyZXR1cm4gcHIoayxuWzBdLG5bMV0sdixkLG0seSl9LGc9LTEsbnVsbD09dCl7Zm9yKDsrK2c8cDspaShrLG5bZ10sZltnXSxoW2ddLHYsZCxtLHkpOy0tZ31lbHNlIG4uZm9yRWFjaChrLmFkZCk7cmV0dXJuIGY9aD1uPXM9bnVsbCxrfXZhciBhLG89Q2UsbD16ZTtyZXR1cm4oYT1hcmd1bWVudHMubGVuZ3RoKT8obz1zcixsPWZyLDM9PT1hJiYodT1lLHI9dCxlPXQ9MCksaShuKSk6KGkueD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1uLGkpOm99LGkueT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obD1uLGkpOmx9LGkuZXh0ZW50PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhudWxsPT1uP3Q9ZT1yPXU9bnVsbDoodD0rblswXVswXSxlPStuWzBdWzFdLHI9K25bMV1bMF0sdT0rblsxXVsxXSksaSk6bnVsbD09dD9udWxsOltbdCxlXSxbcix1XV19LGkuc2l6ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obnVsbD09bj90PWU9cj11PW51bGw6KHQ9ZT0wLHI9K25bMF0sdT0rblsxXSksaSk6bnVsbD09dD9udWxsOltyLXQsdS1lXX0saSl9LG9hLmludGVycG9sYXRlUmdiPXZyLG9hLmludGVycG9sYXRlT2JqZWN0PWRyLG9hLmludGVycG9sYXRlTnVtYmVyPW1yLG9hLmludGVycG9sYXRlU3RyaW5nPXlyO3ZhciBobD0vWy0rXT8oPzpcXGQrXFwuP1xcZCp8XFwuP1xcZCspKD86W2VFXVstK10/XFxkKyk/L2csZ2w9bmV3IFJlZ0V4cChobC5zb3VyY2UsXCJnXCIpO29hLmludGVycG9sYXRlPU1yLG9hLmludGVycG9sYXRvcnM9W2Z1bmN0aW9uKG4sdCl7dmFyIGU9dHlwZW9mIHQ7cmV0dXJuKFwic3RyaW5nXCI9PT1lP3VvLmhhcyh0LnRvTG93ZXJDYXNlKCkpfHwvXigjfHJnYlxcKHxoc2xcXCgpL2kudGVzdCh0KT92cjp5cjp0IGluc3RhbmNlb2Ygb24/dnI6QXJyYXkuaXNBcnJheSh0KT94cjpcIm9iamVjdFwiPT09ZSYmaXNOYU4odCk/ZHI6bXIpKG4sdCl9XSxvYS5pbnRlcnBvbGF0ZUFycmF5PXhyO3ZhciBwbD1mdW5jdGlvbigpe3JldHVybiB5fSx2bD1vYS5tYXAoe2xpbmVhcjpwbCxwb2x5OkVyLHF1YWQ6ZnVuY3Rpb24oKXtyZXR1cm4gU3J9LGN1YmljOmZ1bmN0aW9uKCl7cmV0dXJuIGtyfSxzaW46ZnVuY3Rpb24oKXtyZXR1cm4gQXJ9LGV4cDpmdW5jdGlvbigpe3JldHVybiBDcn0sY2lyY2xlOmZ1bmN0aW9uKCl7cmV0dXJuIHpyfSxlbGFzdGljOkxyLGJhY2s6cXIsYm91bmNlOmZ1bmN0aW9uKCl7cmV0dXJuIFRyfX0pLGRsPW9hLm1hcCh7XCJpblwiOnksb3V0Ol9yLFwiaW4tb3V0XCI6d3IsXCJvdXQtaW5cIjpmdW5jdGlvbihuKXtyZXR1cm4gd3IoX3IobikpfX0pO29hLmVhc2U9ZnVuY3Rpb24obil7dmFyIHQ9bi5pbmRleE9mKFwiLVwiKSxlPXQ+PTA/bi5zbGljZSgwLHQpOm4scj10Pj0wP24uc2xpY2UodCsxKTpcImluXCI7cmV0dXJuIGU9dmwuZ2V0KGUpfHxwbCxyPWRsLmdldChyKXx8eSxicihyKGUuYXBwbHkobnVsbCxsYS5jYWxsKGFyZ3VtZW50cywxKSkpKX0sb2EuaW50ZXJwb2xhdGVIY2w9UnIsb2EuaW50ZXJwb2xhdGVIc2w9RHIsb2EuaW50ZXJwb2xhdGVMYWI9UHIsb2EuaW50ZXJwb2xhdGVSb3VuZD1VcixvYS50cmFuc2Zvcm09ZnVuY3Rpb24obil7dmFyIHQ9c2EuY3JlYXRlRWxlbWVudE5TKG9hLm5zLnByZWZpeC5zdmcsXCJnXCIpO3JldHVybihvYS50cmFuc2Zvcm09ZnVuY3Rpb24obil7aWYobnVsbCE9bil7dC5zZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIixuKTt2YXIgZT10LnRyYW5zZm9ybS5iYXNlVmFsLmNvbnNvbGlkYXRlKCl9cmV0dXJuIG5ldyBqcihlP2UubWF0cml4Om1sKX0pKG4pfSxqci5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cInRyYW5zbGF0ZShcIit0aGlzLnRyYW5zbGF0ZStcIilyb3RhdGUoXCIrdGhpcy5yb3RhdGUrXCIpc2tld1goXCIrdGhpcy5za2V3K1wiKXNjYWxlKFwiK3RoaXMuc2NhbGUrXCIpXCJ9O3ZhciBtbD17YToxLGI6MCxjOjAsZDoxLGU6MCxmOjB9O29hLmludGVycG9sYXRlVHJhbnNmb3JtPSRyLG9hLmxheW91dD17fSxvYS5sYXlvdXQuYnVuZGxlPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKG4pe2Zvcih2YXIgdD1bXSxlPS0xLHI9bi5sZW5ndGg7KytlPHI7KXQucHVzaChKcihuW2VdKSk7cmV0dXJuIHR9fSxvYS5sYXlvdXQuY2hvcmQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIG4sYyxmLGgsZyxwPXt9LHY9W10sZD1vYS5yYW5nZShpKSxtPVtdO2ZvcihlPVtdLHI9W10sbj0wLGg9LTE7KytoPGk7KXtmb3IoYz0wLGc9LTE7KytnPGk7KWMrPXVbaF1bZ107di5wdXNoKGMpLG0ucHVzaChvYS5yYW5nZShpKSksbis9Y31mb3IoYSYmZC5zb3J0KGZ1bmN0aW9uKG4sdCl7cmV0dXJuIGEodltuXSx2W3RdKX0pLG8mJm0uZm9yRWFjaChmdW5jdGlvbihuLHQpe24uc29ydChmdW5jdGlvbihuLGUpe3JldHVybiBvKHVbdF1bbl0sdVt0XVtlXSl9KX0pLG49KEZhLXMqaSkvbixjPTAsaD0tMTsrK2g8aTspe2ZvcihmPWMsZz0tMTsrK2c8aTspe3ZhciB5PWRbaF0sTT1tW3ldW2ddLHg9dVt5XVtNXSxiPWMsXz1jKz14Km47cFt5K1wiLVwiK01dPXtpbmRleDp5LHN1YmluZGV4Ok0sc3RhcnRBbmdsZTpiLGVuZEFuZ2xlOl8sdmFsdWU6eH19clt5XT17aW5kZXg6eSxzdGFydEFuZ2xlOmYsZW5kQW5nbGU6Yyx2YWx1ZTp2W3ldfSxjKz1zfWZvcihoPS0xOysraDxpOylmb3IoZz1oLTE7KytnPGk7KXt2YXIgdz1wW2grXCItXCIrZ10sUz1wW2crXCItXCIraF07KHcudmFsdWV8fFMudmFsdWUpJiZlLnB1c2gody52YWx1ZTxTLnZhbHVlP3tzb3VyY2U6Uyx0YXJnZXQ6d306e3NvdXJjZTp3LHRhcmdldDpTfSl9bCYmdCgpfWZ1bmN0aW9uIHQoKXtlLnNvcnQoZnVuY3Rpb24obix0KXtyZXR1cm4gbCgobi5zb3VyY2UudmFsdWUrbi50YXJnZXQudmFsdWUpLzIsKHQuc291cmNlLnZhbHVlK3QudGFyZ2V0LnZhbHVlKS8yKX0pfXZhciBlLHIsdSxpLGEsbyxsLGM9e30scz0wO3JldHVybiBjLm1hdHJpeD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT0odT1uKSYmdS5sZW5ndGgsZT1yPW51bGwsYyk6dX0sYy5wYWRkaW5nPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzPW4sZT1yPW51bGwsYyk6c30sYy5zb3J0R3JvdXBzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPW4sZT1yPW51bGwsYyk6YX0sYy5zb3J0U3ViZ3JvdXBzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPW4sZT1udWxsLGMpOm99LGMuc29ydENob3Jkcz1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obD1uLGUmJnQoKSxjKTpsfSxjLmNob3Jkcz1mdW5jdGlvbigpe3JldHVybiBlfHxuKCksZX0sYy5ncm91cHM9ZnVuY3Rpb24oKXtyZXR1cm4gcnx8bigpLHJ9LGN9LG9hLmxheW91dC5mb3JjZT1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obil7cmV0dXJuIGZ1bmN0aW9uKHQsZSxyLHUpe2lmKHQucG9pbnQhPT1uKXt2YXIgaT10LmN4LW4ueCxhPXQuY3ktbi55LG89dS1lLGw9aSppK2EqYTtpZihsPm8qby9tKXtpZih2Pmwpe3ZhciBjPXQuY2hhcmdlL2w7bi5weC09aSpjLG4ucHktPWEqY31yZXR1cm4hMH1pZih0LnBvaW50JiZsJiZ2Pmwpe3ZhciBjPXQucG9pbnRDaGFyZ2UvbDtuLnB4LT1pKmMsbi5weS09YSpjfX1yZXR1cm4hdC5jaGFyZ2V9fWZ1bmN0aW9uIHQobil7bi5weD1vYS5ldmVudC54LG4ucHk9b2EuZXZlbnQueSxsLnJlc3VtZSgpfXZhciBlLHIsdSxpLGEsbyxsPXt9LGM9b2EuZGlzcGF0Y2goXCJzdGFydFwiLFwidGlja1wiLFwiZW5kXCIpLHM9WzEsMV0sZj0uOSxoPXlsLGc9TWwscD0tMzAsdj14bCxkPS4xLG09LjY0LE09W10seD1bXTtyZXR1cm4gbC50aWNrPWZ1bmN0aW9uKCl7aWYoKHUqPS45OSk8LjAwNSlyZXR1cm4gZT1udWxsLGMuZW5kKHt0eXBlOlwiZW5kXCIsYWxwaGE6dT0wfSksITA7dmFyIHQscixsLGgsZyx2LG0seSxiLF89TS5sZW5ndGgsdz14Lmxlbmd0aDtmb3Iocj0wO3c+cjsrK3IpbD14W3JdLGg9bC5zb3VyY2UsZz1sLnRhcmdldCx5PWcueC1oLngsYj1nLnktaC55LCh2PXkqeStiKmIpJiYodj11KmFbcl0qKCh2PU1hdGguc3FydCh2KSktaVtyXSkvdix5Kj12LGIqPXYsZy54LT15KihtPWgud2VpZ2h0K2cud2VpZ2h0P2gud2VpZ2h0LyhoLndlaWdodCtnLndlaWdodCk6LjUpLGcueS09YiptLGgueCs9eSoobT0xLW0pLGgueSs9YiptKTtpZigobT11KmQpJiYoeT1zWzBdLzIsYj1zWzFdLzIscj0tMSxtKSlmb3IoOysrcjxfOylsPU1bcl0sbC54Kz0oeS1sLngpKm0sbC55Kz0oYi1sLnkpKm07aWYocClmb3IocnUodD1vYS5nZW9tLnF1YWR0cmVlKE0pLHUsbykscj0tMTsrK3I8XzspKGw9TVtyXSkuZml4ZWR8fHQudmlzaXQobihsKSk7Zm9yKHI9LTE7KytyPF87KWw9TVtyXSxsLmZpeGVkPyhsLng9bC5weCxsLnk9bC5weSk6KGwueC09KGwucHgtKGwucHg9bC54KSkqZixsLnktPShsLnB5LShsLnB5PWwueSkpKmYpO2MudGljayh7dHlwZTpcInRpY2tcIixhbHBoYTp1fSl9LGwubm9kZXM9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KE09bixsKTpNfSxsLmxpbmtzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4PW4sbCk6eH0sbC5zaXplPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzPW4sbCk6c30sbC5saW5rRGlzdGFuY2U9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGg9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOituLGwpOmh9LGwuZGlzdGFuY2U9bC5saW5rRGlzdGFuY2UsbC5saW5rU3RyZW5ndGg9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGc9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOituLGwpOmd9LGwuZnJpY3Rpb249ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9K24sbCk6Zn0sbC5jaGFyZ2U9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHA9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOituLGwpOnB9LGwuY2hhcmdlRGlzdGFuY2U9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHY9bipuLGwpOk1hdGguc3FydCh2KX0sbC5ncmF2aXR5PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhkPStuLGwpOmR9LGwudGhldGE9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG09bipuLGwpOk1hdGguc3FydChtKX0sbC5hbHBoYT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0rbix1P24+MD91PW46KGUuYz1udWxsLGUudD1OYU4sZT1udWxsLGMuZW5kKHt0eXBlOlwiZW5kXCIsYWxwaGE6dT0wfSkpOm4+MCYmKGMuc3RhcnQoe3R5cGU6XCJzdGFydFwiLGFscGhhOnU9bn0pLGU9cW4obC50aWNrKSksbCk6dX0sbC5zdGFydD1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obixyKXtpZighZSl7Zm9yKGU9bmV3IEFycmF5KHUpLGw9MDt1Pmw7KytsKWVbbF09W107Zm9yKGw9MDtjPmw7KytsKXt2YXIgaT14W2xdO2VbaS5zb3VyY2UuaW5kZXhdLnB1c2goaS50YXJnZXQpLGVbaS50YXJnZXQuaW5kZXhdLnB1c2goaS5zb3VyY2UpfX1mb3IodmFyIGEsbz1lW3RdLGw9LTEscz1vLmxlbmd0aDsrK2w8czspaWYoIWlzTmFOKGE9b1tsXVtuXSkpcmV0dXJuIGE7cmV0dXJuIE1hdGgucmFuZG9tKCkqcn12YXIgdCxlLHIsdT1NLmxlbmd0aCxjPXgubGVuZ3RoLGY9c1swXSx2PXNbMV07Zm9yKHQ9MDt1PnQ7Kyt0KShyPU1bdF0pLmluZGV4PXQsci53ZWlnaHQ9MDtmb3IodD0wO2M+dDsrK3Qpcj14W3RdLFwibnVtYmVyXCI9PXR5cGVvZiByLnNvdXJjZSYmKHIuc291cmNlPU1bci5zb3VyY2VdKSxcIm51bWJlclwiPT10eXBlb2Ygci50YXJnZXQmJihyLnRhcmdldD1NW3IudGFyZ2V0XSksKytyLnNvdXJjZS53ZWlnaHQsKytyLnRhcmdldC53ZWlnaHQ7Zm9yKHQ9MDt1PnQ7Kyt0KXI9TVt0XSxpc05hTihyLngpJiYoci54PW4oXCJ4XCIsZikpLGlzTmFOKHIueSkmJihyLnk9bihcInlcIix2KSksaXNOYU4oci5weCkmJihyLnB4PXIueCksaXNOYU4oci5weSkmJihyLnB5PXIueSk7aWYoaT1bXSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBoKWZvcih0PTA7Yz50OysrdClpW3RdPStoLmNhbGwodGhpcyx4W3RdLHQpO2Vsc2UgZm9yKHQ9MDtjPnQ7Kyt0KWlbdF09aDtpZihhPVtdLFwiZnVuY3Rpb25cIj09dHlwZW9mIGcpZm9yKHQ9MDtjPnQ7Kyt0KWFbdF09K2cuY2FsbCh0aGlzLHhbdF0sdCk7ZWxzZSBmb3IodD0wO2M+dDsrK3QpYVt0XT1nO2lmKG89W10sXCJmdW5jdGlvblwiPT10eXBlb2YgcClmb3IodD0wO3U+dDsrK3Qpb1t0XT0rcC5jYWxsKHRoaXMsTVt0XSx0KTtlbHNlIGZvcih0PTA7dT50OysrdClvW3RdPXA7cmV0dXJuIGwucmVzdW1lKCl9LGwucmVzdW1lPWZ1bmN0aW9uKCl7cmV0dXJuIGwuYWxwaGEoLjEpfSxsLnN0b3A9ZnVuY3Rpb24oKXtyZXR1cm4gbC5hbHBoYSgwKX0sbC5kcmFnPWZ1bmN0aW9uKCl7cmV0dXJuIHJ8fChyPW9hLmJlaGF2aW9yLmRyYWcoKS5vcmlnaW4oeSkub24oXCJkcmFnc3RhcnQuZm9yY2VcIixRcikub24oXCJkcmFnLmZvcmNlXCIsdCkub24oXCJkcmFnZW5kLmZvcmNlXCIsbnUpKSxhcmd1bWVudHMubGVuZ3RoP3ZvaWQgdGhpcy5vbihcIm1vdXNlb3Zlci5mb3JjZVwiLHR1KS5vbihcIm1vdXNlb3V0LmZvcmNlXCIsZXUpLmNhbGwocik6cn0sb2EucmViaW5kKGwsYyxcIm9uXCIpfTt2YXIgeWw9MjAsTWw9MSx4bD0xLzA7b2EubGF5b3V0LmhpZXJhcmNoeT1mdW5jdGlvbigpe2Z1bmN0aW9uIG4odSl7dmFyIGksYT1bdV0sbz1bXTtmb3IodS5kZXB0aD0wO251bGwhPShpPWEucG9wKCkpOylpZihvLnB1c2goaSksKGM9ZS5jYWxsKG4saSxpLmRlcHRoKSkmJihsPWMubGVuZ3RoKSl7Zm9yKHZhciBsLGMsczstLWw+PTA7KWEucHVzaChzPWNbbF0pLHMucGFyZW50PWkscy5kZXB0aD1pLmRlcHRoKzE7ciYmKGkudmFsdWU9MCksaS5jaGlsZHJlbj1jfWVsc2UgciYmKGkudmFsdWU9K3IuY2FsbChuLGksaS5kZXB0aCl8fDApLGRlbGV0ZSBpLmNoaWxkcmVuO3JldHVybiBhdSh1LGZ1bmN0aW9uKG4pe3ZhciBlLHU7dCYmKGU9bi5jaGlsZHJlbikmJmUuc29ydCh0KSxyJiYodT1uLnBhcmVudCkmJih1LnZhbHVlKz1uLnZhbHVlKX0pLG99dmFyIHQ9Y3UsZT1vdSxyPWx1O3JldHVybiBuLnNvcnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9ZSxuKTp0fSxuLmNoaWxkcmVuPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXQsbik6ZX0sbi52YWx1ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj10LG4pOnJ9LG4ucmV2YWx1ZT1mdW5jdGlvbih0KXtyZXR1cm4gciYmKGl1KHQsZnVuY3Rpb24obil7bi5jaGlsZHJlbiYmKG4udmFsdWU9MCl9KSxhdSh0LGZ1bmN0aW9uKHQpe3ZhciBlO3QuY2hpbGRyZW58fCh0LnZhbHVlPStyLmNhbGwobix0LHQuZGVwdGgpfHwwKSwoZT10LnBhcmVudCkmJihlLnZhbHVlKz10LnZhbHVlKX0pKSx0fSxufSxvYS5sYXlvdXQucGFydGl0aW9uPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbih0LGUscix1KXt2YXIgaT10LmNoaWxkcmVuO2lmKHQueD1lLHQueT10LmRlcHRoKnUsdC5keD1yLHQuZHk9dSxpJiYoYT1pLmxlbmd0aCkpe3ZhciBhLG8sbCxjPS0xO2ZvcihyPXQudmFsdWU/ci90LnZhbHVlOjA7KytjPGE7KW4obz1pW2NdLGUsbD1vLnZhbHVlKnIsdSksZSs9bH19ZnVuY3Rpb24gdChuKXt2YXIgZT1uLmNoaWxkcmVuLHI9MDtpZihlJiYodT1lLmxlbmd0aCkpZm9yKHZhciB1LGk9LTE7KytpPHU7KXI9TWF0aC5tYXgocix0KGVbaV0pKTtyZXR1cm4gMStyfWZ1bmN0aW9uIGUoZSxpKXt2YXIgYT1yLmNhbGwodGhpcyxlLGkpO3JldHVybiBuKGFbMF0sMCx1WzBdLHVbMV0vdChhWzBdKSksYX12YXIgcj1vYS5sYXlvdXQuaGllcmFyY2h5KCksdT1bMSwxXTtyZXR1cm4gZS5zaXplPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PW4sZSk6dX0sdXUoZSxyKX0sb2EubGF5b3V0LnBpZT1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oYSl7dmFyIG8sbD1hLmxlbmd0aCxjPWEubWFwKGZ1bmN0aW9uKGUscil7cmV0dXJuK3QuY2FsbChuLGUscil9KSxzPSsoXCJmdW5jdGlvblwiPT10eXBlb2Ygcj9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKTpyKSxmPShcImZ1bmN0aW9uXCI9PXR5cGVvZiB1P3UuYXBwbHkodGhpcyxhcmd1bWVudHMpOnUpLXMsaD1NYXRoLm1pbihNYXRoLmFicyhmKS9sLCsoXCJmdW5jdGlvblwiPT10eXBlb2YgaT9pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTppKSksZz1oKigwPmY/LTE6MSkscD1vYS5zdW0oYyksdj1wPyhmLWwqZykvcDowLGQ9b2EucmFuZ2UobCksbT1bXTtyZXR1cm4gbnVsbCE9ZSYmZC5zb3J0KGU9PT1ibD9mdW5jdGlvbihuLHQpe3JldHVybiBjW3RdLWNbbl19OmZ1bmN0aW9uKG4sdCl7cmV0dXJuIGUoYVtuXSxhW3RdKX0pLGQuZm9yRWFjaChmdW5jdGlvbihuKXttW25dPXtkYXRhOmFbbl0sdmFsdWU6bz1jW25dLHN0YXJ0QW5nbGU6cyxlbmRBbmdsZTpzKz1vKnYrZyxwYWRBbmdsZTpofX0pLG19dmFyIHQ9TnVtYmVyLGU9Ymwscj0wLHU9RmEsaT0wO3JldHVybiBuLnZhbHVlPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PWUsbik6dH0sbi5zb3J0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXQsbik6ZX0sbi5zdGFydEFuZ2xlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPXQsbik6cn0sbi5lbmRBbmdsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT10LG4pOnV9LG4ucGFkQW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9dCxuKTppfSxufTt2YXIgYmw9e307b2EubGF5b3V0LnN0YWNrPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihvLGwpe2lmKCEoaD1vLmxlbmd0aCkpcmV0dXJuIG87dmFyIGM9by5tYXAoZnVuY3Rpb24oZSxyKXtyZXR1cm4gdC5jYWxsKG4sZSxyKX0pLHM9Yy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuW2kuY2FsbChuLHQsZSksYS5jYWxsKG4sdCxlKV19KX0pLGY9ZS5jYWxsKG4scyxsKTtjPW9hLnBlcm11dGUoYyxmKSxzPW9hLnBlcm11dGUocyxmKTt2YXIgaCxnLHAsdixkPXIuY2FsbChuLHMsbCksbT1jWzBdLmxlbmd0aDtmb3IocD0wO20+cDsrK3ApZm9yKHUuY2FsbChuLGNbMF1bcF0sdj1kW3BdLHNbMF1bcF1bMV0pLGc9MTtoPmc7KytnKXUuY2FsbChuLGNbZ11bcF0sdis9c1tnLTFdW3BdWzFdLHNbZ11bcF1bMV0pO3JldHVybiBvfXZhciB0PXksZT1wdSxyPXZ1LHU9Z3UsaT1mdSxhPWh1O3JldHVybiBuLnZhbHVlcz1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1lLG4pOnR9LG4ub3JkZXI9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Ol9sLmdldCh0KXx8cHUsbik6ZX0sbi5vZmZzZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OndsLmdldCh0KXx8dnUsbik6cn0sbi54PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPXQsbik6aX0sbi55PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPXQsbik6YX0sbi5vdXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9dCxuKTp1fSxufTt2YXIgX2w9b2EubWFwKHtcImluc2lkZS1vdXRcIjpmdW5jdGlvbihuKXt2YXIgdCxlLHI9bi5sZW5ndGgsdT1uLm1hcChkdSksaT1uLm1hcChtdSksYT1vYS5yYW5nZShyKS5zb3J0KGZ1bmN0aW9uKG4sdCl7cmV0dXJuIHVbbl0tdVt0XX0pLG89MCxsPTAsYz1bXSxzPVtdO2Zvcih0PTA7cj50OysrdCllPWFbdF0sbD5vPyhvKz1pW2VdLGMucHVzaChlKSk6KGwrPWlbZV0scy5wdXNoKGUpKTtyZXR1cm4gcy5yZXZlcnNlKCkuY29uY2F0KGMpfSxyZXZlcnNlOmZ1bmN0aW9uKG4pe3JldHVybiBvYS5yYW5nZShuLmxlbmd0aCkucmV2ZXJzZSgpfSxcImRlZmF1bHRcIjpwdX0pLHdsPW9hLm1hcCh7c2lsaG91ZXR0ZTpmdW5jdGlvbihuKXt2YXIgdCxlLHIsdT1uLmxlbmd0aCxpPW5bMF0ubGVuZ3RoLGE9W10sbz0wLGw9W107Zm9yKGU9MDtpPmU7KytlKXtmb3IodD0wLHI9MDt1PnQ7dCsrKXIrPW5bdF1bZV1bMV07cj5vJiYobz1yKSxhLnB1c2gocil9Zm9yKGU9MDtpPmU7KytlKWxbZV09KG8tYVtlXSkvMjtyZXR1cm4gbH0sd2lnZ2xlOmZ1bmN0aW9uKG4pe3ZhciB0LGUscix1LGksYSxvLGwsYyxzPW4ubGVuZ3RoLGY9blswXSxoPWYubGVuZ3RoLGc9W107Zm9yKGdbMF09bD1jPTAsZT0xO2g+ZTsrK2Upe2Zvcih0PTAsdT0wO3M+dDsrK3QpdSs9blt0XVtlXVsxXTtmb3IodD0wLGk9MCxvPWZbZV1bMF0tZltlLTFdWzBdO3M+dDsrK3Qpe2ZvcihyPTAsYT0oblt0XVtlXVsxXS1uW3RdW2UtMV1bMV0pLygyKm8pO3Q+cjsrK3IpYSs9KG5bcl1bZV1bMV0tbltyXVtlLTFdWzFdKS9vO2krPWEqblt0XVtlXVsxXX1nW2VdPWwtPXU/aS91Km86MCxjPmwmJihjPWwpfWZvcihlPTA7aD5lOysrZSlnW2VdLT1jO3JldHVybiBnfSxleHBhbmQ6ZnVuY3Rpb24obil7dmFyIHQsZSxyLHU9bi5sZW5ndGgsaT1uWzBdLmxlbmd0aCxhPTEvdSxvPVtdO2ZvcihlPTA7aT5lOysrZSl7Zm9yKHQ9MCxyPTA7dT50O3QrKylyKz1uW3RdW2VdWzFdO2lmKHIpZm9yKHQ9MDt1PnQ7dCsrKW5bdF1bZV1bMV0vPXI7ZWxzZSBmb3IodD0wO3U+dDt0Kyspblt0XVtlXVsxXT1hfWZvcihlPTA7aT5lOysrZSlvW2VdPTA7cmV0dXJuIG99LHplcm86dnV9KTtvYS5sYXlvdXQuaGlzdG9ncmFtPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuLGkpe2Zvcih2YXIgYSxvLGw9W10sYz1uLm1hcChlLHRoaXMpLHM9ci5jYWxsKHRoaXMsYyxpKSxmPXUuY2FsbCh0aGlzLHMsYyxpKSxpPS0xLGg9Yy5sZW5ndGgsZz1mLmxlbmd0aC0xLHA9dD8xOjEvaDsrK2k8ZzspYT1sW2ldPVtdLGEuZHg9ZltpKzFdLShhLng9ZltpXSksYS55PTA7aWYoZz4wKWZvcihpPS0xOysraTxoOylvPWNbaV0sbz49c1swXSYmbzw9c1sxXSYmKGE9bFtvYS5iaXNlY3QoZixvLDEsZyktMV0sYS55Kz1wLGEucHVzaChuW2ldKSk7cmV0dXJuIGx9dmFyIHQ9ITAsZT1OdW1iZXIscj1idSx1PU11O3JldHVybiBuLnZhbHVlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXQsbik6ZX0sbi5yYW5nZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1Fbih0KSxuKTpyfSxuLmJpbnM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9XCJudW1iZXJcIj09dHlwZW9mIHQ/ZnVuY3Rpb24obil7cmV0dXJuIHh1KG4sdCl9OkVuKHQpLG4pOnV9LG4uZnJlcXVlbmN5PWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PSEhZSxuKTp0fSxufSxvYS5sYXlvdXQucGFjaz1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obixpKXt2YXIgYT1lLmNhbGwodGhpcyxuLGkpLG89YVswXSxsPXVbMF0sYz11WzFdLHM9bnVsbD09dD9NYXRoLnNxcnQ6XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OmZ1bmN0aW9uKCl7cmV0dXJuIHR9O2lmKG8ueD1vLnk9MCxhdShvLGZ1bmN0aW9uKG4pe24ucj0rcyhuLnZhbHVlKX0pLGF1KG8sTnUpLHIpe3ZhciBmPXIqKHQ/MTpNYXRoLm1heCgyKm8uci9sLDIqby5yL2MpKS8yO2F1KG8sZnVuY3Rpb24obil7bi5yKz1mfSksYXUobyxOdSksYXUobyxmdW5jdGlvbihuKXtuLnItPWZ9KX1yZXR1cm4gQ3UobyxsLzIsYy8yLHQ/MToxL01hdGgubWF4KDIqby5yL2wsMipvLnIvYykpLGF9dmFyIHQsZT1vYS5sYXlvdXQuaGllcmFyY2h5KCkuc29ydChfdSkscj0wLHU9WzEsMV07cmV0dXJuIG4uc2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT10LG4pOnV9LG4ucmFkaXVzPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PW51bGw9PWV8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZTorZSxuKTp0fSxuLnBhZGRpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9K3Qsbik6cn0sdXUobixlKX0sb2EubGF5b3V0LnRyZWU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sdSl7dmFyIHM9YS5jYWxsKHRoaXMsbix1KSxmPXNbMF0saD10KGYpO2lmKGF1KGgsZSksaC5wYXJlbnQubT0taC56LGl1KGgsciksYylpdShmLGkpO2Vsc2V7dmFyIGc9ZixwPWYsdj1mO2l1KGYsZnVuY3Rpb24obil7bi54PGcueCYmKGc9biksbi54PnAueCYmKHA9biksbi5kZXB0aD52LmRlcHRoJiYodj1uKX0pO3ZhciBkPW8oZyxwKS8yLWcueCxtPWxbMF0vKHAueCtvKHAsZykvMitkKSx5PWxbMV0vKHYuZGVwdGh8fDEpO2l1KGYsZnVuY3Rpb24obil7bi54PShuLngrZCkqbSxuLnk9bi5kZXB0aCp5fSl9cmV0dXJuIHN9ZnVuY3Rpb24gdChuKXtmb3IodmFyIHQsZT17QTpudWxsLGNoaWxkcmVuOltuXX0scj1bZV07bnVsbCE9KHQ9ci5wb3AoKSk7KWZvcih2YXIgdSxpPXQuY2hpbGRyZW4sYT0wLG89aS5sZW5ndGg7bz5hOysrYSlyLnB1c2goKGlbYV09dT17XzppW2FdLHBhcmVudDp0LGNoaWxkcmVuOih1PWlbYV0uY2hpbGRyZW4pJiZ1LnNsaWNlKCl8fFtdLEE6bnVsbCxhOm51bGwsejowLG06MCxjOjAsczowLHQ6bnVsbCxpOmF9KS5hPXUpO3JldHVybiBlLmNoaWxkcmVuWzBdfWZ1bmN0aW9uIGUobil7dmFyIHQ9bi5jaGlsZHJlbixlPW4ucGFyZW50LmNoaWxkcmVuLHI9bi5pP2Vbbi5pLTFdOm51bGw7aWYodC5sZW5ndGgpe0R1KG4pO3ZhciBpPSh0WzBdLnordFt0Lmxlbmd0aC0xXS56KS8yO3I/KG4uej1yLnorbyhuLl8sci5fKSxuLm09bi56LWkpOm4uej1pfWVsc2UgciYmKG4uej1yLnorbyhuLl8sci5fKSk7bi5wYXJlbnQuQT11KG4scixuLnBhcmVudC5BfHxlWzBdKX1mdW5jdGlvbiByKG4pe24uXy54PW4ueituLnBhcmVudC5tLG4ubSs9bi5wYXJlbnQubX1mdW5jdGlvbiB1KG4sdCxlKXtpZih0KXtmb3IodmFyIHIsdT1uLGk9bixhPXQsbD11LnBhcmVudC5jaGlsZHJlblswXSxjPXUubSxzPWkubSxmPWEubSxoPWwubTthPVR1KGEpLHU9cXUodSksYSYmdTspbD1xdShsKSxpPVR1KGkpLGkuYT1uLHI9YS56K2YtdS56LWMrbyhhLl8sdS5fKSxyPjAmJihSdShQdShhLG4sZSksbixyKSxjKz1yLHMrPXIpLGYrPWEubSxjKz11Lm0saCs9bC5tLHMrPWkubTthJiYhVHUoaSkmJihpLnQ9YSxpLm0rPWYtcyksdSYmIXF1KGwpJiYobC50PXUsbC5tKz1jLWgsZT1uKX1yZXR1cm4gZX1mdW5jdGlvbiBpKG4pe24ueCo9bFswXSxuLnk9bi5kZXB0aCpsWzFdfXZhciBhPW9hLmxheW91dC5oaWVyYXJjaHkoKS5zb3J0KG51bGwpLnZhbHVlKG51bGwpLG89THUsbD1bMSwxXSxjPW51bGw7cmV0dXJuIG4uc2VwYXJhdGlvbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz10LG4pOm99LG4uc2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz1udWxsPT0obD10KT9pOm51bGwsbik6Yz9udWxsOmx9LG4ubm9kZVNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9bnVsbD09KGw9dCk/bnVsbDppLG4pOmM/bDpudWxsfSx1dShuLGEpfSxvYS5sYXlvdXQuY2x1c3Rlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obixpKXt2YXIgYSxvPXQuY2FsbCh0aGlzLG4saSksbD1vWzBdLGM9MDthdShsLGZ1bmN0aW9uKG4pe3ZhciB0PW4uY2hpbGRyZW47dCYmdC5sZW5ndGg/KG4ueD1qdSh0KSxuLnk9VXUodCkpOihuLng9YT9jKz1lKG4sYSk6MCxuLnk9MCxhPW4pfSk7dmFyIHM9RnUobCksZj1IdShsKSxoPXMueC1lKHMsZikvMixnPWYueCtlKGYscykvMjtyZXR1cm4gYXUobCx1P2Z1bmN0aW9uKG4pe24ueD0obi54LWwueCkqclswXSxuLnk9KGwueS1uLnkpKnJbMV19OmZ1bmN0aW9uKG4pe24ueD0obi54LWgpLyhnLWgpKnJbMF0sbi55PSgxLShsLnk/bi55L2wueToxKSkqclsxXX0pLG99dmFyIHQ9b2EubGF5b3V0LmhpZXJhcmNoeSgpLnNvcnQobnVsbCkudmFsdWUobnVsbCksZT1MdSxyPVsxLDFdLHU9ITE7cmV0dXJuIG4uc2VwYXJhdGlvbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT10LG4pOmV9LG4uc2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT1udWxsPT0ocj10KSxuKTp1P251bGw6cn0sbi5ub2RlU2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT1udWxsIT0ocj10KSxuKTp1P3I6bnVsbH0sdXUobix0KX0sb2EubGF5b3V0LnRyZWVtYXA9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sdCl7Zm9yKHZhciBlLHIsdT0tMSxpPW4ubGVuZ3RoOysrdTxpOylyPShlPW5bdV0pLnZhbHVlKigwPnQ/MDp0KSxlLmFyZWE9aXNOYU4ocil8fDA+PXI/MDpyfWZ1bmN0aW9uIHQoZSl7dmFyIGk9ZS5jaGlsZHJlbjtpZihpJiZpLmxlbmd0aCl7dmFyIGEsbyxsLGM9ZihlKSxzPVtdLGg9aS5zbGljZSgpLHA9MS8wLHY9XCJzbGljZVwiPT09Zz9jLmR4OlwiZGljZVwiPT09Zz9jLmR5Olwic2xpY2UtZGljZVwiPT09Zz8xJmUuZGVwdGg/Yy5keTpjLmR4Ok1hdGgubWluKGMuZHgsYy5keSk7Zm9yKG4oaCxjLmR4KmMuZHkvZS52YWx1ZSkscy5hcmVhPTA7KGw9aC5sZW5ndGgpPjA7KXMucHVzaChhPWhbbC0xXSkscy5hcmVhKz1hLmFyZWEsXCJzcXVhcmlmeVwiIT09Z3x8KG89cihzLHYpKTw9cD8oaC5wb3AoKSxwPW8pOihzLmFyZWEtPXMucG9wKCkuYXJlYSx1KHMsdixjLCExKSx2PU1hdGgubWluKGMuZHgsYy5keSkscy5sZW5ndGg9cy5hcmVhPTAscD0xLzApO3MubGVuZ3RoJiYodShzLHYsYywhMCkscy5sZW5ndGg9cy5hcmVhPTApLGkuZm9yRWFjaCh0KX19ZnVuY3Rpb24gZSh0KXt2YXIgcj10LmNoaWxkcmVuO2lmKHImJnIubGVuZ3RoKXt2YXIgaSxhPWYodCksbz1yLnNsaWNlKCksbD1bXTtmb3IobihvLGEuZHgqYS5keS90LnZhbHVlKSxsLmFyZWE9MDtpPW8ucG9wKCk7KWwucHVzaChpKSxsLmFyZWErPWkuYXJlYSxudWxsIT1pLnomJih1KGwsaS56P2EuZHg6YS5keSxhLCFvLmxlbmd0aCksbC5sZW5ndGg9bC5hcmVhPTApO3IuZm9yRWFjaChlKX19ZnVuY3Rpb24gcihuLHQpe2Zvcih2YXIgZSxyPW4uYXJlYSx1PTAsaT0xLzAsYT0tMSxvPW4ubGVuZ3RoOysrYTxvOykoZT1uW2FdLmFyZWEpJiYoaT5lJiYoaT1lKSxlPnUmJih1PWUpKTtyZXR1cm4gcio9cix0Kj10LHI/TWF0aC5tYXgodCp1KnAvcixyLyh0KmkqcCkpOjEvMH1mdW5jdGlvbiB1KG4sdCxlLHIpe3ZhciB1LGk9LTEsYT1uLmxlbmd0aCxvPWUueCxjPWUueSxzPXQ/bChuLmFyZWEvdCk6MDtcbmlmKHQ9PWUuZHgpe2Zvcigocnx8cz5lLmR5KSYmKHM9ZS5keSk7KytpPGE7KXU9bltpXSx1Lng9byx1Lnk9Yyx1LmR5PXMsbys9dS5keD1NYXRoLm1pbihlLngrZS5keC1vLHM/bCh1LmFyZWEvcyk6MCk7dS56PSEwLHUuZHgrPWUueCtlLmR4LW8sZS55Kz1zLGUuZHktPXN9ZWxzZXtmb3IoKHJ8fHM+ZS5keCkmJihzPWUuZHgpOysraTxhOyl1PW5baV0sdS54PW8sdS55PWMsdS5keD1zLGMrPXUuZHk9TWF0aC5taW4oZS55K2UuZHktYyxzP2wodS5hcmVhL3MpOjApO3Uuej0hMSx1LmR5Kz1lLnkrZS5keS1jLGUueCs9cyxlLmR4LT1zfX1mdW5jdGlvbiBpKHIpe3ZhciB1PWF8fG8ociksaT11WzBdO3JldHVybiBpLng9aS55PTAsaS52YWx1ZT8oaS5keD1jWzBdLGkuZHk9Y1sxXSk6aS5keD1pLmR5PTAsYSYmby5yZXZhbHVlKGkpLG4oW2ldLGkuZHgqaS5keS9pLnZhbHVlKSwoYT9lOnQpKGkpLGgmJihhPXUpLHV9dmFyIGEsbz1vYS5sYXlvdXQuaGllcmFyY2h5KCksbD1NYXRoLnJvdW5kLGM9WzEsMV0scz1udWxsLGY9T3UsaD0hMSxnPVwic3F1YXJpZnlcIixwPS41KigxK01hdGguc3FydCg1KSk7cmV0dXJuIGkuc2l6ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz1uLGkpOmN9LGkucGFkZGluZz1mdW5jdGlvbihuKXtmdW5jdGlvbiB0KHQpe3ZhciBlPW4uY2FsbChpLHQsdC5kZXB0aCk7cmV0dXJuIG51bGw9PWU/T3UodCk6SXUodCxcIm51bWJlclwiPT10eXBlb2YgZT9bZSxlLGUsZV06ZSl9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gSXUodCxuKX1pZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gczt2YXIgcjtyZXR1cm4gZj1udWxsPT0ocz1uKT9PdTpcImZ1bmN0aW9uXCI9PShyPXR5cGVvZiBuKT90OlwibnVtYmVyXCI9PT1yPyhuPVtuLG4sbixuXSxlKTplLGl9LGkucm91bmQ9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGw9bj9NYXRoLnJvdW5kOk51bWJlcixpKTpsIT1OdW1iZXJ9LGkuc3RpY2t5PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhoPW4sYT1udWxsLGkpOmh9LGkucmF0aW89ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHA9bixpKTpwfSxpLm1vZGU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGc9bitcIlwiLGkpOmd9LHV1KGksbyl9LG9hLnJhbmRvbT17bm9ybWFsOmZ1bmN0aW9uKG4sdCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aDtyZXR1cm4gMj5lJiYodD0xKSwxPmUmJihuPTApLGZ1bmN0aW9uKCl7dmFyIGUscix1O2RvIGU9MipNYXRoLnJhbmRvbSgpLTEscj0yKk1hdGgucmFuZG9tKCktMSx1PWUqZStyKnI7d2hpbGUoIXV8fHU+MSk7cmV0dXJuIG4rdCplKk1hdGguc3FydCgtMipNYXRoLmxvZyh1KS91KX19LGxvZ05vcm1hbDpmdW5jdGlvbigpe3ZhciBuPW9hLnJhbmRvbS5ub3JtYWwuYXBwbHkob2EsYXJndW1lbnRzKTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5leHAobigpKX19LGJhdGVzOmZ1bmN0aW9uKG4pe3ZhciB0PW9hLnJhbmRvbS5pcndpbkhhbGwobik7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQoKS9ufX0saXJ3aW5IYWxsOmZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9MDtuPmU7ZSsrKXQrPU1hdGgucmFuZG9tKCk7cmV0dXJuIHR9fX0sb2Euc2NhbGU9e307dmFyIFNsPXtmbG9vcjp5LGNlaWw6eX07b2Euc2NhbGUubGluZWFyPWZ1bmN0aW9uKCl7cmV0dXJuIFd1KFswLDFdLFswLDFdLE1yLCExKX07dmFyIGtsPXtzOjEsZzoxLHA6MSxyOjEsZToxfTtvYS5zY2FsZS5sb2c9ZnVuY3Rpb24oKXtyZXR1cm4gcmkob2Euc2NhbGUubGluZWFyKCkuZG9tYWluKFswLDFdKSwxMCwhMCxbMSwxMF0pfTt2YXIgTmw9b2EuZm9ybWF0KFwiLjBlXCIpLEVsPXtmbG9vcjpmdW5jdGlvbihuKXtyZXR1cm4tTWF0aC5jZWlsKC1uKX0sY2VpbDpmdW5jdGlvbihuKXtyZXR1cm4tTWF0aC5mbG9vcigtbil9fTtvYS5zY2FsZS5wb3c9ZnVuY3Rpb24oKXtyZXR1cm4gdWkob2Euc2NhbGUubGluZWFyKCksMSxbMCwxXSl9LG9hLnNjYWxlLnNxcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gb2Euc2NhbGUucG93KCkuZXhwb25lbnQoLjUpfSxvYS5zY2FsZS5vcmRpbmFsPWZ1bmN0aW9uKCl7cmV0dXJuIGFpKFtdLHt0OlwicmFuZ2VcIixhOltbXV19KX0sb2Euc2NhbGUuY2F0ZWdvcnkxMD1mdW5jdGlvbigpe3JldHVybiBvYS5zY2FsZS5vcmRpbmFsKCkucmFuZ2UoQWwpfSxvYS5zY2FsZS5jYXRlZ29yeTIwPWZ1bmN0aW9uKCl7cmV0dXJuIG9hLnNjYWxlLm9yZGluYWwoKS5yYW5nZShDbCl9LG9hLnNjYWxlLmNhdGVnb3J5MjBiPWZ1bmN0aW9uKCl7cmV0dXJuIG9hLnNjYWxlLm9yZGluYWwoKS5yYW5nZSh6bCl9LG9hLnNjYWxlLmNhdGVnb3J5MjBjPWZ1bmN0aW9uKCl7cmV0dXJuIG9hLnNjYWxlLm9yZGluYWwoKS5yYW5nZShMbCl9O3ZhciBBbD1bMjA2MjI2MCwxNjc0NDIwNiwyOTI0NTg4LDE0MDM0NzI4LDk3MjU4ODUsOTE5NzEzMSwxNDkwNzMzMCw4MzU1NzExLDEyMzY5MTg2LDE1NTYxNzVdLm1hcCh4biksQ2w9WzIwNjIyNjAsMTE0NTQ0NDAsMTY3NDQyMDYsMTY3NTk2NzIsMjkyNDU4OCwxMDAxODY5OCwxNDAzNDcyOCwxNjc1MDc0Miw5NzI1ODg1LDEyOTU1ODYxLDkxOTcxMzEsMTI4ODUxNDAsMTQ5MDczMzAsMTYyMzQxOTQsODM1NTcxMSwxMzA5MjgwNywxMjM2OTE4NiwxNDQwODU4OSwxNTU2MTc1LDEwNDEwNzI1XS5tYXAoeG4pLHpsPVszNzUwNzc3LDUzOTU2MTksNzA0MDcxOSwxMDI2NDI4Niw2NTE5MDk3LDkyMTY1OTQsMTE5MTUxMTUsMTM1NTY2MzYsOTIwMjk5MywxMjQyNjgwOSwxNTE4NjUxNCwxNTE5MDkzMiw4NjY2MTY5LDExMzU2NDkwLDE0MDQ5NjQzLDE1MTc3MzcyLDgwNzc2ODMsMTA4MzQzMjQsMTM1Mjg1MDksMTQ1ODk2NTRdLm1hcCh4biksTGw9WzMyNDQ3MzMsNzA1NzExMCwxMDQwNjYyNSwxMzAzMjQzMSwxNTA5NTA1MywxNjYxNjc2NCwxNjYyNTI1OSwxNjYzNDAxOCwzMjUzMDc2LDc2NTI0NzAsMTA2MDcwMDMsMTMxMDE1MDQsNzY5NTI4MSwxMDM5NDMxMiwxMjM2OTM3MiwxNDM0Mjg5MSw2NTEzNTA3LDk4Njg5NTAsMTI0MzQ4NzcsMTQyNzcwODFdLm1hcCh4bik7b2Euc2NhbGUucXVhbnRpbGU9ZnVuY3Rpb24oKXtyZXR1cm4gb2koW10sW10pfSxvYS5zY2FsZS5xdWFudGl6ZT1mdW5jdGlvbigpe3JldHVybiBsaSgwLDEsWzAsMV0pfSxvYS5zY2FsZS50aHJlc2hvbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gY2koWy41XSxbMCwxXSl9LG9hLnNjYWxlLmlkZW50aXR5PWZ1bmN0aW9uKCl7cmV0dXJuIHNpKFswLDFdKX0sb2Euc3ZnPXt9LG9hLnN2Zy5hcmM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIG49TWF0aC5tYXgoMCwrZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLGM9TWF0aC5tYXgoMCwrci5hcHBseSh0aGlzLGFyZ3VtZW50cykpLHM9YS5hcHBseSh0aGlzLGFyZ3VtZW50cyktT2EsZj1vLmFwcGx5KHRoaXMsYXJndW1lbnRzKS1PYSxoPU1hdGguYWJzKGYtcyksZz1zPmY/MDoxO2lmKG4+YyYmKHA9YyxjPW4sbj1wKSxoPj1IYSlyZXR1cm4gdChjLGcpKyhuP3QobiwxLWcpOlwiXCIpK1wiWlwiO3ZhciBwLHYsZCxtLHksTSx4LGIsXyx3LFMsayxOPTAsRT0wLEE9W107aWYoKG09KCtsLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8MCkvMikmJihkPWk9PT1xbD9NYXRoLnNxcnQobipuK2MqYyk6K2kuYXBwbHkodGhpcyxhcmd1bWVudHMpLGd8fChFKj0tMSksYyYmKEU9dG4oZC9jKk1hdGguc2luKG0pKSksbiYmKE49dG4oZC9uKk1hdGguc2luKG0pKSkpLGMpe3k9YypNYXRoLmNvcyhzK0UpLE09YypNYXRoLnNpbihzK0UpLHg9YypNYXRoLmNvcyhmLUUpLGI9YypNYXRoLnNpbihmLUUpO3ZhciBDPU1hdGguYWJzKGYtcy0yKkUpPD1qYT8wOjE7aWYoRSYmbWkoeSxNLHgsYik9PT1nXkMpe3ZhciB6PShzK2YpLzI7eT1jKk1hdGguY29zKHopLE09YypNYXRoLnNpbih6KSx4PWI9bnVsbH19ZWxzZSB5PU09MDtpZihuKXtfPW4qTWF0aC5jb3MoZi1OKSx3PW4qTWF0aC5zaW4oZi1OKSxTPW4qTWF0aC5jb3MocytOKSxrPW4qTWF0aC5zaW4ocytOKTt2YXIgTD1NYXRoLmFicyhzLWYrMipOKTw9amE/MDoxO2lmKE4mJm1pKF8sdyxTLGspPT09MS1nXkwpe3ZhciBxPShzK2YpLzI7Xz1uKk1hdGguY29zKHEpLHc9bipNYXRoLnNpbihxKSxTPWs9bnVsbH19ZWxzZSBfPXc9MDtpZihoPlBhJiYocD1NYXRoLm1pbihNYXRoLmFicyhjLW4pLzIsK3UuYXBwbHkodGhpcyxhcmd1bWVudHMpKSk+LjAwMSl7dj1jPm5eZz8wOjE7dmFyIFQ9cCxSPXA7aWYoamE+aCl7dmFyIEQ9bnVsbD09Uz9bXyx3XTpudWxsPT14P1t5LE1dOlJlKFt5LE1dLFtTLGtdLFt4LGJdLFtfLHddKSxQPXktRFswXSxVPU0tRFsxXSxqPXgtRFswXSxGPWItRFsxXSxIPTEvTWF0aC5zaW4oTWF0aC5hY29zKChQKmorVSpGKS8oTWF0aC5zcXJ0KFAqUCtVKlUpKk1hdGguc3FydChqKmorRipGKSkpLzIpLE89TWF0aC5zcXJ0KERbMF0qRFswXStEWzFdKkRbMV0pO1I9TWF0aC5taW4ocCwobi1PKS8oSC0xKSksVD1NYXRoLm1pbihwLChjLU8pLyhIKzEpKX1pZihudWxsIT14KXt2YXIgST15aShudWxsPT1TP1tfLHddOltTLGtdLFt5LE1dLGMsVCxnKSxZPXlpKFt4LGJdLFtfLHddLGMsVCxnKTtwPT09VD9BLnB1c2goXCJNXCIsSVswXSxcIkFcIixULFwiLFwiLFQsXCIgMCAwLFwiLHYsXCIgXCIsSVsxXSxcIkFcIixjLFwiLFwiLGMsXCIgMCBcIiwxLWdebWkoSVsxXVswXSxJWzFdWzFdLFlbMV1bMF0sWVsxXVsxXSksXCIsXCIsZyxcIiBcIixZWzFdLFwiQVwiLFQsXCIsXCIsVCxcIiAwIDAsXCIsdixcIiBcIixZWzBdKTpBLnB1c2goXCJNXCIsSVswXSxcIkFcIixULFwiLFwiLFQsXCIgMCAxLFwiLHYsXCIgXCIsWVswXSl9ZWxzZSBBLnB1c2goXCJNXCIseSxcIixcIixNKTtpZihudWxsIT1TKXt2YXIgWj15aShbeSxNXSxbUyxrXSxuLC1SLGcpLFY9eWkoW18sd10sbnVsbD09eD9beSxNXTpbeCxiXSxuLC1SLGcpO3A9PT1SP0EucHVzaChcIkxcIixWWzBdLFwiQVwiLFIsXCIsXCIsUixcIiAwIDAsXCIsdixcIiBcIixWWzFdLFwiQVwiLG4sXCIsXCIsbixcIiAwIFwiLGdebWkoVlsxXVswXSxWWzFdWzFdLFpbMV1bMF0sWlsxXVsxXSksXCIsXCIsMS1nLFwiIFwiLFpbMV0sXCJBXCIsUixcIixcIixSLFwiIDAgMCxcIix2LFwiIFwiLFpbMF0pOkEucHVzaChcIkxcIixWWzBdLFwiQVwiLFIsXCIsXCIsUixcIiAwIDAsXCIsdixcIiBcIixaWzBdKX1lbHNlIEEucHVzaChcIkxcIixfLFwiLFwiLHcpfWVsc2UgQS5wdXNoKFwiTVwiLHksXCIsXCIsTSksbnVsbCE9eCYmQS5wdXNoKFwiQVwiLGMsXCIsXCIsYyxcIiAwIFwiLEMsXCIsXCIsZyxcIiBcIix4LFwiLFwiLGIpLEEucHVzaChcIkxcIixfLFwiLFwiLHcpLG51bGwhPVMmJkEucHVzaChcIkFcIixuLFwiLFwiLG4sXCIgMCBcIixMLFwiLFwiLDEtZyxcIiBcIixTLFwiLFwiLGspO3JldHVybiBBLnB1c2goXCJaXCIpLEEuam9pbihcIlwiKX1mdW5jdGlvbiB0KG4sdCl7cmV0dXJuXCJNMCxcIituK1wiQVwiK24rXCIsXCIrbitcIiAwIDEsXCIrdCtcIiAwLFwiKy1uK1wiQVwiK24rXCIsXCIrbitcIiAwIDEsXCIrdCtcIiAwLFwiK259dmFyIGU9aGkscj1naSx1PWZpLGk9cWwsYT1waSxvPXZpLGw9ZGk7cmV0dXJuIG4uaW5uZXJSYWRpdXM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9RW4odCksbik6ZX0sbi5vdXRlclJhZGl1cz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1Fbih0KSxuKTpyfSxuLmNvcm5lclJhZGl1cz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT1Fbih0KSxuKTp1fSxuLnBhZFJhZGl1cz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT10PT1xbD9xbDpFbih0KSxuKTppfSxuLnN0YXJ0QW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9RW4odCksbik6YX0sbi5lbmRBbmdsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1Fbih0KSxuKTpvfSxuLnBhZEFuZ2xlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsPUVuKHQpLG4pOmx9LG4uY2VudHJvaWQ9ZnVuY3Rpb24oKXt2YXIgbj0oK2UuYXBwbHkodGhpcyxhcmd1bWVudHMpKyArci5hcHBseSh0aGlzLGFyZ3VtZW50cykpLzIsdD0oK2EuYXBwbHkodGhpcyxhcmd1bWVudHMpKyArby5hcHBseSh0aGlzLGFyZ3VtZW50cykpLzItT2E7cmV0dXJuW01hdGguY29zKHQpKm4sTWF0aC5zaW4odCkqbl19LG59O3ZhciBxbD1cImF1dG9cIjtvYS5zdmcubGluZT1mdW5jdGlvbigpe3JldHVybiBNaSh5KX07dmFyIFRsPW9hLm1hcCh7bGluZWFyOnhpLFwibGluZWFyLWNsb3NlZFwiOmJpLHN0ZXA6X2ksXCJzdGVwLWJlZm9yZVwiOndpLFwic3RlcC1hZnRlclwiOlNpLGJhc2lzOnppLFwiYmFzaXMtb3BlblwiOkxpLFwiYmFzaXMtY2xvc2VkXCI6cWksYnVuZGxlOlRpLGNhcmRpbmFsOkVpLFwiY2FyZGluYWwtb3BlblwiOmtpLFwiY2FyZGluYWwtY2xvc2VkXCI6TmksbW9ub3RvbmU6Rml9KTtUbC5mb3JFYWNoKGZ1bmN0aW9uKG4sdCl7dC5rZXk9bix0LmNsb3NlZD0vLWNsb3NlZCQvLnRlc3Qobil9KTt2YXIgUmw9WzAsMi8zLDEvMywwXSxEbD1bMCwxLzMsMi8zLDBdLFBsPVswLDEvNiwyLzMsMS82XTtvYS5zdmcubGluZS5yYWRpYWw9ZnVuY3Rpb24oKXt2YXIgbj1NaShIaSk7cmV0dXJuIG4ucmFkaXVzPW4ueCxkZWxldGUgbi54LG4uYW5nbGU9bi55LGRlbGV0ZSBuLnksbn0sd2kucmV2ZXJzZT1TaSxTaS5yZXZlcnNlPXdpLG9hLnN2Zy5hcmVhPWZ1bmN0aW9uKCl7cmV0dXJuIE9pKHkpfSxvYS5zdmcuYXJlYS5yYWRpYWw9ZnVuY3Rpb24oKXt2YXIgbj1PaShIaSk7cmV0dXJuIG4ucmFkaXVzPW4ueCxkZWxldGUgbi54LG4uaW5uZXJSYWRpdXM9bi54MCxkZWxldGUgbi54MCxuLm91dGVyUmFkaXVzPW4ueDEsZGVsZXRlIG4ueDEsbi5hbmdsZT1uLnksZGVsZXRlIG4ueSxuLnN0YXJ0QW5nbGU9bi55MCxkZWxldGUgbi55MCxuLmVuZEFuZ2xlPW4ueTEsZGVsZXRlIG4ueTEsbn0sb2Euc3ZnLmNob3JkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuLG8pe3ZhciBsPXQodGhpcyxpLG4sbyksYz10KHRoaXMsYSxuLG8pO3JldHVyblwiTVwiK2wucDArcihsLnIsbC5wMSxsLmExLWwuYTApKyhlKGwsYyk/dShsLnIsbC5wMSxsLnIsbC5wMCk6dShsLnIsbC5wMSxjLnIsYy5wMCkrcihjLnIsYy5wMSxjLmExLWMuYTApK3UoYy5yLGMucDEsbC5yLGwucDApKStcIlpcIn1mdW5jdGlvbiB0KG4sdCxlLHIpe3ZhciB1PXQuY2FsbChuLGUsciksaT1vLmNhbGwobix1LHIpLGE9bC5jYWxsKG4sdSxyKS1PYSxzPWMuY2FsbChuLHUsciktT2E7cmV0dXJue3I6aSxhMDphLGExOnMscDA6W2kqTWF0aC5jb3MoYSksaSpNYXRoLnNpbihhKV0scDE6W2kqTWF0aC5jb3MocyksaSpNYXRoLnNpbihzKV19fWZ1bmN0aW9uIGUobix0KXtyZXR1cm4gbi5hMD09dC5hMCYmbi5hMT09dC5hMX1mdW5jdGlvbiByKG4sdCxlKXtyZXR1cm5cIkFcIituK1wiLFwiK24rXCIgMCBcIisgKyhlPmphKStcIiwxIFwiK3R9ZnVuY3Rpb24gdShuLHQsZSxyKXtyZXR1cm5cIlEgMCwwIFwiK3J9dmFyIGk9TWUsYT14ZSxvPUlpLGw9cGksYz12aTtyZXR1cm4gbi5yYWRpdXM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89RW4odCksbik6b30sbi5zb3VyY2U9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9RW4odCksbik6aX0sbi50YXJnZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9RW4odCksbik6YX0sbi5zdGFydEFuZ2xlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsPUVuKHQpLG4pOmx9LG4uZW5kQW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9RW4odCksbik6Y30sbn0sb2Euc3ZnLmRpYWdvbmFsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuLHUpe3ZhciBpPXQuY2FsbCh0aGlzLG4sdSksYT1lLmNhbGwodGhpcyxuLHUpLG89KGkueSthLnkpLzIsbD1baSx7eDppLngseTpvfSx7eDphLngseTpvfSxhXTtyZXR1cm4gbD1sLm1hcChyKSxcIk1cIitsWzBdK1wiQ1wiK2xbMV0rXCIgXCIrbFsyXStcIiBcIitsWzNdfXZhciB0PU1lLGU9eGUscj1ZaTtyZXR1cm4gbi5zb3VyY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9RW4oZSksbik6dH0sbi50YXJnZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9RW4odCksbik6ZX0sbi5wcm9qZWN0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPXQsbik6cn0sbn0sb2Euc3ZnLmRpYWdvbmFsLnJhZGlhbD1mdW5jdGlvbigpe3ZhciBuPW9hLnN2Zy5kaWFnb25hbCgpLHQ9WWksZT1uLnByb2plY3Rpb247cmV0dXJuIG4ucHJvamVjdGlvbj1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9lKFppKHQ9bikpOnR9LG59LG9hLnN2Zy5zeW1ib2w9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4scil7cmV0dXJuKFVsLmdldCh0LmNhbGwodGhpcyxuLHIpKXx8JGkpKGUuY2FsbCh0aGlzLG4scikpfXZhciB0PVhpLGU9Vmk7cmV0dXJuIG4udHlwZT1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1FbihlKSxuKTp0fSxuLnNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9RW4odCksbik6ZX0sbn07dmFyIFVsPW9hLm1hcCh7Y2lyY2xlOiRpLGNyb3NzOmZ1bmN0aW9uKG4pe3ZhciB0PU1hdGguc3FydChuLzUpLzI7cmV0dXJuXCJNXCIrLTMqdCtcIixcIistdCtcIkhcIistdCtcIlZcIistMyp0K1wiSFwiK3QrXCJWXCIrLXQrXCJIXCIrMyp0K1wiVlwiK3QrXCJIXCIrdCtcIlZcIiszKnQrXCJIXCIrLXQrXCJWXCIrdCtcIkhcIistMyp0K1wiWlwifSxkaWFtb25kOmZ1bmN0aW9uKG4pe3ZhciB0PU1hdGguc3FydChuLygyKkZsKSksZT10KkZsO3JldHVyblwiTTAsXCIrLXQrXCJMXCIrZStcIiwwIDAsXCIrdCtcIiBcIistZStcIiwwWlwifSxzcXVhcmU6ZnVuY3Rpb24obil7dmFyIHQ9TWF0aC5zcXJ0KG4pLzI7cmV0dXJuXCJNXCIrLXQrXCIsXCIrLXQrXCJMXCIrdCtcIixcIistdCtcIiBcIit0K1wiLFwiK3QrXCIgXCIrLXQrXCIsXCIrdCtcIlpcIn0sXCJ0cmlhbmdsZS1kb3duXCI6ZnVuY3Rpb24obil7dmFyIHQ9TWF0aC5zcXJ0KG4vamwpLGU9dCpqbC8yO3JldHVyblwiTTAsXCIrZStcIkxcIit0K1wiLFwiKy1lK1wiIFwiKy10K1wiLFwiKy1lK1wiWlwifSxcInRyaWFuZ2xlLXVwXCI6ZnVuY3Rpb24obil7dmFyIHQ9TWF0aC5zcXJ0KG4vamwpLGU9dCpqbC8yO3JldHVyblwiTTAsXCIrLWUrXCJMXCIrdCtcIixcIitlK1wiIFwiKy10K1wiLFwiK2UrXCJaXCJ9fSk7b2Euc3ZnLnN5bWJvbFR5cGVzPVVsLmtleXMoKTt2YXIgamw9TWF0aC5zcXJ0KDMpLEZsPU1hdGgudGFuKDMwKklhKTtBYS50cmFuc2l0aW9uPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdCxlLHI9SGx8fCsrWmwsdT1LaShuKSxpPVtdLGE9T2x8fHt0aW1lOkRhdGUubm93KCksZWFzZTpOcixkZWxheTowLGR1cmF0aW9uOjI1MH0sbz0tMSxsPXRoaXMubGVuZ3RoOysrbzxsOyl7aS5wdXNoKHQ9W10pO2Zvcih2YXIgYz10aGlzW29dLHM9LTEsZj1jLmxlbmd0aDsrK3M8ZjspKGU9Y1tzXSkmJlFpKGUscyx1LHIsYSksdC5wdXNoKGUpfXJldHVybiBXaShpLHUscil9LEFhLmludGVycnVwdD1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5lYWNoKG51bGw9PW4/SWw6QmkoS2kobikpKX07dmFyIEhsLE9sLElsPUJpKEtpKCkpLFlsPVtdLFpsPTA7WWwuY2FsbD1BYS5jYWxsLFlsLmVtcHR5PUFhLmVtcHR5LFlsLm5vZGU9QWEubm9kZSxZbC5zaXplPUFhLnNpemUsb2EudHJhbnNpdGlvbj1mdW5jdGlvbihuLHQpe3JldHVybiBuJiZuLnRyYW5zaXRpb24/SGw/bi50cmFuc2l0aW9uKHQpOm46b2Euc2VsZWN0aW9uKCkudHJhbnNpdGlvbihuKX0sb2EudHJhbnNpdGlvbi5wcm90b3R5cGU9WWwsWWwuc2VsZWN0PWZ1bmN0aW9uKG4pe3ZhciB0LGUscix1PXRoaXMuaWQsaT10aGlzLm5hbWVzcGFjZSxhPVtdO249QShuKTtmb3IodmFyIG89LTEsbD10aGlzLmxlbmd0aDsrK288bDspe2EucHVzaCh0PVtdKTtmb3IodmFyIGM9dGhpc1tvXSxzPS0xLGY9Yy5sZW5ndGg7KytzPGY7KShyPWNbc10pJiYoZT1uLmNhbGwocixyLl9fZGF0YV9fLHMsbykpPyhcIl9fZGF0YV9fXCJpbiByJiYoZS5fX2RhdGFfXz1yLl9fZGF0YV9fKSxRaShlLHMsaSx1LHJbaV1bdV0pLHQucHVzaChlKSk6dC5wdXNoKG51bGwpfXJldHVybiBXaShhLGksdSl9LFlsLnNlbGVjdEFsbD1mdW5jdGlvbihuKXt2YXIgdCxlLHIsdSxpLGE9dGhpcy5pZCxvPXRoaXMubmFtZXNwYWNlLGw9W107bj1DKG4pO2Zvcih2YXIgYz0tMSxzPXRoaXMubGVuZ3RoOysrYzxzOylmb3IodmFyIGY9dGhpc1tjXSxoPS0xLGc9Zi5sZW5ndGg7KytoPGc7KWlmKHI9ZltoXSl7aT1yW29dW2FdLGU9bi5jYWxsKHIsci5fX2RhdGFfXyxoLGMpLGwucHVzaCh0PVtdKTtmb3IodmFyIHA9LTEsdj1lLmxlbmd0aDsrK3A8djspKHU9ZVtwXSkmJlFpKHUscCxvLGEsaSksdC5wdXNoKHUpfXJldHVybiBXaShsLG8sYSl9LFlsLmZpbHRlcj1mdW5jdGlvbihuKXt2YXIgdCxlLHIsdT1bXTtcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiYobj1PKG4pKTtmb3IodmFyIGk9MCxhPXRoaXMubGVuZ3RoO2E+aTtpKyspe3UucHVzaCh0PVtdKTtmb3IodmFyIGU9dGhpc1tpXSxvPTAsbD1lLmxlbmd0aDtsPm87bysrKShyPWVbb10pJiZuLmNhbGwocixyLl9fZGF0YV9fLG8saSkmJnQucHVzaChyKX1yZXR1cm4gV2kodSx0aGlzLm5hbWVzcGFjZSx0aGlzLmlkKX0sWWwudHdlZW49ZnVuY3Rpb24obix0KXt2YXIgZT10aGlzLmlkLHI9dGhpcy5uYW1lc3BhY2U7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8Mj90aGlzLm5vZGUoKVtyXVtlXS50d2Vlbi5nZXQobik6WSh0aGlzLG51bGw9PXQ/ZnVuY3Rpb24odCl7dFtyXVtlXS50d2Vlbi5yZW1vdmUobil9OmZ1bmN0aW9uKHUpe3Vbcl1bZV0udHdlZW4uc2V0KG4sdCl9KX0sWWwuYXR0cj1mdW5jdGlvbihuLHQpe2Z1bmN0aW9uIGUoKXt0aGlzLnJlbW92ZUF0dHJpYnV0ZShvKX1mdW5jdGlvbiByKCl7dGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhvLnNwYWNlLG8ubG9jYWwpfWZ1bmN0aW9uIHUobil7cmV0dXJuIG51bGw9PW4/ZToobis9XCJcIixmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5nZXRBdHRyaWJ1dGUobyk7cmV0dXJuIGUhPT1uJiYodD1hKGUsbiksZnVuY3Rpb24obil7dGhpcy5zZXRBdHRyaWJ1dGUobyx0KG4pKX0pfSl9ZnVuY3Rpb24gaShuKXtyZXR1cm4gbnVsbD09bj9yOihuKz1cIlwiLGZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLmdldEF0dHJpYnV0ZU5TKG8uc3BhY2Usby5sb2NhbCk7cmV0dXJuIGUhPT1uJiYodD1hKGUsbiksZnVuY3Rpb24obil7dGhpcy5zZXRBdHRyaWJ1dGVOUyhvLnNwYWNlLG8ubG9jYWwsdChuKSl9KX0pfWlmKGFyZ3VtZW50cy5sZW5ndGg8Mil7Zm9yKHQgaW4gbil0aGlzLmF0dHIodCxuW3RdKTtyZXR1cm4gdGhpc312YXIgYT1cInRyYW5zZm9ybVwiPT1uPyRyOk1yLG89b2EubnMucXVhbGlmeShuKTtyZXR1cm4gSmkodGhpcyxcImF0dHIuXCIrbix0LG8ubG9jYWw/aTp1KX0sWWwuYXR0clR3ZWVuPWZ1bmN0aW9uKG4sdCl7ZnVuY3Rpb24gZShuLGUpe3ZhciByPXQuY2FsbCh0aGlzLG4sZSx0aGlzLmdldEF0dHJpYnV0ZSh1KSk7cmV0dXJuIHImJmZ1bmN0aW9uKG4pe3RoaXMuc2V0QXR0cmlidXRlKHUscihuKSl9fWZ1bmN0aW9uIHIobixlKXt2YXIgcj10LmNhbGwodGhpcyxuLGUsdGhpcy5nZXRBdHRyaWJ1dGVOUyh1LnNwYWNlLHUubG9jYWwpKTtyZXR1cm4gciYmZnVuY3Rpb24obil7dGhpcy5zZXRBdHRyaWJ1dGVOUyh1LnNwYWNlLHUubG9jYWwscihuKSl9fXZhciB1PW9hLm5zLnF1YWxpZnkobik7cmV0dXJuIHRoaXMudHdlZW4oXCJhdHRyLlwiK24sdS5sb2NhbD9yOmUpfSxZbC5zdHlsZT1mdW5jdGlvbihuLGUscil7ZnVuY3Rpb24gdSgpe3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobil9ZnVuY3Rpb24gaShlKXtyZXR1cm4gbnVsbD09ZT91OihlKz1cIlwiLGZ1bmN0aW9uKCl7dmFyIHUsaT10KHRoaXMpLmdldENvbXB1dGVkU3R5bGUodGhpcyxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG4pO3JldHVybiBpIT09ZSYmKHU9TXIoaSxlKSxmdW5jdGlvbih0KXt0aGlzLnN0eWxlLnNldFByb3BlcnR5KG4sdSh0KSxyKX0pfSl9dmFyIGE9YXJndW1lbnRzLmxlbmd0aDtpZigzPmEpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBuKXsyPmEmJihlPVwiXCIpO2ZvcihyIGluIG4pdGhpcy5zdHlsZShyLG5bcl0sZSk7cmV0dXJuIHRoaXN9cj1cIlwifXJldHVybiBKaSh0aGlzLFwic3R5bGUuXCIrbixlLGkpfSxZbC5zdHlsZVR3ZWVuPWZ1bmN0aW9uKG4sZSxyKXtmdW5jdGlvbiB1KHUsaSl7dmFyIGE9ZS5jYWxsKHRoaXMsdSxpLHQodGhpcykuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLG51bGwpLmdldFByb3BlcnR5VmFsdWUobikpO3JldHVybiBhJiZmdW5jdGlvbih0KXt0aGlzLnN0eWxlLnNldFByb3BlcnR5KG4sYSh0KSxyKX19cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8MyYmKHI9XCJcIiksdGhpcy50d2VlbihcInN0eWxlLlwiK24sdSl9LFlsLnRleHQ9ZnVuY3Rpb24obil7cmV0dXJuIEppKHRoaXMsXCJ0ZXh0XCIsbixHaSl9LFlsLnJlbW92ZT1mdW5jdGlvbigpe3ZhciBuPXRoaXMubmFtZXNwYWNlO3JldHVybiB0aGlzLmVhY2goXCJlbmQudHJhbnNpdGlvblwiLGZ1bmN0aW9uKCl7dmFyIHQ7dGhpc1tuXS5jb3VudDwyJiYodD10aGlzLnBhcmVudE5vZGUpJiZ0LnJlbW92ZUNoaWxkKHRoaXMpfSl9LFlsLmVhc2U9ZnVuY3Rpb24obil7dmFyIHQ9dGhpcy5pZCxlPXRoaXMubmFtZXNwYWNlO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDE/dGhpcy5ub2RlKClbZV1bdF0uZWFzZTooXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmKG49b2EuZWFzZS5hcHBseShvYSxhcmd1bWVudHMpKSxZKHRoaXMsZnVuY3Rpb24ocil7cltlXVt0XS5lYXNlPW59KSl9LFlsLmRlbGF5PWZ1bmN0aW9uKG4pe3ZhciB0PXRoaXMuaWQsZT10aGlzLm5hbWVzcGFjZTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aDwxP3RoaXMubm9kZSgpW2VdW3RdLmRlbGF5OlkodGhpcyxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP2Z1bmN0aW9uKHIsdSxpKXtyW2VdW3RdLmRlbGF5PStuLmNhbGwocixyLl9fZGF0YV9fLHUsaSl9OihuPStuLGZ1bmN0aW9uKHIpe3JbZV1bdF0uZGVsYXk9bn0pKX0sWWwuZHVyYXRpb249ZnVuY3Rpb24obil7dmFyIHQ9dGhpcy5pZCxlPXRoaXMubmFtZXNwYWNlO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDE/dGhpcy5ub2RlKClbZV1bdF0uZHVyYXRpb246WSh0aGlzLFwiZnVuY3Rpb25cIj09dHlwZW9mIG4/ZnVuY3Rpb24ocix1LGkpe3JbZV1bdF0uZHVyYXRpb249TWF0aC5tYXgoMSxuLmNhbGwocixyLl9fZGF0YV9fLHUsaSkpfToobj1NYXRoLm1heCgxLG4pLGZ1bmN0aW9uKHIpe3JbZV1bdF0uZHVyYXRpb249bn0pKX0sWWwuZWFjaD1mdW5jdGlvbihuLHQpe3ZhciBlPXRoaXMuaWQscj10aGlzLm5hbWVzcGFjZTtpZihhcmd1bWVudHMubGVuZ3RoPDIpe3ZhciB1PU9sLGk9SGw7dHJ5e0hsPWUsWSh0aGlzLGZ1bmN0aW9uKHQsdSxpKXtPbD10W3JdW2VdLG4uY2FsbCh0LHQuX19kYXRhX18sdSxpKX0pfWZpbmFsbHl7T2w9dSxIbD1pfX1lbHNlIFkodGhpcyxmdW5jdGlvbih1KXt2YXIgaT11W3JdW2VdOyhpLmV2ZW50fHwoaS5ldmVudD1vYS5kaXNwYXRjaChcInN0YXJ0XCIsXCJlbmRcIixcImludGVycnVwdFwiKSkpLm9uKG4sdCl9KTtyZXR1cm4gdGhpc30sWWwudHJhbnNpdGlvbj1mdW5jdGlvbigpe2Zvcih2YXIgbix0LGUscix1PXRoaXMuaWQsaT0rK1psLGE9dGhpcy5uYW1lc3BhY2Usbz1bXSxsPTAsYz10aGlzLmxlbmd0aDtjPmw7bCsrKXtvLnB1c2gobj1bXSk7Zm9yKHZhciB0PXRoaXNbbF0scz0wLGY9dC5sZW5ndGg7Zj5zO3MrKykoZT10W3NdKSYmKHI9ZVthXVt1XSxRaShlLHMsYSxpLHt0aW1lOnIudGltZSxlYXNlOnIuZWFzZSxkZWxheTpyLmRlbGF5K3IuZHVyYXRpb24sZHVyYXRpb246ci5kdXJhdGlvbn0pKSxuLnB1c2goZSl9cmV0dXJuIFdpKG8sYSxpKX0sb2Euc3ZnLmF4aXM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4pe24uZWFjaChmdW5jdGlvbigpe3ZhciBuLGM9b2Euc2VsZWN0KHRoaXMpLHM9dGhpcy5fX2NoYXJ0X198fGUsZj10aGlzLl9fY2hhcnRfXz1lLmNvcHkoKSxoPW51bGw9PWw/Zi50aWNrcz9mLnRpY2tzLmFwcGx5KGYsbyk6Zi5kb21haW4oKTpsLGc9bnVsbD09dD9mLnRpY2tGb3JtYXQ/Zi50aWNrRm9ybWF0LmFwcGx5KGYsbyk6eTp0LHA9Yy5zZWxlY3RBbGwoXCIudGlja1wiKS5kYXRhKGgsZiksdj1wLmVudGVyKCkuaW5zZXJ0KFwiZ1wiLFwiLmRvbWFpblwiKS5hdHRyKFwiY2xhc3NcIixcInRpY2tcIikuc3R5bGUoXCJvcGFjaXR5XCIsUGEpLGQ9b2EudHJhbnNpdGlvbihwLmV4aXQoKSkuc3R5bGUoXCJvcGFjaXR5XCIsUGEpLnJlbW92ZSgpLG09b2EudHJhbnNpdGlvbihwLm9yZGVyKCkpLnN0eWxlKFwib3BhY2l0eVwiLDEpLE09TWF0aC5tYXgodSwwKSthLHg9WnUoZiksYj1jLnNlbGVjdEFsbChcIi5kb21haW5cIikuZGF0YShbMF0pLF89KGIuZW50ZXIoKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJjbGFzc1wiLFwiZG9tYWluXCIpLG9hLnRyYW5zaXRpb24oYikpO3YuYXBwZW5kKFwibGluZVwiKSx2LmFwcGVuZChcInRleHRcIik7dmFyIHcsUyxrLE4sRT12LnNlbGVjdChcImxpbmVcIiksQT1tLnNlbGVjdChcImxpbmVcIiksQz1wLnNlbGVjdChcInRleHRcIikudGV4dChnKSx6PXYuc2VsZWN0KFwidGV4dFwiKSxMPW0uc2VsZWN0KFwidGV4dFwiKSxxPVwidG9wXCI9PT1yfHxcImxlZnRcIj09PXI/LTE6MTtpZihcImJvdHRvbVwiPT09cnx8XCJ0b3BcIj09PXI/KG49bmEsdz1cInhcIixrPVwieVwiLFM9XCJ4MlwiLE49XCJ5MlwiLEMuYXR0cihcImR5XCIsMD5xP1wiMGVtXCI6XCIuNzFlbVwiKS5zdHlsZShcInRleHQtYW5jaG9yXCIsXCJtaWRkbGVcIiksXy5hdHRyKFwiZFwiLFwiTVwiK3hbMF0rXCIsXCIrcSppK1wiVjBIXCIreFsxXStcIlZcIitxKmkpKToobj10YSx3PVwieVwiLGs9XCJ4XCIsUz1cInkyXCIsTj1cIngyXCIsQy5hdHRyKFwiZHlcIixcIi4zMmVtXCIpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwwPnE/XCJlbmRcIjpcInN0YXJ0XCIpLF8uYXR0cihcImRcIixcIk1cIitxKmkrXCIsXCIreFswXStcIkgwVlwiK3hbMV0rXCJIXCIrcSppKSksRS5hdHRyKE4scSp1KSx6LmF0dHIoayxxKk0pLEEuYXR0cihTLDApLmF0dHIoTixxKnUpLEwuYXR0cih3LDApLmF0dHIoayxxKk0pLGYucmFuZ2VCYW5kKXt2YXIgVD1mLFI9VC5yYW5nZUJhbmQoKS8yO3M9Zj1mdW5jdGlvbihuKXtyZXR1cm4gVChuKStSfX1lbHNlIHMucmFuZ2VCYW5kP3M9ZjpkLmNhbGwobixmLHMpO3YuY2FsbChuLHMsZiksbS5jYWxsKG4sZixmKX0pfXZhciB0LGU9b2Euc2NhbGUubGluZWFyKCkscj1WbCx1PTYsaT02LGE9MyxvPVsxMF0sbD1udWxsO3JldHVybiBuLnNjYWxlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXQsbik6ZX0sbi5vcmllbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9dCBpbiBYbD90K1wiXCI6Vmwsbik6cn0sbi50aWNrcz1mdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPWNhKGFyZ3VtZW50cyksbik6b30sbi50aWNrVmFsdWVzPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsPXQsbik6bH0sbi50aWNrRm9ybWF0PWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PWUsbik6dH0sbi50aWNrU2l6ZT1mdW5jdGlvbih0KXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoO3JldHVybiBlPyh1PSt0LGk9K2FyZ3VtZW50c1tlLTFdLG4pOnV9LG4uaW5uZXJUaWNrU2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT0rdCxuKTp1fSxuLm91dGVyVGlja1NpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9K3Qsbik6aX0sbi50aWNrUGFkZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0rdCxuKTphfSxuLnRpY2tTdWJkaXZpZGU9ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCYmbn0sbn07dmFyIFZsPVwiYm90dG9tXCIsWGw9e3RvcDoxLHJpZ2h0OjEsYm90dG9tOjEsbGVmdDoxfTtvYS5zdmcuYnJ1c2g9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKHQpe3QuZWFjaChmdW5jdGlvbigpe3ZhciB0PW9hLnNlbGVjdCh0aGlzKS5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsXCJhbGxcIikuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIixcInJnYmEoMCwwLDAsMClcIikub24oXCJtb3VzZWRvd24uYnJ1c2hcIixpKS5vbihcInRvdWNoc3RhcnQuYnJ1c2hcIixpKSxhPXQuc2VsZWN0QWxsKFwiLmJhY2tncm91bmRcIikuZGF0YShbMF0pO2EuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJjbGFzc1wiLFwiYmFja2dyb3VuZFwiKS5zdHlsZShcInZpc2liaWxpdHlcIixcImhpZGRlblwiKS5zdHlsZShcImN1cnNvclwiLFwiY3Jvc3NoYWlyXCIpLHQuc2VsZWN0QWxsKFwiLmV4dGVudFwiKS5kYXRhKFswXSkuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJjbGFzc1wiLFwiZXh0ZW50XCIpLnN0eWxlKFwiY3Vyc29yXCIsXCJtb3ZlXCIpO3ZhciBvPXQuc2VsZWN0QWxsKFwiLnJlc2l6ZVwiKS5kYXRhKHYseSk7by5leGl0KCkucmVtb3ZlKCksby5lbnRlcigpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsZnVuY3Rpb24obil7cmV0dXJuXCJyZXNpemUgXCIrbn0pLnN0eWxlKFwiY3Vyc29yXCIsZnVuY3Rpb24obil7cmV0dXJuICRsW25dfSkuYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwieFwiLGZ1bmN0aW9uKG4pe3JldHVybi9bZXddJC8udGVzdChuKT8tMzpudWxsfSkuYXR0cihcInlcIixmdW5jdGlvbihuKXtyZXR1cm4vXltuc10vLnRlc3Qobik/LTM6bnVsbH0pLmF0dHIoXCJ3aWR0aFwiLDYpLmF0dHIoXCJoZWlnaHRcIiw2KS5zdHlsZShcInZpc2liaWxpdHlcIixcImhpZGRlblwiKSxvLnN0eWxlKFwiZGlzcGxheVwiLG4uZW1wdHkoKT9cIm5vbmVcIjpudWxsKTt2YXIgbCxmPW9hLnRyYW5zaXRpb24odCksaD1vYS50cmFuc2l0aW9uKGEpO2MmJihsPVp1KGMpLGguYXR0cihcInhcIixsWzBdKS5hdHRyKFwid2lkdGhcIixsWzFdLWxbMF0pLHIoZikpLHMmJihsPVp1KHMpLGguYXR0cihcInlcIixsWzBdKS5hdHRyKFwiaGVpZ2h0XCIsbFsxXS1sWzBdKSx1KGYpKSxlKGYpfSl9ZnVuY3Rpb24gZShuKXtuLnNlbGVjdEFsbChcIi5yZXNpemVcIikuYXR0cihcInRyYW5zZm9ybVwiLGZ1bmN0aW9uKG4pe3JldHVyblwidHJhbnNsYXRlKFwiK2ZbKy9lJC8udGVzdChuKV0rXCIsXCIraFsrL15zLy50ZXN0KG4pXStcIilcIn0pfWZ1bmN0aW9uIHIobil7bi5zZWxlY3QoXCIuZXh0ZW50XCIpLmF0dHIoXCJ4XCIsZlswXSksbi5zZWxlY3RBbGwoXCIuZXh0ZW50LC5uPnJlY3QsLnM+cmVjdFwiKS5hdHRyKFwid2lkdGhcIixmWzFdLWZbMF0pfWZ1bmN0aW9uIHUobil7bi5zZWxlY3QoXCIuZXh0ZW50XCIpLmF0dHIoXCJ5XCIsaFswXSksbi5zZWxlY3RBbGwoXCIuZXh0ZW50LC5lPnJlY3QsLnc+cmVjdFwiKS5hdHRyKFwiaGVpZ2h0XCIsaFsxXS1oWzBdKX1mdW5jdGlvbiBpKCl7ZnVuY3Rpb24gaSgpezMyPT1vYS5ldmVudC5rZXlDb2RlJiYoQ3x8KE09bnVsbCxMWzBdLT1mWzFdLExbMV0tPWhbMV0sQz0yKSxTKCkpfWZ1bmN0aW9uIHYoKXszMj09b2EuZXZlbnQua2V5Q29kZSYmMj09QyYmKExbMF0rPWZbMV0sTFsxXSs9aFsxXSxDPTAsUygpKX1mdW5jdGlvbiBkKCl7dmFyIG49b2EubW91c2UoYiksdD0hMTt4JiYoblswXSs9eFswXSxuWzFdKz14WzFdKSxDfHwob2EuZXZlbnQuYWx0S2V5PyhNfHwoTT1bKGZbMF0rZlsxXSkvMiwoaFswXStoWzFdKS8yXSksTFswXT1mWysoblswXTxNWzBdKV0sTFsxXT1oWysoblsxXTxNWzFdKV0pOk09bnVsbCksRSYmbShuLGMsMCkmJihyKGspLHQ9ITApLEEmJm0obixzLDEpJiYodShrKSx0PSEwKSx0JiYoZShrKSx3KHt0eXBlOlwiYnJ1c2hcIixtb2RlOkM/XCJtb3ZlXCI6XCJyZXNpemVcIn0pKX1mdW5jdGlvbiBtKG4sdCxlKXt2YXIgcix1LGk9WnUodCksbD1pWzBdLGM9aVsxXSxzPUxbZV0sdj1lP2g6ZixkPXZbMV0tdlswXTtyZXR1cm4gQyYmKGwtPXMsYy09ZCtzKSxyPShlP3A6Zyk/TWF0aC5tYXgobCxNYXRoLm1pbihjLG5bZV0pKTpuW2VdLEM/dT0ocis9cykrZDooTSYmKHM9TWF0aC5tYXgobCxNYXRoLm1pbihjLDIqTVtlXS1yKSkpLHI+cz8odT1yLHI9cyk6dT1zKSx2WzBdIT1yfHx2WzFdIT11PyhlP289bnVsbDphPW51bGwsdlswXT1yLHZbMV09dSwhMCk6dm9pZCAwfWZ1bmN0aW9uIHkoKXtkKCksay5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsXCJhbGxcIikuc2VsZWN0QWxsKFwiLnJlc2l6ZVwiKS5zdHlsZShcImRpc3BsYXlcIixuLmVtcHR5KCk/XCJub25lXCI6bnVsbCksb2Euc2VsZWN0KFwiYm9keVwiKS5zdHlsZShcImN1cnNvclwiLG51bGwpLHEub24oXCJtb3VzZW1vdmUuYnJ1c2hcIixudWxsKS5vbihcIm1vdXNldXAuYnJ1c2hcIixudWxsKS5vbihcInRvdWNobW92ZS5icnVzaFwiLG51bGwpLm9uKFwidG91Y2hlbmQuYnJ1c2hcIixudWxsKS5vbihcImtleWRvd24uYnJ1c2hcIixudWxsKS5vbihcImtleXVwLmJydXNoXCIsbnVsbCkseigpLHcoe3R5cGU6XCJicnVzaGVuZFwifSl9dmFyIE0seCxiPXRoaXMsXz1vYS5zZWxlY3Qob2EuZXZlbnQudGFyZ2V0KSx3PWwub2YoYixhcmd1bWVudHMpLGs9b2Euc2VsZWN0KGIpLE49Xy5kYXR1bSgpLEU9IS9eKG58cykkLy50ZXN0KE4pJiZjLEE9IS9eKGV8dykkLy50ZXN0KE4pJiZzLEM9Xy5jbGFzc2VkKFwiZXh0ZW50XCIpLHo9VyhiKSxMPW9hLm1vdXNlKGIpLHE9b2Euc2VsZWN0KHQoYikpLm9uKFwia2V5ZG93bi5icnVzaFwiLGkpLm9uKFwia2V5dXAuYnJ1c2hcIix2KTtpZihvYS5ldmVudC5jaGFuZ2VkVG91Y2hlcz9xLm9uKFwidG91Y2htb3ZlLmJydXNoXCIsZCkub24oXCJ0b3VjaGVuZC5icnVzaFwiLHkpOnEub24oXCJtb3VzZW1vdmUuYnJ1c2hcIixkKS5vbihcIm1vdXNldXAuYnJ1c2hcIix5KSxrLmludGVycnVwdCgpLnNlbGVjdEFsbChcIipcIikuaW50ZXJydXB0KCksQylMWzBdPWZbMF0tTFswXSxMWzFdPWhbMF0tTFsxXTtlbHNlIGlmKE4pe3ZhciBUPSsvdyQvLnRlc3QoTiksUj0rL15uLy50ZXN0KE4pO3g9W2ZbMS1UXS1MWzBdLGhbMS1SXS1MWzFdXSxMWzBdPWZbVF0sTFsxXT1oW1JdfWVsc2Ugb2EuZXZlbnQuYWx0S2V5JiYoTT1MLnNsaWNlKCkpO2suc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLFwibm9uZVwiKS5zZWxlY3RBbGwoXCIucmVzaXplXCIpLnN0eWxlKFwiZGlzcGxheVwiLG51bGwpLG9hLnNlbGVjdChcImJvZHlcIikuc3R5bGUoXCJjdXJzb3JcIixfLnN0eWxlKFwiY3Vyc29yXCIpKSx3KHt0eXBlOlwiYnJ1c2hzdGFydFwifSksZCgpfXZhciBhLG8sbD1OKG4sXCJicnVzaHN0YXJ0XCIsXCJicnVzaFwiLFwiYnJ1c2hlbmRcIiksYz1udWxsLHM9bnVsbCxmPVswLDBdLGg9WzAsMF0sZz0hMCxwPSEwLHY9QmxbMF07cmV0dXJuIG4uZXZlbnQ9ZnVuY3Rpb24obil7bi5lYWNoKGZ1bmN0aW9uKCl7dmFyIG49bC5vZih0aGlzLGFyZ3VtZW50cyksdD17eDpmLHk6aCxpOmEsajpvfSxlPXRoaXMuX19jaGFydF9ffHx0O3RoaXMuX19jaGFydF9fPXQsSGw/b2Euc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5lYWNoKFwic3RhcnQuYnJ1c2hcIixmdW5jdGlvbigpe2E9ZS5pLG89ZS5qLGY9ZS54LGg9ZS55LG4oe3R5cGU6XCJicnVzaHN0YXJ0XCJ9KX0pLnR3ZWVuKFwiYnJ1c2g6YnJ1c2hcIixmdW5jdGlvbigpe3ZhciBlPXhyKGYsdC54KSxyPXhyKGgsdC55KTtyZXR1cm4gYT1vPW51bGwsZnVuY3Rpb24odSl7Zj10Lng9ZSh1KSxoPXQueT1yKHUpLG4oe3R5cGU6XCJicnVzaFwiLG1vZGU6XCJyZXNpemVcIn0pfX0pLmVhY2goXCJlbmQuYnJ1c2hcIixmdW5jdGlvbigpe2E9dC5pLG89dC5qLG4oe3R5cGU6XCJicnVzaFwiLG1vZGU6XCJyZXNpemVcIn0pLG4oe3R5cGU6XCJicnVzaGVuZFwifSl9KToobih7dHlwZTpcImJydXNoc3RhcnRcIn0pLG4oe3R5cGU6XCJicnVzaFwiLG1vZGU6XCJyZXNpemVcIn0pLG4oe3R5cGU6XCJicnVzaGVuZFwifSkpfSl9LG4ueD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz10LHY9QmxbIWM8PDF8IXNdLG4pOmN9LG4ueT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocz10LHY9QmxbIWM8PDF8IXNdLG4pOnN9LG4uY2xhbXA9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGMmJnM/KGc9ISF0WzBdLHA9ISF0WzFdKTpjP2c9ISF0OnMmJihwPSEhdCksbik6YyYmcz9bZyxwXTpjP2c6cz9wOm51bGx9LG4uZXh0ZW50PWZ1bmN0aW9uKHQpe3ZhciBlLHIsdSxpLGw7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGMmJihlPXRbMF0scj10WzFdLHMmJihlPWVbMF0scj1yWzBdKSxhPVtlLHJdLGMuaW52ZXJ0JiYoZT1jKGUpLHI9YyhyKSksZT5yJiYobD1lLGU9cixyPWwpLChlIT1mWzBdfHxyIT1mWzFdKSYmKGY9W2Uscl0pKSxzJiYodT10WzBdLGk9dFsxXSxjJiYodT11WzFdLGk9aVsxXSksbz1bdSxpXSxzLmludmVydCYmKHU9cyh1KSxpPXMoaSkpLHU+aSYmKGw9dSx1PWksaT1sKSwodSE9aFswXXx8aSE9aFsxXSkmJihoPVt1LGldKSksbik6KGMmJihhPyhlPWFbMF0scj1hWzFdKTooZT1mWzBdLHI9ZlsxXSxjLmludmVydCYmKGU9Yy5pbnZlcnQoZSkscj1jLmludmVydChyKSksZT5yJiYobD1lLGU9cixyPWwpKSkscyYmKG8/KHU9b1swXSxpPW9bMV0pOih1PWhbMF0saT1oWzFdLHMuaW52ZXJ0JiYodT1zLmludmVydCh1KSxpPXMuaW52ZXJ0KGkpKSx1PmkmJihsPXUsdT1pLGk9bCkpKSxjJiZzP1tbZSx1XSxbcixpXV06Yz9bZSxyXTpzJiZbdSxpXSl9LG4uY2xlYXI9ZnVuY3Rpb24oKXtyZXR1cm4gbi5lbXB0eSgpfHwoZj1bMCwwXSxoPVswLDBdLGE9bz1udWxsKSxufSxuLmVtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuISFjJiZmWzBdPT1mWzFdfHwhIXMmJmhbMF09PWhbMV19LG9hLnJlYmluZChuLGwsXCJvblwiKX07dmFyICRsPXtuOlwibnMtcmVzaXplXCIsZTpcImV3LXJlc2l6ZVwiLHM6XCJucy1yZXNpemVcIix3OlwiZXctcmVzaXplXCIsbnc6XCJud3NlLXJlc2l6ZVwiLG5lOlwibmVzdy1yZXNpemVcIixzZTpcIm53c2UtcmVzaXplXCIsc3c6XCJuZXN3LXJlc2l6ZVwifSxCbD1bW1wiblwiLFwiZVwiLFwic1wiLFwid1wiLFwibndcIixcIm5lXCIsXCJzZVwiLFwic3dcIl0sW1wiZVwiLFwid1wiXSxbXCJuXCIsXCJzXCJdLFtdXSxXbD1nby5mb3JtYXQ9eG8udGltZUZvcm1hdCxKbD1XbC51dGMsR2w9SmwoXCIlWS0lbS0lZFQlSDolTTolUy4lTFpcIik7V2wuaXNvPURhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nJiYrbmV3IERhdGUoXCIyMDAwLTAxLTAxVDAwOjAwOjAwLjAwMFpcIik/ZWE6R2wsZWEucGFyc2U9ZnVuY3Rpb24obil7dmFyIHQ9bmV3IERhdGUobik7cmV0dXJuIGlzTmFOKHQpP251bGw6dH0sZWEudG9TdHJpbmc9R2wudG9TdHJpbmcsZ28uc2Vjb25kPU9uKGZ1bmN0aW9uKG4pe3JldHVybiBuZXcgcG8oMWUzKk1hdGguZmxvb3Iobi8xZTMpKX0sZnVuY3Rpb24obix0KXtuLnNldFRpbWUobi5nZXRUaW1lKCkrMWUzKk1hdGguZmxvb3IodCkpfSxmdW5jdGlvbihuKXtyZXR1cm4gbi5nZXRTZWNvbmRzKCl9KSxnby5zZWNvbmRzPWdvLnNlY29uZC5yYW5nZSxnby5zZWNvbmRzLnV0Yz1nby5zZWNvbmQudXRjLnJhbmdlLGdvLm1pbnV0ZT1PbihmdW5jdGlvbihuKXtyZXR1cm4gbmV3IHBvKDZlNCpNYXRoLmZsb29yKG4vNmU0KSl9LGZ1bmN0aW9uKG4sdCl7bi5zZXRUaW1lKG4uZ2V0VGltZSgpKzZlNCpNYXRoLmZsb29yKHQpKX0sZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0TWludXRlcygpfSksZ28ubWludXRlcz1nby5taW51dGUucmFuZ2UsZ28ubWludXRlcy51dGM9Z28ubWludXRlLnV0Yy5yYW5nZSxnby5ob3VyPU9uKGZ1bmN0aW9uKG4pe3ZhciB0PW4uZ2V0VGltZXpvbmVPZmZzZXQoKS82MDtyZXR1cm4gbmV3IHBvKDM2ZTUqKE1hdGguZmxvb3Iobi8zNmU1LXQpK3QpKX0sZnVuY3Rpb24obix0KXtuLnNldFRpbWUobi5nZXRUaW1lKCkrMzZlNSpNYXRoLmZsb29yKHQpKX0sZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0SG91cnMoKX0pLGdvLmhvdXJzPWdvLmhvdXIucmFuZ2UsZ28uaG91cnMudXRjPWdvLmhvdXIudXRjLnJhbmdlLGdvLm1vbnRoPU9uKGZ1bmN0aW9uKG4pe3JldHVybiBuPWdvLmRheShuKSxuLnNldERhdGUoMSksbn0sZnVuY3Rpb24obix0KXtuLnNldE1vbnRoKG4uZ2V0TW9udGgoKSt0KX0sZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0TW9udGgoKX0pLGdvLm1vbnRocz1nby5tb250aC5yYW5nZSxnby5tb250aHMudXRjPWdvLm1vbnRoLnV0Yy5yYW5nZTt2YXIgS2w9WzFlMyw1ZTMsMTVlMywzZTQsNmU0LDNlNSw5ZTUsMThlNSwzNmU1LDEwOGU1LDIxNmU1LDQzMmU1LDg2NGU1LDE3MjhlNSw2MDQ4ZTUsMjU5MmU2LDc3NzZlNiwzMTUzNmU2XSxRbD1bW2dvLnNlY29uZCwxXSxbZ28uc2Vjb25kLDVdLFtnby5zZWNvbmQsMTVdLFtnby5zZWNvbmQsMzBdLFtnby5taW51dGUsMV0sW2dvLm1pbnV0ZSw1XSxbZ28ubWludXRlLDE1XSxbZ28ubWludXRlLDMwXSxbZ28uaG91ciwxXSxbZ28uaG91ciwzXSxbZ28uaG91ciw2XSxbZ28uaG91ciwxMl0sW2dvLmRheSwxXSxbZ28uZGF5LDJdLFtnby53ZWVrLDFdLFtnby5tb250aCwxXSxbZ28ubW9udGgsM10sW2dvLnllYXIsMV1dLG5jPVdsLm11bHRpKFtbXCIuJUxcIixmdW5jdGlvbihuKXtyZXR1cm4gbi5nZXRNaWxsaXNlY29uZHMoKX1dLFtcIjolU1wiLGZ1bmN0aW9uKG4pe3JldHVybiBuLmdldFNlY29uZHMoKX1dLFtcIiVJOiVNXCIsZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0TWludXRlcygpfV0sW1wiJUkgJXBcIixmdW5jdGlvbihuKXtyZXR1cm4gbi5nZXRIb3VycygpfV0sW1wiJWEgJWRcIixmdW5jdGlvbihuKXtyZXR1cm4gbi5nZXREYXkoKSYmMSE9bi5nZXREYXRlKCl9XSxbXCIlYiAlZFwiLGZ1bmN0aW9uKG4pe3JldHVybiAxIT1uLmdldERhdGUoKX1dLFtcIiVCXCIsZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0TW9udGgoKX1dLFtcIiVZXCIsenRdXSksdGM9e3JhbmdlOmZ1bmN0aW9uKG4sdCxlKXtyZXR1cm4gb2EucmFuZ2UoTWF0aC5jZWlsKG4vZSkqZSwrdCxlKS5tYXAodWEpfSxmbG9vcjp5LGNlaWw6eX07UWwueWVhcj1nby55ZWFyLGdvLnNjYWxlPWZ1bmN0aW9uKCl7cmV0dXJuIHJhKG9hLnNjYWxlLmxpbmVhcigpLFFsLG5jKX07dmFyIGVjPVFsLm1hcChmdW5jdGlvbihuKXtyZXR1cm5bblswXS51dGMsblsxXV19KSxyYz1KbC5tdWx0aShbW1wiLiVMXCIsZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0VVRDTWlsbGlzZWNvbmRzKCl9XSxbXCI6JVNcIixmdW5jdGlvbihuKXtyZXR1cm4gbi5nZXRVVENTZWNvbmRzKCl9XSxbXCIlSTolTVwiLGZ1bmN0aW9uKG4pe3JldHVybiBuLmdldFVUQ01pbnV0ZXMoKX1dLFtcIiVJICVwXCIsZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0VVRDSG91cnMoKX1dLFtcIiVhICVkXCIsZnVuY3Rpb24obil7cmV0dXJuIG4uZ2V0VVRDRGF5KCkmJjEhPW4uZ2V0VVRDRGF0ZSgpfV0sW1wiJWIgJWRcIixmdW5jdGlvbihuKXtyZXR1cm4gMSE9bi5nZXRVVENEYXRlKCl9XSxbXCIlQlwiLGZ1bmN0aW9uKG4pe3JldHVybiBuLmdldFVUQ01vbnRoKCl9XSxbXCIlWVwiLHp0XV0pO2VjLnllYXI9Z28ueWVhci51dGMsZ28uc2NhbGUudXRjPWZ1bmN0aW9uKCl7cmV0dXJuIHJhKG9hLnNjYWxlLmxpbmVhcigpLGVjLHJjKX0sb2EudGV4dD1BbihmdW5jdGlvbihuKXtyZXR1cm4gbi5yZXNwb25zZVRleHR9KSxvYS5qc29uPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIENuKG4sXCJhcHBsaWNhdGlvbi9qc29uXCIsaWEsdCl9LG9hLmh0bWw9ZnVuY3Rpb24obix0KXtyZXR1cm4gQ24obixcInRleHQvaHRtbFwiLGFhLHQpfSxvYS54bWw9QW4oZnVuY3Rpb24obil7cmV0dXJuIG4ucmVzcG9uc2VYTUx9KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/KHRoaXMuZDM9b2EsZGVmaW5lKG9hKSk6XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9b2E6dGhpcy5kMz1vYX0oKTsiLCIvLyBkMy50aXBcbi8vIENvcHlyaWdodCAoYykgMjAxMyBKdXN0aW4gUGFsbWVyXG4vL1xuLy8gVG9vbHRpcHMgZm9yIGQzLmpzIFNWRyB2aXN1YWxpemF0aW9uc1xuXG4oZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZSB3aXRoIGQzIGFzIGEgZGVwZW5kZW5jeS5cbiAgICBkZWZpbmUoWydkMyddLCBmYWN0b3J5KVxuICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGQzKSB7XG4gICAgICBkMy50aXAgPSBmYWN0b3J5KGQzKVxuICAgICAgcmV0dXJuIGQzLnRpcFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBCcm93c2VyIGdsb2JhbC5cbiAgICByb290LmQzLnRpcCA9IGZhY3Rvcnkocm9vdC5kMylcbiAgfVxufSh0aGlzLCBmdW5jdGlvbiAoZDMpIHtcblxuICAvLyBQdWJsaWMgLSBjb250cnVjdHMgYSBuZXcgdG9vbHRpcFxuICAvL1xuICAvLyBSZXR1cm5zIGEgdGlwXG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgZGlyZWN0aW9uID0gZDNfdGlwX2RpcmVjdGlvbixcbiAgICAgICAgb2Zmc2V0ICAgID0gZDNfdGlwX29mZnNldCxcbiAgICAgICAgaHRtbCAgICAgID0gZDNfdGlwX2h0bWwsXG4gICAgICAgIG5vZGUgICAgICA9IGluaXROb2RlKCksXG4gICAgICAgIHN2ZyAgICAgICA9IG51bGwsXG4gICAgICAgIHBvaW50ICAgICA9IG51bGwsXG4gICAgICAgIHRhcmdldCAgICA9IG51bGxcblxuICAgIGZ1bmN0aW9uIHRpcCh2aXMpIHtcbiAgICAgIHN2ZyA9IGdldFNWR05vZGUodmlzKVxuICAgICAgcG9pbnQgPSBzdmcuY3JlYXRlU1ZHUG9pbnQoKVxuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub2RlKVxuICAgIH1cblxuICAgIC8vIFB1YmxpYyAtIHNob3cgdGhlIHRvb2x0aXAgb24gdGhlIHNjcmVlblxuICAgIC8vXG4gICAgLy8gUmV0dXJucyBhIHRpcFxuICAgIHRpcC5zaG93ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cylcbiAgICAgIGlmKGFyZ3NbYXJncy5sZW5ndGggLSAxXSBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpIHRhcmdldCA9IGFyZ3MucG9wKClcblxuICAgICAgdmFyIGNvbnRlbnQgPSBodG1sLmFwcGx5KHRoaXMsIGFyZ3MpLFxuICAgICAgICAgIHBvZmZzZXQgPSBvZmZzZXQuYXBwbHkodGhpcywgYXJncyksXG4gICAgICAgICAgZGlyICAgICA9IGRpcmVjdGlvbi5hcHBseSh0aGlzLCBhcmdzKSxcbiAgICAgICAgICBub2RlbCAgID0gZ2V0Tm9kZUVsKCksXG4gICAgICAgICAgaSAgICAgICA9IGRpcmVjdGlvbnMubGVuZ3RoLFxuICAgICAgICAgIGNvb3JkcyxcbiAgICAgICAgICBzY3JvbGxUb3AgID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCxcbiAgICAgICAgICBzY3JvbGxMZWZ0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0XG5cbiAgICAgIG5vZGVsLmh0bWwoY29udGVudClcbiAgICAgICAgLnN0eWxlKHsgb3BhY2l0eTogMSwgJ3BvaW50ZXItZXZlbnRzJzogJ2FsbCcgfSlcblxuICAgICAgd2hpbGUoaS0tKSBub2RlbC5jbGFzc2VkKGRpcmVjdGlvbnNbaV0sIGZhbHNlKVxuICAgICAgY29vcmRzID0gZGlyZWN0aW9uX2NhbGxiYWNrcy5nZXQoZGlyKS5hcHBseSh0aGlzKVxuICAgICAgbm9kZWwuY2xhc3NlZChkaXIsIHRydWUpLnN0eWxlKHtcbiAgICAgICAgdG9wOiAoY29vcmRzLnRvcCArICBwb2Zmc2V0WzBdKSArIHNjcm9sbFRvcCArICdweCcsXG4gICAgICAgIGxlZnQ6IChjb29yZHMubGVmdCArIHBvZmZzZXRbMV0pICsgc2Nyb2xsTGVmdCArICdweCdcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiB0aXBcbiAgICB9XG5cbiAgICAvLyBQdWJsaWMgLSBoaWRlIHRoZSB0b29sdGlwXG4gICAgLy9cbiAgICAvLyBSZXR1cm5zIGEgdGlwXG4gICAgdGlwLmhpZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBub2RlbCA9IGdldE5vZGVFbCgpXG4gICAgICBub2RlbC5zdHlsZSh7IG9wYWNpdHk6IDAsICdwb2ludGVyLWV2ZW50cyc6ICdub25lJyB9KVxuICAgICAgcmV0dXJuIHRpcFxuICAgIH1cblxuICAgIC8vIFB1YmxpYzogUHJveHkgYXR0ciBjYWxscyB0byB0aGUgZDMgdGlwIGNvbnRhaW5lci4gIFNldHMgb3IgZ2V0cyBhdHRyaWJ1dGUgdmFsdWUuXG4gICAgLy9cbiAgICAvLyBuIC0gbmFtZSBvZiB0aGUgYXR0cmlidXRlXG4gICAgLy8gdiAtIHZhbHVlIG9mIHRoZSBhdHRyaWJ1dGVcbiAgICAvL1xuICAgIC8vIFJldHVybnMgdGlwIG9yIGF0dHJpYnV0ZSB2YWx1ZVxuICAgIHRpcC5hdHRyID0gZnVuY3Rpb24obiwgdikge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyICYmIHR5cGVvZiBuID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gZ2V0Tm9kZUVsKCkuYXR0cihuKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGFyZ3MgPSAgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKVxuICAgICAgICBkMy5zZWxlY3Rpb24ucHJvdG90eXBlLmF0dHIuYXBwbHkoZ2V0Tm9kZUVsKCksIGFyZ3MpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aXBcbiAgICB9XG5cbiAgICAvLyBQdWJsaWM6IFByb3h5IHN0eWxlIGNhbGxzIHRvIHRoZSBkMyB0aXAgY29udGFpbmVyLiAgU2V0cyBvciBnZXRzIGEgc3R5bGUgdmFsdWUuXG4gICAgLy9cbiAgICAvLyBuIC0gbmFtZSBvZiB0aGUgcHJvcGVydHlcbiAgICAvLyB2IC0gdmFsdWUgb2YgdGhlIHByb3BlcnR5XG4gICAgLy9cbiAgICAvLyBSZXR1cm5zIHRpcCBvciBzdHlsZSBwcm9wZXJ0eSB2YWx1ZVxuICAgIHRpcC5zdHlsZSA9IGZ1bmN0aW9uKG4sIHYpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMiAmJiB0eXBlb2YgbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGdldE5vZGVFbCgpLnN0eWxlKG4pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgYXJncyA9ICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpXG4gICAgICAgIGQzLnNlbGVjdGlvbi5wcm90b3R5cGUuc3R5bGUuYXBwbHkoZ2V0Tm9kZUVsKCksIGFyZ3MpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aXBcbiAgICB9XG5cbiAgICAvLyBQdWJsaWM6IFNldCBvciBnZXQgdGhlIGRpcmVjdGlvbiBvZiB0aGUgdG9vbHRpcFxuICAgIC8vXG4gICAgLy8gdiAtIE9uZSBvZiBuKG5vcnRoKSwgcyhzb3V0aCksIGUoZWFzdCksIG9yIHcod2VzdCksIG53KG5vcnRod2VzdCksXG4gICAgLy8gICAgIHN3KHNvdXRod2VzdCksIG5lKG5vcnRoZWFzdCkgb3Igc2Uoc291dGhlYXN0KVxuICAgIC8vXG4gICAgLy8gUmV0dXJucyB0aXAgb3IgZGlyZWN0aW9uXG4gICAgdGlwLmRpcmVjdGlvbiA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRpcmVjdGlvblxuICAgICAgZGlyZWN0aW9uID0gdiA9PSBudWxsID8gdiA6IGQzLmZ1bmN0b3IodilcblxuICAgICAgcmV0dXJuIHRpcFxuICAgIH1cblxuICAgIC8vIFB1YmxpYzogU2V0cyBvciBnZXRzIHRoZSBvZmZzZXQgb2YgdGhlIHRpcFxuICAgIC8vXG4gICAgLy8gdiAtIEFycmF5IG9mIFt4LCB5XSBvZmZzZXRcbiAgICAvL1xuICAgIC8vIFJldHVybnMgb2Zmc2V0IG9yXG4gICAgdGlwLm9mZnNldCA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9mZnNldFxuICAgICAgb2Zmc2V0ID0gdiA9PSBudWxsID8gdiA6IGQzLmZ1bmN0b3IodilcblxuICAgICAgcmV0dXJuIHRpcFxuICAgIH1cblxuICAgIC8vIFB1YmxpYzogc2V0cyBvciBnZXRzIHRoZSBodG1sIHZhbHVlIG9mIHRoZSB0b29sdGlwXG4gICAgLy9cbiAgICAvLyB2IC0gU3RyaW5nIHZhbHVlIG9mIHRoZSB0aXBcbiAgICAvL1xuICAgIC8vIFJldHVybnMgaHRtbCB2YWx1ZSBvciB0aXBcbiAgICB0aXAuaHRtbCA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGh0bWxcbiAgICAgIGh0bWwgPSB2ID09IG51bGwgPyB2IDogZDMuZnVuY3Rvcih2KVxuXG4gICAgICByZXR1cm4gdGlwXG4gICAgfVxuXG4gICAgLy8gUHVibGljOiBkZXN0cm95cyB0aGUgdG9vbHRpcCBhbmQgcmVtb3ZlcyBpdCBmcm9tIHRoZSBET01cbiAgICAvL1xuICAgIC8vIFJldHVybnMgYSB0aXBcbiAgICB0aXAuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYobm9kZSkge1xuICAgICAgICBnZXROb2RlRWwoKS5yZW1vdmUoKTtcbiAgICAgICAgbm9kZSA9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGlwO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGQzX3RpcF9kaXJlY3Rpb24oKSB7IHJldHVybiAnbicgfVxuICAgIGZ1bmN0aW9uIGQzX3RpcF9vZmZzZXQoKSB7IHJldHVybiBbMCwgMF0gfVxuICAgIGZ1bmN0aW9uIGQzX3RpcF9odG1sKCkgeyByZXR1cm4gJyAnIH1cblxuICAgIHZhciBkaXJlY3Rpb25fY2FsbGJhY2tzID0gZDMubWFwKHtcbiAgICAgIG46ICBkaXJlY3Rpb25fbixcbiAgICAgIHM6ICBkaXJlY3Rpb25fcyxcbiAgICAgIGU6ICBkaXJlY3Rpb25fZSxcbiAgICAgIHc6ICBkaXJlY3Rpb25fdyxcbiAgICAgIG53OiBkaXJlY3Rpb25fbncsXG4gICAgICBuZTogZGlyZWN0aW9uX25lLFxuICAgICAgc3c6IGRpcmVjdGlvbl9zdyxcbiAgICAgIHNlOiBkaXJlY3Rpb25fc2VcbiAgICB9KSxcblxuICAgIGRpcmVjdGlvbnMgPSBkaXJlY3Rpb25fY2FsbGJhY2tzLmtleXMoKVxuXG4gICAgZnVuY3Rpb24gZGlyZWN0aW9uX24oKSB7XG4gICAgICB2YXIgYmJveCA9IGdldFNjcmVlbkJCb3goKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9wOiAgYmJveC5uLnkgLSBub2RlLm9mZnNldEhlaWdodCxcbiAgICAgICAgbGVmdDogYmJveC5uLnggLSBub2RlLm9mZnNldFdpZHRoIC8gMlxuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRpcmVjdGlvbl9zKCkge1xuICAgICAgdmFyIGJib3ggPSBnZXRTY3JlZW5CQm94KClcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRvcDogIGJib3gucy55LFxuICAgICAgICBsZWZ0OiBiYm94LnMueCAtIG5vZGUub2Zmc2V0V2lkdGggLyAyXG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGlyZWN0aW9uX2UoKSB7XG4gICAgICB2YXIgYmJveCA9IGdldFNjcmVlbkJCb3goKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9wOiAgYmJveC5lLnkgLSBub2RlLm9mZnNldEhlaWdodCAvIDIsXG4gICAgICAgIGxlZnQ6IGJib3guZS54XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGlyZWN0aW9uX3coKSB7XG4gICAgICB2YXIgYmJveCA9IGdldFNjcmVlbkJCb3goKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9wOiAgYmJveC53LnkgLSBub2RlLm9mZnNldEhlaWdodCAvIDIsXG4gICAgICAgIGxlZnQ6IGJib3gudy54IC0gbm9kZS5vZmZzZXRXaWR0aFxuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRpcmVjdGlvbl9udygpIHtcbiAgICAgIHZhciBiYm94ID0gZ2V0U2NyZWVuQkJveCgpXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6ICBiYm94Lm53LnkgLSBub2RlLm9mZnNldEhlaWdodCxcbiAgICAgICAgbGVmdDogYmJveC5udy54IC0gbm9kZS5vZmZzZXRXaWR0aFxuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRpcmVjdGlvbl9uZSgpIHtcbiAgICAgIHZhciBiYm94ID0gZ2V0U2NyZWVuQkJveCgpXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6ICBiYm94Lm5lLnkgLSBub2RlLm9mZnNldEhlaWdodCxcbiAgICAgICAgbGVmdDogYmJveC5uZS54XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGlyZWN0aW9uX3N3KCkge1xuICAgICAgdmFyIGJib3ggPSBnZXRTY3JlZW5CQm94KClcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRvcDogIGJib3guc3cueSxcbiAgICAgICAgbGVmdDogYmJveC5zdy54IC0gbm9kZS5vZmZzZXRXaWR0aFxuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRpcmVjdGlvbl9zZSgpIHtcbiAgICAgIHZhciBiYm94ID0gZ2V0U2NyZWVuQkJveCgpXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6ICBiYm94LnNlLnksXG4gICAgICAgIGxlZnQ6IGJib3guZS54XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5pdE5vZGUoKSB7XG4gICAgICB2YXIgbm9kZSA9IGQzLnNlbGVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSlcbiAgICAgIG5vZGUuc3R5bGUoe1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgdG9wOiAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAncG9pbnRlci1ldmVudHMnOiAnbm9uZScsXG4gICAgICAgICdib3gtc2l6aW5nJzogJ2JvcmRlci1ib3gnXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gbm9kZS5ub2RlKClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRTVkdOb2RlKGVsKSB7XG4gICAgICBlbCA9IGVsLm5vZGUoKVxuICAgICAgaWYoZWwudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc3ZnJylcbiAgICAgICAgcmV0dXJuIGVsXG5cbiAgICAgIHJldHVybiBlbC5vd25lclNWR0VsZW1lbnRcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXROb2RlRWwoKSB7XG4gICAgICBpZihub2RlID09PSBudWxsKSB7XG4gICAgICAgIG5vZGUgPSBpbml0Tm9kZSgpO1xuICAgICAgICAvLyByZS1hZGQgbm9kZSB0byBET01cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub2RlKTtcbiAgICAgIH07XG4gICAgICByZXR1cm4gZDMuc2VsZWN0KG5vZGUpO1xuICAgIH1cblxuICAgIC8vIFByaXZhdGUgLSBnZXRzIHRoZSBzY3JlZW4gY29vcmRpbmF0ZXMgb2YgYSBzaGFwZVxuICAgIC8vXG4gICAgLy8gR2l2ZW4gYSBzaGFwZSBvbiB0aGUgc2NyZWVuLCB3aWxsIHJldHVybiBhbiBTVkdQb2ludCBmb3IgdGhlIGRpcmVjdGlvbnNcbiAgICAvLyBuKG5vcnRoKSwgcyhzb3V0aCksIGUoZWFzdCksIHcod2VzdCksIG5lKG5vcnRoZWFzdCksIHNlKHNvdXRoZWFzdCksIG53KG5vcnRod2VzdCksXG4gICAgLy8gc3coc291dGh3ZXN0KS5cbiAgICAvL1xuICAgIC8vICAgICstKy0rXG4gICAgLy8gICAgfCAgIHxcbiAgICAvLyAgICArICAgK1xuICAgIC8vICAgIHwgICB8XG4gICAgLy8gICAgKy0rLStcbiAgICAvL1xuICAgIC8vIFJldHVybnMgYW4gT2JqZWN0IHtuLCBzLCBlLCB3LCBudywgc3csIG5lLCBzZX1cbiAgICBmdW5jdGlvbiBnZXRTY3JlZW5CQm94KCkge1xuICAgICAgdmFyIHRhcmdldGVsICAgPSB0YXJnZXQgfHwgZDMuZXZlbnQudGFyZ2V0O1xuXG4gICAgICB3aGlsZSAoJ3VuZGVmaW5lZCcgPT09IHR5cGVvZiB0YXJnZXRlbC5nZXRTY3JlZW5DVE0gJiYgJ3VuZGVmaW5lZCcgPT09IHRhcmdldGVsLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICB0YXJnZXRlbCA9IHRhcmdldGVsLnBhcmVudE5vZGU7XG4gICAgICB9XG5cbiAgICAgIHZhciBiYm94ICAgICAgID0ge30sXG4gICAgICAgICAgbWF0cml4ICAgICA9IHRhcmdldGVsLmdldFNjcmVlbkNUTSgpLFxuICAgICAgICAgIHRiYm94ICAgICAgPSB0YXJnZXRlbC5nZXRCQm94KCksXG4gICAgICAgICAgd2lkdGggICAgICA9IHRiYm94LndpZHRoLFxuICAgICAgICAgIGhlaWdodCAgICAgPSB0YmJveC5oZWlnaHQsXG4gICAgICAgICAgeCAgICAgICAgICA9IHRiYm94LngsXG4gICAgICAgICAgeSAgICAgICAgICA9IHRiYm94LnlcblxuICAgICAgcG9pbnQueCA9IHhcbiAgICAgIHBvaW50LnkgPSB5XG4gICAgICBiYm94Lm53ID0gcG9pbnQubWF0cml4VHJhbnNmb3JtKG1hdHJpeClcbiAgICAgIHBvaW50LnggKz0gd2lkdGhcbiAgICAgIGJib3gubmUgPSBwb2ludC5tYXRyaXhUcmFuc2Zvcm0obWF0cml4KVxuICAgICAgcG9pbnQueSArPSBoZWlnaHRcbiAgICAgIGJib3guc2UgPSBwb2ludC5tYXRyaXhUcmFuc2Zvcm0obWF0cml4KVxuICAgICAgcG9pbnQueCAtPSB3aWR0aFxuICAgICAgYmJveC5zdyA9IHBvaW50Lm1hdHJpeFRyYW5zZm9ybShtYXRyaXgpXG4gICAgICBwb2ludC55IC09IGhlaWdodCAvIDJcbiAgICAgIGJib3gudyAgPSBwb2ludC5tYXRyaXhUcmFuc2Zvcm0obWF0cml4KVxuICAgICAgcG9pbnQueCArPSB3aWR0aFxuICAgICAgYmJveC5lID0gcG9pbnQubWF0cml4VHJhbnNmb3JtKG1hdHJpeClcbiAgICAgIHBvaW50LnggLT0gd2lkdGggLyAyXG4gICAgICBwb2ludC55IC09IGhlaWdodCAvIDJcbiAgICAgIGJib3gubiA9IHBvaW50Lm1hdHJpeFRyYW5zZm9ybShtYXRyaXgpXG4gICAgICBwb2ludC55ICs9IGhlaWdodFxuICAgICAgYmJveC5zID0gcG9pbnQubWF0cml4VHJhbnNmb3JtKG1hdHJpeClcblxuICAgICAgcmV0dXJuIGJib3hcbiAgICB9XG5cbiAgICByZXR1cm4gdGlwXG4gIH07XG5cbn0pKTsiLCIvLyBTVkdQYXRoU2VnIEFQSSBwb2x5ZmlsbFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3Byb2dlcnMvcGF0aHNlZ1xuLy9cbi8vIFRoaXMgaXMgYSBkcm9wLWluIHJlcGxhY2VtZW50IGZvciB0aGUgU1ZHUGF0aFNlZyBhbmQgU1ZHUGF0aFNlZ0xpc3QgQVBJcyB0aGF0IHdlcmUgcmVtb3ZlZCBmcm9tXG4vLyBTVkcyIChodHRwczovL2xpc3RzLnczLm9yZy9BcmNoaXZlcy9QdWJsaWMvd3d3LXN2Zy8yMDE1SnVuLzAwNDQuaHRtbCksIGluY2x1ZGluZyB0aGUgbGF0ZXN0IHNwZWNcbi8vIGNoYW5nZXMgd2hpY2ggd2VyZSBpbXBsZW1lbnRlZCBpbiBGaXJlZm94IDQzIGFuZCBDaHJvbWUgNDYuXG5cbihmdW5jdGlvbigpIHsgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgaWYgKCEoXCJTVkdQYXRoU2VnXCIgaW4gd2luZG93KSkge1xuICAgICAgICAvLyBTcGVjOiBodHRwOi8vd3d3LnczLm9yZy9UUi9TVkcxMS9zaW5nbGUtcGFnZS5odG1sI3BhdGhzLUludGVyZmFjZVNWR1BhdGhTZWdcbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWcgPSBmdW5jdGlvbih0eXBlLCB0eXBlQXNMZXR0ZXIsIG93bmluZ1BhdGhTZWdMaXN0KSB7XG4gICAgICAgICAgICB0aGlzLnBhdGhTZWdUeXBlID0gdHlwZTtcbiAgICAgICAgICAgIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciA9IHR5cGVBc0xldHRlcjtcbiAgICAgICAgICAgIHRoaXMuX293bmluZ1BhdGhTZWdMaXN0ID0gb3duaW5nUGF0aFNlZ0xpc3Q7XG4gICAgICAgIH1cblxuICAgICAgICBTVkdQYXRoU2VnLnByb3RvdHlwZS5jbGFzc25hbWUgPSBcIlNWR1BhdGhTZWdcIjtcblxuICAgICAgICBTVkdQYXRoU2VnLlBBVEhTRUdfVU5LTk9XTiA9IDA7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19DTE9TRVBBVEggPSAxO1xuICAgICAgICBTVkdQYXRoU2VnLlBBVEhTRUdfTU9WRVRPX0FCUyA9IDI7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19NT1ZFVE9fUkVMID0gMztcbiAgICAgICAgU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19BQlMgPSA0O1xuICAgICAgICBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX1JFTCA9IDU7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX0FCUyA9IDY7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1JFTCA9IDc7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX1FVQURSQVRJQ19BQlMgPSA4O1xuICAgICAgICBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19RVUFEUkFUSUNfUkVMID0gOTtcbiAgICAgICAgU1ZHUGF0aFNlZy5QQVRIU0VHX0FSQ19BQlMgPSAxMDtcbiAgICAgICAgU1ZHUGF0aFNlZy5QQVRIU0VHX0FSQ19SRUwgPSAxMTtcbiAgICAgICAgU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19IT1JJWk9OVEFMX0FCUyA9IDEyO1xuICAgICAgICBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX0hPUklaT05UQUxfUkVMID0gMTM7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fVkVSVElDQUxfQUJTID0gMTQ7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fVkVSVElDQUxfUkVMID0gMTU7XG4gICAgICAgIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1NNT09USF9BQlMgPSAxNjtcbiAgICAgICAgU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fQ1VCSUNfU01PT1RIX1JFTCA9IDE3O1xuICAgICAgICBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19RVUFEUkFUSUNfU01PT1RIX0FCUyA9IDE4O1xuICAgICAgICBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19RVUFEUkFUSUNfU01PT1RIX1JFTCA9IDE5O1xuXG4gICAgICAgIC8vIE5vdGlmeSBvd25pbmcgUGF0aFNlZ0xpc3Qgb24gYW55IGNoYW5nZXMgc28gdGhleSBjYW4gYmUgc3luY2hyb25pemVkIGJhY2sgdG8gdGhlIHBhdGggZWxlbWVudC5cbiAgICAgICAgU1ZHUGF0aFNlZy5wcm90b3R5cGUuX3NlZ21lbnRDaGFuZ2VkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fb3duaW5nUGF0aFNlZ0xpc3QpXG4gICAgICAgICAgICAgICAgdGhpcy5fb3duaW5nUGF0aFNlZ0xpc3Quc2VnbWVudENoYW5nZWQodGhpcyk7XG4gICAgICAgIH1cblxuICAgICAgICB3aW5kb3cuU1ZHUGF0aFNlZ0Nsb3NlUGF0aCA9IGZ1bmN0aW9uKG93bmluZ1BhdGhTZWdMaXN0KSB7XG4gICAgICAgICAgICBTVkdQYXRoU2VnLmNhbGwodGhpcywgU1ZHUGF0aFNlZy5QQVRIU0VHX0NMT1NFUEFUSCwgXCJ6XCIsIG93bmluZ1BhdGhTZWdMaXN0KTtcbiAgICAgICAgfVxuICAgICAgICBTVkdQYXRoU2VnQ2xvc2VQYXRoLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU1ZHUGF0aFNlZy5wcm90b3R5cGUpO1xuICAgICAgICBTVkdQYXRoU2VnQ2xvc2VQYXRoLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdDbG9zZVBhdGhdXCI7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0Nsb3NlUGF0aC5wcm90b3R5cGUuX2FzUGF0aFN0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5wYXRoU2VnVHlwZUFzTGV0dGVyOyB9XG4gICAgICAgIFNWR1BhdGhTZWdDbG9zZVBhdGgucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0Nsb3NlUGF0aCh1bmRlZmluZWQpOyB9XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdNb3ZldG9BYnMgPSBmdW5jdGlvbihvd25pbmdQYXRoU2VnTGlzdCwgeCwgeSkge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19NT1ZFVE9fQUJTLCBcIk1cIiwgb3duaW5nUGF0aFNlZ0xpc3QpO1xuICAgICAgICAgICAgdGhpcy5feCA9IHg7XG4gICAgICAgICAgICB0aGlzLl95ID0geTtcbiAgICAgICAgfVxuICAgICAgICBTVkdQYXRoU2VnTW92ZXRvQWJzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU1ZHUGF0aFNlZy5wcm90b3R5cGUpO1xuICAgICAgICBTVkdQYXRoU2VnTW92ZXRvQWJzLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdNb3ZldG9BYnNdXCI7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ01vdmV0b0Ficy5wcm90b3R5cGUuX2FzUGF0aFN0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5wYXRoU2VnVHlwZUFzTGV0dGVyICsgXCIgXCIgKyB0aGlzLl94ICsgXCIgXCIgKyB0aGlzLl95OyB9XG4gICAgICAgIFNWR1BhdGhTZWdNb3ZldG9BYnMucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ01vdmV0b0Ficyh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3kpOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnTW92ZXRvQWJzLnByb3RvdHlwZSwgXCJ4XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3g7IH0sIHNldDogZnVuY3Rpb24oeCkgeyB0aGlzLl94ID0geDsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdNb3ZldG9BYnMucHJvdG90eXBlLCBcInlcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feTsgfSwgc2V0OiBmdW5jdGlvbih5KSB7IHRoaXMuX3kgPSB5OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuXG4gICAgICAgIHdpbmRvdy5TVkdQYXRoU2VnTW92ZXRvUmVsID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgsIHkpIHtcbiAgICAgICAgICAgIFNWR1BhdGhTZWcuY2FsbCh0aGlzLCBTVkdQYXRoU2VnLlBBVEhTRUdfTU9WRVRPX1JFTCwgXCJtXCIsIG93bmluZ1BhdGhTZWdMaXN0KTtcbiAgICAgICAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgICAgICAgdGhpcy5feSA9IHk7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ01vdmV0b1JlbC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNWR1BhdGhTZWcucHJvdG90eXBlKTtcbiAgICAgICAgU1ZHUGF0aFNlZ01vdmV0b1JlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFwiW29iamVjdCBTVkdQYXRoU2VnTW92ZXRvUmVsXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdNb3ZldG9SZWwucHJvdG90eXBlLl9hc1BhdGhTdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciArIFwiIFwiICsgdGhpcy5feCArIFwiIFwiICsgdGhpcy5feTsgfVxuICAgICAgICBTVkdQYXRoU2VnTW92ZXRvUmVsLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbmV3IFNWR1BhdGhTZWdNb3ZldG9SZWwodW5kZWZpbmVkLCB0aGlzLl94LCB0aGlzLl95KTsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ01vdmV0b1JlbC5wcm90b3R5cGUsIFwieFwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94OyB9LCBzZXQ6IGZ1bmN0aW9uKHgpIHsgdGhpcy5feCA9IHg7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnTW92ZXRvUmVsLnByb3RvdHlwZSwgXCJ5XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3k7IH0sIHNldDogZnVuY3Rpb24oeSkgeyB0aGlzLl95ID0geTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcblxuICAgICAgICB3aW5kb3cuU1ZHUGF0aFNlZ0xpbmV0b0FicyA9IGZ1bmN0aW9uKG93bmluZ1BhdGhTZWdMaXN0LCB4LCB5KSB7XG4gICAgICAgICAgICBTVkdQYXRoU2VnLmNhbGwodGhpcywgU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19BQlMsIFwiTFwiLCBvd25pbmdQYXRoU2VnTGlzdCk7XG4gICAgICAgICAgICB0aGlzLl94ID0geDtcbiAgICAgICAgICAgIHRoaXMuX3kgPSB5O1xuICAgICAgICB9XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9BYnMucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTVkdQYXRoU2VnLnByb3RvdHlwZSk7XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9BYnMucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIltvYmplY3QgU1ZHUGF0aFNlZ0xpbmV0b0Fic11cIjsgfVxuICAgICAgICBTVkdQYXRoU2VnTGluZXRvQWJzLnByb3RvdHlwZS5fYXNQYXRoU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdUeXBlQXNMZXR0ZXIgKyBcIiBcIiArIHRoaXMuX3ggKyBcIiBcIiArIHRoaXMuX3k7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b0Ficy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvQWJzKHVuZGVmaW5lZCwgdGhpcy5feCwgdGhpcy5feSk7IH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdMaW5ldG9BYnMucHJvdG90eXBlLCBcInhcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feDsgfSwgc2V0OiBmdW5jdGlvbih4KSB7IHRoaXMuX3ggPSB4OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0xpbmV0b0Ficy5wcm90b3R5cGUsIFwieVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl95OyB9LCBzZXQ6IGZ1bmN0aW9uKHkpIHsgdGhpcy5feSA9IHk7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdMaW5ldG9SZWwgPSBmdW5jdGlvbihvd25pbmdQYXRoU2VnTGlzdCwgeCwgeSkge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fUkVMLCBcImxcIiwgb3duaW5nUGF0aFNlZ0xpc3QpO1xuICAgICAgICAgICAgdGhpcy5feCA9IHg7XG4gICAgICAgICAgICB0aGlzLl95ID0geTtcbiAgICAgICAgfVxuICAgICAgICBTVkdQYXRoU2VnTGluZXRvUmVsLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU1ZHUGF0aFNlZy5wcm90b3R5cGUpO1xuICAgICAgICBTVkdQYXRoU2VnTGluZXRvUmVsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdMaW5ldG9SZWxdXCI7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b1JlbC5wcm90b3R5cGUuX2FzUGF0aFN0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5wYXRoU2VnVHlwZUFzTGV0dGVyICsgXCIgXCIgKyB0aGlzLl94ICsgXCIgXCIgKyB0aGlzLl95OyB9XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9SZWwucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b1JlbCh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3kpOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnTGluZXRvUmVsLnByb3RvdHlwZSwgXCJ4XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3g7IH0sIHNldDogZnVuY3Rpb24oeCkgeyB0aGlzLl94ID0geDsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdMaW5ldG9SZWwucHJvdG90eXBlLCBcInlcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feTsgfSwgc2V0OiBmdW5jdGlvbih5KSB7IHRoaXMuX3kgPSB5OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuXG4gICAgICAgIHdpbmRvdy5TVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgsIHksIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgICAgICAgICBTVkdQYXRoU2VnLmNhbGwodGhpcywgU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fQ1VCSUNfQUJTLCBcIkNcIiwgb3duaW5nUGF0aFNlZ0xpc3QpO1xuICAgICAgICAgICAgdGhpcy5feCA9IHg7XG4gICAgICAgICAgICB0aGlzLl95ID0geTtcbiAgICAgICAgICAgIHRoaXMuX3gxID0geDE7XG4gICAgICAgICAgICB0aGlzLl95MSA9IHkxO1xuICAgICAgICAgICAgdGhpcy5feDIgPSB4MjtcbiAgICAgICAgICAgIHRoaXMuX3kyID0geTI7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0Ficy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNWR1BhdGhTZWcucHJvdG90eXBlKTtcbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0Ficy5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFwiW29iamVjdCBTVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNBYnMucHJvdG90eXBlLl9hc1BhdGhTdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciArIFwiIFwiICsgdGhpcy5feDEgKyBcIiBcIiArIHRoaXMuX3kxICsgXCIgXCIgKyB0aGlzLl94MiArIFwiIFwiICsgdGhpcy5feTIgKyBcIiBcIiArIHRoaXMuX3ggKyBcIiBcIiArIHRoaXMuX3k7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0Ficy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzKHVuZGVmaW5lZCwgdGhpcy5feCwgdGhpcy5feSwgdGhpcy5feDEsIHRoaXMuX3kxLCB0aGlzLl94MiwgdGhpcy5feTIpOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzLnByb3RvdHlwZSwgXCJ4XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3g7IH0sIHNldDogZnVuY3Rpb24oeCkgeyB0aGlzLl94ID0geDsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNBYnMucHJvdG90eXBlLCBcInlcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feTsgfSwgc2V0OiBmdW5jdGlvbih5KSB7IHRoaXMuX3kgPSB5OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0Ficy5wcm90b3R5cGUsIFwieDFcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feDE7IH0sIHNldDogZnVuY3Rpb24oeDEpIHsgdGhpcy5feDEgPSB4MTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNBYnMucHJvdG90eXBlLCBcInkxXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3kxOyB9LCBzZXQ6IGZ1bmN0aW9uKHkxKSB7IHRoaXMuX3kxID0geTE7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzLnByb3RvdHlwZSwgXCJ4MlwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94MjsgfSwgc2V0OiBmdW5jdGlvbih4MikgeyB0aGlzLl94MiA9IHgyOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0Ficy5wcm90b3R5cGUsIFwieTJcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feTI7IH0sIHNldDogZnVuY3Rpb24oeTIpIHsgdGhpcy5feTIgPSB5MjsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcblxuICAgICAgICB3aW5kb3cuU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1JlbCA9IGZ1bmN0aW9uKG93bmluZ1BhdGhTZWdMaXN0LCB4LCB5LCB4MSwgeTEsIHgyLCB5Mikge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1JFTCwgXCJjXCIsIG93bmluZ1BhdGhTZWdMaXN0KTtcbiAgICAgICAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgICAgICAgdGhpcy5feSA9IHk7XG4gICAgICAgICAgICB0aGlzLl94MSA9IHgxO1xuICAgICAgICAgICAgdGhpcy5feTEgPSB5MTtcbiAgICAgICAgICAgIHRoaXMuX3gyID0geDI7XG4gICAgICAgICAgICB0aGlzLl95MiA9IHkyO1xuICAgICAgICB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNSZWwucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTVkdQYXRoU2VnLnByb3RvdHlwZSk7XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNSZWwucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIltvYmplY3QgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1JlbF1cIjsgfVxuICAgICAgICBTVkdQYXRoU2VnQ3VydmV0b0N1YmljUmVsLnByb3RvdHlwZS5fYXNQYXRoU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdUeXBlQXNMZXR0ZXIgKyBcIiBcIiArIHRoaXMuX3gxICsgXCIgXCIgKyB0aGlzLl95MSArIFwiIFwiICsgdGhpcy5feDIgKyBcIiBcIiArIHRoaXMuX3kyICsgXCIgXCIgKyB0aGlzLl94ICsgXCIgXCIgKyB0aGlzLl95OyB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNSZWwucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1JlbCh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3gxLCB0aGlzLl95MSwgdGhpcy5feDIsIHRoaXMuX3kyKTsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1JlbC5wcm90b3R5cGUsIFwieFwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94OyB9LCBzZXQ6IGZ1bmN0aW9uKHgpIHsgdGhpcy5feCA9IHg7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b0N1YmljUmVsLnByb3RvdHlwZSwgXCJ5XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3k7IH0sIHNldDogZnVuY3Rpb24oeSkgeyB0aGlzLl95ID0geTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNSZWwucHJvdG90eXBlLCBcIngxXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3gxOyB9LCBzZXQ6IGZ1bmN0aW9uKHgxKSB7IHRoaXMuX3gxID0geDE7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b0N1YmljUmVsLnByb3RvdHlwZSwgXCJ5MVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl95MTsgfSwgc2V0OiBmdW5jdGlvbih5MSkgeyB0aGlzLl95MSA9IHkxOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1JlbC5wcm90b3R5cGUsIFwieDJcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feDI7IH0sIHNldDogZnVuY3Rpb24oeDIpIHsgdGhpcy5feDIgPSB4MjsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNSZWwucHJvdG90eXBlLCBcInkyXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3kyOyB9LCBzZXQ6IGZ1bmN0aW9uKHkyKSB7IHRoaXMuX3kyID0geTI7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgsIHksIHgxLCB5MSkge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX1FVQURSQVRJQ19BQlMsIFwiUVwiLCBvd25pbmdQYXRoU2VnTGlzdCk7XG4gICAgICAgICAgICB0aGlzLl94ID0geDtcbiAgICAgICAgICAgIHRoaXMuX3kgPSB5O1xuICAgICAgICAgICAgdGhpcy5feDEgPSB4MTtcbiAgICAgICAgICAgIHRoaXMuX3kxID0geTE7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNBYnMucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTVkdQYXRoU2VnLnByb3RvdHlwZSk7XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzLnByb3RvdHlwZS5fYXNQYXRoU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdUeXBlQXNMZXR0ZXIgKyBcIiBcIiArIHRoaXMuX3gxICsgXCIgXCIgKyB0aGlzLl95MSArIFwiIFwiICsgdGhpcy5feCArIFwiIFwiICsgdGhpcy5feTsgfVxuICAgICAgICBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY0Ficy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY0Ficyh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3gxLCB0aGlzLl95MSk7IH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzLnByb3RvdHlwZSwgXCJ4XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3g7IH0sIHNldDogZnVuY3Rpb24oeCkgeyB0aGlzLl94ID0geDsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzLnByb3RvdHlwZSwgXCJ5XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3k7IH0sIHNldDogZnVuY3Rpb24oeSkgeyB0aGlzLl95ID0geTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzLnByb3RvdHlwZSwgXCJ4MVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94MTsgfSwgc2V0OiBmdW5jdGlvbih4MSkgeyB0aGlzLl94MSA9IHgxOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNBYnMucHJvdG90eXBlLCBcInkxXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3kxOyB9LCBzZXQ6IGZ1bmN0aW9uKHkxKSB7IHRoaXMuX3kxID0geTE7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgsIHksIHgxLCB5MSkge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX1FVQURSQVRJQ19SRUwsIFwicVwiLCBvd25pbmdQYXRoU2VnTGlzdCk7XG4gICAgICAgICAgICB0aGlzLl94ID0geDtcbiAgICAgICAgICAgIHRoaXMuX3kgPSB5O1xuICAgICAgICAgICAgdGhpcy5feDEgPSB4MTtcbiAgICAgICAgICAgIHRoaXMuX3kxID0geTE7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNSZWwucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTVkdQYXRoU2VnLnByb3RvdHlwZSk7XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsLnByb3RvdHlwZS5fYXNQYXRoU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdUeXBlQXNMZXR0ZXIgKyBcIiBcIiArIHRoaXMuX3gxICsgXCIgXCIgKyB0aGlzLl95MSArIFwiIFwiICsgdGhpcy5feCArIFwiIFwiICsgdGhpcy5feTsgfVxuICAgICAgICBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1JlbC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1JlbCh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3gxLCB0aGlzLl95MSk7IH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsLnByb3RvdHlwZSwgXCJ4XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3g7IH0sIHNldDogZnVuY3Rpb24oeCkgeyB0aGlzLl94ID0geDsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsLnByb3RvdHlwZSwgXCJ5XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3k7IH0sIHNldDogZnVuY3Rpb24oeSkgeyB0aGlzLl95ID0geTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsLnByb3RvdHlwZSwgXCJ4MVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94MTsgfSwgc2V0OiBmdW5jdGlvbih4MSkgeyB0aGlzLl94MSA9IHgxOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNSZWwucHJvdG90eXBlLCBcInkxXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3kxOyB9LCBzZXQ6IGZ1bmN0aW9uKHkxKSB7IHRoaXMuX3kxID0geTE7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdBcmNBYnMgPSBmdW5jdGlvbihvd25pbmdQYXRoU2VnTGlzdCwgeCwgeSwgcjEsIHIyLCBhbmdsZSwgbGFyZ2VBcmNGbGFnLCBzd2VlcEZsYWcpIHtcbiAgICAgICAgICAgIFNWR1BhdGhTZWcuY2FsbCh0aGlzLCBTVkdQYXRoU2VnLlBBVEhTRUdfQVJDX0FCUywgXCJBXCIsIG93bmluZ1BhdGhTZWdMaXN0KTtcbiAgICAgICAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgICAgICAgdGhpcy5feSA9IHk7XG4gICAgICAgICAgICB0aGlzLl9yMSA9IHIxO1xuICAgICAgICAgICAgdGhpcy5fcjIgPSByMjtcbiAgICAgICAgICAgIHRoaXMuX2FuZ2xlID0gYW5nbGU7XG4gICAgICAgICAgICB0aGlzLl9sYXJnZUFyY0ZsYWcgPSBsYXJnZUFyY0ZsYWc7XG4gICAgICAgICAgICB0aGlzLl9zd2VlcEZsYWcgPSBzd2VlcEZsYWc7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0FyY0Ficy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNWR1BhdGhTZWcucHJvdG90eXBlKTtcbiAgICAgICAgU1ZHUGF0aFNlZ0FyY0Ficy5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFwiW29iamVjdCBTVkdQYXRoU2VnQXJjQWJzXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdBcmNBYnMucHJvdG90eXBlLl9hc1BhdGhTdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciArIFwiIFwiICsgdGhpcy5fcjEgKyBcIiBcIiArIHRoaXMuX3IyICsgXCIgXCIgKyB0aGlzLl9hbmdsZSArIFwiIFwiICsgKHRoaXMuX2xhcmdlQXJjRmxhZyA/IFwiMVwiIDogXCIwXCIpICsgXCIgXCIgKyAodGhpcy5fc3dlZXBGbGFnID8gXCIxXCIgOiBcIjBcIikgKyBcIiBcIiArIHRoaXMuX3ggKyBcIiBcIiArIHRoaXMuX3k7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0FyY0Ficy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQXJjQWJzKHVuZGVmaW5lZCwgdGhpcy5feCwgdGhpcy5feSwgdGhpcy5fcjEsIHRoaXMuX3IyLCB0aGlzLl9hbmdsZSwgdGhpcy5fbGFyZ2VBcmNGbGFnLCB0aGlzLl9zd2VlcEZsYWcpOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQXJjQWJzLnByb3RvdHlwZSwgXCJ4XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3g7IH0sIHNldDogZnVuY3Rpb24oeCkgeyB0aGlzLl94ID0geDsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdBcmNBYnMucHJvdG90eXBlLCBcInlcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feTsgfSwgc2V0OiBmdW5jdGlvbih5KSB7IHRoaXMuX3kgPSB5OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0FyY0Ficy5wcm90b3R5cGUsIFwicjFcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5fcjE7IH0sIHNldDogZnVuY3Rpb24ocjEpIHsgdGhpcy5fcjEgPSByMTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdBcmNBYnMucHJvdG90eXBlLCBcInIyXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3IyOyB9LCBzZXQ6IGZ1bmN0aW9uKHIyKSB7IHRoaXMuX3IyID0gcjI7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQXJjQWJzLnByb3RvdHlwZSwgXCJhbmdsZVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl9hbmdsZTsgfSwgc2V0OiBmdW5jdGlvbihhbmdsZSkgeyB0aGlzLl9hbmdsZSA9IGFuZ2xlOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0FyY0Ficy5wcm90b3R5cGUsIFwibGFyZ2VBcmNGbGFnXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX2xhcmdlQXJjRmxhZzsgfSwgc2V0OiBmdW5jdGlvbihsYXJnZUFyY0ZsYWcpIHsgdGhpcy5fbGFyZ2VBcmNGbGFnID0gbGFyZ2VBcmNGbGFnOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0FyY0Ficy5wcm90b3R5cGUsIFwic3dlZXBGbGFnXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3N3ZWVwRmxhZzsgfSwgc2V0OiBmdW5jdGlvbihzd2VlcEZsYWcpIHsgdGhpcy5fc3dlZXBGbGFnID0gc3dlZXBGbGFnOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuXG4gICAgICAgIHdpbmRvdy5TVkdQYXRoU2VnQXJjUmVsID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgsIHksIHIxLCByMiwgYW5nbGUsIGxhcmdlQXJjRmxhZywgc3dlZXBGbGFnKSB7XG4gICAgICAgICAgICBTVkdQYXRoU2VnLmNhbGwodGhpcywgU1ZHUGF0aFNlZy5QQVRIU0VHX0FSQ19SRUwsIFwiYVwiLCBvd25pbmdQYXRoU2VnTGlzdCk7XG4gICAgICAgICAgICB0aGlzLl94ID0geDtcbiAgICAgICAgICAgIHRoaXMuX3kgPSB5O1xuICAgICAgICAgICAgdGhpcy5fcjEgPSByMTtcbiAgICAgICAgICAgIHRoaXMuX3IyID0gcjI7XG4gICAgICAgICAgICB0aGlzLl9hbmdsZSA9IGFuZ2xlO1xuICAgICAgICAgICAgdGhpcy5fbGFyZ2VBcmNGbGFnID0gbGFyZ2VBcmNGbGFnO1xuICAgICAgICAgICAgdGhpcy5fc3dlZXBGbGFnID0gc3dlZXBGbGFnO1xuICAgICAgICB9XG4gICAgICAgIFNWR1BhdGhTZWdBcmNSZWwucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTVkdQYXRoU2VnLnByb3RvdHlwZSk7XG4gICAgICAgIFNWR1BhdGhTZWdBcmNSZWwucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIltvYmplY3QgU1ZHUGF0aFNlZ0FyY1JlbF1cIjsgfVxuICAgICAgICBTVkdQYXRoU2VnQXJjUmVsLnByb3RvdHlwZS5fYXNQYXRoU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdUeXBlQXNMZXR0ZXIgKyBcIiBcIiArIHRoaXMuX3IxICsgXCIgXCIgKyB0aGlzLl9yMiArIFwiIFwiICsgdGhpcy5fYW5nbGUgKyBcIiBcIiArICh0aGlzLl9sYXJnZUFyY0ZsYWcgPyBcIjFcIiA6IFwiMFwiKSArIFwiIFwiICsgKHRoaXMuX3N3ZWVwRmxhZyA/IFwiMVwiIDogXCIwXCIpICsgXCIgXCIgKyB0aGlzLl94ICsgXCIgXCIgKyB0aGlzLl95OyB9XG4gICAgICAgIFNWR1BhdGhTZWdBcmNSZWwucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0FyY1JlbCh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3IxLCB0aGlzLl9yMiwgdGhpcy5fYW5nbGUsIHRoaXMuX2xhcmdlQXJjRmxhZywgdGhpcy5fc3dlZXBGbGFnKTsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0FyY1JlbC5wcm90b3R5cGUsIFwieFwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94OyB9LCBzZXQ6IGZ1bmN0aW9uKHgpIHsgdGhpcy5feCA9IHg7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQXJjUmVsLnByb3RvdHlwZSwgXCJ5XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3k7IH0sIHNldDogZnVuY3Rpb24oeSkgeyB0aGlzLl95ID0geTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdBcmNSZWwucHJvdG90eXBlLCBcInIxXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3IxOyB9LCBzZXQ6IGZ1bmN0aW9uKHIxKSB7IHRoaXMuX3IxID0gcjE7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQXJjUmVsLnByb3RvdHlwZSwgXCJyMlwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl9yMjsgfSwgc2V0OiBmdW5jdGlvbihyMikgeyB0aGlzLl9yMiA9IHIyOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0FyY1JlbC5wcm90b3R5cGUsIFwiYW5nbGVcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5fYW5nbGU7IH0sIHNldDogZnVuY3Rpb24oYW5nbGUpIHsgdGhpcy5fYW5nbGUgPSBhbmdsZTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdBcmNSZWwucHJvdG90eXBlLCBcImxhcmdlQXJjRmxhZ1wiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl9sYXJnZUFyY0ZsYWc7IH0sIHNldDogZnVuY3Rpb24obGFyZ2VBcmNGbGFnKSB7IHRoaXMuX2xhcmdlQXJjRmxhZyA9IGxhcmdlQXJjRmxhZzsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdBcmNSZWwucHJvdG90eXBlLCBcInN3ZWVwRmxhZ1wiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl9zd2VlcEZsYWc7IH0sIHNldDogZnVuY3Rpb24oc3dlZXBGbGFnKSB7IHRoaXMuX3N3ZWVwRmxhZyA9IHN3ZWVwRmxhZzsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcblxuICAgICAgICB3aW5kb3cuU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxBYnMgPSBmdW5jdGlvbihvd25pbmdQYXRoU2VnTGlzdCwgeCkge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fSE9SSVpPTlRBTF9BQlMsIFwiSFwiLCBvd25pbmdQYXRoU2VnTGlzdCk7XG4gICAgICAgICAgICB0aGlzLl94ID0geDtcbiAgICAgICAgfVxuICAgICAgICBTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNWR1BhdGhTZWcucHJvdG90eXBlKTtcbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxBYnMucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIltvYmplY3QgU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxBYnNdXCI7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxBYnMucHJvdG90eXBlLl9hc1BhdGhTdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciArIFwiIFwiICsgdGhpcy5feDsgfVxuICAgICAgICBTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicyh1bmRlZmluZWQsIHRoaXMuX3gpOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicy5wcm90b3R5cGUsIFwieFwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94OyB9LCBzZXQ6IGZ1bmN0aW9uKHgpIHsgdGhpcy5feCA9IHg7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdMaW5ldG9Ib3Jpem9udGFsUmVsID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgpIHtcbiAgICAgICAgICAgIFNWR1BhdGhTZWcuY2FsbCh0aGlzLCBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX0hPUklaT05UQUxfUkVMLCBcImhcIiwgb3duaW5nUGF0aFNlZ0xpc3QpO1xuICAgICAgICAgICAgdGhpcy5feCA9IHg7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxSZWwucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTVkdQYXRoU2VnLnByb3RvdHlwZSk7XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9Ib3Jpem9udGFsUmVsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdMaW5ldG9Ib3Jpem9udGFsUmVsXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9Ib3Jpem9udGFsUmVsLnByb3RvdHlwZS5fYXNQYXRoU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdUeXBlQXNMZXR0ZXIgKyBcIiBcIiArIHRoaXMuX3g7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxSZWwucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxSZWwodW5kZWZpbmVkLCB0aGlzLl94KTsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxSZWwucHJvdG90eXBlLCBcInhcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feDsgfSwgc2V0OiBmdW5jdGlvbih4KSB7IHRoaXMuX3ggPSB4OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuXG4gICAgICAgIHdpbmRvdy5TVkdQYXRoU2VnTGluZXRvVmVydGljYWxBYnMgPSBmdW5jdGlvbihvd25pbmdQYXRoU2VnTGlzdCwgeSkge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fVkVSVElDQUxfQUJTLCBcIlZcIiwgb3duaW5nUGF0aFNlZ0xpc3QpO1xuICAgICAgICAgICAgdGhpcy5feSA9IHk7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsQWJzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU1ZHUGF0aFNlZy5wcm90b3R5cGUpO1xuICAgICAgICBTVkdQYXRoU2VnTGluZXRvVmVydGljYWxBYnMucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIltvYmplY3QgU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsQWJzXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9WZXJ0aWNhbEFicy5wcm90b3R5cGUuX2FzUGF0aFN0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5wYXRoU2VnVHlwZUFzTGV0dGVyICsgXCIgXCIgKyB0aGlzLl95OyB9XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9WZXJ0aWNhbEFicy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvVmVydGljYWxBYnModW5kZWZpbmVkLCB0aGlzLl95KTsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsQWJzLnByb3RvdHlwZSwgXCJ5XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3k7IH0sIHNldDogZnVuY3Rpb24oeSkgeyB0aGlzLl95ID0geTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcblxuICAgICAgICB3aW5kb3cuU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsUmVsID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHkpIHtcbiAgICAgICAgICAgIFNWR1BhdGhTZWcuY2FsbCh0aGlzLCBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX1ZFUlRJQ0FMX1JFTCwgXCJ2XCIsIG93bmluZ1BhdGhTZWdMaXN0KTtcbiAgICAgICAgICAgIHRoaXMuX3kgPSB5O1xuICAgICAgICB9XG4gICAgICAgIFNWR1BhdGhTZWdMaW5ldG9WZXJ0aWNhbFJlbC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNWR1BhdGhTZWcucHJvdG90eXBlKTtcbiAgICAgICAgU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsUmVsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdMaW5ldG9WZXJ0aWNhbFJlbF1cIjsgfVxuICAgICAgICBTVkdQYXRoU2VnTGluZXRvVmVydGljYWxSZWwucHJvdG90eXBlLl9hc1BhdGhTdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciArIFwiIFwiICsgdGhpcy5feTsgfVxuICAgICAgICBTVkdQYXRoU2VnTGluZXRvVmVydGljYWxSZWwucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsUmVsKHVuZGVmaW5lZCwgdGhpcy5feSk7IH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdMaW5ldG9WZXJ0aWNhbFJlbC5wcm90b3R5cGUsIFwieVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl95OyB9LCBzZXQ6IGZ1bmN0aW9uKHkpIHsgdGhpcy5feSA9IHk7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhBYnMgPSBmdW5jdGlvbihvd25pbmdQYXRoU2VnTGlzdCwgeCwgeSwgeDIsIHkyKSB7XG4gICAgICAgICAgICBTVkdQYXRoU2VnLmNhbGwodGhpcywgU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fQ1VCSUNfU01PT1RIX0FCUywgXCJTXCIsIG93bmluZ1BhdGhTZWdMaXN0KTtcbiAgICAgICAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgICAgICAgdGhpcy5feSA9IHk7XG4gICAgICAgICAgICB0aGlzLl94MiA9IHgyO1xuICAgICAgICAgICAgdGhpcy5feTIgPSB5MjtcbiAgICAgICAgfVxuICAgICAgICBTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoQWJzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU1ZHUGF0aFNlZy5wcm90b3R5cGUpO1xuICAgICAgICBTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoQWJzLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhBYnNdXCI7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aEFicy5wcm90b3R5cGUuX2FzUGF0aFN0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5wYXRoU2VnVHlwZUFzTGV0dGVyICsgXCIgXCIgKyB0aGlzLl94MiArIFwiIFwiICsgdGhpcy5feTIgKyBcIiBcIiArIHRoaXMuX3ggKyBcIiBcIiArIHRoaXMuX3k7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aEFicy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoQWJzKHVuZGVmaW5lZCwgdGhpcy5feCwgdGhpcy5feSwgdGhpcy5feDIsIHRoaXMuX3kyKTsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aEFicy5wcm90b3R5cGUsIFwieFwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94OyB9LCBzZXQ6IGZ1bmN0aW9uKHgpIHsgdGhpcy5feCA9IHg7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoQWJzLnByb3RvdHlwZSwgXCJ5XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3k7IH0sIHNldDogZnVuY3Rpb24oeSkgeyB0aGlzLl95ID0geTsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhBYnMucHJvdG90eXBlLCBcIngyXCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuX3gyOyB9LCBzZXQ6IGZ1bmN0aW9uKHgyKSB7IHRoaXMuX3gyID0geDI7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoQWJzLnByb3RvdHlwZSwgXCJ5MlwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl95MjsgfSwgc2V0OiBmdW5jdGlvbih5MikgeyB0aGlzLl95MiA9IHkyOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuXG4gICAgICAgIHdpbmRvdy5TVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoUmVsID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgsIHksIHgyLCB5Mikge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1NNT09USF9SRUwsIFwic1wiLCBvd25pbmdQYXRoU2VnTGlzdCk7XG4gICAgICAgICAgICB0aGlzLl94ID0geDtcbiAgICAgICAgICAgIHRoaXMuX3kgPSB5O1xuICAgICAgICAgICAgdGhpcy5feDIgPSB4MjtcbiAgICAgICAgICAgIHRoaXMuX3kyID0geTI7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aFJlbC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNWR1BhdGhTZWcucHJvdG90eXBlKTtcbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aFJlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFwiW29iamVjdCBTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoUmVsXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhSZWwucHJvdG90eXBlLl9hc1BhdGhTdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciArIFwiIFwiICsgdGhpcy5feDIgKyBcIiBcIiArIHRoaXMuX3kyICsgXCIgXCIgKyB0aGlzLl94ICsgXCIgXCIgKyB0aGlzLl95OyB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhSZWwucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aFJlbCh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3gyLCB0aGlzLl95Mik7IH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhSZWwucHJvdG90eXBlLCBcInhcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feDsgfSwgc2V0OiBmdW5jdGlvbih4KSB7IHRoaXMuX3ggPSB4OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aFJlbC5wcm90b3R5cGUsIFwieVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl95OyB9LCBzZXQ6IGZ1bmN0aW9uKHkpIHsgdGhpcy5feSA9IHk7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoUmVsLnByb3RvdHlwZSwgXCJ4MlwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94MjsgfSwgc2V0OiBmdW5jdGlvbih4MikgeyB0aGlzLl94MiA9IHgyOyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aFJlbC5wcm90b3R5cGUsIFwieTJcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feTI7IH0sIHNldDogZnVuY3Rpb24oeTIpIHsgdGhpcy5feTIgPSB5MjsgdGhpcy5fc2VnbWVudENoYW5nZWQoKTsgfSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcblxuICAgICAgICB3aW5kb3cuU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhBYnMgPSBmdW5jdGlvbihvd25pbmdQYXRoU2VnTGlzdCwgeCwgeSkge1xuICAgICAgICAgICAgU1ZHUGF0aFNlZy5jYWxsKHRoaXMsIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX1FVQURSQVRJQ19TTU9PVEhfQUJTLCBcIlRcIiwgb3duaW5nUGF0aFNlZ0xpc3QpO1xuICAgICAgICAgICAgdGhpcy5feCA9IHg7XG4gICAgICAgICAgICB0aGlzLl95ID0geTtcbiAgICAgICAgfVxuICAgICAgICBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1Ntb290aEFicy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNWR1BhdGhTZWcucHJvdG90eXBlKTtcbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhBYnMucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIltvYmplY3QgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhBYnNdXCI7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhBYnMucHJvdG90eXBlLl9hc1BhdGhTdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ1R5cGVBc0xldHRlciArIFwiIFwiICsgdGhpcy5feCArIFwiIFwiICsgdGhpcy5feTsgfVxuICAgICAgICBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1Ntb290aEFicy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1Ntb290aEFicyh1bmRlZmluZWQsIHRoaXMuX3gsIHRoaXMuX3kpOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1Ntb290aEFicy5wcm90b3R5cGUsIFwieFwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl94OyB9LCBzZXQ6IGZ1bmN0aW9uKHgpIHsgdGhpcy5feCA9IHg7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1Ntb290aEFicy5wcm90b3R5cGUsIFwieVwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLl95OyB9LCBzZXQ6IGZ1bmN0aW9uKHkpIHsgdGhpcy5feSA9IHk7IHRoaXMuX3NlZ21lbnRDaGFuZ2VkKCk7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgd2luZG93LlNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoUmVsID0gZnVuY3Rpb24ob3duaW5nUGF0aFNlZ0xpc3QsIHgsIHkpIHtcbiAgICAgICAgICAgIFNWR1BhdGhTZWcuY2FsbCh0aGlzLCBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19RVUFEUkFUSUNfU01PT1RIX1JFTCwgXCJ0XCIsIG93bmluZ1BhdGhTZWdMaXN0KTtcbiAgICAgICAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgICAgICAgdGhpcy5feSA9IHk7XG4gICAgICAgIH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhSZWwucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTVkdQYXRoU2VnLnByb3RvdHlwZSk7XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoUmVsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJbb2JqZWN0IFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoUmVsXVwiOyB9XG4gICAgICAgIFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoUmVsLnByb3RvdHlwZS5fYXNQYXRoU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdUeXBlQXNMZXR0ZXIgKyBcIiBcIiArIHRoaXMuX3ggKyBcIiBcIiArIHRoaXMuX3k7IH1cbiAgICAgICAgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhSZWwucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhSZWwodW5kZWZpbmVkLCB0aGlzLl94LCB0aGlzLl95KTsgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhSZWwucHJvdG90eXBlLCBcInhcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feDsgfSwgc2V0OiBmdW5jdGlvbih4KSB7IHRoaXMuX3ggPSB4OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhSZWwucHJvdG90eXBlLCBcInlcIiwgeyBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5feTsgfSwgc2V0OiBmdW5jdGlvbih5KSB7IHRoaXMuX3kgPSB5OyB0aGlzLl9zZWdtZW50Q2hhbmdlZCgpOyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuXG4gICAgICAgIC8vIEFkZCBjcmVhdGVTVkdQYXRoU2VnKiBmdW5jdGlvbnMgdG8gU1ZHUGF0aEVsZW1lbnQuXG4gICAgICAgIC8vIFNwZWM6IGh0dHA6Ly93d3cudzMub3JnL1RSL1NWRzExL3NpbmdsZS1wYWdlLmh0bWwjcGF0aHMtSW50ZXJmYWNlU1ZHUGF0aEVsZW1lbnQuXG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnQ2xvc2VQYXRoID0gZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0Nsb3NlUGF0aCh1bmRlZmluZWQpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnTW92ZXRvQWJzID0gZnVuY3Rpb24oeCwgeSkgeyByZXR1cm4gbmV3IFNWR1BhdGhTZWdNb3ZldG9BYnModW5kZWZpbmVkLCB4LCB5KTsgfVxuICAgICAgICBTVkdQYXRoRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU1ZHUGF0aFNlZ01vdmV0b1JlbCA9IGZ1bmN0aW9uKHgsIHkpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTW92ZXRvUmVsKHVuZGVmaW5lZCwgeCwgeSk7IH1cbiAgICAgICAgU1ZHUGF0aEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNWR1BhdGhTZWdMaW5ldG9BYnMgPSBmdW5jdGlvbih4LCB5KSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b0Ficyh1bmRlZmluZWQsIHgsIHkpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnTGluZXRvUmVsID0gZnVuY3Rpb24oeCwgeSkgeyByZXR1cm4gbmV3IFNWR1BhdGhTZWdMaW5ldG9SZWwodW5kZWZpbmVkLCB4LCB5KTsgfVxuICAgICAgICBTVkdQYXRoRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0FicyA9IGZ1bmN0aW9uKHgsIHksIHgxLCB5MSwgeDIsIHkyKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY0Ficyh1bmRlZmluZWQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKTsgfVxuICAgICAgICBTVkdQYXRoRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1JlbCA9IGZ1bmN0aW9uKHgsIHksIHgxLCB5MSwgeDIsIHkyKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1JlbCh1bmRlZmluZWQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKTsgfVxuICAgICAgICBTVkdQYXRoRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNBYnMgPSBmdW5jdGlvbih4LCB5LCB4MSwgeTEpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY0Ficyh1bmRlZmluZWQsIHgsIHksIHgxLCB5MSk7IH1cbiAgICAgICAgU1ZHUGF0aEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljUmVsID0gZnVuY3Rpb24oeCwgeSwgeDEsIHkxKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNSZWwodW5kZWZpbmVkLCB4LCB5LCB4MSwgeTEpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnQXJjQWJzID0gZnVuY3Rpb24oeCwgeSwgcjEsIHIyLCBhbmdsZSwgbGFyZ2VBcmNGbGFnLCBzd2VlcEZsYWcpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQXJjQWJzKHVuZGVmaW5lZCwgeCwgeSwgcjEsIHIyLCBhbmdsZSwgbGFyZ2VBcmNGbGFnLCBzd2VlcEZsYWcpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnQXJjUmVsID0gZnVuY3Rpb24oeCwgeSwgcjEsIHIyLCBhbmdsZSwgbGFyZ2VBcmNGbGFnLCBzd2VlcEZsYWcpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQXJjUmVsKHVuZGVmaW5lZCwgeCwgeSwgcjEsIHIyLCBhbmdsZSwgbGFyZ2VBcmNGbGFnLCBzd2VlcEZsYWcpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicyA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicyh1bmRlZmluZWQsIHgpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbFJlbCA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbFJlbCh1bmRlZmluZWQsIHgpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnTGluZXRvVmVydGljYWxBYnMgPSBmdW5jdGlvbih5KSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsQWJzKHVuZGVmaW5lZCwgeSk7IH1cbiAgICAgICAgU1ZHUGF0aEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNWR1BhdGhTZWdMaW5ldG9WZXJ0aWNhbFJlbCA9IGZ1bmN0aW9uKHkpIHsgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvVmVydGljYWxSZWwodW5kZWZpbmVkLCB5KTsgfVxuICAgICAgICBTVkdQYXRoRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aEFicyA9IGZ1bmN0aW9uKHgsIHksIHgyLCB5MikgeyByZXR1cm4gbmV3IFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNTbW9vdGhBYnModW5kZWZpbmVkLCB4LCB5LCB4MiwgeTIpOyB9XG4gICAgICAgIFNWR1BhdGhFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoUmVsID0gZnVuY3Rpb24oeCwgeSwgeDIsIHkyKSB7IHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aFJlbCh1bmRlZmluZWQsIHgsIHksIHgyLCB5Mik7IH1cbiAgICAgICAgU1ZHUGF0aEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoQWJzID0gZnVuY3Rpb24oeCwgeSkgeyByZXR1cm4gbmV3IFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoQWJzKHVuZGVmaW5lZCwgeCwgeSk7IH1cbiAgICAgICAgU1ZHUGF0aEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoUmVsID0gZnVuY3Rpb24oeCwgeSkgeyByZXR1cm4gbmV3IFNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljU21vb3RoUmVsKHVuZGVmaW5lZCwgeCwgeSk7IH1cbiAgICB9XG5cbiAgICBpZiAoIShcIlNWR1BhdGhTZWdMaXN0XCIgaW4gd2luZG93KSkge1xuICAgICAgICAvLyBTcGVjOiBodHRwOi8vd3d3LnczLm9yZy9UUi9TVkcxMS9zaW5nbGUtcGFnZS5odG1sI3BhdGhzLUludGVyZmFjZVNWR1BhdGhTZWdMaXN0XG4gICAgICAgIHdpbmRvdy5TVkdQYXRoU2VnTGlzdCA9IGZ1bmN0aW9uKHBhdGhFbGVtZW50KSB7XG4gICAgICAgICAgICB0aGlzLl9wYXRoRWxlbWVudCA9IHBhdGhFbGVtZW50O1xuICAgICAgICAgICAgdGhpcy5fbGlzdCA9IHRoaXMuX3BhcnNlUGF0aCh0aGlzLl9wYXRoRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkXCIpKTtcblxuICAgICAgICAgICAgLy8gVXNlIGEgTXV0YXRpb25PYnNlcnZlciB0byBjYXRjaCBjaGFuZ2VzIHRvIHRoZSBwYXRoJ3MgXCJkXCIgYXR0cmlidXRlLlxuICAgICAgICAgICAgdGhpcy5fbXV0YXRpb25PYnNlcnZlckNvbmZpZyA9IHsgXCJhdHRyaWJ1dGVzXCI6IHRydWUsIFwiYXR0cmlidXRlRmlsdGVyXCI6IFtcImRcIl0gfTtcbiAgICAgICAgICAgIHRoaXMuX3BhdGhFbGVtZW50TXV0YXRpb25PYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKHRoaXMuX3VwZGF0ZUxpc3RGcm9tUGF0aE11dGF0aW9ucy5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIHRoaXMuX3BhdGhFbGVtZW50TXV0YXRpb25PYnNlcnZlci5vYnNlcnZlKHRoaXMuX3BhdGhFbGVtZW50LCB0aGlzLl9tdXRhdGlvbk9ic2VydmVyQ29uZmlnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFNWR1BhdGhTZWdMaXN0LnByb3RvdHlwZS5jbGFzc25hbWUgPSBcIlNWR1BhdGhTZWdMaXN0XCI7XG5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNWR1BhdGhTZWdMaXN0LnByb3RvdHlwZSwgXCJudW1iZXJPZkl0ZW1zXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2hlY2tQYXRoU3luY2hyb25pemVkVG9MaXN0KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xpc3QubGVuZ3RoO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQWRkIHRoZSBwYXRoU2VnTGlzdCBhY2Nlc3NvcnMgdG8gU1ZHUGF0aEVsZW1lbnQuXG4gICAgICAgIC8vIFNwZWM6IGh0dHA6Ly93d3cudzMub3JnL1RSL1NWRzExL3NpbmdsZS1wYWdlLmh0bWwjcGF0aHMtSW50ZXJmYWNlU1ZHQW5pbWF0ZWRQYXRoRGF0YVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aEVsZW1lbnQucHJvdG90eXBlLCBcInBhdGhTZWdMaXN0XCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLl9wYXRoU2VnTGlzdClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcGF0aFNlZ0xpc3QgPSBuZXcgU1ZHUGF0aFNlZ0xpc3QodGhpcyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3BhdGhTZWdMaXN0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEZJWE1FOiBUaGUgZm9sbG93aW5nIGFyZSBub3QgaW1wbGVtZW50ZWQgYW5kIHNpbXBseSByZXR1cm4gU1ZHUGF0aEVsZW1lbnQucGF0aFNlZ0xpc3QuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoRWxlbWVudC5wcm90b3R5cGUsIFwibm9ybWFsaXplZFBhdGhTZWdMaXN0XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ0xpc3Q7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQYXRoRWxlbWVudC5wcm90b3R5cGUsIFwiYW5pbWF0ZWRQYXRoU2VnTGlzdFwiLCB7IGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLnBhdGhTZWdMaXN0OyB9LCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU1ZHUGF0aEVsZW1lbnQucHJvdG90eXBlLCBcImFuaW1hdGVkTm9ybWFsaXplZFBhdGhTZWdMaXN0XCIsIHsgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMucGF0aFNlZ0xpc3Q7IH0sIGVudW1lcmFibGU6IHRydWUgfSk7XG5cbiAgICAgICAgLy8gUHJvY2VzcyBhbnkgcGVuZGluZyBtdXRhdGlvbnMgdG8gdGhlIHBhdGggZWxlbWVudCBhbmQgdXBkYXRlIHRoZSBsaXN0IGFzIG5lZWRlZC5cbiAgICAgICAgLy8gVGhpcyBzaG91bGQgYmUgdGhlIGZpcnN0IGNhbGwgb2YgYWxsIHB1YmxpYyBmdW5jdGlvbnMgYW5kIGlzIG5lZWRlZCBiZWNhdXNlXG4gICAgICAgIC8vIE11dGF0aW9uT2JzZXJ2ZXJzIGFyZSBub3Qgc3luY2hyb25vdXMgc28gd2UgY2FuIGhhdmUgcGVuZGluZyBhc3luY2hyb25vdXMgbXV0YXRpb25zLlxuICAgICAgICBTVkdQYXRoU2VnTGlzdC5wcm90b3R5cGUuX2NoZWNrUGF0aFN5bmNocm9uaXplZFRvTGlzdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5fdXBkYXRlTGlzdEZyb21QYXRoTXV0YXRpb25zKHRoaXMuX3BhdGhFbGVtZW50TXV0YXRpb25PYnNlcnZlci50YWtlUmVjb3JkcygpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFNWR1BhdGhTZWdMaXN0LnByb3RvdHlwZS5fdXBkYXRlTGlzdEZyb21QYXRoTXV0YXRpb25zID0gZnVuY3Rpb24obXV0YXRpb25SZWNvcmRzKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX3BhdGhFbGVtZW50KVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHZhciBoYXNQYXRoTXV0YXRpb25zID0gZmFsc2U7XG4gICAgICAgICAgICBtdXRhdGlvblJlY29yZHMuZm9yRWFjaChmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVjb3JkLmF0dHJpYnV0ZU5hbWUgPT0gXCJkXCIpXG4gICAgICAgICAgICAgICAgICAgIGhhc1BhdGhNdXRhdGlvbnMgPSB0cnVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoaGFzUGF0aE11dGF0aW9ucylcbiAgICAgICAgICAgICAgICB0aGlzLl9saXN0ID0gdGhpcy5fcGFyc2VQYXRoKHRoaXMuX3BhdGhFbGVtZW50LmdldEF0dHJpYnV0ZShcImRcIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2VyaWFsaXplIHRoZSBsaXN0IGFuZCB1cGRhdGUgdGhlIHBhdGgncyAnZCcgYXR0cmlidXRlLlxuICAgICAgICBTVkdQYXRoU2VnTGlzdC5wcm90b3R5cGUuX3dyaXRlTGlzdFRvUGF0aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5fcGF0aEVsZW1lbnRNdXRhdGlvbk9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIHRoaXMuX3BhdGhFbGVtZW50LnNldEF0dHJpYnV0ZShcImRcIiwgU1ZHUGF0aFNlZ0xpc3QuX3BhdGhTZWdBcnJheUFzU3RyaW5nKHRoaXMuX2xpc3QpKTtcbiAgICAgICAgICAgIHRoaXMuX3BhdGhFbGVtZW50TXV0YXRpb25PYnNlcnZlci5vYnNlcnZlKHRoaXMuX3BhdGhFbGVtZW50LCB0aGlzLl9tdXRhdGlvbk9ic2VydmVyQ29uZmlnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFdoZW4gYSBwYXRoIHNlZ21lbnQgY2hhbmdlcyB0aGUgbGlzdCBuZWVkcyB0byBiZSBzeW5jaHJvbml6ZWQgYmFjayB0byB0aGUgcGF0aCBlbGVtZW50LlxuICAgICAgICBTVkdQYXRoU2VnTGlzdC5wcm90b3R5cGUuc2VnbWVudENoYW5nZWQgPSBmdW5jdGlvbihwYXRoU2VnKSB7XG4gICAgICAgICAgICB0aGlzLl93cml0ZUxpc3RUb1BhdGgoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFNWR1BhdGhTZWdMaXN0LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5fY2hlY2tQYXRoU3luY2hyb25pemVkVG9MaXN0KCk7XG5cbiAgICAgICAgICAgIHRoaXMuX2xpc3QuZm9yRWFjaChmdW5jdGlvbihwYXRoU2VnKSB7XG4gICAgICAgICAgICAgICAgcGF0aFNlZy5fb3duaW5nUGF0aFNlZ0xpc3QgPSBudWxsO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLl9saXN0ID0gW107XG4gICAgICAgICAgICB0aGlzLl93cml0ZUxpc3RUb1BhdGgoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFNWR1BhdGhTZWdMaXN0LnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24obmV3SXRlbSkge1xuICAgICAgICAgICAgdGhpcy5fY2hlY2tQYXRoU3luY2hyb25pemVkVG9MaXN0KCk7XG5cbiAgICAgICAgICAgIHRoaXMuX2xpc3QgPSBbbmV3SXRlbV07XG4gICAgICAgICAgICBuZXdJdGVtLl9vd25pbmdQYXRoU2VnTGlzdCA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLl93cml0ZUxpc3RUb1BhdGgoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXdJdGVtO1xuICAgICAgICB9XG5cbiAgICAgICAgU1ZHUGF0aFNlZ0xpc3QucHJvdG90eXBlLl9jaGVja1ZhbGlkSW5kZXggPSBmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgICAgaWYgKGlzTmFOKGluZGV4KSB8fCBpbmRleCA8IDAgfHwgaW5kZXggPj0gdGhpcy5udW1iZXJPZkl0ZW1zKVxuICAgICAgICAgICAgICAgIHRocm93IFwiSU5ERVhfU0laRV9FUlJcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIFNWR1BhdGhTZWdMaXN0LnByb3RvdHlwZS5nZXRJdGVtID0gZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICAgIHRoaXMuX2NoZWNrUGF0aFN5bmNocm9uaXplZFRvTGlzdCgpO1xuXG4gICAgICAgICAgICB0aGlzLl9jaGVja1ZhbGlkSW5kZXgoaW5kZXgpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xpc3RbaW5kZXhdO1xuICAgICAgICB9XG5cbiAgICAgICAgU1ZHUGF0aFNlZ0xpc3QucHJvdG90eXBlLmluc2VydEl0ZW1CZWZvcmUgPSBmdW5jdGlvbihuZXdJdGVtLCBpbmRleCkge1xuICAgICAgICAgICAgdGhpcy5fY2hlY2tQYXRoU3luY2hyb25pemVkVG9MaXN0KCk7XG5cbiAgICAgICAgICAgIC8vIFNwZWM6IElmIHRoZSBpbmRleCBpcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gbnVtYmVyT2ZJdGVtcywgdGhlbiB0aGUgbmV3IGl0ZW0gaXMgYXBwZW5kZWQgdG8gdGhlIGVuZCBvZiB0aGUgbGlzdC5cbiAgICAgICAgICAgIGlmIChpbmRleCA+IHRoaXMubnVtYmVyT2ZJdGVtcylcbiAgICAgICAgICAgICAgICBpbmRleCA9IHRoaXMubnVtYmVyT2ZJdGVtcztcbiAgICAgICAgICAgIGlmIChuZXdJdGVtLl9vd25pbmdQYXRoU2VnTGlzdCkge1xuICAgICAgICAgICAgICAgIC8vIFNWRzIgc3BlYyBzYXlzIHRvIG1ha2UgYSBjb3B5LlxuICAgICAgICAgICAgICAgIG5ld0l0ZW0gPSBuZXdJdGVtLmNsb25lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9saXN0LnNwbGljZShpbmRleCwgMCwgbmV3SXRlbSk7XG4gICAgICAgICAgICBuZXdJdGVtLl9vd25pbmdQYXRoU2VnTGlzdCA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLl93cml0ZUxpc3RUb1BhdGgoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXdJdGVtO1xuICAgICAgICB9XG5cbiAgICAgICAgU1ZHUGF0aFNlZ0xpc3QucHJvdG90eXBlLnJlcGxhY2VJdGVtID0gZnVuY3Rpb24obmV3SXRlbSwgaW5kZXgpIHtcbiAgICAgICAgICAgIHRoaXMuX2NoZWNrUGF0aFN5bmNocm9uaXplZFRvTGlzdCgpO1xuXG4gICAgICAgICAgICBpZiAobmV3SXRlbS5fb3duaW5nUGF0aFNlZ0xpc3QpIHtcbiAgICAgICAgICAgICAgICAvLyBTVkcyIHNwZWMgc2F5cyB0byBtYWtlIGEgY29weS5cbiAgICAgICAgICAgICAgICBuZXdJdGVtID0gbmV3SXRlbS5jbG9uZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fY2hlY2tWYWxpZEluZGV4KGluZGV4KTtcbiAgICAgICAgICAgIHRoaXMuX2xpc3RbaW5kZXhdID0gbmV3SXRlbTtcbiAgICAgICAgICAgIG5ld0l0ZW0uX293bmluZ1BhdGhTZWdMaXN0ID0gdGhpcztcbiAgICAgICAgICAgIHRoaXMuX3dyaXRlTGlzdFRvUGF0aCgpO1xuICAgICAgICAgICAgcmV0dXJuIG5ld0l0ZW07XG4gICAgICAgIH1cblxuICAgICAgICBTVkdQYXRoU2VnTGlzdC5wcm90b3R5cGUucmVtb3ZlSXRlbSA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgICB0aGlzLl9jaGVja1BhdGhTeW5jaHJvbml6ZWRUb0xpc3QoKTtcblxuICAgICAgICAgICAgdGhpcy5fY2hlY2tWYWxpZEluZGV4KGluZGV4KTtcbiAgICAgICAgICAgIHZhciBpdGVtID0gdGhpcy5fbGlzdFtpbmRleF07XG4gICAgICAgICAgICB0aGlzLl9saXN0LnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB0aGlzLl93cml0ZUxpc3RUb1BhdGgoKTtcbiAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICB9XG5cbiAgICAgICAgU1ZHUGF0aFNlZ0xpc3QucHJvdG90eXBlLmFwcGVuZEl0ZW0gPSBmdW5jdGlvbihuZXdJdGVtKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGVja1BhdGhTeW5jaHJvbml6ZWRUb0xpc3QoKTtcblxuICAgICAgICAgICAgaWYgKG5ld0l0ZW0uX293bmluZ1BhdGhTZWdMaXN0KSB7XG4gICAgICAgICAgICAgICAgLy8gU1ZHMiBzcGVjIHNheXMgdG8gbWFrZSBhIGNvcHkuXG4gICAgICAgICAgICAgICAgbmV3SXRlbSA9IG5ld0l0ZW0uY2xvbmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2xpc3QucHVzaChuZXdJdGVtKTtcbiAgICAgICAgICAgIG5ld0l0ZW0uX293bmluZ1BhdGhTZWdMaXN0ID0gdGhpcztcbiAgICAgICAgICAgIC8vIFRPRE86IE9wdGltaXplIHRoaXMgdG8ganVzdCBhcHBlbmQgdG8gdGhlIGV4aXN0aW5nIGF0dHJpYnV0ZS5cbiAgICAgICAgICAgIHRoaXMuX3dyaXRlTGlzdFRvUGF0aCgpO1xuICAgICAgICAgICAgcmV0dXJuIG5ld0l0ZW07XG4gICAgICAgIH1cblxuICAgICAgICBTVkdQYXRoU2VnTGlzdC5fcGF0aFNlZ0FycmF5QXNTdHJpbmcgPSBmdW5jdGlvbihwYXRoU2VnQXJyYXkpIHtcbiAgICAgICAgICAgIHZhciBzdHJpbmcgPSBcIlwiO1xuICAgICAgICAgICAgdmFyIGZpcnN0ID0gdHJ1ZTtcbiAgICAgICAgICAgIHBhdGhTZWdBcnJheS5mb3JFYWNoKGZ1bmN0aW9uKHBhdGhTZWcpIHtcbiAgICAgICAgICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgc3RyaW5nICs9IHBhdGhTZWcuX2FzUGF0aFN0cmluZygpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHN0cmluZyArPSBcIiBcIiArIHBhdGhTZWcuX2FzUGF0aFN0cmluZygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHN0cmluZztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRoaXMgY2xvc2VseSBmb2xsb3dzIFNWR1BhdGhQYXJzZXI6OnBhcnNlUGF0aCBmcm9tIFNvdXJjZS9jb3JlL3N2Zy9TVkdQYXRoUGFyc2VyLmNwcC5cbiAgICAgICAgU1ZHUGF0aFNlZ0xpc3QucHJvdG90eXBlLl9wYXJzZVBhdGggPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgICAgICAgIGlmICghc3RyaW5nIHx8IHN0cmluZy5sZW5ndGggPT0gMClcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG5cbiAgICAgICAgICAgIHZhciBvd25pbmdQYXRoU2VnTGlzdCA9IHRoaXM7XG5cbiAgICAgICAgICAgIHZhciBCdWlsZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXRoU2VnTGlzdCA9IFtdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBCdWlsZGVyLnByb3RvdHlwZS5hcHBlbmRTZWdtZW50ID0gZnVuY3Rpb24ocGF0aFNlZykge1xuICAgICAgICAgICAgICAgIHRoaXMucGF0aFNlZ0xpc3QucHVzaChwYXRoU2VnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIFNvdXJjZSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgICAgICAgICAgIHRoaXMuX3N0cmluZyA9IHN0cmluZztcbiAgICAgICAgICAgICAgICB0aGlzLl9jdXJyZW50SW5kZXggPSAwO1xuICAgICAgICAgICAgICAgIHRoaXMuX2VuZEluZGV4ID0gdGhpcy5fc3RyaW5nLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB0aGlzLl9wcmV2aW91c0NvbW1hbmQgPSBTVkdQYXRoU2VnLlBBVEhTRUdfVU5LTk9XTjtcblxuICAgICAgICAgICAgICAgIHRoaXMuX3NraXBPcHRpb25hbFNwYWNlcygpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBTb3VyY2UucHJvdG90eXBlLl9pc0N1cnJlbnRTcGFjZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciBjaGFyYWN0ZXIgPSB0aGlzLl9zdHJpbmdbdGhpcy5fY3VycmVudEluZGV4XTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2hhcmFjdGVyIDw9IFwiIFwiICYmIChjaGFyYWN0ZXIgPT0gXCIgXCIgfHwgY2hhcmFjdGVyID09IFwiXFxuXCIgfHwgY2hhcmFjdGVyID09IFwiXFx0XCIgfHwgY2hhcmFjdGVyID09IFwiXFxyXCIgfHwgY2hhcmFjdGVyID09IFwiXFxmXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBTb3VyY2UucHJvdG90eXBlLl9za2lwT3B0aW9uYWxTcGFjZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAodGhpcy5fY3VycmVudEluZGV4IDwgdGhpcy5fZW5kSW5kZXggJiYgdGhpcy5faXNDdXJyZW50U3BhY2UoKSlcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudEluZGV4Kys7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRJbmRleCA8IHRoaXMuX2VuZEluZGV4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBTb3VyY2UucHJvdG90eXBlLl9za2lwT3B0aW9uYWxTcGFjZXNPckRlbGltaXRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jdXJyZW50SW5kZXggPCB0aGlzLl9lbmRJbmRleCAmJiAhdGhpcy5faXNDdXJyZW50U3BhY2UoKSAmJiB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgIT0gXCIsXCIpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fc2tpcE9wdGlvbmFsU3BhY2VzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRJbmRleCA8IHRoaXMuX2VuZEluZGV4ICYmIHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA9PSBcIixcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9za2lwT3B0aW9uYWxTcGFjZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fY3VycmVudEluZGV4IDwgdGhpcy5fZW5kSW5kZXg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFNvdXJjZS5wcm90b3R5cGUuaGFzTW9yZURhdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fY3VycmVudEluZGV4IDwgdGhpcy5fZW5kSW5kZXg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFNvdXJjZS5wcm90b3R5cGUucGVla1NlZ21lbnRUeXBlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxvb2thaGVhZCA9IHRoaXMuX3N0cmluZ1t0aGlzLl9jdXJyZW50SW5kZXhdO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9wYXRoU2VnVHlwZUZyb21DaGFyKGxvb2thaGVhZCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFNvdXJjZS5wcm90b3R5cGUuX3BhdGhTZWdUeXBlRnJvbUNoYXIgPSBmdW5jdGlvbihsb29rYWhlYWQpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGxvb2thaGVhZCkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJaXCI6XG4gICAgICAgICAgICAgICAgY2FzZSBcInpcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19DTE9TRVBBVEg7XG4gICAgICAgICAgICAgICAgY2FzZSBcIk1cIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19NT1ZFVE9fQUJTO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJtXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVkdQYXRoU2VnLlBBVEhTRUdfTU9WRVRPX1JFTDtcbiAgICAgICAgICAgICAgICBjYXNlIFwiTFwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19BQlM7XG4gICAgICAgICAgICAgICAgY2FzZSBcImxcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fUkVMO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJDXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19DVUJJQ19BQlM7XG4gICAgICAgICAgICAgICAgY2FzZSBcImNcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1JFTDtcbiAgICAgICAgICAgICAgICBjYXNlIFwiUVwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fUVVBRFJBVElDX0FCUztcbiAgICAgICAgICAgICAgICBjYXNlIFwicVwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fUVVBRFJBVElDX1JFTDtcbiAgICAgICAgICAgICAgICBjYXNlIFwiQVwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU1ZHUGF0aFNlZy5QQVRIU0VHX0FSQ19BQlM7XG4gICAgICAgICAgICAgICAgY2FzZSBcImFcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19BUkNfUkVMO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJIXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX0hPUklaT05UQUxfQUJTO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJoXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX0hPUklaT05UQUxfUkVMO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJWXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX1ZFUlRJQ0FMX0FCUztcbiAgICAgICAgICAgICAgICBjYXNlIFwidlwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19WRVJUSUNBTF9SRUw7XG4gICAgICAgICAgICAgICAgY2FzZSBcIlNcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1NNT09USF9BQlM7XG4gICAgICAgICAgICAgICAgY2FzZSBcInNcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1NNT09USF9SRUw7XG4gICAgICAgICAgICAgICAgY2FzZSBcIlRcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX1FVQURSQVRJQ19TTU9PVEhfQUJTO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJ0XCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19RVUFEUkFUSUNfU01PT1RIX1JFTDtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU1ZHUGF0aFNlZy5QQVRIU0VHX1VOS05PV047XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBTb3VyY2UucHJvdG90eXBlLl9uZXh0Q29tbWFuZEhlbHBlciA9IGZ1bmN0aW9uKGxvb2thaGVhZCwgcHJldmlvdXNDb21tYW5kKSB7XG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIHJlbWFpbmluZyBjb29yZGluYXRlcyBpbiB0aGUgY3VycmVudCBjb21tYW5kLlxuICAgICAgICAgICAgICAgIGlmICgobG9va2FoZWFkID09IFwiK1wiIHx8IGxvb2thaGVhZCA9PSBcIi1cIiB8fCBsb29rYWhlYWQgPT0gXCIuXCIgfHwgKGxvb2thaGVhZCA+PSBcIjBcIiAmJiBsb29rYWhlYWQgPD0gXCI5XCIpKSAmJiBwcmV2aW91c0NvbW1hbmQgIT0gU1ZHUGF0aFNlZy5QQVRIU0VHX0NMT1NFUEFUSCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJldmlvdXNDb21tYW5kID09IFNWR1BhdGhTZWcuUEFUSFNFR19NT1ZFVE9fQUJTKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fQUJTO1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJldmlvdXNDb21tYW5kID09IFNWR1BhdGhTZWcuUEFUSFNFR19NT1ZFVE9fUkVMKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fUkVMO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldmlvdXNDb21tYW5kO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gU1ZHUGF0aFNlZy5QQVRIU0VHX1VOS05PV047XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFNvdXJjZS5wcm90b3R5cGUuaW5pdGlhbENvbW1hbmRJc01vdmVUbyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBwYXRoIGlzIGVtcHR5IGl0IGlzIHN0aWxsIHZhbGlkLCBzbyByZXR1cm4gdHJ1ZS5cbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzTW9yZURhdGEoKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgdmFyIGNvbW1hbmQgPSB0aGlzLnBlZWtTZWdtZW50VHlwZSgpO1xuICAgICAgICAgICAgICAgIC8vIFBhdGggbXVzdCBzdGFydCB3aXRoIG1vdmVUby5cbiAgICAgICAgICAgICAgICByZXR1cm4gY29tbWFuZCA9PSBTVkdQYXRoU2VnLlBBVEhTRUdfTU9WRVRPX0FCUyB8fCBjb21tYW5kID09IFNWR1BhdGhTZWcuUEFUSFNFR19NT1ZFVE9fUkVMO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBQYXJzZSBhIG51bWJlciBmcm9tIGFuIFNWRyBwYXRoLiBUaGlzIHZlcnkgY2xvc2VseSBmb2xsb3dzIGdlbmVyaWNQYXJzZU51bWJlciguLi4pIGZyb20gU291cmNlL2NvcmUvc3ZnL1NWR1BhcnNlclV0aWxpdGllcy5jcHAuXG4gICAgICAgICAgICAvLyBTcGVjOiBodHRwOi8vd3d3LnczLm9yZy9UUi9TVkcxMS9zaW5nbGUtcGFnZS5odG1sI3BhdGhzLVBhdGhEYXRhQk5GXG4gICAgICAgICAgICBTb3VyY2UucHJvdG90eXBlLl9wYXJzZU51bWJlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciBleHBvbmVudCA9IDA7XG4gICAgICAgICAgICAgICAgdmFyIGludGVnZXIgPSAwO1xuICAgICAgICAgICAgICAgIHZhciBmcmFjID0gMTtcbiAgICAgICAgICAgICAgICB2YXIgZGVjaW1hbCA9IDA7XG4gICAgICAgICAgICAgICAgdmFyIHNpZ24gPSAxO1xuICAgICAgICAgICAgICAgIHZhciBleHBzaWduID0gMTtcblxuICAgICAgICAgICAgICAgIHZhciBzdGFydEluZGV4ID0gdGhpcy5fY3VycmVudEluZGV4O1xuXG4gICAgICAgICAgICAgICAgdGhpcy5fc2tpcE9wdGlvbmFsU3BhY2VzKCk7XG5cbiAgICAgICAgICAgICAgICAvLyBSZWFkIHRoZSBzaWduLlxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jdXJyZW50SW5kZXggPCB0aGlzLl9lbmRJbmRleCAmJiB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPT0gXCIrXCIpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRJbmRleCsrO1xuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuX2N1cnJlbnRJbmRleCA8IHRoaXMuX2VuZEluZGV4ICYmIHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA9PSBcIi1cIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jdXJyZW50SW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgc2lnbiA9IC0xO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jdXJyZW50SW5kZXggPT0gdGhpcy5fZW5kSW5kZXggfHwgKCh0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPCBcIjBcIiB8fCB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPiBcIjlcIikgJiYgdGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXgpICE9IFwiLlwiKSlcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGZpcnN0IGNoYXJhY3RlciBvZiBhIG51bWJlciBtdXN0IGJlIG9uZSBvZiBbMC05Ky0uXS5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgICAgIC8vIFJlYWQgdGhlIGludGVnZXIgcGFydCwgYnVpbGQgcmlnaHQtdG8tbGVmdC5cbiAgICAgICAgICAgICAgICB2YXIgc3RhcnRJbnRQYXJ0SW5kZXggPSB0aGlzLl9jdXJyZW50SW5kZXg7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHRoaXMuX2N1cnJlbnRJbmRleCA8IHRoaXMuX2VuZEluZGV4ICYmIHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA+PSBcIjBcIiAmJiB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPD0gXCI5XCIpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRJbmRleCsrOyAvLyBBZHZhbmNlIHRvIGZpcnN0IG5vbi1kaWdpdC5cblxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jdXJyZW50SW5kZXggIT0gc3RhcnRJbnRQYXJ0SW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjYW5JbnRQYXJ0SW5kZXggPSB0aGlzLl9jdXJyZW50SW5kZXggLSAxO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbXVsdGlwbGllciA9IDE7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChzY2FuSW50UGFydEluZGV4ID49IHN0YXJ0SW50UGFydEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlZ2VyICs9IG11bHRpcGxpZXIgKiAodGhpcy5fc3RyaW5nLmNoYXJBdChzY2FuSW50UGFydEluZGV4LS0pIC0gXCIwXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciAqPSAxMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIFJlYWQgdGhlIGRlY2ltYWxzLlxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jdXJyZW50SW5kZXggPCB0aGlzLl9lbmRJbmRleCAmJiB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPT0gXCIuXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudEluZGV4Kys7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlcmUgbXVzdCBiZSBhIGxlYXN0IG9uZSBkaWdpdCBmb2xsb3dpbmcgdGhlIC5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRJbmRleCA+PSB0aGlzLl9lbmRJbmRleCB8fCB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPCBcIjBcIiB8fCB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPiBcIjlcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICh0aGlzLl9jdXJyZW50SW5kZXggPCB0aGlzLl9lbmRJbmRleCAmJiB0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPj0gXCIwXCIgJiYgdGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXgpIDw9IFwiOVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgZGVjaW1hbCArPSAodGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXgrKykgLSBcIjBcIikgKiAoZnJhYyAqPSAwLjEpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIFJlYWQgdGhlIGV4cG9uZW50IHBhcnQuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRJbmRleCAhPSBzdGFydEluZGV4ICYmIHRoaXMuX2N1cnJlbnRJbmRleCArIDEgPCB0aGlzLl9lbmRJbmRleCAmJiAodGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXgpID09IFwiZVwiIHx8IHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA9PSBcIkVcIikgJiYgKHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4ICsgMSkgIT0gXCJ4XCIgJiYgdGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXggKyAxKSAhPSBcIm1cIikpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudEluZGV4Kys7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVhZCB0aGUgc2lnbiBvZiB0aGUgZXhwb25lbnQuXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9zdHJpbmcuY2hhckF0KHRoaXMuX2N1cnJlbnRJbmRleCkgPT0gXCIrXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRJbmRleCsrO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA9PSBcIi1cIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgICAgICBleHBzaWduID0gLTE7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvLyBUaGVyZSBtdXN0IGJlIGFuIGV4cG9uZW50LlxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fY3VycmVudEluZGV4ID49IHRoaXMuX2VuZEluZGV4IHx8IHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA8IFwiMFwiIHx8IHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA+IFwiOVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAodGhpcy5fY3VycmVudEluZGV4IDwgdGhpcy5fZW5kSW5kZXggJiYgdGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXgpID49IFwiMFwiICYmIHRoaXMuX3N0cmluZy5jaGFyQXQodGhpcy5fY3VycmVudEluZGV4KSA8PSBcIjlcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhwb25lbnQgKj0gMTA7XG4gICAgICAgICAgICAgICAgICAgICAgICBleHBvbmVudCArPSAodGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXgpIC0gXCIwXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgbnVtYmVyID0gaW50ZWdlciArIGRlY2ltYWw7XG4gICAgICAgICAgICAgICAgbnVtYmVyICo9IHNpZ247XG5cbiAgICAgICAgICAgICAgICBpZiAoZXhwb25lbnQpXG4gICAgICAgICAgICAgICAgICAgIG51bWJlciAqPSBNYXRoLnBvdygxMCwgZXhwc2lnbiAqIGV4cG9uZW50KTtcblxuICAgICAgICAgICAgICAgIGlmIChzdGFydEluZGV4ID09IHRoaXMuX2N1cnJlbnRJbmRleClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgICAgIHRoaXMuX3NraXBPcHRpb25hbFNwYWNlc09yRGVsaW1pdGVyKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBTb3VyY2UucHJvdG90eXBlLl9wYXJzZUFyY0ZsYWcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY3VycmVudEluZGV4ID49IHRoaXMuX2VuZEluZGV4KVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIHZhciBmbGFnID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdmFyIGZsYWdDaGFyID0gdGhpcy5fc3RyaW5nLmNoYXJBdCh0aGlzLl9jdXJyZW50SW5kZXgrKyk7XG4gICAgICAgICAgICAgICAgaWYgKGZsYWdDaGFyID09IFwiMFwiKVxuICAgICAgICAgICAgICAgICAgICBmbGFnID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZmxhZ0NoYXIgPT0gXCIxXCIpXG4gICAgICAgICAgICAgICAgICAgIGZsYWcgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgICAgIHRoaXMuX3NraXBPcHRpb25hbFNwYWNlc09yRGVsaW1pdGVyKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZsYWc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFNvdXJjZS5wcm90b3R5cGUucGFyc2VTZWdtZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxvb2thaGVhZCA9IHRoaXMuX3N0cmluZ1t0aGlzLl9jdXJyZW50SW5kZXhdO1xuICAgICAgICAgICAgICAgIHZhciBjb21tYW5kID0gdGhpcy5fcGF0aFNlZ1R5cGVGcm9tQ2hhcihsb29rYWhlYWQpO1xuICAgICAgICAgICAgICAgIGlmIChjb21tYW5kID09IFNWR1BhdGhTZWcuUEFUSFNFR19VTktOT1dOKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFBvc3NpYmx5IGFuIGltcGxpY2l0IGNvbW1hbmQuIE5vdCBhbGxvd2VkIGlmIHRoaXMgaXMgdGhlIGZpcnN0IGNvbW1hbmQuXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9wcmV2aW91c0NvbW1hbmQgPT0gU1ZHUGF0aFNlZy5QQVRIU0VHX1VOS05PV04pXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgY29tbWFuZCA9IHRoaXMuX25leHRDb21tYW5kSGVscGVyKGxvb2thaGVhZCwgdGhpcy5fcHJldmlvdXNDb21tYW5kKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbW1hbmQgPT0gU1ZHUGF0aFNlZy5QQVRIU0VHX1VOS05PV04pXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jdXJyZW50SW5kZXgrKztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLl9wcmV2aW91c0NvbW1hbmQgPSBjb21tYW5kO1xuXG4gICAgICAgICAgICAgICAgc3dpdGNoIChjb21tYW5kKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBTVkdQYXRoU2VnLlBBVEhTRUdfTU9WRVRPX1JFTDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTW92ZXRvUmVsKG93bmluZ1BhdGhTZWdMaXN0LCB0aGlzLl9wYXJzZU51bWJlcigpLCB0aGlzLl9wYXJzZU51bWJlcigpKTtcbiAgICAgICAgICAgICAgICBjYXNlIFNWR1BhdGhTZWcuUEFUSFNFR19NT1ZFVE9fQUJTOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFNWR1BhdGhTZWdNb3ZldG9BYnMob3duaW5nUGF0aFNlZ0xpc3QsIHRoaXMuX3BhcnNlTnVtYmVyKCksIHRoaXMuX3BhcnNlTnVtYmVyKCkpO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19SRUw6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b1JlbChvd25pbmdQYXRoU2VnTGlzdCwgdGhpcy5fcGFyc2VOdW1iZXIoKSwgdGhpcy5fcGFyc2VOdW1iZXIoKSk7XG4gICAgICAgICAgICAgICAgY2FzZSBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX0FCUzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvQWJzKG93bmluZ1BhdGhTZWdMaXN0LCB0aGlzLl9wYXJzZU51bWJlcigpLCB0aGlzLl9wYXJzZU51bWJlcigpKTtcbiAgICAgICAgICAgICAgICBjYXNlIFNWR1BhdGhTZWcuUEFUSFNFR19MSU5FVE9fSE9SSVpPTlRBTF9SRUw6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxSZWwob3duaW5nUGF0aFNlZ0xpc3QsIHRoaXMuX3BhcnNlTnVtYmVyKCkpO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19IT1JJWk9OVEFMX0FCUzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicyhvd25pbmdQYXRoU2VnTGlzdCwgdGhpcy5fcGFyc2VOdW1iZXIoKSk7XG4gICAgICAgICAgICAgICAgY2FzZSBTVkdQYXRoU2VnLlBBVEhTRUdfTElORVRPX1ZFUlRJQ0FMX1JFTDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnTGluZXRvVmVydGljYWxSZWwob3duaW5nUGF0aFNlZ0xpc3QsIHRoaXMuX3BhcnNlTnVtYmVyKCkpO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0xJTkVUT19WRVJUSUNBTF9BQlM6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsQWJzKG93bmluZ1BhdGhTZWdMaXN0LCB0aGlzLl9wYXJzZU51bWJlcigpKTtcbiAgICAgICAgICAgICAgICBjYXNlIFNWR1BhdGhTZWcuUEFUSFNFR19DTE9TRVBBVEg6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3NraXBPcHRpb25hbFNwYWNlcygpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFNWR1BhdGhTZWdDbG9zZVBhdGgob3duaW5nUGF0aFNlZ0xpc3QpO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fQ1VCSUNfUkVMOlxuICAgICAgICAgICAgICAgICAgICB2YXIgcG9pbnRzID0ge3gxOiB0aGlzLl9wYXJzZU51bWJlcigpLCB5MTogdGhpcy5fcGFyc2VOdW1iZXIoKSwgeDI6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHkyOiB0aGlzLl9wYXJzZU51bWJlcigpLCB4OiB0aGlzLl9wYXJzZU51bWJlcigpLCB5OiB0aGlzLl9wYXJzZU51bWJlcigpfTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b0N1YmljUmVsKG93bmluZ1BhdGhTZWdMaXN0LCBwb2ludHMueCwgcG9pbnRzLnksIHBvaW50cy54MSwgcG9pbnRzLnkxLCBwb2ludHMueDIsIHBvaW50cy55Mik7XG4gICAgICAgICAgICAgICAgY2FzZSBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19DVUJJQ19BQlM6XG4gICAgICAgICAgICAgICAgICAgIHZhciBwb2ludHMgPSB7eDE6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHkxOiB0aGlzLl9wYXJzZU51bWJlcigpLCB4MjogdGhpcy5fcGFyc2VOdW1iZXIoKSwgeTI6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHg6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHk6IHRoaXMuX3BhcnNlTnVtYmVyKCl9O1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFNWR1BhdGhTZWdDdXJ2ZXRvQ3ViaWNBYnMob3duaW5nUGF0aFNlZ0xpc3QsIHBvaW50cy54LCBwb2ludHMueSwgcG9pbnRzLngxLCBwb2ludHMueTEsIHBvaW50cy54MiwgcG9pbnRzLnkyKTtcbiAgICAgICAgICAgICAgICBjYXNlIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1NNT09USF9SRUw6XG4gICAgICAgICAgICAgICAgICAgIHZhciBwb2ludHMgPSB7eDI6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHkyOiB0aGlzLl9wYXJzZU51bWJlcigpLCB4OiB0aGlzLl9wYXJzZU51bWJlcigpLCB5OiB0aGlzLl9wYXJzZU51bWJlcigpfTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoUmVsKG93bmluZ1BhdGhTZWdMaXN0LCBwb2ludHMueCwgcG9pbnRzLnksIHBvaW50cy54MiwgcG9pbnRzLnkyKTtcbiAgICAgICAgICAgICAgICBjYXNlIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX0NVQklDX1NNT09USF9BQlM6XG4gICAgICAgICAgICAgICAgICAgIHZhciBwb2ludHMgPSB7eDI6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHkyOiB0aGlzLl9wYXJzZU51bWJlcigpLCB4OiB0aGlzLl9wYXJzZU51bWJlcigpLCB5OiB0aGlzLl9wYXJzZU51bWJlcigpfTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b0N1YmljU21vb3RoQWJzKG93bmluZ1BhdGhTZWdMaXN0LCBwb2ludHMueCwgcG9pbnRzLnksIHBvaW50cy54MiwgcG9pbnRzLnkyKTtcbiAgICAgICAgICAgICAgICBjYXNlIFNWR1BhdGhTZWcuUEFUSFNFR19DVVJWRVRPX1FVQURSQVRJQ19SRUw6XG4gICAgICAgICAgICAgICAgICAgIHZhciBwb2ludHMgPSB7eDE6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHkxOiB0aGlzLl9wYXJzZU51bWJlcigpLCB4OiB0aGlzLl9wYXJzZU51bWJlcigpLCB5OiB0aGlzLl9wYXJzZU51bWJlcigpfTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1JlbChvd25pbmdQYXRoU2VnTGlzdCwgcG9pbnRzLngsIHBvaW50cy55LCBwb2ludHMueDEsIHBvaW50cy55MSk7XG4gICAgICAgICAgICAgICAgY2FzZSBTVkdQYXRoU2VnLlBBVEhTRUdfQ1VSVkVUT19RVUFEUkFUSUNfQUJTOlxuICAgICAgICAgICAgICAgICAgICB2YXIgcG9pbnRzID0ge3gxOiB0aGlzLl9wYXJzZU51bWJlcigpLCB5MTogdGhpcy5fcGFyc2VOdW1iZXIoKSwgeDogdGhpcy5fcGFyc2VOdW1iZXIoKSwgeTogdGhpcy5fcGFyc2VOdW1iZXIoKX07XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNBYnMob3duaW5nUGF0aFNlZ0xpc3QsIHBvaW50cy54LCBwb2ludHMueSwgcG9pbnRzLngxLCBwb2ludHMueTEpO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fUVVBRFJBVElDX1NNT09USF9SRUw6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhSZWwob3duaW5nUGF0aFNlZ0xpc3QsIHRoaXMuX3BhcnNlTnVtYmVyKCksIHRoaXMuX3BhcnNlTnVtYmVyKCkpO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0NVUlZFVE9fUVVBRFJBVElDX1NNT09USF9BQlM6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhBYnMob3duaW5nUGF0aFNlZ0xpc3QsIHRoaXMuX3BhcnNlTnVtYmVyKCksIHRoaXMuX3BhcnNlTnVtYmVyKCkpO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0FSQ19SRUw6XG4gICAgICAgICAgICAgICAgICAgIHZhciBwb2ludHMgPSB7eDE6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHkxOiB0aGlzLl9wYXJzZU51bWJlcigpLCBhcmNBbmdsZTogdGhpcy5fcGFyc2VOdW1iZXIoKSwgYXJjTGFyZ2U6IHRoaXMuX3BhcnNlQXJjRmxhZygpLCBhcmNTd2VlcDogdGhpcy5fcGFyc2VBcmNGbGFnKCksIHg6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHk6IHRoaXMuX3BhcnNlTnVtYmVyKCl9O1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFNWR1BhdGhTZWdBcmNSZWwob3duaW5nUGF0aFNlZ0xpc3QsIHBvaW50cy54LCBwb2ludHMueSwgcG9pbnRzLngxLCBwb2ludHMueTEsIHBvaW50cy5hcmNBbmdsZSwgcG9pbnRzLmFyY0xhcmdlLCBwb2ludHMuYXJjU3dlZXApO1xuICAgICAgICAgICAgICAgIGNhc2UgU1ZHUGF0aFNlZy5QQVRIU0VHX0FSQ19BQlM6XG4gICAgICAgICAgICAgICAgICAgIHZhciBwb2ludHMgPSB7eDE6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHkxOiB0aGlzLl9wYXJzZU51bWJlcigpLCBhcmNBbmdsZTogdGhpcy5fcGFyc2VOdW1iZXIoKSwgYXJjTGFyZ2U6IHRoaXMuX3BhcnNlQXJjRmxhZygpLCBhcmNTd2VlcDogdGhpcy5fcGFyc2VBcmNGbGFnKCksIHg6IHRoaXMuX3BhcnNlTnVtYmVyKCksIHk6IHRoaXMuX3BhcnNlTnVtYmVyKCl9O1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFNWR1BhdGhTZWdBcmNBYnMob3duaW5nUGF0aFNlZ0xpc3QsIHBvaW50cy54LCBwb2ludHMueSwgcG9pbnRzLngxLCBwb2ludHMueTEsIHBvaW50cy5hcmNBbmdsZSwgcG9pbnRzLmFyY0xhcmdlLCBwb2ludHMuYXJjU3dlZXApO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHRocm93IFwiVW5rbm93biBwYXRoIHNlZyB0eXBlLlwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgYnVpbGRlciA9IG5ldyBCdWlsZGVyKCk7XG4gICAgICAgICAgICB2YXIgc291cmNlID0gbmV3IFNvdXJjZShzdHJpbmcpO1xuXG4gICAgICAgICAgICBpZiAoIXNvdXJjZS5pbml0aWFsQ29tbWFuZElzTW92ZVRvKCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgICAgd2hpbGUgKHNvdXJjZS5oYXNNb3JlRGF0YSgpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhdGhTZWcgPSBzb3VyY2UucGFyc2VTZWdtZW50KCk7XG4gICAgICAgICAgICAgICAgaWYgKCFwYXRoU2VnKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICAgICAgYnVpbGRlci5hcHBlbmRTZWdtZW50KHBhdGhTZWcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYnVpbGRlci5wYXRoU2VnTGlzdDtcbiAgICAgICAgfVxuICAgIH1cbn0oKSk7IiwiIWZ1bmN0aW9uKGEpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGIoYSl7dGhpcy5vd25lcj1hfWZ1bmN0aW9uIGMoYSxiKXtpZihPYmplY3QuY3JlYXRlKWIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYS5wcm90b3R5cGUpO2Vsc2V7dmFyIGM9ZnVuY3Rpb24oKXt9O2MucHJvdG90eXBlPWEucHJvdG90eXBlLGIucHJvdG90eXBlPW5ldyBjfXJldHVybiBiLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1iLGJ9ZnVuY3Rpb24gZChhKXt2YXIgYj10aGlzLmludGVybmFsPW5ldyBlKHRoaXMpO2IubG9hZENvbmZpZyhhKSxiLmluaXQoKSxmdW5jdGlvbiBjKGEsYixkKXtPYmplY3Qua2V5cyhhKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2JbZV09YVtlXS5iaW5kKGQpLE9iamVjdC5rZXlzKGFbZV0pLmxlbmd0aD4wJiZjKGFbZV0sYltlXSxkKX0pfShoLHRoaXMsdGhpcyl9ZnVuY3Rpb24gZShiKXt2YXIgYz10aGlzO2MuZDM9YS5kMz9hLmQzOlwidW5kZWZpbmVkXCIhPXR5cGVvZiByZXF1aXJlP3JlcXVpcmUoXCJkM1wiKTp2b2lkIDAsYy5hcGk9YixjLmNvbmZpZz1jLmdldERlZmF1bHRDb25maWcoKSxjLmRhdGE9e30sYy5jYWNoZT17fSxjLmF4ZXM9e319ZnVuY3Rpb24gZihhKXtiLmNhbGwodGhpcyxhKX1mdW5jdGlvbiBnKGEsYil7ZnVuY3Rpb24gYyhhLGIpe2EuYXR0cihcInRyYW5zZm9ybVwiLGZ1bmN0aW9uKGEpe3JldHVyblwidHJhbnNsYXRlKFwiK01hdGguY2VpbChiKGEpK3UpK1wiLCAwKVwifSl9ZnVuY3Rpb24gZChhLGIpe2EuYXR0cihcInRyYW5zZm9ybVwiLGZ1bmN0aW9uKGEpe3JldHVyblwidHJhbnNsYXRlKDAsXCIrTWF0aC5jZWlsKGIoYSkpK1wiKVwifSl9ZnVuY3Rpb24gZShhKXt2YXIgYj1hWzBdLGM9YVthLmxlbmd0aC0xXTtyZXR1cm4gYz5iP1tiLGNdOltjLGJdfWZ1bmN0aW9uIGYoYSl7dmFyIGIsYyxkPVtdO2lmKGEudGlja3MpcmV0dXJuIGEudGlja3MuYXBwbHkoYSxuKTtmb3IoYz1hLmRvbWFpbigpLGI9TWF0aC5jZWlsKGNbMF0pO2I8Y1sxXTtiKyspZC5wdXNoKGIpO3JldHVybiBkLmxlbmd0aD4wJiZkWzBdPjAmJmQudW5zaGlmdChkWzBdLShkWzFdLWRbMF0pKSxkfWZ1bmN0aW9uIGcoKXt2YXIgYSxjPXAuY29weSgpO3JldHVybiBiLmlzQ2F0ZWdvcnkmJihhPXAuZG9tYWluKCksYy5kb21haW4oW2FbMF0sYVsxXS0xXSkpLGN9ZnVuY3Rpb24gaChhKXt2YXIgYj1tP20oYSk6YTtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgYj9iOlwiXCJ9ZnVuY3Rpb24gaShhKXtpZih6KXJldHVybiB6O3ZhciBiPXtoOjExLjUsdzo1LjV9O3JldHVybiBhLnNlbGVjdChcInRleHRcIikudGV4dChoKS5lYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPXRoaXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksZD1oKGEpLGU9Yy5oZWlnaHQsZj1kP2Mud2lkdGgvZC5sZW5ndGg6dm9pZCAwO2UmJmYmJihiLmg9ZSxiLnc9Zil9KS50ZXh0KFwiXCIpLHo9YixifWZ1bmN0aW9uIGooYyl7cmV0dXJuIGIud2l0aG91dFRyYW5zaXRpb24/YzphLnRyYW5zaXRpb24oYyl9ZnVuY3Rpb24gayhtKXttLmVhY2goZnVuY3Rpb24oKXtmdW5jdGlvbiBtKGEsYyl7ZnVuY3Rpb24gZChhLGIpe2Y9dm9pZCAwO2Zvcih2YXIgaD0xO2g8Yi5sZW5ndGg7aCsrKWlmKFwiIFwiPT09Yi5jaGFyQXQoaCkmJihmPWgpLGU9Yi5zdWJzdHIoMCxoKzEpLGc9VS53KmUubGVuZ3RoLGc+YylyZXR1cm4gZChhLmNvbmNhdChiLnN1YnN0cigwLGY/ZjpoKSksYi5zbGljZShmP2YrMTpoKSk7cmV0dXJuIGEuY29uY2F0KGIpfXZhciBlLGYsZyxpPWgoYSksaj1bXTtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaSk/aTooKCFjfHwwPj1jKSYmKGM9WD85NTpiLmlzQ2F0ZWdvcnk/TWF0aC5jZWlsKEYoR1sxXSktRihHWzBdKSktMTI6MTEwKSxkKGosaStcIlwiKSl9ZnVuY3Rpb24gbihhLGIpe3ZhciBjPVUuaDtyZXR1cm4gMD09PWImJihjPVwibGVmdFwiPT09cXx8XCJyaWdodFwiPT09cT8tKChWW2EuaW5kZXhdLTEpKihVLmgvMiktMyk6XCIuNzFlbVwiKSxjfWZ1bmN0aW9uIHYoYSl7dmFyIGI9cChhKSsobz8wOnUpO3JldHVybiBMWzBdPGImJmI8TFsxXT9yOjB9ZnVuY3Rpb24gdyhhKXtyZXR1cm4gYT9hPjA/XCJzdGFydFwiOlwiZW5kXCI6XCJtaWRkbGVcIn1mdW5jdGlvbiB4KGEpe3JldHVybiBhP1wicm90YXRlKFwiK2ErXCIpXCI6XCJcIn1mdW5jdGlvbiB5KGEpe3JldHVybiBhPzgqTWF0aC5zaW4oTWF0aC5QSSooYS8xODApKTowfWZ1bmN0aW9uIHooYSl7cmV0dXJuIGE/MTEuNS0yLjUqKGEvMTUpKihhPjA/MTotMSk6V312YXIgQSxCLEMsRD1rLmc9YS5zZWxlY3QodGhpcyksRT10aGlzLl9fY2hhcnRfX3x8cCxGPXRoaXMuX19jaGFydF9fPWcoKSxHPXQ/dDpmKEYpLEg9RC5zZWxlY3RBbGwoXCIudGlja1wiKS5kYXRhKEcsRiksST1ILmVudGVyKCkuaW5zZXJ0KFwiZ1wiLFwiLmRvbWFpblwiKS5hdHRyKFwiY2xhc3NcIixcInRpY2tcIikuc3R5bGUoXCJvcGFjaXR5XCIsMWUtNiksSj1ILmV4aXQoKS5yZW1vdmUoKSxLPWooSCkuc3R5bGUoXCJvcGFjaXR5XCIsMSksTD1wLnJhbmdlRXh0ZW50P3AucmFuZ2VFeHRlbnQoKTplKHAucmFuZ2UoKSksTT1ELnNlbGVjdEFsbChcIi5kb21haW5cIikuZGF0YShbMF0pLE49KE0uZW50ZXIoKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJjbGFzc1wiLFwiZG9tYWluXCIpLGooTSkpO0kuYXBwZW5kKFwibGluZVwiKSxJLmFwcGVuZChcInRleHRcIik7dmFyIE89SS5zZWxlY3QoXCJsaW5lXCIpLFA9Sy5zZWxlY3QoXCJsaW5lXCIpLFE9SS5zZWxlY3QoXCJ0ZXh0XCIpLFI9Sy5zZWxlY3QoXCJ0ZXh0XCIpO2IuaXNDYXRlZ29yeT8odT1NYXRoLmNlaWwoKEYoMSktRigwKSkvMiksQj1vPzA6dSxDPW8/dTowKTp1PUI9MDt2YXIgUyxULFU9aShELnNlbGVjdChcIi50aWNrXCIpKSxWPVtdLFc9TWF0aC5tYXgociwwKStzLFg9XCJsZWZ0XCI9PT1xfHxcInJpZ2h0XCI9PT1xO1M9SC5zZWxlY3QoXCJ0ZXh0XCIpLFQ9Uy5zZWxlY3RBbGwoXCJ0c3BhblwiKS5kYXRhKGZ1bmN0aW9uKGEsYyl7dmFyIGQ9Yi50aWNrTXVsdGlsaW5lP20oYSxiLnRpY2tXaWR0aCk6W10uY29uY2F0KGgoYSkpO3JldHVybiBWW2NdPWQubGVuZ3RoLGQubWFwKGZ1bmN0aW9uKGEpe3JldHVybntpbmRleDpjLHNwbGl0dGVkOmF9fSl9KSxULmVudGVyKCkuYXBwZW5kKFwidHNwYW5cIiksVC5leGl0KCkucmVtb3ZlKCksVC50ZXh0KGZ1bmN0aW9uKGEpe3JldHVybiBhLnNwbGl0dGVkfSk7dmFyIFk9Yi50aWNrVGV4dFJvdGF0ZTtzd2l0Y2gocSl7Y2FzZVwiYm90dG9tXCI6QT1jLE8uYXR0cihcInkyXCIsciksUS5hdHRyKFwieVwiLFcpLFAuYXR0cihcIngxXCIsQikuYXR0cihcIngyXCIsQikuYXR0cihcInkyXCIsdiksUi5hdHRyKFwieFwiLDApLmF0dHIoXCJ5XCIseihZKSkuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLHcoWSkpLmF0dHIoXCJ0cmFuc2Zvcm1cIix4KFkpKSxULmF0dHIoXCJ4XCIsMCkuYXR0cihcImR5XCIsbikuYXR0cihcImR4XCIseShZKSksTi5hdHRyKFwiZFwiLFwiTVwiK0xbMF0rXCIsXCIrbCtcIlYwSFwiK0xbMV0rXCJWXCIrbCk7YnJlYWs7Y2FzZVwidG9wXCI6QT1jLE8uYXR0cihcInkyXCIsLXIpLFEuYXR0cihcInlcIiwtVyksUC5hdHRyKFwieDJcIiwwKS5hdHRyKFwieTJcIiwtciksUi5hdHRyKFwieFwiLDApLmF0dHIoXCJ5XCIsLVcpLFMuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLFwibWlkZGxlXCIpLFQuYXR0cihcInhcIiwwKS5hdHRyKFwiZHlcIixcIjBlbVwiKSxOLmF0dHIoXCJkXCIsXCJNXCIrTFswXStcIixcIistbCtcIlYwSFwiK0xbMV0rXCJWXCIrLWwpO2JyZWFrO2Nhc2VcImxlZnRcIjpBPWQsTy5hdHRyKFwieDJcIiwtciksUS5hdHRyKFwieFwiLC1XKSxQLmF0dHIoXCJ4MlwiLC1yKS5hdHRyKFwieTFcIixDKS5hdHRyKFwieTJcIixDKSxSLmF0dHIoXCJ4XCIsLVcpLmF0dHIoXCJ5XCIsdSksUy5zdHlsZShcInRleHQtYW5jaG9yXCIsXCJlbmRcIiksVC5hdHRyKFwieFwiLC1XKS5hdHRyKFwiZHlcIixuKSxOLmF0dHIoXCJkXCIsXCJNXCIrLWwrXCIsXCIrTFswXStcIkgwVlwiK0xbMV0rXCJIXCIrLWwpO2JyZWFrO2Nhc2VcInJpZ2h0XCI6QT1kLE8uYXR0cihcIngyXCIsciksUS5hdHRyKFwieFwiLFcpLFAuYXR0cihcIngyXCIscikuYXR0cihcInkyXCIsMCksUi5hdHRyKFwieFwiLFcpLmF0dHIoXCJ5XCIsMCksUy5zdHlsZShcInRleHQtYW5jaG9yXCIsXCJzdGFydFwiKSxULmF0dHIoXCJ4XCIsVykuYXR0cihcImR5XCIsbiksTi5hdHRyKFwiZFwiLFwiTVwiK2wrXCIsXCIrTFswXStcIkgwVlwiK0xbMV0rXCJIXCIrbCl9aWYoRi5yYW5nZUJhbmQpe3ZhciBaPUYsJD1aLnJhbmdlQmFuZCgpLzI7RT1GPWZ1bmN0aW9uKGEpe3JldHVybiBaKGEpKyR9fWVsc2UgRS5yYW5nZUJhbmQ/RT1GOkouY2FsbChBLEYpO0kuY2FsbChBLEUpLEsuY2FsbChBLEYpfSl9dmFyIGwsbSxuLG8scD1hLnNjYWxlLmxpbmVhcigpLHE9XCJib3R0b21cIixyPTYscz0zLHQ9bnVsbCx1PTAsdj0hMDtyZXR1cm4gYj1ifHx7fSxsPWIud2l0aE91dGVyVGljaz82OjAsay5zY2FsZT1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocD1hLGspOnB9LGsub3JpZW50PWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhxPWEgaW57dG9wOjEscmlnaHQ6MSxib3R0b206MSxsZWZ0OjF9P2ErXCJcIjpcImJvdHRvbVwiLGspOnF9LGsudGlja0Zvcm1hdD1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obT1hLGspOm19LGsudGlja0NlbnRlcmVkPWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPWEsayk6b30say50aWNrT2Zmc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHV9LGsudGlja0ludGVydmFsPWZ1bmN0aW9uKCl7dmFyIGEsYztyZXR1cm4gYi5pc0NhdGVnb3J5P2E9Mip1OihjPWsuZy5zZWxlY3QoXCJwYXRoLmRvbWFpblwiKS5ub2RlKCkuZ2V0VG90YWxMZW5ndGgoKS0yKmwsYT1jL2suZy5zZWxlY3RBbGwoXCJsaW5lXCIpLnNpemUoKSksMS8wPT09YT8wOmF9LGsudGlja3M9ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj1hcmd1bWVudHMsayk6bn0say50aWNrQ3VsbGluZz1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odj1hLGspOnZ9LGsudGlja1ZhbHVlcz1mdW5jdGlvbihhKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhKXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYShwLmRvbWFpbigpKX07ZWxzZXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdDt0PWF9cmV0dXJuIGt9LGt9dmFyIGgsaSxqLGs9e3ZlcnNpb246XCIwLjQuMTBcIn07ay5nZW5lcmF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IGQoYSl9LGsuY2hhcnQ9e2ZuOmQucHJvdG90eXBlLGludGVybmFsOntmbjplLnByb3RvdHlwZSxheGlzOntmbjpmLnByb3RvdHlwZX19fSxoPWsuY2hhcnQuZm4saT1rLmNoYXJ0LmludGVybmFsLmZuLGo9ay5jaGFydC5pbnRlcm5hbC5heGlzLmZuLGkuaW5pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmNvbmZpZztpZihhLmluaXRQYXJhbXMoKSxiLmRhdGFfdXJsKWEuY29udmVydFVybFRvRGF0YShiLmRhdGFfdXJsLGIuZGF0YV9taW1lVHlwZSxiLmRhdGFfa2V5cyxhLmluaXRXaXRoRGF0YSk7ZWxzZSBpZihiLmRhdGFfanNvbilhLmluaXRXaXRoRGF0YShhLmNvbnZlcnRKc29uVG9EYXRhKGIuZGF0YV9qc29uLGIuZGF0YV9rZXlzKSk7ZWxzZSBpZihiLmRhdGFfcm93cylhLmluaXRXaXRoRGF0YShhLmNvbnZlcnRSb3dzVG9EYXRhKGIuZGF0YV9yb3dzKSk7ZWxzZXtpZighYi5kYXRhX2NvbHVtbnMpdGhyb3cgRXJyb3IoXCJ1cmwgb3IganNvbiBvciByb3dzIG9yIGNvbHVtbnMgaXMgcmVxdWlyZWQuXCIpO2EuaW5pdFdpdGhEYXRhKGEuY29udmVydENvbHVtbnNUb0RhdGEoYi5kYXRhX2NvbHVtbnMpKX19LGkuaW5pdFBhcmFtcz1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmQzLGM9YS5jb25maWc7YS5jbGlwSWQ9XCJjMy1cIisgK25ldyBEYXRlK1wiLWNsaXBcIixhLmNsaXBJZEZvclhBeGlzPWEuY2xpcElkK1wiLXhheGlzXCIsYS5jbGlwSWRGb3JZQXhpcz1hLmNsaXBJZCtcIi15YXhpc1wiLGEuY2xpcElkRm9yR3JpZD1hLmNsaXBJZCtcIi1ncmlkXCIsYS5jbGlwSWRGb3JTdWJjaGFydD1hLmNsaXBJZCtcIi1zdWJjaGFydFwiLGEuY2xpcFBhdGg9YS5nZXRDbGlwUGF0aChhLmNsaXBJZCksYS5jbGlwUGF0aEZvclhBeGlzPWEuZ2V0Q2xpcFBhdGgoYS5jbGlwSWRGb3JYQXhpcyksYS5jbGlwUGF0aEZvcllBeGlzPWEuZ2V0Q2xpcFBhdGgoYS5jbGlwSWRGb3JZQXhpcyksYS5jbGlwUGF0aEZvckdyaWQ9YS5nZXRDbGlwUGF0aChhLmNsaXBJZEZvckdyaWQpLGEuY2xpcFBhdGhGb3JTdWJjaGFydD1hLmdldENsaXBQYXRoKGEuY2xpcElkRm9yU3ViY2hhcnQpLGEuZHJhZ1N0YXJ0PW51bGwsYS5kcmFnZ2luZz0hMSxhLmZsb3dpbmc9ITEsYS5jYW5jZWxDbGljaz0hMSxhLm1vdXNlb3Zlcj0hMSxhLnRyYW5zaXRpbmc9ITEsYS5jb2xvcj1hLmdlbmVyYXRlQ29sb3IoKSxhLmxldmVsQ29sb3I9YS5nZW5lcmF0ZUxldmVsQ29sb3IoKSxhLmRhdGFUaW1lRm9ybWF0PWMuZGF0YV94TG9jYWx0aW1lP2IudGltZS5mb3JtYXQ6Yi50aW1lLmZvcm1hdC51dGMsYS5heGlzVGltZUZvcm1hdD1jLmF4aXNfeF9sb2NhbHRpbWU/Yi50aW1lLmZvcm1hdDpiLnRpbWUuZm9ybWF0LnV0YyxhLmRlZmF1bHRBeGlzVGltZUZvcm1hdD1hLmF4aXNUaW1lRm9ybWF0Lm11bHRpKFtbXCIuJUxcIixmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRNaWxsaXNlY29uZHMoKX1dLFtcIjolU1wiLGZ1bmN0aW9uKGEpe3JldHVybiBhLmdldFNlY29uZHMoKX1dLFtcIiVJOiVNXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGEuZ2V0TWludXRlcygpfV0sW1wiJUkgJXBcIixmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRIb3VycygpfV0sW1wiJS1tLyUtZFwiLGZ1bmN0aW9uKGEpe3JldHVybiBhLmdldERheSgpJiYxIT09YS5nZXREYXRlKCl9XSxbXCIlLW0vJS1kXCIsZnVuY3Rpb24oYSl7cmV0dXJuIDEhPT1hLmdldERhdGUoKX1dLFtcIiUtbS8lLWRcIixmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRNb250aCgpfV0sW1wiJVkvJS1tLyUtZFwiLGZ1bmN0aW9uKCl7cmV0dXJuITB9XV0pLGEuaGlkZGVuVGFyZ2V0SWRzPVtdLGEuaGlkZGVuTGVnZW5kSWRzPVtdLGEuZm9jdXNlZFRhcmdldElkcz1bXSxhLmRlZm9jdXNlZFRhcmdldElkcz1bXSxhLnhPcmllbnQ9Yy5heGlzX3JvdGF0ZWQ/XCJsZWZ0XCI6XCJib3R0b21cIixhLnlPcmllbnQ9Yy5heGlzX3JvdGF0ZWQ/Yy5heGlzX3lfaW5uZXI/XCJ0b3BcIjpcImJvdHRvbVwiOmMuYXhpc195X2lubmVyP1wicmlnaHRcIjpcImxlZnRcIixhLnkyT3JpZW50PWMuYXhpc19yb3RhdGVkP2MuYXhpc195Ml9pbm5lcj9cImJvdHRvbVwiOlwidG9wXCI6Yy5heGlzX3kyX2lubmVyP1wibGVmdFwiOlwicmlnaHRcIixhLnN1YlhPcmllbnQ9Yy5heGlzX3JvdGF0ZWQ/XCJsZWZ0XCI6XCJib3R0b21cIixhLmlzTGVnZW5kUmlnaHQ9XCJyaWdodFwiPT09Yy5sZWdlbmRfcG9zaXRpb24sYS5pc0xlZ2VuZEluc2V0PVwiaW5zZXRcIj09PWMubGVnZW5kX3Bvc2l0aW9uLGEuaXNMZWdlbmRUb3A9XCJ0b3AtbGVmdFwiPT09Yy5sZWdlbmRfaW5zZXRfYW5jaG9yfHxcInRvcC1yaWdodFwiPT09Yy5sZWdlbmRfaW5zZXRfYW5jaG9yLGEuaXNMZWdlbmRMZWZ0PVwidG9wLWxlZnRcIj09PWMubGVnZW5kX2luc2V0X2FuY2hvcnx8XCJib3R0b20tbGVmdFwiPT09Yy5sZWdlbmRfaW5zZXRfYW5jaG9yLGEubGVnZW5kU3RlcD0wLGEubGVnZW5kSXRlbVdpZHRoPTAsYS5sZWdlbmRJdGVtSGVpZ2h0PTAsYS5jdXJyZW50TWF4VGlja1dpZHRocz17eDowLHk6MCx5MjowfSxhLnJvdGF0ZWRfcGFkZGluZ19sZWZ0PTMwLGEucm90YXRlZF9wYWRkaW5nX3JpZ2h0PWMuYXhpc19yb3RhdGVkJiYhYy5heGlzX3hfc2hvdz8wOjMwLGEucm90YXRlZF9wYWRkaW5nX3RvcD01LGEud2l0aG91dEZhZGVJbj17fSxhLmludGVydmFsRm9yT2JzZXJ2ZUluc2VydGVkPXZvaWQgMCxhLmF4ZXMuc3VieD1iLnNlbGVjdEFsbChbXSl9LGkuaW5pdENoYXJ0RWxlbWVudHM9ZnVuY3Rpb24oKXt0aGlzLmluaXRCYXImJnRoaXMuaW5pdEJhcigpLHRoaXMuaW5pdExpbmUmJnRoaXMuaW5pdExpbmUoKSx0aGlzLmluaXRBcmMmJnRoaXMuaW5pdEFyYygpLHRoaXMuaW5pdEdhdWdlJiZ0aGlzLmluaXRHYXVnZSgpLHRoaXMuaW5pdFRleHQmJnRoaXMuaW5pdFRleHQoKX0saS5pbml0V2l0aERhdGE9ZnVuY3Rpb24oYil7dmFyIGMsZCxlPXRoaXMsZz1lLmQzLGg9ZS5jb25maWcsaT0hMDtlLmF4aXM9bmV3IGYoZSksZS5pbml0UGllJiZlLmluaXRQaWUoKSxlLmluaXRCcnVzaCYmZS5pbml0QnJ1c2goKSxlLmluaXRab29tJiZlLmluaXRab29tKCksZS5zZWxlY3RDaGFydD1oLmJpbmR0bz9cImZ1bmN0aW9uXCI9PXR5cGVvZiBoLmJpbmR0by5ub2RlP2guYmluZHRvOmcuc2VsZWN0KGguYmluZHRvKTpnLnNlbGVjdEFsbChbXSksZS5zZWxlY3RDaGFydC5lbXB0eSgpJiYoZS5zZWxlY3RDaGFydD1nLnNlbGVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKS5zdHlsZShcIm9wYWNpdHlcIiwwKSxlLm9ic2VydmVJbnNlcnRlZChlLnNlbGVjdENoYXJ0KSxpPSExKSxlLnNlbGVjdENoYXJ0Lmh0bWwoXCJcIikuY2xhc3NlZChcImMzXCIsITApLGUuZGF0YS54cz17fSxlLmRhdGEudGFyZ2V0cz1lLmNvbnZlcnREYXRhVG9UYXJnZXRzKGIpLGguZGF0YV9maWx0ZXImJihlLmRhdGEudGFyZ2V0cz1lLmRhdGEudGFyZ2V0cy5maWx0ZXIoaC5kYXRhX2ZpbHRlcikpLGguZGF0YV9oaWRlJiZlLmFkZEhpZGRlblRhcmdldElkcyhoLmRhdGFfaGlkZT09PSEwP2UubWFwVG9JZHMoZS5kYXRhLnRhcmdldHMpOmguZGF0YV9oaWRlKSxoLmxlZ2VuZF9oaWRlJiZlLmFkZEhpZGRlbkxlZ2VuZElkcyhoLmxlZ2VuZF9oaWRlPT09ITA/ZS5tYXBUb0lkcyhlLmRhdGEudGFyZ2V0cyk6aC5sZWdlbmRfaGlkZSksZS5oYXNUeXBlKFwiZ2F1Z2VcIikmJihoLmxlZ2VuZF9zaG93PSExKSxlLnVwZGF0ZVNpemVzKCksZS51cGRhdGVTY2FsZXMoKSxlLnguZG9tYWluKGcuZXh0ZW50KGUuZ2V0WERvbWFpbihlLmRhdGEudGFyZ2V0cykpKSxlLnkuZG9tYWluKGUuZ2V0WURvbWFpbihlLmRhdGEudGFyZ2V0cyxcInlcIikpLGUueTIuZG9tYWluKGUuZ2V0WURvbWFpbihlLmRhdGEudGFyZ2V0cyxcInkyXCIpKSxlLnN1YlguZG9tYWluKGUueC5kb21haW4oKSksZS5zdWJZLmRvbWFpbihlLnkuZG9tYWluKCkpLGUuc3ViWTIuZG9tYWluKGUueTIuZG9tYWluKCkpLGUub3JnWERvbWFpbj1lLnguZG9tYWluKCksZS5icnVzaCYmZS5icnVzaC5zY2FsZShlLnN1YlgpLGguem9vbV9lbmFibGVkJiZlLnpvb20uc2NhbGUoZS54KSxlLnN2Zz1lLnNlbGVjdENoYXJ0LmFwcGVuZChcInN2Z1wiKS5zdHlsZShcIm92ZXJmbG93XCIsXCJoaWRkZW5cIikub24oXCJtb3VzZWVudGVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gaC5vbm1vdXNlb3Zlci5jYWxsKGUpfSkub24oXCJtb3VzZWxlYXZlXCIsZnVuY3Rpb24oKXtyZXR1cm4gaC5vbm1vdXNlb3V0LmNhbGwoZSl9KSxjPWUuc3ZnLmFwcGVuZChcImRlZnNcIiksZS5jbGlwQ2hhcnQ9ZS5hcHBlbmRDbGlwKGMsZS5jbGlwSWQpLGUuY2xpcFhBeGlzPWUuYXBwZW5kQ2xpcChjLGUuY2xpcElkRm9yWEF4aXMpLGUuY2xpcFlBeGlzPWUuYXBwZW5kQ2xpcChjLGUuY2xpcElkRm9yWUF4aXMpLGUuY2xpcEdyaWQ9ZS5hcHBlbmRDbGlwKGMsZS5jbGlwSWRGb3JHcmlkKSxlLmNsaXBTdWJjaGFydD1lLmFwcGVuZENsaXAoYyxlLmNsaXBJZEZvclN1YmNoYXJ0KSxlLnVwZGF0ZVN2Z1NpemUoKSxkPWUubWFpbj1lLnN2Zy5hcHBlbmQoXCJnXCIpLmF0dHIoXCJ0cmFuc2Zvcm1cIixlLmdldFRyYW5zbGF0ZShcIm1haW5cIikpLGUuaW5pdFN1YmNoYXJ0JiZlLmluaXRTdWJjaGFydCgpLGUuaW5pdFRvb2x0aXAmJmUuaW5pdFRvb2x0aXAoKSxlLmluaXRMZWdlbmQmJmUuaW5pdExlZ2VuZCgpLGQuYXBwZW5kKFwidGV4dFwiKS5hdHRyKFwiY2xhc3NcIixsLnRleHQrXCIgXCIrbC5lbXB0eSkuYXR0cihcInRleHQtYW5jaG9yXCIsXCJtaWRkbGVcIikuYXR0cihcImRvbWluYW50LWJhc2VsaW5lXCIsXCJtaWRkbGVcIiksZS5pbml0UmVnaW9uKCksZS5pbml0R3JpZCgpLGQuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xpcC1wYXRoXCIsZS5jbGlwUGF0aCkuYXR0cihcImNsYXNzXCIsbC5jaGFydCksaC5ncmlkX2xpbmVzX2Zyb250JiZlLmluaXRHcmlkTGluZXMoKSxlLmluaXRFdmVudFJlY3QoKSxlLmluaXRDaGFydEVsZW1lbnRzKCksZC5pbnNlcnQoXCJyZWN0XCIsaC56b29tX3ByaXZpbGVnZWQ/bnVsbDpcImcuXCIrbC5yZWdpb25zKS5hdHRyKFwiY2xhc3NcIixsLnpvb21SZWN0KS5hdHRyKFwid2lkdGhcIixlLndpZHRoKS5hdHRyKFwiaGVpZ2h0XCIsZS5oZWlnaHQpLnN0eWxlKFwib3BhY2l0eVwiLDApLm9uKFwiZGJsY2xpY2suem9vbVwiLG51bGwpLGguYXhpc194X2V4dGVudCYmZS5icnVzaC5leHRlbnQoZS5nZXREZWZhdWx0RXh0ZW50KCkpLGUuYXhpcy5pbml0KCksZS51cGRhdGVUYXJnZXRzKGUuZGF0YS50YXJnZXRzKSxpJiYoZS51cGRhdGVEaW1lbnNpb24oKSxlLmNvbmZpZy5vbmluaXQuY2FsbChlKSxlLnJlZHJhdyh7d2l0aFRyYW5zaXRpb246ITEsd2l0aFRyYW5zZm9ybTohMCx3aXRoVXBkYXRlWERvbWFpbjohMCx3aXRoVXBkYXRlT3JnWERvbWFpbjohMCx3aXRoVHJhbnNpdGlvbkZvckF4aXM6ITF9KSksbnVsbD09YS5vbnJlc2l6ZSYmKGEub25yZXNpemU9ZS5nZW5lcmF0ZVJlc2l6ZSgpKSxhLm9ucmVzaXplLmFkZCYmKGEub25yZXNpemUuYWRkKGZ1bmN0aW9uKCl7aC5vbnJlc2l6ZS5jYWxsKGUpfSksYS5vbnJlc2l6ZS5hZGQoZnVuY3Rpb24oKXtlLmFwaS5mbHVzaCgpfSksYS5vbnJlc2l6ZS5hZGQoZnVuY3Rpb24oKXtoLm9ucmVzaXplZC5jYWxsKGUpfSkpLGUuYXBpLmVsZW1lbnQ9ZS5zZWxlY3RDaGFydC5ub2RlKCl9LGkuc21vb3RoTGluZXM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO1wiZ3JpZFwiPT09YiYmYS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGE9Yy5kMy5zZWxlY3QodGhpcyksYj1hLmF0dHIoXCJ4MVwiKSxkPWEuYXR0cihcIngyXCIpLGU9YS5hdHRyKFwieTFcIiksZj1hLmF0dHIoXCJ5MlwiKTthLmF0dHIoe3gxOk1hdGguY2VpbChiKSx4MjpNYXRoLmNlaWwoZCkseTE6TWF0aC5jZWlsKGUpLHkyOk1hdGguY2VpbChmKX0pfSl9LGkudXBkYXRlU2l6ZXM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5jb25maWcsYz1hLmxlZ2VuZD9hLmdldExlZ2VuZEhlaWdodCgpOjAsZD1hLmxlZ2VuZD9hLmdldExlZ2VuZFdpZHRoKCk6MCxlPWEuaXNMZWdlbmRSaWdodHx8YS5pc0xlZ2VuZEluc2V0PzA6YyxmPWEuaGFzQXJjVHlwZSgpLGc9Yi5heGlzX3JvdGF0ZWR8fGY/MDphLmdldEhvcml6b250YWxBeGlzSGVpZ2h0KFwieFwiKSxoPWIuc3ViY2hhcnRfc2hvdyYmIWY/Yi5zdWJjaGFydF9zaXplX2hlaWdodCtnOjA7YS5jdXJyZW50V2lkdGg9YS5nZXRDdXJyZW50V2lkdGgoKSxhLmN1cnJlbnRIZWlnaHQ9YS5nZXRDdXJyZW50SGVpZ2h0KCksYS5tYXJnaW49Yi5heGlzX3JvdGF0ZWQ/e3RvcDphLmdldEhvcml6b250YWxBeGlzSGVpZ2h0KFwieTJcIikrYS5nZXRDdXJyZW50UGFkZGluZ1RvcCgpLHJpZ2h0OmY/MDphLmdldEN1cnJlbnRQYWRkaW5nUmlnaHQoKSxib3R0b206YS5nZXRIb3Jpem9udGFsQXhpc0hlaWdodChcInlcIikrZSthLmdldEN1cnJlbnRQYWRkaW5nQm90dG9tKCksbGVmdDpoKyhmPzA6YS5nZXRDdXJyZW50UGFkZGluZ0xlZnQoKSl9Ont0b3A6NCthLmdldEN1cnJlbnRQYWRkaW5nVG9wKCkscmlnaHQ6Zj8wOmEuZ2V0Q3VycmVudFBhZGRpbmdSaWdodCgpLGJvdHRvbTpnK2grZSthLmdldEN1cnJlbnRQYWRkaW5nQm90dG9tKCksbGVmdDpmPzA6YS5nZXRDdXJyZW50UGFkZGluZ0xlZnQoKX0sYS5tYXJnaW4yPWIuYXhpc19yb3RhdGVkP3t0b3A6YS5tYXJnaW4udG9wLHJpZ2h0OjAvMCxib3R0b206MjArZSxsZWZ0OmEucm90YXRlZF9wYWRkaW5nX2xlZnR9Ont0b3A6YS5jdXJyZW50SGVpZ2h0LWgtZSxyaWdodDowLzAsYm90dG9tOmcrZSxsZWZ0OmEubWFyZ2luLmxlZnR9LGEubWFyZ2luMz17dG9wOjAscmlnaHQ6MC8wLGJvdHRvbTowLGxlZnQ6MH0sYS51cGRhdGVTaXplRm9yTGVnZW5kJiZhLnVwZGF0ZVNpemVGb3JMZWdlbmQoYyxkKSxhLndpZHRoPWEuY3VycmVudFdpZHRoLWEubWFyZ2luLmxlZnQtYS5tYXJnaW4ucmlnaHQsYS5oZWlnaHQ9YS5jdXJyZW50SGVpZ2h0LWEubWFyZ2luLnRvcC1hLm1hcmdpbi5ib3R0b20sYS53aWR0aDwwJiYoYS53aWR0aD0wKSxhLmhlaWdodDwwJiYoYS5oZWlnaHQ9MCksYS53aWR0aDI9Yi5heGlzX3JvdGF0ZWQ/YS5tYXJnaW4ubGVmdC1hLnJvdGF0ZWRfcGFkZGluZ19sZWZ0LWEucm90YXRlZF9wYWRkaW5nX3JpZ2h0OmEud2lkdGgsYS5oZWlnaHQyPWIuYXhpc19yb3RhdGVkP2EuaGVpZ2h0OmEuY3VycmVudEhlaWdodC1hLm1hcmdpbjIudG9wLWEubWFyZ2luMi5ib3R0b20sYS53aWR0aDI8MCYmKGEud2lkdGgyPTApLGEuaGVpZ2h0MjwwJiYoYS5oZWlnaHQyPTApLGEuYXJjV2lkdGg9YS53aWR0aC0oYS5pc0xlZ2VuZFJpZ2h0P2QrMTA6MCksYS5hcmNIZWlnaHQ9YS5oZWlnaHQtKGEuaXNMZWdlbmRSaWdodD8wOjEwKSxhLmhhc1R5cGUoXCJnYXVnZVwiKSYmKGEuYXJjSGVpZ2h0Kz1hLmhlaWdodC1hLmdldEdhdWdlTGFiZWxIZWlnaHQoKSksYS51cGRhdGVSYWRpdXMmJmEudXBkYXRlUmFkaXVzKCksYS5pc0xlZ2VuZFJpZ2h0JiZmJiYoYS5tYXJnaW4zLmxlZnQ9YS5hcmNXaWR0aC8yKzEuMSphLnJhZGl1c0V4cGFuZGVkKX0saS51cGRhdGVUYXJnZXRzPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7Yi51cGRhdGVUYXJnZXRzRm9yVGV4dChhKSxiLnVwZGF0ZVRhcmdldHNGb3JCYXIoYSksYi51cGRhdGVUYXJnZXRzRm9yTGluZShhKSxiLmhhc0FyY1R5cGUoKSYmYi51cGRhdGVUYXJnZXRzRm9yQXJjJiZiLnVwZGF0ZVRhcmdldHNGb3JBcmMoYSksYi51cGRhdGVUYXJnZXRzRm9yU3ViY2hhcnQmJmIudXBkYXRlVGFyZ2V0c0ZvclN1YmNoYXJ0KGEpLGIuc2hvd1RhcmdldHMoKX0saS5zaG93VGFyZ2V0cz1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5zdmcuc2VsZWN0QWxsKFwiLlwiK2wudGFyZ2V0KS5maWx0ZXIoZnVuY3Rpb24oYil7cmV0dXJuIGEuaXNUYXJnZXRUb1Nob3coYi5pZCl9KS50cmFuc2l0aW9uKCkuZHVyYXRpb24oYS5jb25maWcudHJhbnNpdGlvbl9kdXJhdGlvbikuc3R5bGUoXCJvcGFjaXR5XCIsMSl9LGkucmVkcmF3PWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsZyxoLGksaixrLG0sbixvLHAscSxyLHMsdCx1LHYseCx5LHosQSxCLEMsRCxFLEYsRyxIPXRoaXMsST1ILm1haW4sSj1ILmQzLEs9SC5jb25maWcsTD1ILmdldFNoYXBlSW5kaWNlcyhILmlzQXJlYVR5cGUpLE09SC5nZXRTaGFwZUluZGljZXMoSC5pc0JhclR5cGUpLE49SC5nZXRTaGFwZUluZGljZXMoSC5pc0xpbmVUeXBlKSxPPUguaGFzQXJjVHlwZSgpLFA9SC5maWx0ZXJUYXJnZXRzVG9TaG93KEguZGF0YS50YXJnZXRzKSxRPUgueHYuYmluZChIKTtpZihhPWF8fHt9LGM9dyhhLFwid2l0aFlcIiwhMCksZD13KGEsXCJ3aXRoU3ViY2hhcnRcIiwhMCksZT13KGEsXCJ3aXRoVHJhbnNpdGlvblwiLCEwKSxoPXcoYSxcIndpdGhUcmFuc2Zvcm1cIiwhMSksaT13KGEsXCJ3aXRoVXBkYXRlWERvbWFpblwiLCExKSxqPXcoYSxcIndpdGhVcGRhdGVPcmdYRG9tYWluXCIsITEpLGs9dyhhLFwid2l0aFRyaW1YRG9tYWluXCIsITApLHA9dyhhLFwid2l0aFVwZGF0ZVhBeGlzXCIsaSksbT13KGEsXCJ3aXRoTGVnZW5kXCIsITEpLG49dyhhLFwid2l0aEV2ZW50UmVjdFwiLCEwKSxvPXcoYSxcIndpdGhEaW1lbnNpb25cIiwhMCksZj13KGEsXCJ3aXRoVHJhbnNpdGlvbkZvckV4aXRcIixlKSxnPXcoYSxcIndpdGhUcmFuc2l0aW9uRm9yQXhpc1wiLGUpLHY9ZT9LLnRyYW5zaXRpb25fZHVyYXRpb246MCx4PWY/djowLHk9Zz92OjAsYj1ifHxILmF4aXMuZ2VuZXJhdGVUcmFuc2l0aW9ucyh5KSxtJiZLLmxlZ2VuZF9zaG93P0gudXBkYXRlTGVnZW5kKEgubWFwVG9JZHMoSC5kYXRhLnRhcmdldHMpLGEsYik6byYmSC51cGRhdGVEaW1lbnNpb24oITApLEguaXNDYXRlZ29yaXplZCgpJiYwPT09UC5sZW5ndGgmJkgueC5kb21haW4oWzAsSC5heGVzLnguc2VsZWN0QWxsKFwiLnRpY2tcIikuc2l6ZSgpXSksUC5sZW5ndGg/KEgudXBkYXRlWERvbWFpbihQLGksaixrKSxLLmF4aXNfeF90aWNrX3ZhbHVlc3x8KEI9SC5heGlzLnVwZGF0ZVhBeGlzVGlja1ZhbHVlcyhQKSkpOihILnhBeGlzLnRpY2tWYWx1ZXMoW10pLEguc3ViWEF4aXMudGlja1ZhbHVlcyhbXSkpLEsuem9vbV9yZXNjYWxlJiYhYS5mbG93JiYoRT1ILngub3JnRG9tYWluKCkpLEgueS5kb21haW4oSC5nZXRZRG9tYWluKFAsXCJ5XCIsRSkpLEgueTIuZG9tYWluKEguZ2V0WURvbWFpbihQLFwieTJcIixFKSksIUsuYXhpc195X3RpY2tfdmFsdWVzJiZLLmF4aXNfeV90aWNrX2NvdW50JiZILnlBeGlzLnRpY2tWYWx1ZXMoSC5heGlzLmdlbmVyYXRlVGlja1ZhbHVlcyhILnkuZG9tYWluKCksSy5heGlzX3lfdGlja19jb3VudCkpLCFLLmF4aXNfeTJfdGlja192YWx1ZXMmJksuYXhpc195Ml90aWNrX2NvdW50JiZILnkyQXhpcy50aWNrVmFsdWVzKEguYXhpcy5nZW5lcmF0ZVRpY2tWYWx1ZXMoSC55Mi5kb21haW4oKSxLLmF4aXNfeTJfdGlja19jb3VudCkpLEguYXhpcy5yZWRyYXcoYixPKSxILmF4aXMudXBkYXRlTGFiZWxzKGUpLChpfHxwKSYmUC5sZW5ndGgpaWYoSy5heGlzX3hfdGlja19jdWxsaW5nJiZCKXtmb3IoQz0xO0M8Qi5sZW5ndGg7QysrKWlmKEIubGVuZ3RoL0M8Sy5heGlzX3hfdGlja19jdWxsaW5nX21heCl7RD1DO2JyZWFrfUguc3ZnLnNlbGVjdEFsbChcIi5cIitsLmF4aXNYK1wiIC50aWNrIHRleHRcIikuZWFjaChmdW5jdGlvbihhKXt2YXIgYj1CLmluZGV4T2YoYSk7Yj49MCYmSi5zZWxlY3QodGhpcykuc3R5bGUoXCJkaXNwbGF5XCIsYiVEP1wibm9uZVwiOlwiYmxvY2tcIil9KX1lbHNlIEguc3ZnLnNlbGVjdEFsbChcIi5cIitsLmF4aXNYK1wiIC50aWNrIHRleHRcIikuc3R5bGUoXCJkaXNwbGF5XCIsXCJibG9ja1wiKTtxPUguZ2VuZXJhdGVEcmF3QXJlYT9ILmdlbmVyYXRlRHJhd0FyZWEoTCwhMSk6dm9pZCAwLHI9SC5nZW5lcmF0ZURyYXdCYXI/SC5nZW5lcmF0ZURyYXdCYXIoTSk6dm9pZCAwLHM9SC5nZW5lcmF0ZURyYXdMaW5lP0guZ2VuZXJhdGVEcmF3TGluZShOLCExKTp2b2lkIDAsdD1ILmdlbmVyYXRlWFlGb3JUZXh0KEwsTSxOLCEwKSx1PUguZ2VuZXJhdGVYWUZvclRleHQoTCxNLE4sITEpLGMmJihILnN1YlkuZG9tYWluKEguZ2V0WURvbWFpbihQLFwieVwiKSksSC5zdWJZMi5kb21haW4oSC5nZXRZRG9tYWluKFAsXCJ5MlwiKSkpLEgudG9vbHRpcC5zdHlsZShcImRpc3BsYXlcIixcIm5vbmVcIiksSC51cGRhdGVYZ3JpZEZvY3VzKCksSS5zZWxlY3QoXCJ0ZXh0LlwiK2wudGV4dCtcIi5cIitsLmVtcHR5KS5hdHRyKFwieFwiLEgud2lkdGgvMikuYXR0cihcInlcIixILmhlaWdodC8yKS50ZXh0KEsuZGF0YV9lbXB0eV9sYWJlbF90ZXh0KS50cmFuc2l0aW9uKCkuc3R5bGUoXCJvcGFjaXR5XCIsUC5sZW5ndGg/MDoxKSxILnVwZGF0ZUdyaWQodiksSC51cGRhdGVSZWdpb24odiksSC51cGRhdGVCYXIoeCksSC51cGRhdGVMaW5lKHgpLEgudXBkYXRlQXJlYSh4KSxILnVwZGF0ZUNpcmNsZSgpLEguaGFzRGF0YUxhYmVsKCkmJkgudXBkYXRlVGV4dCh4KSxILnJlZHJhd0FyYyYmSC5yZWRyYXdBcmModix4LGgpLEgucmVkcmF3U3ViY2hhcnQmJkgucmVkcmF3U3ViY2hhcnQoZCxiLHYseCxMLE0sTiksSS5zZWxlY3RBbGwoXCIuXCIrbC5zZWxlY3RlZENpcmNsZXMpLmZpbHRlcihILmlzQmFyVHlwZS5iaW5kKEgpKS5zZWxlY3RBbGwoXCJjaXJjbGVcIikucmVtb3ZlKCksSy5pbnRlcmFjdGlvbl9lbmFibGVkJiYhYS5mbG93JiZuJiYoSC5yZWRyYXdFdmVudFJlY3QoKSxILnVwZGF0ZVpvb20mJkgudXBkYXRlWm9vbSgpKSxILnVwZGF0ZUNpcmNsZVkoKSxGPShILmNvbmZpZy5heGlzX3JvdGF0ZWQ/SC5jaXJjbGVZOkguY2lyY2xlWCkuYmluZChIKSxHPShILmNvbmZpZy5heGlzX3JvdGF0ZWQ/SC5jaXJjbGVYOkguY2lyY2xlWSkuYmluZChIKSxhLmZsb3cmJihBPUguZ2VuZXJhdGVGbG93KHt0YXJnZXRzOlAsZmxvdzphLmZsb3csZHVyYXRpb246YS5mbG93LmR1cmF0aW9uLGRyYXdCYXI6cixkcmF3TGluZTpzLGRyYXdBcmVhOnEsY3g6RixjeTpHLHh2OlEseEZvclRleHQ6dCx5Rm9yVGV4dDp1fSkpLCh2fHxBKSYmSC5pc1RhYlZpc2libGUoKT9KLnRyYW5zaXRpb24oKS5kdXJhdGlvbih2KS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9W107W0gucmVkcmF3QmFyKHIsITApLEgucmVkcmF3TGluZShzLCEwKSxILnJlZHJhd0FyZWEocSwhMCksSC5yZWRyYXdDaXJjbGUoRixHLCEwKSxILnJlZHJhd1RleHQodCx1LGEuZmxvdywhMCksSC5yZWRyYXdSZWdpb24oITApLEgucmVkcmF3R3JpZCghMCldLmZvckVhY2goZnVuY3Rpb24oYSl7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2IucHVzaChhKX0pfSksej1ILmdlbmVyYXRlV2FpdCgpLGIuZm9yRWFjaChmdW5jdGlvbihhKXt6LmFkZChhKX0pfSkuY2FsbCh6LGZ1bmN0aW9uKCl7QSYmQSgpLEsub25yZW5kZXJlZCYmSy5vbnJlbmRlcmVkLmNhbGwoSCl9KTooSC5yZWRyYXdCYXIociksSC5yZWRyYXdMaW5lKHMpLEgucmVkcmF3QXJlYShxKSxILnJlZHJhd0NpcmNsZShGLEcpLEgucmVkcmF3VGV4dCh0LHUsYS5mbG93KSxILnJlZHJhd1JlZ2lvbigpLEgucmVkcmF3R3JpZCgpLEsub25yZW5kZXJlZCYmSy5vbnJlbmRlcmVkLmNhbGwoSCkpLEgubWFwVG9JZHMoSC5kYXRhLnRhcmdldHMpLmZvckVhY2goZnVuY3Rpb24oYSl7SC53aXRob3V0RmFkZUluW2FdPSEwfSl9LGkudXBkYXRlQW5kUmVkcmF3PWZ1bmN0aW9uKGEpe3ZhciBiLGM9dGhpcyxkPWMuY29uZmlnO2E9YXx8e30sYS53aXRoVHJhbnNpdGlvbj13KGEsXCJ3aXRoVHJhbnNpdGlvblwiLCEwKSxhLndpdGhUcmFuc2Zvcm09dyhhLFwid2l0aFRyYW5zZm9ybVwiLCExKSxhLndpdGhMZWdlbmQ9dyhhLFwid2l0aExlZ2VuZFwiLCExKSxhLndpdGhVcGRhdGVYRG9tYWluPSEwLGEud2l0aFVwZGF0ZU9yZ1hEb21haW49ITAsYS53aXRoVHJhbnNpdGlvbkZvckV4aXQ9ITEsYS53aXRoVHJhbnNpdGlvbkZvclRyYW5zZm9ybT13KGEsXCJ3aXRoVHJhbnNpdGlvbkZvclRyYW5zZm9ybVwiLGEud2l0aFRyYW5zaXRpb24pLGMudXBkYXRlU2l6ZXMoKSxhLndpdGhMZWdlbmQmJmQubGVnZW5kX3Nob3d8fChiPWMuYXhpcy5nZW5lcmF0ZVRyYW5zaXRpb25zKGEud2l0aFRyYW5zaXRpb25Gb3JBeGlzP2QudHJhbnNpdGlvbl9kdXJhdGlvbjowKSxjLnVwZGF0ZVNjYWxlcygpLGMudXBkYXRlU3ZnU2l6ZSgpLGMudHJhbnNmb3JtQWxsKGEud2l0aFRyYW5zaXRpb25Gb3JUcmFuc2Zvcm0sYikpLGMucmVkcmF3KGEsYil9LGkucmVkcmF3V2l0aG91dFJlc2NhbGU9ZnVuY3Rpb24oKXt0aGlzLnJlZHJhdyh7d2l0aFk6ITEsd2l0aFN1YmNoYXJ0OiExLHdpdGhFdmVudFJlY3Q6ITEsd2l0aFRyYW5zaXRpb25Gb3JBeGlzOiExfSl9LGkuaXNUaW1lU2VyaWVzPWZ1bmN0aW9uKCl7cmV0dXJuXCJ0aW1lc2VyaWVzXCI9PT10aGlzLmNvbmZpZy5heGlzX3hfdHlwZX0saS5pc0NhdGVnb3JpemVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29uZmlnLmF4aXNfeF90eXBlLmluZGV4T2YoXCJjYXRlZ29yXCIpPj0wfSxpLmlzQ3VzdG9tWD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmNvbmZpZztyZXR1cm4hYS5pc1RpbWVTZXJpZXMoKSYmKGIuZGF0YV94fHx2KGIuZGF0YV94cykpfSxpLmlzVGltZVNlcmllc1k9ZnVuY3Rpb24oKXtyZXR1cm5cInRpbWVzZXJpZXNcIj09PXRoaXMuY29uZmlnLmF4aXNfeV90eXBlfSxpLmdldFRyYW5zbGF0ZT1mdW5jdGlvbihhKXt2YXIgYixjLGQ9dGhpcyxlPWQuY29uZmlnO3JldHVyblwibWFpblwiPT09YT8oYj1zKGQubWFyZ2luLmxlZnQpLGM9cyhkLm1hcmdpbi50b3ApKTpcImNvbnRleHRcIj09PWE/KGI9cyhkLm1hcmdpbjIubGVmdCksYz1zKGQubWFyZ2luMi50b3ApKTpcImxlZ2VuZFwiPT09YT8oYj1kLm1hcmdpbjMubGVmdCxjPWQubWFyZ2luMy50b3ApOlwieFwiPT09YT8oYj0wLGM9ZS5heGlzX3JvdGF0ZWQ/MDpkLmhlaWdodCk6XCJ5XCI9PT1hPyhiPTAsYz1lLmF4aXNfcm90YXRlZD9kLmhlaWdodDowKTpcInkyXCI9PT1hPyhiPWUuYXhpc19yb3RhdGVkPzA6ZC53aWR0aCxjPWUuYXhpc19yb3RhdGVkPzE6MCk6XCJzdWJ4XCI9PT1hPyhiPTAsYz1lLmF4aXNfcm90YXRlZD8wOmQuaGVpZ2h0Mik6XCJhcmNcIj09PWEmJihiPWQuYXJjV2lkdGgvMixjPWQuYXJjSGVpZ2h0LzIpLFwidHJhbnNsYXRlKFwiK2IrXCIsXCIrYytcIilcIn0saS5pbml0aWFsT3BhY2l0eT1mdW5jdGlvbihhKXtyZXR1cm4gbnVsbCE9PWEudmFsdWUmJnRoaXMud2l0aG91dEZhZGVJblthLmlkXT8xOjB9LGkuaW5pdGlhbE9wYWNpdHlGb3JDaXJjbGU9ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGwhPT1hLnZhbHVlJiZ0aGlzLndpdGhvdXRGYWRlSW5bYS5pZF0/dGhpcy5vcGFjaXR5Rm9yQ2lyY2xlKGEpOjB9LGkub3BhY2l0eUZvckNpcmNsZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmNvbmZpZy5wb2ludF9zaG93PzE6MDtyZXR1cm4gbShhLnZhbHVlKT90aGlzLmlzU2NhdHRlclR5cGUoYSk/LjU6YjowfSxpLm9wYWNpdHlGb3JUZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGFzRGF0YUxhYmVsKCk/MTowfSxpLnh4PWZ1bmN0aW9uKGEpe3JldHVybiBhP3RoaXMueChhLngpOm51bGx9LGkueHY9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWEudmFsdWU7cmV0dXJuIGIuaXNUaW1lU2VyaWVzKCk/Yz1iLnBhcnNlRGF0ZShhLnZhbHVlKTpiLmlzQ2F0ZWdvcml6ZWQoKSYmXCJzdHJpbmdcIj09dHlwZW9mIGEudmFsdWUmJihjPWIuY29uZmlnLmF4aXNfeF9jYXRlZ29yaWVzLmluZGV4T2YoYS52YWx1ZSkpLE1hdGguY2VpbChiLngoYykpfSxpLnl2PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1hLmF4aXMmJlwieTJcIj09PWEuYXhpcz9iLnkyOmIueTtyZXR1cm4gTWF0aC5jZWlsKGMoYS52YWx1ZSkpfSxpLnN1Ynh4PWZ1bmN0aW9uKGEpe3JldHVybiBhP3RoaXMuc3ViWChhLngpOm51bGx9LGkudHJhbnNmb3JtTWFpbj1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmPXRoaXM7YiYmYi5heGlzWD9jPWIuYXhpc1g6KGM9Zi5tYWluLnNlbGVjdChcIi5cIitsLmF4aXNYKSxhJiYoYz1jLnRyYW5zaXRpb24oKSkpLGImJmIuYXhpc1k/ZD1iLmF4aXNZOihkPWYubWFpbi5zZWxlY3QoXCIuXCIrbC5heGlzWSksYSYmKGQ9ZC50cmFuc2l0aW9uKCkpKSxiJiZiLmF4aXNZMj9lPWIuYXhpc1kyOihlPWYubWFpbi5zZWxlY3QoXCIuXCIrbC5heGlzWTIpLGEmJihlPWUudHJhbnNpdGlvbigpKSksKGE/Zi5tYWluLnRyYW5zaXRpb24oKTpmLm1haW4pLmF0dHIoXCJ0cmFuc2Zvcm1cIixmLmdldFRyYW5zbGF0ZShcIm1haW5cIikpLGMuYXR0cihcInRyYW5zZm9ybVwiLGYuZ2V0VHJhbnNsYXRlKFwieFwiKSksZC5hdHRyKFwidHJhbnNmb3JtXCIsZi5nZXRUcmFuc2xhdGUoXCJ5XCIpKSxlLmF0dHIoXCJ0cmFuc2Zvcm1cIixmLmdldFRyYW5zbGF0ZShcInkyXCIpKSxmLm1haW4uc2VsZWN0KFwiLlwiK2wuY2hhcnRBcmNzKS5hdHRyKFwidHJhbnNmb3JtXCIsZi5nZXRUcmFuc2xhdGUoXCJhcmNcIikpfSxpLnRyYW5zZm9ybUFsbD1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXM7Yy50cmFuc2Zvcm1NYWluKGEsYiksYy5jb25maWcuc3ViY2hhcnRfc2hvdyYmYy50cmFuc2Zvcm1Db250ZXh0KGEsYiksYy5sZWdlbmQmJmMudHJhbnNmb3JtTGVnZW5kKGEpfSxpLnVwZGF0ZVN2Z1NpemU9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5zdmcuc2VsZWN0KFwiLmMzLWJydXNoIC5iYWNrZ3JvdW5kXCIpO2Euc3ZnLmF0dHIoXCJ3aWR0aFwiLGEuY3VycmVudFdpZHRoKS5hdHRyKFwiaGVpZ2h0XCIsYS5jdXJyZW50SGVpZ2h0KSxhLnN2Zy5zZWxlY3RBbGwoW1wiI1wiK2EuY2xpcElkLFwiI1wiK2EuY2xpcElkRm9yR3JpZF0pLnNlbGVjdChcInJlY3RcIikuYXR0cihcIndpZHRoXCIsYS53aWR0aCkuYXR0cihcImhlaWdodFwiLGEuaGVpZ2h0KSxhLnN2Zy5zZWxlY3QoXCIjXCIrYS5jbGlwSWRGb3JYQXhpcykuc2VsZWN0KFwicmVjdFwiKS5hdHRyKFwieFwiLGEuZ2V0WEF4aXNDbGlwWC5iaW5kKGEpKS5hdHRyKFwieVwiLGEuZ2V0WEF4aXNDbGlwWS5iaW5kKGEpKS5hdHRyKFwid2lkdGhcIixhLmdldFhBeGlzQ2xpcFdpZHRoLmJpbmQoYSkpLmF0dHIoXCJoZWlnaHRcIixhLmdldFhBeGlzQ2xpcEhlaWdodC5iaW5kKGEpKSxhLnN2Zy5zZWxlY3QoXCIjXCIrYS5jbGlwSWRGb3JZQXhpcykuc2VsZWN0KFwicmVjdFwiKS5hdHRyKFwieFwiLGEuZ2V0WUF4aXNDbGlwWC5iaW5kKGEpKS5hdHRyKFwieVwiLGEuZ2V0WUF4aXNDbGlwWS5iaW5kKGEpKS5hdHRyKFwid2lkdGhcIixhLmdldFlBeGlzQ2xpcFdpZHRoLmJpbmQoYSkpLmF0dHIoXCJoZWlnaHRcIixhLmdldFlBeGlzQ2xpcEhlaWdodC5iaW5kKGEpKSxhLnN2Zy5zZWxlY3QoXCIjXCIrYS5jbGlwSWRGb3JTdWJjaGFydCkuc2VsZWN0KFwicmVjdFwiKS5hdHRyKFwid2lkdGhcIixhLndpZHRoKS5hdHRyKFwiaGVpZ2h0XCIsYi5zaXplKCk/Yi5hdHRyKFwiaGVpZ2h0XCIpOjApLGEuc3ZnLnNlbGVjdChcIi5cIitsLnpvb21SZWN0KS5hdHRyKFwid2lkdGhcIixhLndpZHRoKS5hdHRyKFwiaGVpZ2h0XCIsYS5oZWlnaHQpLGEuc2VsZWN0Q2hhcnQuc3R5bGUoXCJtYXgtaGVpZ2h0XCIsYS5jdXJyZW50SGVpZ2h0K1wicHhcIil9LGkudXBkYXRlRGltZW5zaW9uPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7YXx8KGIuY29uZmlnLmF4aXNfcm90YXRlZD8oYi5heGVzLnguY2FsbChiLnhBeGlzKSxiLmF4ZXMuc3VieC5jYWxsKGIuc3ViWEF4aXMpKTooYi5heGVzLnkuY2FsbChiLnlBeGlzKSxiLmF4ZXMueTIuY2FsbChiLnkyQXhpcykpKSxiLnVwZGF0ZVNpemVzKCksYi51cGRhdGVTY2FsZXMoKSxiLnVwZGF0ZVN2Z1NpemUoKSxiLnRyYW5zZm9ybUFsbCghMSl9LGkub2JzZXJ2ZUluc2VydGVkPWZ1bmN0aW9uKGIpe3ZhciBjLGQ9dGhpcztyZXR1cm5cInVuZGVmaW5lZFwiPT10eXBlb2YgTXV0YXRpb25PYnNlcnZlcj92b2lkIGEuY29uc29sZS5lcnJvcihcIk11dGF0aW9uT2JzZXJ2ZXIgbm90IGRlZmluZWQuXCIpOihjPW5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKGUpe2UuZm9yRWFjaChmdW5jdGlvbihlKXtcImNoaWxkTGlzdFwiPT09ZS50eXBlJiZlLnByZXZpb3VzU2libGluZyYmKGMuZGlzY29ubmVjdCgpLGQuaW50ZXJ2YWxGb3JPYnNlcnZlSW5zZXJ0ZWQ9YS5zZXRJbnRlcnZhbChmdW5jdGlvbigpe2Iubm9kZSgpLnBhcmVudE5vZGUmJihhLmNsZWFySW50ZXJ2YWwoZC5pbnRlcnZhbEZvck9ic2VydmVJbnNlcnRlZCksZC51cGRhdGVEaW1lbnNpb24oKSxkLmNvbmZpZy5vbmluaXQuY2FsbChkKSxkLnJlZHJhdyh7d2l0aFRyYW5zZm9ybTohMCx3aXRoVXBkYXRlWERvbWFpbjohMCx3aXRoVXBkYXRlT3JnWERvbWFpbjohMCx3aXRoVHJhbnNpdGlvbjohMSx3aXRoVHJhbnNpdGlvbkZvclRyYW5zZm9ybTohMSx3aXRoTGVnZW5kOiEwfSksYi50cmFuc2l0aW9uKCkuc3R5bGUoXCJvcGFjaXR5XCIsMSkpfSwxMCkpfSl9KSx2b2lkIGMub2JzZXJ2ZShiLm5vZGUoKSx7YXR0cmlidXRlczohMCxjaGlsZExpc3Q6ITAsY2hhcmFjdGVyRGF0YTohMH0pKX0saS5nZW5lcmF0ZVJlc2l6ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXtiLmZvckVhY2goZnVuY3Rpb24oYSl7YSgpfSl9dmFyIGI9W107cmV0dXJuIGEuYWRkPWZ1bmN0aW9uKGEpe2IucHVzaChhKX0sYX0saS5lbmRhbGw9ZnVuY3Rpb24oYSxiKXt2YXIgYz0wO2EuZWFjaChmdW5jdGlvbigpeysrY30pLmVhY2goXCJlbmRcIixmdW5jdGlvbigpey0tY3x8Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0saS5nZW5lcmF0ZVdhaXQ9ZnVuY3Rpb24oKXt2YXIgYT1bXSxiPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXt2YXIgYj0wO2EuZm9yRWFjaChmdW5jdGlvbihhKXtpZihhLmVtcHR5KCkpcmV0dXJuIHZvaWQoYis9MSk7dHJ5e2EudHJhbnNpdGlvbigpfWNhdGNoKGMpe2IrPTF9fSksYj09PWEubGVuZ3RoJiYoY2xlYXJJbnRlcnZhbChkKSxjJiZjKCkpfSwxMCl9O3JldHVybiBiLmFkZD1mdW5jdGlvbihiKXthLnB1c2goYil9LGJ9LGkucGFyc2VEYXRlPWZ1bmN0aW9uKGIpe3ZhciBjLGQ9dGhpcztyZXR1cm4gYiBpbnN0YW5jZW9mIERhdGU/Yz1iOlwic3RyaW5nXCI9PXR5cGVvZiBiP2M9ZC5kYXRhVGltZUZvcm1hdChkLmNvbmZpZy5kYXRhX3hGb3JtYXQpLnBhcnNlKGIpOlwibnVtYmVyXCIhPXR5cGVvZiBiJiZpc05hTihiKXx8KGM9bmV3IERhdGUoK2IpKSwoIWN8fGlzTmFOKCtjKSkmJmEuY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBwYXJzZSB4ICdcIitiK1wiJyB0byBEYXRlIG9iamVjdFwiKSxjfSxpLmlzVGFiVmlzaWJsZT1mdW5jdGlvbigpe3ZhciBhO3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudC5oaWRkZW4/YT1cImhpZGRlblwiOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudC5tb3pIaWRkZW4/YT1cIm1vekhpZGRlblwiOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudC5tc0hpZGRlbj9hPVwibXNIaWRkZW5cIjpcInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQud2Via2l0SGlkZGVuJiYoYT1cIndlYmtpdEhpZGRlblwiKSxkb2N1bWVudFthXT8hMTohMH0saS5nZXREZWZhdWx0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGE9e2JpbmR0bzpcIiNjaGFydFwiLHNpemVfd2lkdGg6dm9pZCAwLHNpemVfaGVpZ2h0OnZvaWQgMCxwYWRkaW5nX2xlZnQ6dm9pZCAwLHBhZGRpbmdfcmlnaHQ6dm9pZCAwLHBhZGRpbmdfdG9wOnZvaWQgMCxwYWRkaW5nX2JvdHRvbTp2b2lkIDAsem9vbV9lbmFibGVkOiExLHpvb21fZXh0ZW50OnZvaWQgMCx6b29tX3ByaXZpbGVnZWQ6ITEsem9vbV9yZXNjYWxlOiExLHpvb21fb256b29tOmZ1bmN0aW9uKCl7fSx6b29tX29uem9vbXN0YXJ0OmZ1bmN0aW9uKCl7fSx6b29tX29uem9vbWVuZDpmdW5jdGlvbigpe30saW50ZXJhY3Rpb25fZW5hYmxlZDohMCxvbm1vdXNlb3ZlcjpmdW5jdGlvbigpe30sb25tb3VzZW91dDpmdW5jdGlvbigpe30sb25yZXNpemU6ZnVuY3Rpb24oKXt9LG9ucmVzaXplZDpmdW5jdGlvbigpe30sb25pbml0OmZ1bmN0aW9uKCl7fSxvbnJlbmRlcmVkOmZ1bmN0aW9uKCl7fSx0cmFuc2l0aW9uX2R1cmF0aW9uOjM1MCxkYXRhX3g6dm9pZCAwLGRhdGFfeHM6e30sZGF0YV94Rm9ybWF0OlwiJVktJW0tJWRcIixkYXRhX3hMb2NhbHRpbWU6ITAsZGF0YV94U29ydDohMCxkYXRhX2lkQ29udmVydGVyOmZ1bmN0aW9uKGEpe3JldHVybiBhfSxkYXRhX25hbWVzOnt9LGRhdGFfY2xhc3Nlczp7fSxkYXRhX2dyb3VwczpbXSxkYXRhX2F4ZXM6e30sZGF0YV90eXBlOnZvaWQgMCxkYXRhX3R5cGVzOnt9LGRhdGFfbGFiZWxzOnt9LGRhdGFfb3JkZXI6XCJkZXNjXCIsZGF0YV9yZWdpb25zOnt9LGRhdGFfY29sb3I6dm9pZCAwLGRhdGFfY29sb3JzOnt9LGRhdGFfaGlkZTohMSxkYXRhX2ZpbHRlcjp2b2lkIDAsZGF0YV9zZWxlY3Rpb25fZW5hYmxlZDohMSxkYXRhX3NlbGVjdGlvbl9ncm91cGVkOiExLGRhdGFfc2VsZWN0aW9uX2lzc2VsZWN0YWJsZTpmdW5jdGlvbigpe3JldHVybiEwfSxkYXRhX3NlbGVjdGlvbl9tdWx0aXBsZTohMCxkYXRhX3NlbGVjdGlvbl9kcmFnZ2FibGU6ITEsZGF0YV9vbmNsaWNrOmZ1bmN0aW9uKCl7fSxkYXRhX29ubW91c2VvdmVyOmZ1bmN0aW9uKCl7fSxkYXRhX29ubW91c2VvdXQ6ZnVuY3Rpb24oKXt9LGRhdGFfb25zZWxlY3RlZDpmdW5jdGlvbigpe30sZGF0YV9vbnVuc2VsZWN0ZWQ6ZnVuY3Rpb24oKXt9LGRhdGFfdXJsOnZvaWQgMCxkYXRhX2pzb246dm9pZCAwLGRhdGFfcm93czp2b2lkIDAsZGF0YV9jb2x1bW5zOnZvaWQgMCxkYXRhX21pbWVUeXBlOnZvaWQgMCxkYXRhX2tleXM6dm9pZCAwLGRhdGFfZW1wdHlfbGFiZWxfdGV4dDpcIlwiLHN1YmNoYXJ0X3Nob3c6ITEsc3ViY2hhcnRfc2l6ZV9oZWlnaHQ6NjAsc3ViY2hhcnRfb25icnVzaDpmdW5jdGlvbigpe30sY29sb3JfcGF0dGVybjpbXSxjb2xvcl90aHJlc2hvbGQ6e30sbGVnZW5kX3Nob3c6ITAsbGVnZW5kX2hpZGU6ITEsbGVnZW5kX3Bvc2l0aW9uOlwiYm90dG9tXCIsbGVnZW5kX2luc2V0X2FuY2hvcjpcInRvcC1sZWZ0XCIsbGVnZW5kX2luc2V0X3g6MTAsbGVnZW5kX2luc2V0X3k6MCxsZWdlbmRfaW5zZXRfc3RlcDp2b2lkIDAsbGVnZW5kX2l0ZW1fb25jbGljazp2b2lkIDAsbGVnZW5kX2l0ZW1fb25tb3VzZW92ZXI6dm9pZCAwLGxlZ2VuZF9pdGVtX29ubW91c2VvdXQ6dm9pZCAwLGxlZ2VuZF9lcXVhbGx5OiExLGF4aXNfcm90YXRlZDohMSxheGlzX3hfc2hvdzohMCxheGlzX3hfdHlwZTpcImluZGV4ZWRcIixheGlzX3hfbG9jYWx0aW1lOiEwLGF4aXNfeF9jYXRlZ29yaWVzOltdLGF4aXNfeF90aWNrX2NlbnRlcmVkOiExLGF4aXNfeF90aWNrX2Zvcm1hdDp2b2lkIDAsYXhpc194X3RpY2tfY3VsbGluZzp7fSxheGlzX3hfdGlja19jdWxsaW5nX21heDoxMCxheGlzX3hfdGlja19jb3VudDp2b2lkIDAsYXhpc194X3RpY2tfZml0OiEwLGF4aXNfeF90aWNrX3ZhbHVlczpudWxsLGF4aXNfeF90aWNrX3JvdGF0ZTowLGF4aXNfeF90aWNrX291dGVyOiEwLGF4aXNfeF90aWNrX211bHRpbGluZTohMCxheGlzX3hfdGlja193aWR0aDpudWxsLGF4aXNfeF9tYXg6dm9pZCAwLGF4aXNfeF9taW46dm9pZCAwLGF4aXNfeF9wYWRkaW5nOnt9LGF4aXNfeF9oZWlnaHQ6dm9pZCAwLGF4aXNfeF9leHRlbnQ6dm9pZCAwLGF4aXNfeF9sYWJlbDp7fSxheGlzX3lfc2hvdzohMCxheGlzX3lfdHlwZTp2b2lkIDAsYXhpc195X21heDp2b2lkIDAsYXhpc195X21pbjp2b2lkIDAsYXhpc195X2ludmVydGVkOiExLGF4aXNfeV9jZW50ZXI6dm9pZCAwLGF4aXNfeV9pbm5lcjp2b2lkIDAsYXhpc195X2xhYmVsOnt9LGF4aXNfeV90aWNrX2Zvcm1hdDp2b2lkIDAsYXhpc195X3RpY2tfb3V0ZXI6ITAsYXhpc195X3RpY2tfdmFsdWVzOm51bGwsYXhpc195X3RpY2tfY291bnQ6dm9pZCAwLGF4aXNfeV90aWNrX3RpbWVfdmFsdWU6dm9pZCAwLGF4aXNfeV90aWNrX3RpbWVfaW50ZXJ2YWw6dm9pZCAwLGF4aXNfeV9wYWRkaW5nOnt9LGF4aXNfeV9kZWZhdWx0OnZvaWQgMCxheGlzX3kyX3Nob3c6ITEsYXhpc195Ml9tYXg6dm9pZCAwLGF4aXNfeTJfbWluOnZvaWQgMCxheGlzX3kyX2ludmVydGVkOiExLGF4aXNfeTJfY2VudGVyOnZvaWQgMCxheGlzX3kyX2lubmVyOnZvaWQgMCxheGlzX3kyX2xhYmVsOnt9LGF4aXNfeTJfdGlja19mb3JtYXQ6dm9pZCAwLGF4aXNfeTJfdGlja19vdXRlcjohMCxheGlzX3kyX3RpY2tfdmFsdWVzOm51bGwsYXhpc195Ml90aWNrX2NvdW50OnZvaWQgMCxheGlzX3kyX3BhZGRpbmc6e30sYXhpc195Ml9kZWZhdWx0OnZvaWQgMCxncmlkX3hfc2hvdzohMSxncmlkX3hfdHlwZTpcInRpY2tcIixncmlkX3hfbGluZXM6W10sZ3JpZF95X3Nob3c6ITEsZ3JpZF95X2xpbmVzOltdLGdyaWRfeV90aWNrczoxMCxncmlkX2ZvY3VzX3Nob3c6ITAsZ3JpZF9saW5lc19mcm9udDohMCxwb2ludF9zaG93OiEwLHBvaW50X3I6Mi41LHBvaW50X2ZvY3VzX2V4cGFuZF9lbmFibGVkOiEwLHBvaW50X2ZvY3VzX2V4cGFuZF9yOnZvaWQgMCxwb2ludF9zZWxlY3Rfcjp2b2lkIDAsbGluZV9jb25uZWN0TnVsbDohMSxsaW5lX3N0ZXBfdHlwZTpcInN0ZXBcIixiYXJfd2lkdGg6dm9pZCAwLGJhcl93aWR0aF9yYXRpbzouNixiYXJfd2lkdGhfbWF4OnZvaWQgMCxiYXJfemVyb2Jhc2VkOiEwLGFyZWFfemVyb2Jhc2VkOiEwLHBpZV9sYWJlbF9zaG93OiEwLHBpZV9sYWJlbF9mb3JtYXQ6dm9pZCAwLHBpZV9sYWJlbF90aHJlc2hvbGQ6LjA1LHBpZV9leHBhbmQ6ITAsZ2F1Z2VfbGFiZWxfc2hvdzohMCxnYXVnZV9sYWJlbF9mb3JtYXQ6dm9pZCAwLGdhdWdlX2V4cGFuZDohMCxnYXVnZV9taW46MCxnYXVnZV9tYXg6MTAwLGdhdWdlX3VuaXRzOnZvaWQgMCxnYXVnZV93aWR0aDp2b2lkIDAsZG9udXRfbGFiZWxfc2hvdzohMCxkb251dF9sYWJlbF9mb3JtYXQ6dm9pZCAwLGRvbnV0X2xhYmVsX3RocmVzaG9sZDouMDUsZG9udXRfd2lkdGg6dm9pZCAwLGRvbnV0X2V4cGFuZDohMCxkb251dF90aXRsZTpcIlwiLHJlZ2lvbnM6W10sdG9vbHRpcF9zaG93OiEwLHRvb2x0aXBfZ3JvdXBlZDohMCx0b29sdGlwX2Zvcm1hdF90aXRsZTp2b2lkIDAsdG9vbHRpcF9mb3JtYXRfbmFtZTp2b2lkIDAsdG9vbHRpcF9mb3JtYXRfdmFsdWU6dm9pZCAwLHRvb2x0aXBfcG9zaXRpb246dm9pZCAwLHRvb2x0aXBfY29udGVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHRoaXMuZ2V0VG9vbHRpcENvbnRlbnQ/dGhpcy5nZXRUb29sdGlwQ29udGVudChhLGIsYyxkKTpcIlwifSx0b29sdGlwX2luaXRfc2hvdzohMSx0b29sdGlwX2luaXRfeDowLHRvb2x0aXBfaW5pdF9wb3NpdGlvbjp7dG9wOlwiMHB4XCIsbGVmdDpcIjUwcHhcIn19O3JldHVybiBPYmplY3Qua2V5cyh0aGlzLmFkZGl0aW9uYWxDb25maWcpLmZvckVhY2goZnVuY3Rpb24oYil7YVtiXT10aGlzLmFkZGl0aW9uYWxDb25maWdbYl19LHRoaXMpLGF9LGkuYWRkaXRpb25hbENvbmZpZz17fSxpLmxvYWRDb25maWc9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe3ZhciBhPWQuc2hpZnQoKTtyZXR1cm4gYSYmYyYmXCJvYmplY3RcIj09dHlwZW9mIGMmJmEgaW4gYz8oYz1jW2FdLGIoKSk6YT92b2lkIDA6Y312YXIgYyxkLGUsZj10aGlzLmNvbmZpZztPYmplY3Qua2V5cyhmKS5mb3JFYWNoKGZ1bmN0aW9uKGcpe2M9YSxkPWcuc3BsaXQoXCJfXCIpLGU9YigpLHEoZSkmJihmW2ddPWUpfSl9LGkuZ2V0U2NhbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybihjP3RoaXMuZDMudGltZS5zY2FsZSgpOnRoaXMuZDMuc2NhbGUubGluZWFyKCkpLnJhbmdlKFthLGJdKX0saS5nZXRYPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGY9dGhpcyxnPWYuZ2V0U2NhbGUoYSxiLGYuaXNUaW1lU2VyaWVzKCkpLGg9Yz9nLmRvbWFpbihjKTpnO2YuaXNDYXRlZ29yaXplZCgpPyhkPWR8fGZ1bmN0aW9uKCl7cmV0dXJuIDB9LGc9ZnVuY3Rpb24oYSxiKXt2YXIgYz1oKGEpK2QoYSk7cmV0dXJuIGI/YzpNYXRoLmNlaWwoYyl9KTpnPWZ1bmN0aW9uKGEsYil7dmFyIGM9aChhKTtyZXR1cm4gYj9jOk1hdGguY2VpbChjKX07Zm9yKGUgaW4gaClnW2VdPWhbZV07cmV0dXJuIGcub3JnRG9tYWluPWZ1bmN0aW9uKCl7cmV0dXJuIGguZG9tYWluKCl9LGYuaXNDYXRlZ29yaXplZCgpJiYoZy5kb21haW49ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGguZG9tYWluKGEpLGcpOihhPXRoaXMub3JnRG9tYWluKCksW2FbMF0sYVsxXSsxXSl9KSxnfSxpLmdldFk9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuZ2V0U2NhbGUoYSxiLHRoaXMuaXNUaW1lU2VyaWVzWSgpKTtyZXR1cm4gYyYmZC5kb21haW4oYyksZH0saS5nZXRZU2NhbGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ5MlwiPT09dGhpcy5heGlzLmdldElkKGEpP3RoaXMueTI6dGhpcy55fSxpLmdldFN1YllTY2FsZT1mdW5jdGlvbihhKXtyZXR1cm5cInkyXCI9PT10aGlzLmF4aXMuZ2V0SWQoYSk/dGhpcy5zdWJZMjp0aGlzLnN1Yll9LGkudXBkYXRlU2NhbGVzPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnLGM9IWEueDthLnhNaW49Yi5heGlzX3JvdGF0ZWQ/MTowLGEueE1heD1iLmF4aXNfcm90YXRlZD9hLmhlaWdodDphLndpZHRoLGEueU1pbj1iLmF4aXNfcm90YXRlZD8wOmEuaGVpZ2h0LGEueU1heD1iLmF4aXNfcm90YXRlZD9hLndpZHRoOjEsYS5zdWJYTWluPWEueE1pbixhLnN1YlhNYXg9YS54TWF4LGEuc3ViWU1pbj1iLmF4aXNfcm90YXRlZD8wOmEuaGVpZ2h0MixhLnN1YllNYXg9Yi5heGlzX3JvdGF0ZWQ/YS53aWR0aDI6MSxhLng9YS5nZXRYKGEueE1pbixhLnhNYXgsYz92b2lkIDA6YS54Lm9yZ0RvbWFpbigpLGZ1bmN0aW9uKCl7cmV0dXJuIGEueEF4aXMudGlja09mZnNldCgpfSksYS55PWEuZ2V0WShhLnlNaW4sYS55TWF4LGM/Yi5heGlzX3lfZGVmYXVsdDphLnkuZG9tYWluKCkpLGEueTI9YS5nZXRZKGEueU1pbixhLnlNYXgsYz9iLmF4aXNfeTJfZGVmYXVsdDphLnkyLmRvbWFpbigpKSxhLnN1Ylg9YS5nZXRYKGEueE1pbixhLnhNYXgsYS5vcmdYRG9tYWluLGZ1bmN0aW9uKGIpe3JldHVybiBiJTE/MDphLnN1YlhBeGlzLnRpY2tPZmZzZXQoKX0pLGEuc3ViWT1hLmdldFkoYS5zdWJZTWluLGEuc3ViWU1heCxjP2IuYXhpc195X2RlZmF1bHQ6YS5zdWJZLmRvbWFpbigpKSxhLnN1YlkyPWEuZ2V0WShhLnN1YllNaW4sYS5zdWJZTWF4LGM/Yi5heGlzX3kyX2RlZmF1bHQ6YS5zdWJZMi5kb21haW4oKSksYS54QXhpc1RpY2tGb3JtYXQ9YS5heGlzLmdldFhBeGlzVGlja0Zvcm1hdCgpLGEueEF4aXNUaWNrVmFsdWVzPWEuYXhpcy5nZXRYQXhpc1RpY2tWYWx1ZXMoKSxhLnlBeGlzVGlja1ZhbHVlcz1hLmF4aXMuZ2V0WUF4aXNUaWNrVmFsdWVzKCksYS55MkF4aXNUaWNrVmFsdWVzPWEuYXhpcy5nZXRZMkF4aXNUaWNrVmFsdWVzKCksYS54QXhpcz1hLmF4aXMuZ2V0WEF4aXMoYS54LGEueE9yaWVudCxhLnhBeGlzVGlja0Zvcm1hdCxhLnhBeGlzVGlja1ZhbHVlcyxiLmF4aXNfeF90aWNrX291dGVyKSxhLnN1YlhBeGlzPWEuYXhpcy5nZXRYQXhpcyhhLnN1YlgsYS5zdWJYT3JpZW50LGEueEF4aXNUaWNrRm9ybWF0LGEueEF4aXNUaWNrVmFsdWVzLGIuYXhpc194X3RpY2tfb3V0ZXIpLGEueUF4aXM9YS5heGlzLmdldFlBeGlzKGEueSxhLnlPcmllbnQsYi5heGlzX3lfdGlja19mb3JtYXQsYS55QXhpc1RpY2tWYWx1ZXMsYi5heGlzX3lfdGlja19vdXRlciksYS55MkF4aXM9YS5heGlzLmdldFlBeGlzKGEueTIsYS55Mk9yaWVudCxiLmF4aXNfeTJfdGlja19mb3JtYXQsYS55MkF4aXNUaWNrVmFsdWVzLGIuYXhpc195Ml90aWNrX291dGVyKSxjfHwoYS5icnVzaCYmYS5icnVzaC5zY2FsZShhLnN1YlgpLGIuem9vbV9lbmFibGVkJiZhLnpvb20uc2NhbGUoYS54KSksYS51cGRhdGVBcmMmJmEudXBkYXRlQXJjKCl9LGkuZ2V0WURvbWFpbk1pbj1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaD10aGlzLGk9aC5jb25maWcsaj1oLm1hcFRvSWRzKGEpLGs9aC5nZXRWYWx1ZXNBc0lkS2V5ZWQoYSk7aWYoaS5kYXRhX2dyb3Vwcy5sZW5ndGg+MClmb3IoZz1oLmhhc05lZ2F0aXZlVmFsdWVJblRhcmdldHMoYSksYj0wO2I8aS5kYXRhX2dyb3Vwcy5sZW5ndGg7YisrKWlmKGU9aS5kYXRhX2dyb3Vwc1tiXS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIGouaW5kZXhPZihhKT49MH0pLDAhPT1lLmxlbmd0aClmb3IoZD1lWzBdLGcmJmtbZF0mJmtbZF0uZm9yRWFjaChmdW5jdGlvbihhLGIpe2tbZF1bYl09MD5hP2E6MH0pLGM9MTtjPGUubGVuZ3RoO2MrKylmPWVbY10sa1tmXSYma1tmXS5mb3JFYWNoKGZ1bmN0aW9uKGEsYil7aC5heGlzLmdldElkKGYpIT09aC5heGlzLmdldElkKGQpfHwha1tkXXx8ZyYmK2E+MHx8KGtbZF1bYl0rPSthKX0pO3JldHVybiBoLmQzLm1pbihPYmplY3Qua2V5cyhrKS5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIGguZDMubWluKGtbYV0pfSkpfSxpLmdldFlEb21haW5NYXg9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGg9dGhpcyxpPWguY29uZmlnLGo9aC5tYXBUb0lkcyhhKSxrPWguZ2V0VmFsdWVzQXNJZEtleWVkKGEpO2lmKGkuZGF0YV9ncm91cHMubGVuZ3RoPjApZm9yKGc9aC5oYXNQb3NpdGl2ZVZhbHVlSW5UYXJnZXRzKGEpLGI9MDtiPGkuZGF0YV9ncm91cHMubGVuZ3RoO2IrKylpZihlPWkuZGF0YV9ncm91cHNbYl0uZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBqLmluZGV4T2YoYSk+PTB9KSwwIT09ZS5sZW5ndGgpZm9yKGQ9ZVswXSxnJiZrW2RdJiZrW2RdLmZvckVhY2goZnVuY3Rpb24oYSxiKXtrW2RdW2JdPWE+MD9hOjB9KSxjPTE7YzxlLmxlbmd0aDtjKyspZj1lW2NdLGtbZl0mJmtbZl0uZm9yRWFjaChmdW5jdGlvbihhLGIpe2guYXhpcy5nZXRJZChmKSE9PWguYXhpcy5nZXRJZChkKXx8IWtbZF18fGcmJjA+K2F8fChrW2RdW2JdKz0rYSl9KTtyZXR1cm4gaC5kMy5tYXgoT2JqZWN0LmtleXMoaykubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBoLmQzLm1heChrW2FdKX0pKX0saS5nZXRZRG9tYWluPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGYsZyxoLGksaixrLGwsbixvLHA9dGhpcyxxPXAuY29uZmlnLHI9YS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIHAuYXhpcy5nZXRJZChhLmlkKT09PWJ9KSxzPWM/cC5maWx0ZXJCeVhEb21haW4ocixjKTpyLHU9XCJ5MlwiPT09Yj9xLmF4aXNfeTJfbWluOnEuYXhpc195X21pbix3PVwieTJcIj09PWI/cS5heGlzX3kyX21heDpxLmF4aXNfeV9tYXgseD1wLmdldFlEb21haW5NaW4ocykseT1wLmdldFlEb21haW5NYXgocyksej1cInkyXCI9PT1iP3EuYXhpc195Ml9jZW50ZXI6cS5heGlzX3lfY2VudGVyLEE9cC5oYXNUeXBlKFwiYmFyXCIscykmJnEuYmFyX3plcm9iYXNlZHx8cC5oYXNUeXBlKFwiYXJlYVwiLHMpJiZxLmFyZWFfemVyb2Jhc2VkLEI9XCJ5MlwiPT09Yj9xLmF4aXNfeTJfaW52ZXJ0ZWQ6cS5heGlzX3lfaW52ZXJ0ZWQsQz1wLmhhc0RhdGFMYWJlbCgpJiZxLmF4aXNfcm90YXRlZCxEPXAuaGFzRGF0YUxhYmVsKCkmJiFxLmF4aXNfcm90YXRlZDtyZXR1cm4geD1tKHUpP3U6bSh3KT93Png/eDp3LTEwOngseT1tKHcpP3c6bSh1KT95PnU/eTp1KzEwOnksMD09PXMubGVuZ3RoP1wieTJcIj09PWI/cC55Mi5kb21haW4oKTpwLnkuZG9tYWluKCk6KGlzTmFOKHgpJiYoeD0wKSxpc05hTih5KSYmKHk9eCkseD09PXkmJigwPng/eT0wOng9MCksbj14Pj0wJiZ5Pj0wLG89MD49eCYmMD49eSwobSh1KSYmbnx8bSh3KSYmbykmJihBPSExKSxBJiYobiYmKHg9MCksbyYmKHk9MCkpLGU9TWF0aC5hYnMoeS14KSxmPWc9aD0uMSplLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB6JiYoaT1NYXRoLm1heChNYXRoLmFicyh4KSxNYXRoLmFicyh5KSkseT16K2kseD16LWkpLEM/KGo9cC5nZXREYXRhTGFiZWxMZW5ndGgoeCx5LFwid2lkdGhcIiksaz10KHAueS5yYW5nZSgpKSxsPVtqWzBdL2ssalsxXS9rXSxnKz1lKihsWzFdLygxLWxbMF0tbFsxXSkpLGgrPWUqKGxbMF0vKDEtbFswXS1sWzFdKSkpOkQmJihqPXAuZ2V0RGF0YUxhYmVsTGVuZ3RoKHgseSxcImhlaWdodFwiKSxnKz1wLmF4aXMuY29udmVydFBpeGVsc1RvQXhpc1BhZGRpbmcoalsxXSxlKSxoKz1wLmF4aXMuY29udmVydFBpeGVsc1RvQXhpc1BhZGRpbmcoalswXSxlKSksXCJ5XCI9PT1iJiZ2KHEuYXhpc195X3BhZGRpbmcpJiYoZz1wLmF4aXMuZ2V0UGFkZGluZyhxLmF4aXNfeV9wYWRkaW5nLFwidG9wXCIsZyxlKSxoPXAuYXhpcy5nZXRQYWRkaW5nKHEuYXhpc195X3BhZGRpbmcsXCJib3R0b21cIixoLGUpKSxcInkyXCI9PT1iJiZ2KHEuYXhpc195Ml9wYWRkaW5nKSYmKGc9cC5heGlzLmdldFBhZGRpbmcocS5heGlzX3kyX3BhZGRpbmcsXCJ0b3BcIixnLGUpLGg9cC5heGlzLmdldFBhZGRpbmcocS5heGlzX3kyX3BhZGRpbmcsXCJib3R0b21cIixoLGUpKSxBJiYobiYmKGg9eCksbyYmKGc9LXkpKSxkPVt4LWgseStnXSxCP2QucmV2ZXJzZSgpOmQpfSxpLmdldFhEb21haW5NaW49ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnO3JldHVybiBxKGMuYXhpc194X21pbik/Yi5pc1RpbWVTZXJpZXMoKT90aGlzLnBhcnNlRGF0ZShjLmF4aXNfeF9taW4pOmMuYXhpc194X21pbjpiLmQzLm1pbihhLGZ1bmN0aW9uKGEpe3JldHVybiBiLmQzLm1pbihhLnZhbHVlcyxmdW5jdGlvbihhKXtyZXR1cm4gYS54fSl9KX0saS5nZXRYRG9tYWluTWF4PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmNvbmZpZztyZXR1cm4gcShjLmF4aXNfeF9tYXgpP2IuaXNUaW1lU2VyaWVzKCk/dGhpcy5wYXJzZURhdGUoYy5heGlzX3hfbWF4KTpjLmF4aXNfeF9tYXg6Yi5kMy5tYXgoYSxmdW5jdGlvbihhKXtyZXR1cm4gYi5kMy5tYXgoYS52YWx1ZXMsZnVuY3Rpb24oYSl7cmV0dXJuIGEueH0pfSl9LGkuZ2V0WERvbWFpblBhZGRpbmc9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZj10aGlzLGc9Zi5jb25maWcsaD1hWzFdLWFbMF07cmV0dXJuIGYuaXNDYXRlZ29yaXplZCgpP2M9MDpmLmhhc1R5cGUoXCJiYXJcIik/KGI9Zi5nZXRNYXhEYXRhQ291bnQoKSxjPWI+MT9oLyhiLTEpLzI6LjUpOmM9LjAxKmgsXCJvYmplY3RcIj09dHlwZW9mIGcuYXhpc194X3BhZGRpbmcmJnYoZy5heGlzX3hfcGFkZGluZyk/KGQ9bShnLmF4aXNfeF9wYWRkaW5nLmxlZnQpP2cuYXhpc194X3BhZGRpbmcubGVmdDpjLGU9bShnLmF4aXNfeF9wYWRkaW5nLnJpZ2h0KT9nLmF4aXNfeF9wYWRkaW5nLnJpZ2h0OmMpOmQ9ZT1cIm51bWJlclwiPT10eXBlb2YgZy5heGlzX3hfcGFkZGluZz9nLmF4aXNfeF9wYWRkaW5nOmMse2xlZnQ6ZCxyaWdodDplfX0saS5nZXRYRG9tYWluPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1bYi5nZXRYRG9tYWluTWluKGEpLGIuZ2V0WERvbWFpbk1heChhKV0sZD1jWzBdLGU9Y1sxXSxmPWIuZ2V0WERvbWFpblBhZGRpbmcoYyksZz0wLGg9MDtcbnJldHVybiBkLWUhPT0wfHxiLmlzQ2F0ZWdvcml6ZWQoKXx8KGIuaXNUaW1lU2VyaWVzKCk/KGQ9bmV3IERhdGUoLjUqZC5nZXRUaW1lKCkpLGU9bmV3IERhdGUoMS41KmUuZ2V0VGltZSgpKSk6KGQ9MD09PWQ/MTouNSpkLGU9MD09PWU/LTE6MS41KmUpKSwoZHx8MD09PWQpJiYoZz1iLmlzVGltZVNlcmllcygpP25ldyBEYXRlKGQuZ2V0VGltZSgpLWYubGVmdCk6ZC1mLmxlZnQpLChlfHwwPT09ZSkmJihoPWIuaXNUaW1lU2VyaWVzKCk/bmV3IERhdGUoZS5nZXRUaW1lKCkrZi5yaWdodCk6ZStmLnJpZ2h0KSxbZyxoXX0saS51cGRhdGVYRG9tYWluPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9dGhpcyxnPWYuY29uZmlnO3JldHVybiBjJiYoZi54LmRvbWFpbihlP2U6Zi5kMy5leHRlbnQoZi5nZXRYRG9tYWluKGEpKSksZi5vcmdYRG9tYWluPWYueC5kb21haW4oKSxnLnpvb21fZW5hYmxlZCYmZi56b29tLnNjYWxlKGYueCkudXBkYXRlU2NhbGVFeHRlbnQoKSxmLnN1YlguZG9tYWluKGYueC5kb21haW4oKSksZi5icnVzaCYmZi5icnVzaC5zY2FsZShmLnN1YlgpKSxiJiYoZi54LmRvbWFpbihlP2U6IWYuYnJ1c2h8fGYuYnJ1c2guZW1wdHkoKT9mLm9yZ1hEb21haW46Zi5icnVzaC5leHRlbnQoKSksZy56b29tX2VuYWJsZWQmJmYuem9vbS5zY2FsZShmLngpLnVwZGF0ZVNjYWxlRXh0ZW50KCkpLGQmJmYueC5kb21haW4oZi50cmltWERvbWFpbihmLngub3JnRG9tYWluKCkpKSxmLnguZG9tYWluKCl9LGkudHJpbVhEb21haW49ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztyZXR1cm4gYVswXTw9Yi5vcmdYRG9tYWluWzBdJiYoYVsxXT0rYVsxXSsoYi5vcmdYRG9tYWluWzBdLWFbMF0pLGFbMF09Yi5vcmdYRG9tYWluWzBdKSxiLm9yZ1hEb21haW5bMV08PWFbMV0mJihhWzBdPSthWzBdLShhWzFdLWIub3JnWERvbWFpblsxXSksYVsxXT1iLm9yZ1hEb21haW5bMV0pLGF9LGkuaXNYPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmNvbmZpZztyZXR1cm4gYy5kYXRhX3gmJmE9PT1jLmRhdGFfeHx8dihjLmRhdGFfeHMpJiZ4KGMuZGF0YV94cyxhKX0saS5pc05vdFg9ZnVuY3Rpb24oYSl7cmV0dXJuIXRoaXMuaXNYKGEpfSxpLmdldFhLZXk9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnO3JldHVybiBjLmRhdGFfeD9jLmRhdGFfeDp2KGMuZGF0YV94cyk/Yy5kYXRhX3hzW2FdOm51bGx9LGkuZ2V0WFZhbHVlc09mWEtleT1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9dGhpcyxlPWImJnYoYik/ZC5tYXBUb0lkcyhiKTpbXTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2QuZ2V0WEtleShiKT09PWEmJihjPWQuZGF0YS54c1tiXSl9KSxjfSxpLmdldEluZGV4QnlYPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmZpbHRlckJ5WChiLmRhdGEudGFyZ2V0cyxhKTtyZXR1cm4gYy5sZW5ndGg/Y1swXS5pbmRleDpudWxsfSxpLmdldFhWYWx1ZT1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXM7cmV0dXJuIGEgaW4gYy5kYXRhLnhzJiZjLmRhdGEueHNbYV0mJm0oYy5kYXRhLnhzW2FdW2JdKT9jLmRhdGEueHNbYV1bYl06Yn0saS5nZXRPdGhlclRhcmdldFhzPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPU9iamVjdC5rZXlzKGEuZGF0YS54cyk7cmV0dXJuIGIubGVuZ3RoP2EuZGF0YS54c1tiWzBdXTpudWxsfSxpLmdldE90aGVyVGFyZ2V0WD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmdldE90aGVyVGFyZ2V0WHMoKTtyZXR1cm4gYiYmYTxiLmxlbmd0aD9iW2FdOm51bGx9LGkuYWRkWHM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztPYmplY3Qua2V5cyhhKS5mb3JFYWNoKGZ1bmN0aW9uKGMpe2IuY29uZmlnLmRhdGFfeHNbY109YVtjXX0pfSxpLmhhc011bHRpcGxlWD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5kMy5zZXQoT2JqZWN0LmtleXMoYSkubWFwKGZ1bmN0aW9uKGIpe3JldHVybiBhW2JdfSkpLnNpemUoKT4xfSxpLmlzTXVsdGlwbGVYPWZ1bmN0aW9uKCl7cmV0dXJuIHYodGhpcy5jb25maWcuZGF0YV94cyl8fCF0aGlzLmNvbmZpZy5kYXRhX3hTb3J0fHx0aGlzLmhhc1R5cGUoXCJzY2F0dGVyXCIpfSxpLmFkZE5hbWU9ZnVuY3Rpb24oYSl7dmFyIGIsYz10aGlzO3JldHVybiBhJiYoYj1jLmNvbmZpZy5kYXRhX25hbWVzW2EuaWRdLGEubmFtZT1iP2I6YS5pZCksYX0saS5nZXRWYWx1ZU9uSW5kZXg9ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gYS5pbmRleD09PWJ9KTtyZXR1cm4gYy5sZW5ndGg/Y1swXTpudWxsfSxpLnVwZGF0ZVRhcmdldFg9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLnZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGQsZSl7ZC54PWMuZ2VuZXJhdGVUYXJnZXRYKGJbZV0sYS5pZCxlKX0pLGMuZGF0YS54c1thLmlkXT1ifSl9LGkudXBkYXRlVGFyZ2V0WHM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO2EuZm9yRWFjaChmdW5jdGlvbihhKXtiW2EuaWRdJiZjLnVwZGF0ZVRhcmdldFgoW2FdLGJbYS5pZF0pfSl9LGkuZ2VuZXJhdGVUYXJnZXRYPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlPXRoaXM7cmV0dXJuIGQ9ZS5pc1RpbWVTZXJpZXMoKT9lLnBhcnNlRGF0ZShhP2E6ZS5nZXRYVmFsdWUoYixjKSk6ZS5pc0N1c3RvbVgoKSYmIWUuaXNDYXRlZ29yaXplZCgpP20oYSk/K2E6ZS5nZXRYVmFsdWUoYixjKTpjfSxpLmNsb25lVGFyZ2V0PWZ1bmN0aW9uKGEpe3JldHVybntpZDphLmlkLGlkX29yZzphLmlkX29yZyx2YWx1ZXM6YS52YWx1ZXMubWFwKGZ1bmN0aW9uKGEpe3JldHVybnt4OmEueCx2YWx1ZTphLnZhbHVlLGlkOmEuaWR9fSl9fSxpLnVwZGF0ZVhzPWZ1bmN0aW9uKCl7dmFyIGE9dGhpczthLmRhdGEudGFyZ2V0cy5sZW5ndGgmJihhLnhzPVtdLGEuZGF0YS50YXJnZXRzWzBdLnZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGIpe2EueHNbYi5pbmRleF09Yi54fSkpfSxpLmdldFByZXZYPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMueHNbYS0xXTtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgYj9iOm51bGx9LGkuZ2V0TmV4dFg9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy54c1thKzFdO3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBiP2I6bnVsbH0saS5nZXRNYXhEYXRhQ291bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiBhLmQzLm1heChhLmRhdGEudGFyZ2V0cyxmdW5jdGlvbihhKXtyZXR1cm4gYS52YWx1ZXMubGVuZ3RofSl9LGkuZ2V0TWF4RGF0YUNvdW50VGFyZ2V0PWZ1bmN0aW9uKGEpe3ZhciBiLGM9YS5sZW5ndGgsZD0wO3JldHVybiBjPjE/YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EudmFsdWVzLmxlbmd0aD5kJiYoYj1hLGQ9YS52YWx1ZXMubGVuZ3RoKX0pOmI9Yz9hWzBdOm51bGwsYn0saS5nZXRFZGdlWD1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBhLmxlbmd0aD9bYi5kMy5taW4oYSxmdW5jdGlvbihhKXtyZXR1cm4gYS52YWx1ZXNbMF0ueH0pLGIuZDMubWF4KGEsZnVuY3Rpb24oYSl7cmV0dXJuIGEudmFsdWVzW2EudmFsdWVzLmxlbmd0aC0xXS54fSldOlswLDBdfSxpLm1hcFRvSWRzPWZ1bmN0aW9uKGEpe3JldHVybiBhLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYS5pZH0pfSxpLm1hcFRvVGFyZ2V0SWRzPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIGE/byhhKT9bYV06YTpiLm1hcFRvSWRzKGIuZGF0YS50YXJnZXRzKX0saS5oYXNUYXJnZXQ9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXRoaXMubWFwVG9JZHMoYSk7Zm9yKGM9MDtjPGQubGVuZ3RoO2MrKylpZihkW2NdPT09YilyZXR1cm4hMDtyZXR1cm4hMX0saS5pc1RhcmdldFRvU2hvdz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5oaWRkZW5UYXJnZXRJZHMuaW5kZXhPZihhKTwwfSxpLmlzTGVnZW5kVG9TaG93PWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmhpZGRlbkxlZ2VuZElkcy5pbmRleE9mKGEpPDB9LGkuZmlsdGVyVGFyZ2V0c1RvU2hvdz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBhLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gYi5pc1RhcmdldFRvU2hvdyhhLmlkKX0pfSxpLm1hcFRhcmdldHNUb1VuaXF1ZVhzPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmQzLnNldChiLmQzLm1lcmdlKGEubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBhLnZhbHVlcy5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuK2EueH0pfSkpKS52YWx1ZXMoKTtyZXR1cm4gYy5tYXAoYi5pc1RpbWVTZXJpZXMoKT9mdW5jdGlvbihhKXtyZXR1cm4gbmV3IERhdGUoK2EpfTpmdW5jdGlvbihhKXtyZXR1cm4rYX0pfSxpLmFkZEhpZGRlblRhcmdldElkcz1mdW5jdGlvbihhKXt0aGlzLmhpZGRlblRhcmdldElkcz10aGlzLmhpZGRlblRhcmdldElkcy5jb25jYXQoYSl9LGkucmVtb3ZlSGlkZGVuVGFyZ2V0SWRzPWZ1bmN0aW9uKGEpe3RoaXMuaGlkZGVuVGFyZ2V0SWRzPXRoaXMuaGlkZGVuVGFyZ2V0SWRzLmZpbHRlcihmdW5jdGlvbihiKXtyZXR1cm4gYS5pbmRleE9mKGIpPDB9KX0saS5hZGRIaWRkZW5MZWdlbmRJZHM9ZnVuY3Rpb24oYSl7dGhpcy5oaWRkZW5MZWdlbmRJZHM9dGhpcy5oaWRkZW5MZWdlbmRJZHMuY29uY2F0KGEpfSxpLnJlbW92ZUhpZGRlbkxlZ2VuZElkcz1mdW5jdGlvbihhKXt0aGlzLmhpZGRlbkxlZ2VuZElkcz10aGlzLmhpZGRlbkxlZ2VuZElkcy5maWx0ZXIoZnVuY3Rpb24oYil7cmV0dXJuIGEuaW5kZXhPZihiKTwwfSl9LGkuZ2V0VmFsdWVzQXNJZEtleWVkPWZ1bmN0aW9uKGEpe3ZhciBiPXt9O3JldHVybiBhLmZvckVhY2goZnVuY3Rpb24oYSl7YlthLmlkXT1bXSxhLnZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGMpe2JbYS5pZF0ucHVzaChjLnZhbHVlKX0pfSksYn0saS5jaGVja1ZhbHVlSW5UYXJnZXRzPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGY9T2JqZWN0LmtleXMoYSk7Zm9yKGM9MDtjPGYubGVuZ3RoO2MrKylmb3IoZT1hW2ZbY11dLnZhbHVlcyxkPTA7ZDxlLmxlbmd0aDtkKyspaWYoYihlW2RdLnZhbHVlKSlyZXR1cm4hMDtyZXR1cm4hMX0saS5oYXNOZWdhdGl2ZVZhbHVlSW5UYXJnZXRzPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmNoZWNrVmFsdWVJblRhcmdldHMoYSxmdW5jdGlvbihhKXtyZXR1cm4gMD5hfSl9LGkuaGFzUG9zaXRpdmVWYWx1ZUluVGFyZ2V0cz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jaGVja1ZhbHVlSW5UYXJnZXRzKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGE+MH0pfSxpLmlzT3JkZXJEZXNjPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25maWc7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGEuZGF0YV9vcmRlciYmXCJkZXNjXCI9PT1hLmRhdGFfb3JkZXIudG9Mb3dlckNhc2UoKX0saS5pc09yZGVyQXNjPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25maWc7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGEuZGF0YV9vcmRlciYmXCJhc2NcIj09PWEuZGF0YV9vcmRlci50b0xvd2VyQ2FzZSgpfSxpLm9yZGVyVGFyZ2V0cz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWcsZD1iLmlzT3JkZXJBc2MoKSxlPWIuaXNPcmRlckRlc2MoKTtyZXR1cm4gZHx8ZT9hLnNvcnQoZnVuY3Rpb24oYSxiKXt2YXIgYz1mdW5jdGlvbihhLGIpe3JldHVybiBhK01hdGguYWJzKGIudmFsdWUpfSxlPWEudmFsdWVzLnJlZHVjZShjLDApLGY9Yi52YWx1ZXMucmVkdWNlKGMsMCk7cmV0dXJuIGQ/Zi1lOmUtZn0pOm4oYy5kYXRhX29yZGVyKSYmYS5zb3J0KGMuZGF0YV9vcmRlciksYX0saS5maWx0ZXJCeVg9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5kMy5tZXJnZShhLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYS52YWx1ZXN9KSkuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhLngtYj09PTB9KX0saS5maWx0ZXJSZW1vdmVOdWxsPWZ1bmN0aW9uKGEpe3JldHVybiBhLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gbShhLnZhbHVlKX0pfSxpLmZpbHRlckJ5WERvbWFpbj1mdW5jdGlvbihhLGIpe3JldHVybiBhLm1hcChmdW5jdGlvbihhKXtyZXR1cm57aWQ6YS5pZCxpZF9vcmc6YS5pZF9vcmcsdmFsdWVzOmEudmFsdWVzLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gYlswXTw9YS54JiZhLng8PWJbMV19KX19KX0saS5oYXNEYXRhTGFiZWw9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbmZpZztyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIGEuZGF0YV9sYWJlbHMmJmEuZGF0YV9sYWJlbHM/ITA6XCJvYmplY3RcIj09dHlwZW9mIGEuZGF0YV9sYWJlbHMmJnYoYS5kYXRhX2xhYmVscyk/ITA6ITF9LGkuZ2V0RGF0YUxhYmVsTGVuZ3RoPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLGU9WzAsMF0sZj0xLjM7cmV0dXJuIGQuc2VsZWN0Q2hhcnQuc2VsZWN0KFwic3ZnXCIpLnNlbGVjdEFsbChcIi5kdW1teVwiKS5kYXRhKFthLGJdKS5lbnRlcigpLmFwcGVuZChcInRleHRcIikudGV4dChmdW5jdGlvbihhKXtyZXR1cm4gZC5kYXRhTGFiZWxGb3JtYXQoYS5pZCkoYSl9KS5lYWNoKGZ1bmN0aW9uKGEsYil7ZVtiXT10aGlzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW2NdKmZ9KS5yZW1vdmUoKSxlfSxpLmlzTm9uZUFyYz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5oYXNUYXJnZXQodGhpcy5kYXRhLnRhcmdldHMsYS5pZCl9LGkuaXNBcmM9ZnVuY3Rpb24oYSl7cmV0dXJuXCJkYXRhXCJpbiBhJiZ0aGlzLmhhc1RhcmdldCh0aGlzLmRhdGEudGFyZ2V0cyxhLmRhdGEuaWQpfSxpLmZpbmRTYW1lWE9mVmFsdWVzPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD1hW2JdLngsZT1bXTtmb3IoYz1iLTE7Yz49MCYmZD09PWFbY10ueDtjLS0pZS5wdXNoKGFbY10pO2ZvcihjPWI7YzxhLmxlbmd0aCYmZD09PWFbY10ueDtjKyspZS5wdXNoKGFbY10pO3JldHVybiBlfSxpLmZpbmRDbG9zZXN0RnJvbVRhcmdldHM9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXRoaXM7cmV0dXJuIGM9YS5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIGQuZmluZENsb3Nlc3QoYS52YWx1ZXMsYil9KSxkLmZpbmRDbG9zZXN0KGMsYil9LGkuZmluZENsb3Nlc3Q9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXRoaXMsZT0xMDA7cmV0dXJuIGEuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhJiZkLmlzQmFyVHlwZShhLmlkKX0pLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9ZC5tYWluLnNlbGVjdChcIi5cIitsLmJhcnMrZC5nZXRUYXJnZXRTZWxlY3RvclN1ZmZpeChhLmlkKStcIiAuXCIrbC5iYXIrXCItXCIrYS5pbmRleCkubm9kZSgpOyFjJiZkLmlzV2l0aGluQmFyKGIpJiYoYz1hKX0pLGEuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhJiYhZC5pc0JhclR5cGUoYS5pZCl9KS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBmPWQuZGlzdChhLGIpO2U+ZiYmKGU9ZixjPWEpfSksY30saS5kaXN0PWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPWMuY29uZmlnLGU9ZC5heGlzX3JvdGF0ZWQ/MTowLGY9ZC5heGlzX3JvdGF0ZWQ/MDoxLGc9Yy5jaXJjbGVZKGEsYS5pbmRleCksaD1jLngoYS54KTtyZXR1cm4gTWF0aC5wb3coaC1iW2VdLDIpK01hdGgucG93KGctYltmXSwyKX0saS5jb252ZXJ0VmFsdWVzVG9TdGVwPWZ1bmN0aW9uKGEpe3ZhciBiLGM9W10uY29uY2F0KGEpO2lmKCF0aGlzLmlzQ2F0ZWdvcml6ZWQoKSlyZXR1cm4gYTtmb3IoYj1hLmxlbmd0aCsxO2I+MDtiLS0pY1tiXT1jW2ItMV07cmV0dXJuIGNbMF09e3g6Y1swXS54LTEsdmFsdWU6Y1swXS52YWx1ZSxpZDpjWzBdLmlkfSxjW2EubGVuZ3RoKzFdPXt4OmNbYS5sZW5ndGhdLngrMSx2YWx1ZTpjW2EubGVuZ3RoXS52YWx1ZSxpZDpjW2EubGVuZ3RoXS5pZH0sY30saS51cGRhdGVEYXRhQXR0cmlidXRlcz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1jLmNvbmZpZyxlPWRbXCJkYXRhX1wiK2FdO3JldHVyblwidW5kZWZpbmVkXCI9PXR5cGVvZiBiP2U6KE9iamVjdC5rZXlzKGIpLmZvckVhY2goZnVuY3Rpb24oYSl7ZVthXT1iW2FdfSksYy5yZWRyYXcoe3dpdGhMZWdlbmQ6ITB9KSxlKX0saS5jb252ZXJ0VXJsVG9EYXRhPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXRoaXMsZj1iP2I6XCJjc3ZcIjtlLmQzLnhocihhLGZ1bmN0aW9uKGEsYil7dmFyIGc7aWYoIWIpdGhyb3cgbmV3IEVycm9yKGEucmVzcG9uc2VVUkwrXCIgXCIrYS5zdGF0dXMrXCIgKFwiK2Euc3RhdHVzVGV4dCtcIilcIik7Zz1cImpzb25cIj09PWY/ZS5jb252ZXJ0SnNvblRvRGF0YShKU09OLnBhcnNlKGIucmVzcG9uc2UpLGMpOlwidHN2XCI9PT1mP2UuY29udmVydFRzdlRvRGF0YShiLnJlc3BvbnNlKTplLmNvbnZlcnRDc3ZUb0RhdGEoYi5yZXNwb25zZSksZC5jYWxsKGUsZyl9KX0saS5jb252ZXJ0WHN2VG9EYXRhPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD1iLnBhcnNlUm93cyhhKTtyZXR1cm4gMT09PWQubGVuZ3RoPyhjPVt7fV0sZFswXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2NbMF1bYV09bnVsbH0pKTpjPWIucGFyc2UoYSksY30saS5jb252ZXJ0Q3N2VG9EYXRhPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmNvbnZlcnRYc3ZUb0RhdGEoYSx0aGlzLmQzLmNzdil9LGkuY29udmVydFRzdlRvRGF0YT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jb252ZXJ0WHN2VG9EYXRhKGEsdGhpcy5kMy50c3YpfSxpLmNvbnZlcnRKc29uVG9EYXRhPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlPXRoaXMsZj1bXTtyZXR1cm4gYj8oYi54PyhjPWIudmFsdWUuY29uY2F0KGIueCksZS5jb25maWcuZGF0YV94PWIueCk6Yz1iLnZhbHVlLGYucHVzaChjKSxhLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9W107Yy5mb3JFYWNoKGZ1bmN0aW9uKGMpe3ZhciBkPXAoYVtjXSk/bnVsbDphW2NdO2IucHVzaChkKX0pLGYucHVzaChiKX0pLGQ9ZS5jb252ZXJ0Um93c1RvRGF0YShmKSk6KE9iamVjdC5rZXlzKGEpLmZvckVhY2goZnVuY3Rpb24oYil7Zi5wdXNoKFtiXS5jb25jYXQoYVtiXSkpfSksZD1lLmNvbnZlcnRDb2x1bW5zVG9EYXRhKGYpKSxkfSxpLmNvbnZlcnRSb3dzVG9EYXRhPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZD1hWzBdLGU9e30sZj1bXTtmb3IoYj0xO2I8YS5sZW5ndGg7YisrKXtmb3IoZT17fSxjPTA7YzxhW2JdLmxlbmd0aDtjKyspe2lmKHAoYVtiXVtjXSkpdGhyb3cgbmV3IEVycm9yKFwiU291cmNlIGRhdGEgaXMgbWlzc2luZyBhIGNvbXBvbmVudCBhdCAoXCIrYitcIixcIitjK1wiKSFcIik7ZVtkW2NdXT1hW2JdW2NdfWYucHVzaChlKX1yZXR1cm4gZn0saS5jb252ZXJ0Q29sdW1uc1RvRGF0YT1mdW5jdGlvbihhKXt2YXIgYixjLGQsZT1bXTtmb3IoYj0wO2I8YS5sZW5ndGg7YisrKWZvcihkPWFbYl1bMF0sYz0xO2M8YVtiXS5sZW5ndGg7YysrKXtpZihwKGVbYy0xXSkmJihlW2MtMV09e30pLHAoYVtiXVtjXSkpdGhyb3cgbmV3IEVycm9yKFwiU291cmNlIGRhdGEgaXMgbWlzc2luZyBhIGNvbXBvbmVudCBhdCAoXCIrYitcIixcIitjK1wiKSFcIik7ZVtjLTFdW2RdPWFbYl1bY119cmV0dXJuIGV9LGkuY29udmVydERhdGFUb1RhcmdldHM9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXRoaXMsZT1kLmNvbmZpZyxmPWQuZDMua2V5cyhhWzBdKS5maWx0ZXIoZC5pc05vdFgsZCksZz1kLmQzLmtleXMoYVswXSkuZmlsdGVyKGQuaXNYLGQpO3JldHVybiBmLmZvckVhY2goZnVuY3Rpb24oYyl7dmFyIGY9ZC5nZXRYS2V5KGMpO2QuaXNDdXN0b21YKCl8fGQuaXNUaW1lU2VyaWVzKCk/Zy5pbmRleE9mKGYpPj0wP2QuZGF0YS54c1tjXT0oYiYmZC5kYXRhLnhzW2NdP2QuZGF0YS54c1tjXTpbXSkuY29uY2F0KGEubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBhW2ZdfSkuZmlsdGVyKG0pLm1hcChmdW5jdGlvbihhLGIpe3JldHVybiBkLmdlbmVyYXRlVGFyZ2V0WChhLGMsYil9KSk6ZS5kYXRhX3g/ZC5kYXRhLnhzW2NdPWQuZ2V0T3RoZXJUYXJnZXRYcygpOnYoZS5kYXRhX3hzKSYmKGQuZGF0YS54c1tjXT1kLmdldFhWYWx1ZXNPZlhLZXkoZixkLmRhdGEudGFyZ2V0cykpOmQuZGF0YS54c1tjXT1hLm1hcChmdW5jdGlvbihhLGIpe3JldHVybiBifSl9KSxmLmZvckVhY2goZnVuY3Rpb24oYSl7aWYoIWQuZGF0YS54c1thXSl0aHJvdyBuZXcgRXJyb3IoJ3ggaXMgbm90IGRlZmluZWQgZm9yIGlkID0gXCInK2ErJ1wiLicpfSksYz1mLm1hcChmdW5jdGlvbihiLGMpe3ZhciBmPWUuZGF0YV9pZENvbnZlcnRlcihiKTtyZXR1cm57aWQ6ZixpZF9vcmc6Yix2YWx1ZXM6YS5tYXAoZnVuY3Rpb24oYSxnKXt2YXIgaD1kLmdldFhLZXkoYiksaT1hW2hdLGo9ZC5nZW5lcmF0ZVRhcmdldFgoaSxiLGcpO3JldHVybiBkLmlzQ3VzdG9tWCgpJiZkLmlzQ2F0ZWdvcml6ZWQoKSYmMD09PWMmJmkmJigwPT09ZyYmKGUuYXhpc194X2NhdGVnb3JpZXM9W10pLGUuYXhpc194X2NhdGVnb3JpZXMucHVzaChpKSksKHAoYVtiXSl8fGQuZGF0YS54c1tiXS5sZW5ndGg8PWcpJiYoaj12b2lkIDApLHt4OmosdmFsdWU6bnVsbD09PWFbYl18fGlzTmFOKGFbYl0pP251bGw6K2FbYl0saWQ6Zn19KS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIHEoYS54KX0pfX0pLGMuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYjtlLmRhdGFfeFNvcnQmJihhLnZhbHVlcz1hLnZhbHVlcy5zb3J0KGZ1bmN0aW9uKGEsYil7dmFyIGM9YS54fHwwPT09YS54P2EueDoxLzAsZD1iLnh8fDA9PT1iLng/Yi54OjEvMDtyZXR1cm4gYy1kfSkpLGI9MCxhLnZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EuaW5kZXg9YisrfSksZC5kYXRhLnhzW2EuaWRdLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS1ifSl9KSxlLmRhdGFfdHlwZSYmZC5zZXRUYXJnZXRUeXBlKGQubWFwVG9JZHMoYykuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiEoYSBpbiBlLmRhdGFfdHlwZXMpfSksZS5kYXRhX3R5cGUpLGMuZm9yRWFjaChmdW5jdGlvbihhKXtkLmFkZENhY2hlKGEuaWRfb3JnLGEpfSksY30saS5sb2FkPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpczthJiYoYi5maWx0ZXImJihhPWEuZmlsdGVyKGIuZmlsdGVyKSksKGIudHlwZXx8Yi50eXBlcykmJmEuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgZD1iLnR5cGVzJiZiLnR5cGVzW2EuaWRdP2IudHlwZXNbYS5pZF06Yi50eXBlO2Muc2V0VGFyZ2V0VHlwZShhLmlkLGQpfSksYy5kYXRhLnRhcmdldHMuZm9yRWFjaChmdW5jdGlvbihiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylpZihiLmlkPT09YVtjXS5pZCl7Yi52YWx1ZXM9YVtjXS52YWx1ZXMsYS5zcGxpY2UoYywxKTticmVha319KSxjLmRhdGEudGFyZ2V0cz1jLmRhdGEudGFyZ2V0cy5jb25jYXQoYSkpLGMudXBkYXRlVGFyZ2V0cyhjLmRhdGEudGFyZ2V0cyksYy5yZWRyYXcoe3dpdGhVcGRhdGVPcmdYRG9tYWluOiEwLHdpdGhVcGRhdGVYRG9tYWluOiEwLHdpdGhMZWdlbmQ6ITB9KSxiLmRvbmUmJmIuZG9uZSgpfSxpLmxvYWRGcm9tQXJncz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO2EuZGF0YT9iLmxvYWQoYi5jb252ZXJ0RGF0YVRvVGFyZ2V0cyhhLmRhdGEpLGEpOmEudXJsP2IuY29udmVydFVybFRvRGF0YShhLnVybCxhLm1pbWVUeXBlLGEua2V5cyxmdW5jdGlvbihjKXtiLmxvYWQoYi5jb252ZXJ0RGF0YVRvVGFyZ2V0cyhjKSxhKX0pOmEuanNvbj9iLmxvYWQoYi5jb252ZXJ0RGF0YVRvVGFyZ2V0cyhiLmNvbnZlcnRKc29uVG9EYXRhKGEuanNvbixhLmtleXMpKSxhKTphLnJvd3M/Yi5sb2FkKGIuY29udmVydERhdGFUb1RhcmdldHMoYi5jb252ZXJ0Um93c1RvRGF0YShhLnJvd3MpKSxhKTphLmNvbHVtbnM/Yi5sb2FkKGIuY29udmVydERhdGFUb1RhcmdldHMoYi5jb252ZXJ0Q29sdW1uc1RvRGF0YShhLmNvbHVtbnMpKSxhKTpiLmxvYWQobnVsbCxhKX0saS51bmxvYWQ9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBifHwoYj1mdW5jdGlvbigpe30pLGE9YS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIGMuaGFzVGFyZ2V0KGMuZGF0YS50YXJnZXRzLGEpfSksYSYmMCE9PWEubGVuZ3RoPyhjLnN2Zy5zZWxlY3RBbGwoYS5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIGMuc2VsZWN0b3JUYXJnZXQoYSl9KSkudHJhbnNpdGlvbigpLnN0eWxlKFwib3BhY2l0eVwiLDApLnJlbW92ZSgpLmNhbGwoYy5lbmRhbGwsYiksdm9pZCBhLmZvckVhY2goZnVuY3Rpb24oYSl7Yy53aXRob3V0RmFkZUluW2FdPSExLGMubGVnZW5kJiZjLmxlZ2VuZC5zZWxlY3RBbGwoXCIuXCIrbC5sZWdlbmRJdGVtK2MuZ2V0VGFyZ2V0U2VsZWN0b3JTdWZmaXgoYSkpLnJlbW92ZSgpLGMuZGF0YS50YXJnZXRzPWMuZGF0YS50YXJnZXRzLmZpbHRlcihmdW5jdGlvbihiKXtyZXR1cm4gYi5pZCE9PWF9KX0pKTp2b2lkIGIoKX0saS5jYXRlZ29yeU5hbWU9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5jb25maWc7cmV0dXJuIGE8Yi5heGlzX3hfY2F0ZWdvcmllcy5sZW5ndGg/Yi5heGlzX3hfY2F0ZWdvcmllc1thXTphfSxpLmluaXRFdmVudFJlY3Q9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EubWFpbi5zZWxlY3QoXCIuXCIrbC5jaGFydCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLmV2ZW50UmVjdHMpLnN0eWxlKFwiZmlsbC1vcGFjaXR5XCIsMCl9LGkucmVkcmF3RXZlbnRSZWN0PWZ1bmN0aW9uKCl7dmFyIGEsYixjPXRoaXMsZD1jLmNvbmZpZyxlPWMuaXNNdWx0aXBsZVgoKSxmPWMubWFpbi5zZWxlY3QoXCIuXCIrbC5ldmVudFJlY3RzKS5zdHlsZShcImN1cnNvclwiLGQuem9vbV9lbmFibGVkP2QuYXhpc19yb3RhdGVkP1wibnMtcmVzaXplXCI6XCJldy1yZXNpemVcIjpudWxsKS5jbGFzc2VkKGwuZXZlbnRSZWN0c011bHRpcGxlLGUpLmNsYXNzZWQobC5ldmVudFJlY3RzU2luZ2xlLCFlKTtmLnNlbGVjdEFsbChcIi5cIitsLmV2ZW50UmVjdCkucmVtb3ZlKCksYy5ldmVudFJlY3Q9Zi5zZWxlY3RBbGwoXCIuXCIrbC5ldmVudFJlY3QpLGU/KGE9Yy5ldmVudFJlY3QuZGF0YShbMF0pLGMuZ2VuZXJhdGVFdmVudFJlY3RzRm9yTXVsdGlwbGVYcyhhLmVudGVyKCkpLGMudXBkYXRlRXZlbnRSZWN0KGEpKTooYj1jLmdldE1heERhdGFDb3VudFRhcmdldChjLmRhdGEudGFyZ2V0cyksZi5kYXR1bShiP2IudmFsdWVzOltdKSxjLmV2ZW50UmVjdD1mLnNlbGVjdEFsbChcIi5cIitsLmV2ZW50UmVjdCksYT1jLmV2ZW50UmVjdC5kYXRhKGZ1bmN0aW9uKGEpe3JldHVybiBhfSksYy5nZW5lcmF0ZUV2ZW50UmVjdHNGb3JTaW5nbGVYKGEuZW50ZXIoKSksYy51cGRhdGVFdmVudFJlY3QoYSksYS5leGl0KCkucmVtb3ZlKCkpfSxpLnVwZGF0ZUV2ZW50UmVjdD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaD10aGlzLGk9aC5jb25maWc7YT1hfHxoLmV2ZW50UmVjdC5kYXRhKGZ1bmN0aW9uKGEpe3JldHVybiBhfSksaC5pc011bHRpcGxlWCgpPyhiPTAsYz0wLGQ9aC53aWR0aCxlPWguaGVpZ2h0KTooIWguaXNDdXN0b21YKCkmJiFoLmlzVGltZVNlcmllcygpfHxoLmlzQ2F0ZWdvcml6ZWQoKT8oZj1oLmdldEV2ZW50UmVjdFdpZHRoKCksZz1mdW5jdGlvbihhKXtyZXR1cm4gaC54KGEueCktZi8yfSk6KGgudXBkYXRlWHMoKSxmPWZ1bmN0aW9uKGEpe3ZhciBiPWguZ2V0UHJldlgoYS5pbmRleCksYz1oLmdldE5leHRYKGEuaW5kZXgpO3JldHVybiBudWxsPT09YiYmbnVsbD09PWM/aS5heGlzX3JvdGF0ZWQ/aC5oZWlnaHQ6aC53aWR0aDoobnVsbD09PWImJihiPWgueC5kb21haW4oKVswXSksbnVsbD09PWMmJihjPWgueC5kb21haW4oKVsxXSksTWF0aC5tYXgoMCwoaC54KGMpLWgueChiKSkvMikpfSxnPWZ1bmN0aW9uKGEpe3ZhciBiPWguZ2V0UHJldlgoYS5pbmRleCksYz1oLmdldE5leHRYKGEuaW5kZXgpLGQ9aC5kYXRhLnhzW2EuaWRdW2EuaW5kZXhdO3JldHVybiBudWxsPT09YiYmbnVsbD09PWM/MDoobnVsbD09PWImJihiPWgueC5kb21haW4oKVswXSksKGgueChkKStoLngoYikpLzIpfSksYj1pLmF4aXNfcm90YXRlZD8wOmcsYz1pLmF4aXNfcm90YXRlZD9nOjAsZD1pLmF4aXNfcm90YXRlZD9oLndpZHRoOmYsZT1pLmF4aXNfcm90YXRlZD9mOmguaGVpZ2h0KSxhLmF0dHIoXCJjbGFzc1wiLGguY2xhc3NFdmVudC5iaW5kKGgpKS5hdHRyKFwieFwiLGIpLmF0dHIoXCJ5XCIsYykuYXR0cihcIndpZHRoXCIsZCkuYXR0cihcImhlaWdodFwiLGUpfSxpLmdlbmVyYXRlRXZlbnRSZWN0c0ZvclNpbmdsZVg9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuZDMsZD1iLmNvbmZpZzthLmFwcGVuZChcInJlY3RcIikuYXR0cihcImNsYXNzXCIsYi5jbGFzc0V2ZW50LmJpbmQoYikpLnN0eWxlKFwiY3Vyc29yXCIsZC5kYXRhX3NlbGVjdGlvbl9lbmFibGVkJiZkLmRhdGFfc2VsZWN0aW9uX2dyb3VwZWQ/XCJwb2ludGVyXCI6bnVsbCkub24oXCJtb3VzZW92ZXJcIixmdW5jdGlvbihhKXt2YXIgYz1hLmluZGV4O2IuZHJhZ2dpbmd8fGIuZmxvd2luZ3x8Yi5oYXNBcmNUeXBlKCl8fChkLnBvaW50X2ZvY3VzX2V4cGFuZF9lbmFibGVkJiZiLmV4cGFuZENpcmNsZXMoYyxudWxsLCEwKSxiLmV4cGFuZEJhcnMoYyxudWxsLCEwKSxiLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuc2hhcGUrXCItXCIrYykuZWFjaChmdW5jdGlvbihhKXtkLmRhdGFfb25tb3VzZW92ZXIuY2FsbChiLmFwaSxhKX0pKX0pLm9uKFwibW91c2VvdXRcIixmdW5jdGlvbihhKXt2YXIgYz1hLmluZGV4O2IuY29uZmlnJiYoYi5oYXNBcmNUeXBlKCl8fChiLmhpZGVYR3JpZEZvY3VzKCksYi5oaWRlVG9vbHRpcCgpLGIudW5leHBhbmRDaXJjbGVzKCksYi51bmV4cGFuZEJhcnMoKSxiLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuc2hhcGUrXCItXCIrYykuZWFjaChmdW5jdGlvbihhKXtkLmRhdGFfb25tb3VzZW91dC5jYWxsKGIuYXBpLGEpfSkpKX0pLm9uKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oYSl7dmFyIGUsZj1hLmluZGV4LGc9Yi5zdmcuc2VsZWN0KFwiLlwiK2wuZXZlbnRSZWN0K1wiLVwiK2YpO2IuZHJhZ2dpbmd8fGIuZmxvd2luZ3x8Yi5oYXNBcmNUeXBlKCl8fChiLmlzU3RlcFR5cGUoYSkmJlwic3RlcC1hZnRlclwiPT09Yi5jb25maWcubGluZV9zdGVwX3R5cGUmJmMubW91c2UodGhpcylbMF08Yi54KGIuZ2V0WFZhbHVlKGEuaWQsZikpJiYoZi09MSksZT1iLmZpbHRlclRhcmdldHNUb1Nob3coYi5kYXRhLnRhcmdldHMpLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYi5hZGROYW1lKGIuZ2V0VmFsdWVPbkluZGV4KGEudmFsdWVzLGYpKX0pLGQudG9vbHRpcF9ncm91cGVkJiYoYi5zaG93VG9vbHRpcChlLHRoaXMpLGIuc2hvd1hHcmlkRm9jdXMoZSkpLCghZC50b29sdGlwX2dyb3VwZWR8fGQuZGF0YV9zZWxlY3Rpb25fZW5hYmxlZCYmIWQuZGF0YV9zZWxlY3Rpb25fZ3JvdXBlZCkmJmIubWFpbi5zZWxlY3RBbGwoXCIuXCIrbC5zaGFwZStcIi1cIitmKS5lYWNoKGZ1bmN0aW9uKCl7Yy5zZWxlY3QodGhpcykuY2xhc3NlZChsLkVYUEFOREVELCEwKSxkLmRhdGFfc2VsZWN0aW9uX2VuYWJsZWQmJmcuc3R5bGUoXCJjdXJzb3JcIixkLmRhdGFfc2VsZWN0aW9uX2dyb3VwZWQ/XCJwb2ludGVyXCI6bnVsbCksZC50b29sdGlwX2dyb3VwZWR8fChiLmhpZGVYR3JpZEZvY3VzKCksYi5oaWRlVG9vbHRpcCgpLGQuZGF0YV9zZWxlY3Rpb25fZ3JvdXBlZHx8KGIudW5leHBhbmRDaXJjbGVzKGYpLGIudW5leHBhbmRCYXJzKGYpKSl9KS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIGIuaXNXaXRoaW5TaGFwZSh0aGlzLGEpfSkuZWFjaChmdW5jdGlvbihhKXtkLmRhdGFfc2VsZWN0aW9uX2VuYWJsZWQmJihkLmRhdGFfc2VsZWN0aW9uX2dyb3VwZWR8fGQuZGF0YV9zZWxlY3Rpb25faXNzZWxlY3RhYmxlKGEpKSYmZy5zdHlsZShcImN1cnNvclwiLFwicG9pbnRlclwiKSxkLnRvb2x0aXBfZ3JvdXBlZHx8KGIuc2hvd1Rvb2x0aXAoW2FdLHRoaXMpLGIuc2hvd1hHcmlkRm9jdXMoW2FdKSxkLnBvaW50X2ZvY3VzX2V4cGFuZF9lbmFibGVkJiZiLmV4cGFuZENpcmNsZXMoZixhLmlkLCEwKSxiLmV4cGFuZEJhcnMoZixhLmlkLCEwKSl9KSl9KS5vbihcImNsaWNrXCIsZnVuY3Rpb24oYSl7dmFyIGU9YS5pbmRleDtpZighYi5oYXNBcmNUeXBlKCkmJmIudG9nZ2xlU2hhcGUpe2lmKGIuY2FuY2VsQ2xpY2spcmV0dXJuIHZvaWQoYi5jYW5jZWxDbGljaz0hMSk7Yi5pc1N0ZXBUeXBlKGEpJiZcInN0ZXAtYWZ0ZXJcIj09PWQubGluZV9zdGVwX3R5cGUmJmMubW91c2UodGhpcylbMF08Yi54KGIuZ2V0WFZhbHVlKGEuaWQsZSkpJiYoZS09MSksYi5tYWluLnNlbGVjdEFsbChcIi5cIitsLnNoYXBlK1wiLVwiK2UpLmVhY2goZnVuY3Rpb24oYSl7KGQuZGF0YV9zZWxlY3Rpb25fZ3JvdXBlZHx8Yi5pc1dpdGhpblNoYXBlKHRoaXMsYSkpJiYoYi50b2dnbGVTaGFwZSh0aGlzLGEsZSksYi5jb25maWcuZGF0YV9vbmNsaWNrLmNhbGwoYi5hcGksYSx0aGlzKSl9KX19KS5jYWxsKGQuZGF0YV9zZWxlY3Rpb25fZHJhZ2dhYmxlJiZiLmRyYWc/Yy5iZWhhdmlvci5kcmFnKCkub3JpZ2luKE9iamVjdCkub24oXCJkcmFnXCIsZnVuY3Rpb24oKXtiLmRyYWcoYy5tb3VzZSh0aGlzKSl9KS5vbihcImRyYWdzdGFydFwiLGZ1bmN0aW9uKCl7Yi5kcmFnc3RhcnQoYy5tb3VzZSh0aGlzKSl9KS5vbihcImRyYWdlbmRcIixmdW5jdGlvbigpe2IuZHJhZ2VuZCgpfSk6ZnVuY3Rpb24oKXt9KX0saS5nZW5lcmF0ZUV2ZW50UmVjdHNGb3JNdWx0aXBsZVhzPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXtjLnN2Zy5zZWxlY3QoXCIuXCIrbC5ldmVudFJlY3QpLnN0eWxlKFwiY3Vyc29yXCIsbnVsbCksYy5oaWRlWEdyaWRGb2N1cygpLGMuaGlkZVRvb2x0aXAoKSxjLnVuZXhwYW5kQ2lyY2xlcygpLGMudW5leHBhbmRCYXJzKCl9dmFyIGM9dGhpcyxkPWMuZDMsZT1jLmNvbmZpZzthLmFwcGVuZChcInJlY3RcIikuYXR0cihcInhcIiwwKS5hdHRyKFwieVwiLDApLmF0dHIoXCJ3aWR0aFwiLGMud2lkdGgpLmF0dHIoXCJoZWlnaHRcIixjLmhlaWdodCkuYXR0cihcImNsYXNzXCIsbC5ldmVudFJlY3QpLm9uKFwibW91c2VvdXRcIixmdW5jdGlvbigpe2MuY29uZmlnJiYoYy5oYXNBcmNUeXBlKCl8fGIoKSl9KS5vbihcIm1vdXNlbW92ZVwiLGZ1bmN0aW9uKCl7dmFyIGEsZixnLGgsaT1jLmZpbHRlclRhcmdldHNUb1Nob3coYy5kYXRhLnRhcmdldHMpO2lmKCFjLmRyYWdnaW5nJiYhYy5oYXNBcmNUeXBlKGkpKXtpZihhPWQubW91c2UodGhpcyksZj1jLmZpbmRDbG9zZXN0RnJvbVRhcmdldHMoaSxhKSwhYy5tb3VzZW92ZXJ8fGYmJmYuaWQ9PT1jLm1vdXNlb3Zlci5pZHx8KGUuZGF0YV9vbm1vdXNlb3V0LmNhbGwoYy5hcGksYy5tb3VzZW92ZXIpLGMubW91c2VvdmVyPXZvaWQgMCksIWYpcmV0dXJuIHZvaWQgYigpO2c9Yy5pc1NjYXR0ZXJUeXBlKGYpfHwhZS50b29sdGlwX2dyb3VwZWQ/W2ZdOmMuZmlsdGVyQnlYKGksZi54KSxoPWcubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBjLmFkZE5hbWUoYSl9KSxjLnNob3dUb29sdGlwKGgsdGhpcyksZS5wb2ludF9mb2N1c19leHBhbmRfZW5hYmxlZCYmYy5leHBhbmRDaXJjbGVzKGYuaW5kZXgsZi5pZCwhMCksYy5leHBhbmRCYXJzKGYuaW5kZXgsZi5pZCwhMCksYy5zaG93WEdyaWRGb2N1cyhoKSwoYy5pc0JhclR5cGUoZi5pZCl8fGMuZGlzdChmLGEpPDEwMCkmJihjLnN2Zy5zZWxlY3QoXCIuXCIrbC5ldmVudFJlY3QpLnN0eWxlKFwiY3Vyc29yXCIsXCJwb2ludGVyXCIpLGMubW91c2VvdmVyfHwoZS5kYXRhX29ubW91c2VvdmVyLmNhbGwoYy5hcGksZiksYy5tb3VzZW92ZXI9ZikpfX0pLm9uKFwiY2xpY2tcIixmdW5jdGlvbigpe3ZhciBhLGIsZj1jLmZpbHRlclRhcmdldHNUb1Nob3coYy5kYXRhLnRhcmdldHMpO2MuaGFzQXJjVHlwZShmKXx8KGE9ZC5tb3VzZSh0aGlzKSxiPWMuZmluZENsb3Nlc3RGcm9tVGFyZ2V0cyhmLGEpLGImJihjLmlzQmFyVHlwZShiLmlkKXx8Yy5kaXN0KGIsYSk8MTAwKSYmYy5tYWluLnNlbGVjdEFsbChcIi5cIitsLnNoYXBlcytjLmdldFRhcmdldFNlbGVjdG9yU3VmZml4KGIuaWQpKS5zZWxlY3RBbGwoXCIuXCIrbC5zaGFwZStcIi1cIitiLmluZGV4KS5lYWNoKGZ1bmN0aW9uKCl7KGUuZGF0YV9zZWxlY3Rpb25fZ3JvdXBlZHx8Yy5pc1dpdGhpblNoYXBlKHRoaXMsYikpJiYoYy50b2dnbGVTaGFwZSh0aGlzLGIsYi5pbmRleCksYy5jb25maWcuZGF0YV9vbmNsaWNrLmNhbGwoYy5hcGksYix0aGlzKSl9KSl9KS5jYWxsKGUuZGF0YV9zZWxlY3Rpb25fZHJhZ2dhYmxlJiZjLmRyYWc/ZC5iZWhhdmlvci5kcmFnKCkub3JpZ2luKE9iamVjdCkub24oXCJkcmFnXCIsZnVuY3Rpb24oKXtjLmRyYWcoZC5tb3VzZSh0aGlzKSl9KS5vbihcImRyYWdzdGFydFwiLGZ1bmN0aW9uKCl7Yy5kcmFnc3RhcnQoZC5tb3VzZSh0aGlzKSl9KS5vbihcImRyYWdlbmRcIixmdW5jdGlvbigpe2MuZHJhZ2VuZCgpfSk6ZnVuY3Rpb24oKXt9KX0saS5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKGIsYyxkKXt2YXIgZT10aGlzLGY9XCIuXCIrbC5ldmVudFJlY3QrKGUuaXNNdWx0aXBsZVgoKT9cIlwiOlwiLVwiK2MpLGc9ZS5tYWluLnNlbGVjdChmKS5ub2RlKCksaD1nLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGk9aC5sZWZ0KyhkP2RbMF06MCksaj1oLnRvcCsoZD9kWzFdOjApLGs9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJNb3VzZUV2ZW50c1wiKTtrLmluaXRNb3VzZUV2ZW50KGIsITAsITAsYSwwLGksaixpLGosITEsITEsITEsITEsMCxudWxsKSxnLmRpc3BhdGNoRXZlbnQoayl9LGkuZ2V0Q3VycmVudFdpZHRoPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnO3JldHVybiBiLnNpemVfd2lkdGg/Yi5zaXplX3dpZHRoOmEuZ2V0UGFyZW50V2lkdGgoKX0saS5nZXRDdXJyZW50SGVpZ2h0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnLGM9Yi5zaXplX2hlaWdodD9iLnNpemVfaGVpZ2h0OmEuZ2V0UGFyZW50SGVpZ2h0KCk7cmV0dXJuIGM+MD9jOjMyMC8oYS5oYXNUeXBlKFwiZ2F1Z2VcIik/MjoxKX0saS5nZXRDdXJyZW50UGFkZGluZ1RvcD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uZmlnO3JldHVybiBtKGEucGFkZGluZ190b3ApP2EucGFkZGluZ190b3A6MH0saS5nZXRDdXJyZW50UGFkZGluZ0JvdHRvbT1mdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uZmlnO3JldHVybiBtKGEucGFkZGluZ19ib3R0b20pP2EucGFkZGluZ19ib3R0b206MH0saS5nZXRDdXJyZW50UGFkZGluZ0xlZnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnO3JldHVybiBtKGMucGFkZGluZ19sZWZ0KT9jLnBhZGRpbmdfbGVmdDpjLmF4aXNfcm90YXRlZD9jLmF4aXNfeF9zaG93P01hdGgubWF4KHIoYi5nZXRBeGlzV2lkdGhCeUF4aXNJZChcInhcIixhKSksNDApOjE6IWMuYXhpc195X3Nob3d8fGMuYXhpc195X2lubmVyP2IuYXhpcy5nZXRZQXhpc0xhYmVsUG9zaXRpb24oKS5pc091dGVyPzMwOjE6cihiLmdldEF4aXNXaWR0aEJ5QXhpc0lkKFwieVwiLGEpKX0saS5nZXRDdXJyZW50UGFkZGluZ1JpZ2h0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnLGM9MTAsZD1hLmlzTGVnZW5kUmlnaHQ/YS5nZXRMZWdlbmRXaWR0aCgpKzIwOjA7cmV0dXJuIG0oYi5wYWRkaW5nX3JpZ2h0KT9iLnBhZGRpbmdfcmlnaHQrMTpiLmF4aXNfcm90YXRlZD9jK2Q6IWIuYXhpc195Ml9zaG93fHxiLmF4aXNfeTJfaW5uZXI/MitkKyhhLmF4aXMuZ2V0WTJBeGlzTGFiZWxQb3NpdGlvbigpLmlzT3V0ZXI/MjA6MCk6cihhLmdldEF4aXNXaWR0aEJ5QXhpc0lkKFwieTJcIikpK2R9LGkuZ2V0UGFyZW50UmVjdFZhbHVlPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPXRoaXMuc2VsZWN0Q2hhcnQubm9kZSgpO2MmJlwiQk9EWVwiIT09Yy50YWdOYW1lOyl7dHJ5e2I9Yy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVthXX1jYXRjaChkKXtcIndpZHRoXCI9PT1hJiYoYj1jLm9mZnNldFdpZHRoKX1pZihiKWJyZWFrO2M9Yy5wYXJlbnROb2RlfXJldHVybiBifSxpLmdldFBhcmVudFdpZHRoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0UGFyZW50UmVjdFZhbHVlKFwid2lkdGhcIil9LGkuZ2V0UGFyZW50SGVpZ2h0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5zZWxlY3RDaGFydC5zdHlsZShcImhlaWdodFwiKTtyZXR1cm4gYS5pbmRleE9mKFwicHhcIik+MD8rYS5yZXBsYWNlKFwicHhcIixcIlwiKTowfSxpLmdldFN2Z0xlZnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnLGQ9Yy5heGlzX3JvdGF0ZWR8fCFjLmF4aXNfcm90YXRlZCYmIWMuYXhpc195X2lubmVyLGU9Yy5heGlzX3JvdGF0ZWQ/bC5heGlzWDpsLmF4aXNZLGY9Yi5tYWluLnNlbGVjdChcIi5cIitlKS5ub2RlKCksZz1mJiZkP2YuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk6e3JpZ2h0OjB9LGg9Yi5zZWxlY3RDaGFydC5ub2RlKCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksaT1iLmhhc0FyY1R5cGUoKSxqPWcucmlnaHQtaC5sZWZ0LShpPzA6Yi5nZXRDdXJyZW50UGFkZGluZ0xlZnQoYSkpO3JldHVybiBqPjA/ajowfSxpLmdldEF4aXNXaWR0aEJ5QXhpc0lkPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPWMuYXhpcy5nZXRMYWJlbFBvc2l0aW9uQnlJZChhKTtyZXR1cm4gYy5heGlzLmdldE1heFRpY2tXaWR0aChhLGIpKyhkLmlzSW5uZXI/MjA6NDApfSxpLmdldEhvcml6b250YWxBeGlzSGVpZ2h0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmNvbmZpZyxkPTMwO3JldHVyblwieFwiIT09YXx8Yy5heGlzX3hfc2hvdz9cInhcIj09PWEmJmMuYXhpc194X2hlaWdodD9jLmF4aXNfeF9oZWlnaHQ6XCJ5XCIhPT1hfHxjLmF4aXNfeV9zaG93P1wieTJcIiE9PWF8fGMuYXhpc195Ml9zaG93PyhcInhcIj09PWEmJiFjLmF4aXNfcm90YXRlZCYmYy5heGlzX3hfdGlja19yb3RhdGUmJihkPTMwK2IuYXhpcy5nZXRNYXhUaWNrV2lkdGgoYSkqTWF0aC5jb3MoTWF0aC5QSSooOTAtYy5heGlzX3hfdGlja19yb3RhdGUpLzE4MCkpLGQrKGIuYXhpcy5nZXRMYWJlbFBvc2l0aW9uQnlJZChhKS5pc0lubmVyPzA6MTApKyhcInkyXCI9PT1hPy0xMDowKSk6Yi5yb3RhdGVkX3BhZGRpbmdfdG9wOiFjLmxlZ2VuZF9zaG93fHxiLmlzTGVnZW5kUmlnaHR8fGIuaXNMZWdlbmRJbnNldD8xOjEwOjh9LGkuZ2V0RXZlbnRSZWN0V2lkdGg9ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5tYXgoMCx0aGlzLnhBeGlzLnRpY2tJbnRlcnZhbCgpKX0saS5nZXRTaGFwZUluZGljZXM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPXRoaXMsZT1kLmNvbmZpZyxmPXt9LGc9MDtyZXR1cm4gZC5maWx0ZXJUYXJnZXRzVG9TaG93KGQuZGF0YS50YXJnZXRzLmZpbHRlcihhLGQpKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2ZvcihiPTA7YjxlLmRhdGFfZ3JvdXBzLmxlbmd0aDtiKyspaWYoIShlLmRhdGFfZ3JvdXBzW2JdLmluZGV4T2YoYS5pZCk8MCkpZm9yKGM9MDtjPGUuZGF0YV9ncm91cHNbYl0ubGVuZ3RoO2MrKylpZihlLmRhdGFfZ3JvdXBzW2JdW2NdaW4gZil7ZlthLmlkXT1mW2UuZGF0YV9ncm91cHNbYl1bY11dO2JyZWFrfXAoZlthLmlkXSkmJihmW2EuaWRdPWcrKyl9KSxmLl9fbWF4X189Zy0xLGZ9LGkuZ2V0U2hhcGVYPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXRoaXMsZj1kP2Uuc3ViWDplLng7cmV0dXJuIGZ1bmN0aW9uKGQpe3ZhciBlPWQuaWQgaW4gYz9jW2QuaWRdOjA7cmV0dXJuIGQueHx8MD09PWQueD9mKGQueCktYSooYi8yLWUpOjB9fSxpLmdldFNoYXBlWT1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBmdW5jdGlvbihjKXt2YXIgZD1hP2IuZ2V0U3ViWVNjYWxlKGMuaWQpOmIuZ2V0WVNjYWxlKGMuaWQpO3JldHVybiBkKGMudmFsdWUpfX0saS5nZXRTaGFwZU9mZnNldD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcyxlPWQub3JkZXJUYXJnZXRzKGQuZmlsdGVyVGFyZ2V0c1RvU2hvdyhkLmRhdGEudGFyZ2V0cy5maWx0ZXIoYSxkKSkpLGY9ZS5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIGEuaWR9KTtyZXR1cm4gZnVuY3Rpb24oYSxnKXt2YXIgaD1jP2QuZ2V0U3ViWVNjYWxlKGEuaWQpOmQuZ2V0WVNjYWxlKGEuaWQpLGk9aCgwKSxqPWk7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihjKXt2YXIgZT1kLmlzU3RlcFR5cGUoYSk/ZC5jb252ZXJ0VmFsdWVzVG9TdGVwKGMudmFsdWVzKTpjLnZhbHVlcztjLmlkIT09YS5pZCYmYltjLmlkXT09PWJbYS5pZF0mJmYuaW5kZXhPZihjLmlkKTxmLmluZGV4T2YoYS5pZCkmJmVbZ10udmFsdWUqYS52YWx1ZT49MCYmKGorPWgoZVtnXS52YWx1ZSktaSl9KSxqfX0saS5pc1dpdGhpblNoYXBlPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD10aGlzLGU9ZC5kMy5zZWxlY3QoYSk7cmV0dXJuIGQuaXNUYXJnZXRUb1Nob3coYi5pZCk/XCJjaXJjbGVcIj09PWEubm9kZU5hbWU/Yz1kLmlzU3RlcFR5cGUoYik/ZC5pc1dpdGhpblN0ZXAoYSxkLmdldFlTY2FsZShiLmlkKShiLnZhbHVlKSk6ZC5pc1dpdGhpbkNpcmNsZShhLDEuNSpkLnBvaW50U2VsZWN0UihiKSk6XCJwYXRoXCI9PT1hLm5vZGVOYW1lJiYoYz1lLmNsYXNzZWQobC5iYXIpP2QuaXNXaXRoaW5CYXIoYSk6ITApOmM9ITEsY30saS5nZXRJbnRlcnBvbGF0ZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBiLmlzU3BsaW5lVHlwZShhKT9cImNhcmRpbmFsXCI6Yi5pc1N0ZXBUeXBlKGEpP2IuY29uZmlnLmxpbmVfc3RlcF90eXBlOlwibGluZWFyXCJ9LGkuaW5pdExpbmU9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EubWFpbi5zZWxlY3QoXCIuXCIrbC5jaGFydCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLmNoYXJ0TGluZXMpfSxpLnVwZGF0ZVRhcmdldHNGb3JMaW5lPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZD10aGlzLGU9ZC5jb25maWcsZj1kLmNsYXNzQ2hhcnRMaW5lLmJpbmQoZCksZz1kLmNsYXNzTGluZXMuYmluZChkKSxoPWQuY2xhc3NBcmVhcy5iaW5kKGQpLGk9ZC5jbGFzc0NpcmNsZXMuYmluZChkKSxqPWQuY2xhc3NGb2N1cy5iaW5kKGQpO2I9ZC5tYWluLnNlbGVjdChcIi5cIitsLmNoYXJ0TGluZXMpLnNlbGVjdEFsbChcIi5cIitsLmNoYXJ0TGluZSkuZGF0YShhKS5hdHRyKFwiY2xhc3NcIixmdW5jdGlvbihhKXtyZXR1cm4gZihhKStqKGEpfSksYz1iLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixmKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsXCJub25lXCIpLGMuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixnKSxjLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsaCksYy5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGZ1bmN0aW9uKGEpe3JldHVybiBkLmdlbmVyYXRlQ2xhc3MobC5zZWxlY3RlZENpcmNsZXMsYS5pZCl9KSxjLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsaSkuc3R5bGUoXCJjdXJzb3JcIixmdW5jdGlvbihhKXtyZXR1cm4gZS5kYXRhX3NlbGVjdGlvbl9pc3NlbGVjdGFibGUoYSk/XCJwb2ludGVyXCI6bnVsbH0pLGEuZm9yRWFjaChmdW5jdGlvbihhKXtkLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuc2VsZWN0ZWRDaXJjbGVzK2QuZ2V0VGFyZ2V0U2VsZWN0b3JTdWZmaXgoYS5pZCkpLnNlbGVjdEFsbChcIi5cIitsLnNlbGVjdGVkQ2lyY2xlKS5lYWNoKGZ1bmN0aW9uKGIpe2IudmFsdWU9YS52YWx1ZXNbYi5pbmRleF0udmFsdWV9KX0pfSxpLnVwZGF0ZUxpbmU9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztiLm1haW5MaW5lPWIubWFpbi5zZWxlY3RBbGwoXCIuXCIrbC5saW5lcykuc2VsZWN0QWxsKFwiLlwiK2wubGluZSkuZGF0YShiLmxpbmVEYXRhLmJpbmQoYikpLGIubWFpbkxpbmUuZW50ZXIoKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJjbGFzc1wiLGIuY2xhc3NMaW5lLmJpbmQoYikpLnN0eWxlKFwic3Ryb2tlXCIsYi5jb2xvciksYi5tYWluTGluZS5zdHlsZShcIm9wYWNpdHlcIixiLmluaXRpYWxPcGFjaXR5LmJpbmQoYikpLnN0eWxlKFwic2hhcGUtcmVuZGVyaW5nXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuaXNTdGVwVHlwZShhKT9cImNyaXNwRWRnZXNcIjpcIlwifSkuYXR0cihcInRyYW5zZm9ybVwiLG51bGwpLGIubWFpbkxpbmUuZXhpdCgpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5yZW1vdmUoKX0saS5yZWRyYXdMaW5lPWZ1bmN0aW9uKGEsYil7cmV0dXJuWyhiP3RoaXMubWFpbkxpbmUudHJhbnNpdGlvbigpOnRoaXMubWFpbkxpbmUpLmF0dHIoXCJkXCIsYSkuc3R5bGUoXCJzdHJva2VcIix0aGlzLmNvbG9yKS5zdHlsZShcIm9wYWNpdHlcIiwxKV19LGkuZ2VuZXJhdGVEcmF3TGluZT1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1jLmNvbmZpZyxlPWMuZDMuc3ZnLmxpbmUoKSxmPWMuZ2VuZXJhdGVHZXRMaW5lUG9pbnRzKGEsYiksZz1iP2MuZ2V0U3ViWVNjYWxlOmMuZ2V0WVNjYWxlLGg9ZnVuY3Rpb24oYSl7cmV0dXJuKGI/Yy5zdWJ4eDpjLnh4KS5jYWxsKGMsYSl9LGk9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZC5kYXRhX2dyb3Vwcy5sZW5ndGg+MD9mKGEsYilbMF1bMV06Zy5jYWxsKGMsYS5pZCkoYS52YWx1ZSl9O3JldHVybiBlPWQuYXhpc19yb3RhdGVkP2UueChpKS55KGgpOmUueChoKS55KGkpLGQubGluZV9jb25uZWN0TnVsbHx8KGU9ZS5kZWZpbmVkKGZ1bmN0aW9uKGEpe3JldHVybiBudWxsIT1hLnZhbHVlfSkpLGZ1bmN0aW9uKGEpe3ZhciBmLGg9ZC5saW5lX2Nvbm5lY3ROdWxsP2MuZmlsdGVyUmVtb3ZlTnVsbChhLnZhbHVlcyk6YS52YWx1ZXMsaT1iP2MueDpjLnN1Ylgsaj1nLmNhbGwoYyxhLmlkKSxrPTAsbD0wO3JldHVybiBjLmlzTGluZVR5cGUoYSk/ZC5kYXRhX3JlZ2lvbnNbYS5pZF0/Zj1jLmxpbmVXaXRoUmVnaW9ucyhoLGksaixkLmRhdGFfcmVnaW9uc1thLmlkXSk6KGMuaXNTdGVwVHlwZShhKSYmKGg9Yy5jb252ZXJ0VmFsdWVzVG9TdGVwKGgpKSxmPWUuaW50ZXJwb2xhdGUoYy5nZXRJbnRlcnBvbGF0ZShhKSkoaCkpOihoWzBdJiYoaz1pKGhbMF0ueCksbD1qKGhbMF0udmFsdWUpKSxmPWQuYXhpc19yb3RhdGVkP1wiTSBcIitsK1wiIFwiK2s6XCJNIFwiK2srXCIgXCIrbCksZj9mOlwiTSAwIDBcIn19LGkuZ2VuZXJhdGVHZXRMaW5lUG9pbnRzPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPWMuY29uZmlnLGU9YS5fX21heF9fKzEsZj1jLmdldFNoYXBlWCgwLGUsYSwhIWIpLGc9Yy5nZXRTaGFwZVkoISFiKSxoPWMuZ2V0U2hhcGVPZmZzZXQoYy5pc0xpbmVUeXBlLGEsISFiKSxpPWI/Yy5nZXRTdWJZU2NhbGU6Yy5nZXRZU2NhbGU7cmV0dXJuIGZ1bmN0aW9uKGEsYil7dmFyIGU9aS5jYWxsKGMsYS5pZCkoMCksaj1oKGEsYil8fGUsaz1mKGEpLGw9ZyhhKTtyZXR1cm4gZC5heGlzX3JvdGF0ZWQmJigwPGEudmFsdWUmJmU+bHx8YS52YWx1ZTwwJiZsPmUpJiYobD1lKSxbW2ssbC0oZS1qKV0sW2ssbC0oZS1qKV0sW2ssbC0oZS1qKV0sW2ssbC0oZS1qKV1dfX0saS5saW5lV2l0aFJlZ2lvbnM9ZnVuY3Rpb24oYSxiLGMsZCl7ZnVuY3Rpb24gZShhLGIpe3ZhciBjO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspaWYoYltjXS5zdGFydDxhJiZhPD1iW2NdLmVuZClyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBmKGEpe3JldHVyblwiTVwiK2FbMF1bMF0rXCIgXCIrYVswXVsxXStcIiBcIithWzFdWzBdK1wiIFwiK2FbMV1bMV19dmFyIGcsaCxpLGosayxsLG0sbixvLHIscyx0LHU9dGhpcyx2PXUuY29uZmlnLHc9LTEseD1cIk1cIix5PXUuaXNDYXRlZ29yaXplZCgpPy41OjAsej1bXTtpZihxKGQpKWZvcihnPTA7ZzxkLmxlbmd0aDtnKyspeltnXT17fSx6W2ddLnN0YXJ0PXAoZFtnXS5zdGFydCk/YVswXS54OnUuaXNUaW1lU2VyaWVzKCk/dS5wYXJzZURhdGUoZFtnXS5zdGFydCk6ZFtnXS5zdGFydCx6W2ddLmVuZD1wKGRbZ10uZW5kKT9hW2EubGVuZ3RoLTFdLng6dS5pc1RpbWVTZXJpZXMoKT91LnBhcnNlRGF0ZShkW2ddLmVuZCk6ZFtnXS5lbmQ7Zm9yKHM9di5heGlzX3JvdGF0ZWQ/ZnVuY3Rpb24oYSl7cmV0dXJuIGMoYS52YWx1ZSl9OmZ1bmN0aW9uKGEpe3JldHVybiBiKGEueCl9LHQ9di5heGlzX3JvdGF0ZWQ/ZnVuY3Rpb24oYSl7cmV0dXJuIGIoYS54KX06ZnVuY3Rpb24oYSl7cmV0dXJuIGMoYS52YWx1ZSl9LGk9dS5pc1RpbWVTZXJpZXMoKT9mdW5jdGlvbihhLGQsZSxnKXt2YXIgaCxpPWEueC5nZXRUaW1lKCksaj1kLngtYS54LGw9bmV3IERhdGUoaStqKmUpLG09bmV3IERhdGUoaStqKihlK2cpKTtyZXR1cm4gaD12LmF4aXNfcm90YXRlZD9bW2MoayhlKSksYihsKV0sW2MoayhlK2cpKSxiKG0pXV06W1tiKGwpLGMoayhlKSldLFtiKG0pLGMoayhlK2cpKV1dLGYoaCl9OmZ1bmN0aW9uKGEsZCxlLGcpe3ZhciBoO3JldHVybiBoPXYuYXhpc19yb3RhdGVkP1tbYyhrKGUpLCEwKSxiKGooZSkpXSxbYyhrKGUrZyksITApLGIoaihlK2cpKV1dOltbYihqKGUpLCEwKSxjKGsoZSkpXSxbYihqKGUrZyksITApLGMoayhlK2cpKV1dLGYoaCl9LGc9MDtnPGEubGVuZ3RoO2crKyl7aWYocCh6KXx8IWUoYVtnXS54LHopKXgrPVwiIFwiK3MoYVtnXSkrXCIgXCIrdChhW2ddKTtlbHNlIGZvcihqPXUuZ2V0U2NhbGUoYVtnLTFdLngreSxhW2ddLngreSx1LmlzVGltZVNlcmllcygpKSxrPXUuZ2V0U2NhbGUoYVtnLTFdLnZhbHVlLGFbZ10udmFsdWUpLGw9YihhW2ddLngpLWIoYVtnLTFdLngpLG09YyhhW2ddLnZhbHVlKS1jKGFbZy0xXS52YWx1ZSksbj1NYXRoLnNxcnQoTWF0aC5wb3cobCwyKStNYXRoLnBvdyhtLDIpKSxvPTIvbixyPTIqbyxoPW87MT49aDtoKz1yKXgrPWkoYVtnLTFdLGFbZ10saCxvKTt3PWFbZ10ueH1yZXR1cm4geH0saS51cGRhdGVBcmVhPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmQzO2IubWFpbkFyZWE9Yi5tYWluLnNlbGVjdEFsbChcIi5cIitsLmFyZWFzKS5zZWxlY3RBbGwoXCIuXCIrbC5hcmVhKS5kYXRhKGIubGluZURhdGEuYmluZChiKSksYi5tYWluQXJlYS5lbnRlcigpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImNsYXNzXCIsYi5jbGFzc0FyZWEuYmluZChiKSkuc3R5bGUoXCJmaWxsXCIsYi5jb2xvcikuc3R5bGUoXCJvcGFjaXR5XCIsZnVuY3Rpb24oKXtyZXR1cm4gYi5vcmdBcmVhT3BhY2l0eT0rYy5zZWxlY3QodGhpcykuc3R5bGUoXCJvcGFjaXR5XCIpLDB9KSxiLm1haW5BcmVhLnN0eWxlKFwib3BhY2l0eVwiLGIub3JnQXJlYU9wYWNpdHkpLGIubWFpbkFyZWEuZXhpdCgpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5yZW1vdmUoKX0saS5yZWRyYXdBcmVhPWZ1bmN0aW9uKGEsYil7cmV0dXJuWyhiP3RoaXMubWFpbkFyZWEudHJhbnNpdGlvbigpOnRoaXMubWFpbkFyZWEpLmF0dHIoXCJkXCIsYSkuc3R5bGUoXCJmaWxsXCIsdGhpcy5jb2xvcikuc3R5bGUoXCJvcGFjaXR5XCIsdGhpcy5vcmdBcmVhT3BhY2l0eSldfSxpLmdlbmVyYXRlRHJhd0FyZWE9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLGQ9Yy5jb25maWcsZT1jLmQzLnN2Zy5hcmVhKCksZj1jLmdlbmVyYXRlR2V0QXJlYVBvaW50cyhhLGIpLGc9Yj9jLmdldFN1YllTY2FsZTpjLmdldFlTY2FsZSxoPWZ1bmN0aW9uKGEpe3JldHVybihiP2Muc3VieHg6Yy54eCkuY2FsbChjLGEpfSxpPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGQuZGF0YV9ncm91cHMubGVuZ3RoPjA/ZihhLGIpWzBdWzFdOmcuY2FsbChjLGEuaWQpKGMuZ2V0QXJlYUJhc2VWYWx1ZShhLmlkKSl9LGo9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZC5kYXRhX2dyb3Vwcy5sZW5ndGg+MD9mKGEsYilbMV1bMV06Zy5jYWxsKGMsYS5pZCkoYS52YWx1ZSl9O3JldHVybiBlPWQuYXhpc19yb3RhdGVkP2UueDAoaSkueDEoaikueShoKTplLngoaCkueTAoaSkueTEoaiksZC5saW5lX2Nvbm5lY3ROdWxsfHwoZT1lLmRlZmluZWQoZnVuY3Rpb24oYSl7cmV0dXJuIG51bGwhPT1hLnZhbHVlfSkpLGZ1bmN0aW9uKGEpe3ZhciBiLGY9ZC5saW5lX2Nvbm5lY3ROdWxsP2MuZmlsdGVyUmVtb3ZlTnVsbChhLnZhbHVlcyk6YS52YWx1ZXMsZz0wLGg9MDtyZXR1cm4gYy5pc0FyZWFUeXBlKGEpPyhjLmlzU3RlcFR5cGUoYSkmJihmPWMuY29udmVydFZhbHVlc1RvU3RlcChmKSksYj1lLmludGVycG9sYXRlKGMuZ2V0SW50ZXJwb2xhdGUoYSkpKGYpKTooZlswXSYmKGc9Yy54KGZbMF0ueCksaD1jLmdldFlTY2FsZShhLmlkKShmWzBdLnZhbHVlKSksYj1kLmF4aXNfcm90YXRlZD9cIk0gXCIraCtcIiBcIitnOlwiTSBcIitnK1wiIFwiK2gpLGI/YjpcIk0gMCAwXCJ9fSxpLmdldEFyZWFCYXNlVmFsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gMH0saS5nZW5lcmF0ZUdldEFyZWFQb2ludHM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLGQ9Yy5jb25maWcsZT1hLl9fbWF4X18rMSxmPWMuZ2V0U2hhcGVYKDAsZSxhLCEhYiksZz1jLmdldFNoYXBlWSghIWIpLGg9Yy5nZXRTaGFwZU9mZnNldChjLmlzQXJlYVR5cGUsYSwhIWIpLGk9Yj9jLmdldFN1YllTY2FsZTpjLmdldFlTY2FsZTtyZXR1cm4gZnVuY3Rpb24oYSxiKXt2YXIgZT1pLmNhbGwoYyxhLmlkKSgwKSxqPWgoYSxiKXx8ZSxrPWYoYSksbD1nKGEpO3JldHVybiBkLmF4aXNfcm90YXRlZCYmKDA8YS52YWx1ZSYmZT5sfHxhLnZhbHVlPDAmJmw+ZSkmJihsPWUpLFtbayxqXSxbayxsLShlLWopXSxbayxsLShlLWopXSxbayxqXV19fSxpLnVwZGF0ZUNpcmNsZT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5tYWluQ2lyY2xlPWEubWFpbi5zZWxlY3RBbGwoXCIuXCIrbC5jaXJjbGVzKS5zZWxlY3RBbGwoXCIuXCIrbC5jaXJjbGUpLmRhdGEoYS5saW5lT3JTY2F0dGVyRGF0YS5iaW5kKGEpKSxhLm1haW5DaXJjbGUuZW50ZXIoKS5hcHBlbmQoXCJjaXJjbGVcIikuYXR0cihcImNsYXNzXCIsYS5jbGFzc0NpcmNsZS5iaW5kKGEpKS5hdHRyKFwiclwiLGEucG9pbnRSLmJpbmQoYSkpLnN0eWxlKFwiZmlsbFwiLGEuY29sb3IpLGEubWFpbkNpcmNsZS5zdHlsZShcIm9wYWNpdHlcIixhLmluaXRpYWxPcGFjaXR5Rm9yQ2lyY2xlLmJpbmQoYSkpLGEubWFpbkNpcmNsZS5leGl0KCkucmVtb3ZlKCl9LGkucmVkcmF3Q2lyY2xlPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuc2VsZWN0ZWRDaXJjbGUpO3JldHVyblsoYz90aGlzLm1haW5DaXJjbGUudHJhbnNpdGlvbigpOnRoaXMubWFpbkNpcmNsZSkuc3R5bGUoXCJvcGFjaXR5XCIsdGhpcy5vcGFjaXR5Rm9yQ2lyY2xlLmJpbmQodGhpcykpLnN0eWxlKFwiZmlsbFwiLHRoaXMuY29sb3IpLmF0dHIoXCJjeFwiLGEpLmF0dHIoXCJjeVwiLGIpLChjP2QudHJhbnNpdGlvbigpOmQpLmF0dHIoXCJjeFwiLGEpLmF0dHIoXCJjeVwiLGIpXX0saS5jaXJjbGVYPWZ1bmN0aW9uKGEpe3JldHVybiBhLnh8fDA9PT1hLng/dGhpcy54KGEueCk6bnVsbH0saS51cGRhdGVDaXJjbGVZPWZ1bmN0aW9uKCl7dmFyIGEsYixjPXRoaXM7Yy5jb25maWcuZGF0YV9ncm91cHMubGVuZ3RoPjA/KGE9Yy5nZXRTaGFwZUluZGljZXMoYy5pc0xpbmVUeXBlKSxiPWMuZ2VuZXJhdGVHZXRMaW5lUG9pbnRzKGEpLGMuY2lyY2xlWT1mdW5jdGlvbihhLGMpe3JldHVybiBiKGEsYylbMF1bMV19KTpjLmNpcmNsZVk9ZnVuY3Rpb24oYSl7cmV0dXJuIGMuZ2V0WVNjYWxlKGEuaWQpKGEudmFsdWUpfX0saS5nZXRDaXJjbGVzPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcztyZXR1cm4oYj9jLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuY2lyY2xlcytjLmdldFRhcmdldFNlbGVjdG9yU3VmZml4KGIpKTpjLm1haW4pLnNlbGVjdEFsbChcIi5cIitsLmNpcmNsZSsobShhKT9cIi1cIithOlwiXCIpKX0saS5leHBhbmRDaXJjbGVzPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLGU9ZC5wb2ludEV4cGFuZGVkUi5iaW5kKGQpO2MmJmQudW5leHBhbmRDaXJjbGVzKCksZC5nZXRDaXJjbGVzKGEsYikuY2xhc3NlZChsLkVYUEFOREVELCEwKS5hdHRyKFwiclwiLGUpfSxpLnVuZXhwYW5kQ2lyY2xlcz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5wb2ludFIuYmluZChiKTtiLmdldENpcmNsZXMoYSkuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIGIuZDMuc2VsZWN0KHRoaXMpLmNsYXNzZWQobC5FWFBBTkRFRCl9KS5jbGFzc2VkKGwuRVhQQU5ERUQsITEpLmF0dHIoXCJyXCIsYyl9LGkucG9pbnRSPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmNvbmZpZztyZXR1cm4gYi5pc1N0ZXBUeXBlKGEpPzA6bihjLnBvaW50X3IpP2MucG9pbnRfcihhKTpjLnBvaW50X3J9LGkucG9pbnRFeHBhbmRlZFI9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnO3JldHVybiBjLnBvaW50X2ZvY3VzX2V4cGFuZF9lbmFibGVkP2MucG9pbnRfZm9jdXNfZXhwYW5kX3I/Yy5wb2ludF9mb2N1c19leHBhbmRfcjoxLjc1KmIucG9pbnRSKGEpOmIucG9pbnRSKGEpfSxpLnBvaW50U2VsZWN0Uj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWc7cmV0dXJuIGMucG9pbnRfc2VsZWN0X3I/Yy5wb2ludF9zZWxlY3Rfcjo0KmIucG9pbnRSKGEpfSxpLmlzV2l0aGluQ2lyY2xlPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5kMyxkPWMubW91c2UoYSksZT1jLnNlbGVjdChhKSxmPStlLmF0dHIoXCJjeFwiKSxnPStlLmF0dHIoXCJjeVwiKTtyZXR1cm4gTWF0aC5zcXJ0KE1hdGgucG93KGYtZFswXSwyKStNYXRoLnBvdyhnLWRbMV0sMikpPGJ9LGkuaXNXaXRoaW5TdGVwPWZ1bmN0aW9uKGEsYil7cmV0dXJuIE1hdGguYWJzKGItdGhpcy5kMy5tb3VzZShhKVsxXSk8MzB9LGkuaW5pdEJhcj1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5tYWluLnNlbGVjdChcIi5cIitsLmNoYXJ0KS5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGwuY2hhcnRCYXJzKX0saS51cGRhdGVUYXJnZXRzRm9yQmFyPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZD10aGlzLGU9ZC5jb25maWcsZj1kLmNsYXNzQ2hhcnRCYXIuYmluZChkKSxnPWQuY2xhc3NCYXJzLmJpbmQoZCksaD1kLmNsYXNzRm9jdXMuYmluZChkKTtiPWQubWFpbi5zZWxlY3QoXCIuXCIrbC5jaGFydEJhcnMpLnNlbGVjdEFsbChcIi5cIitsLmNoYXJ0QmFyKS5kYXRhKGEpLmF0dHIoXCJjbGFzc1wiLGZ1bmN0aW9uKGEpe3JldHVybiBmKGEpK2goYSl9KSxjPWIuZW50ZXIoKS5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGYpLnN0eWxlKFwib3BhY2l0eVwiLDApLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIixcIm5vbmVcIiksYy5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGcpLnN0eWxlKFwiY3Vyc29yXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGUuZGF0YV9zZWxlY3Rpb25faXNzZWxlY3RhYmxlKGEpP1wicG9pbnRlclwiOm51bGx9KX0saS51cGRhdGVCYXI9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuYmFyRGF0YS5iaW5kKGIpLGQ9Yi5jbGFzc0Jhci5iaW5kKGIpLGU9Yi5pbml0aWFsT3BhY2l0eS5iaW5kKGIpLGY9ZnVuY3Rpb24oYSl7cmV0dXJuIGIuY29sb3IoYS5pZCl9O2IubWFpbkJhcj1iLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuYmFycykuc2VsZWN0QWxsKFwiLlwiK2wuYmFyKS5kYXRhKGMpLGIubWFpbkJhci5lbnRlcigpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImNsYXNzXCIsZCkuc3R5bGUoXCJzdHJva2VcIixmKS5zdHlsZShcImZpbGxcIixmKSxiLm1haW5CYXIuc3R5bGUoXCJvcGFjaXR5XCIsZSksYi5tYWluQmFyLmV4aXQoKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oYSkuc3R5bGUoXCJvcGFjaXR5XCIsMCkucmVtb3ZlKCl9LGkucmVkcmF3QmFyPWZ1bmN0aW9uKGEsYil7cmV0dXJuWyhiP3RoaXMubWFpbkJhci50cmFuc2l0aW9uKCk6dGhpcy5tYWluQmFyKS5hdHRyKFwiZFwiLGEpLnN0eWxlKFwiZmlsbFwiLHRoaXMuY29sb3IpLnN0eWxlKFwib3BhY2l0eVwiLDEpXX0saS5nZXRCYXJXPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPWMuY29uZmlnLGU9XCJudW1iZXJcIj09dHlwZW9mIGQuYmFyX3dpZHRoP2QuYmFyX3dpZHRoOmI/YS50aWNrSW50ZXJ2YWwoKSpkLmJhcl93aWR0aF9yYXRpby9iOjA7cmV0dXJuIGQuYmFyX3dpZHRoX21heCYmZT5kLmJhcl93aWR0aF9tYXg/ZC5iYXJfd2lkdGhfbWF4OmV9LGkuZ2V0QmFycz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXM7cmV0dXJuKGI/Yy5tYWluLnNlbGVjdEFsbChcIi5cIitsLmJhcnMrYy5nZXRUYXJnZXRTZWxlY3RvclN1ZmZpeChiKSk6Yy5tYWluKS5zZWxlY3RBbGwoXCIuXCIrbC5iYXIrKG0oYSk/XCItXCIrYTpcIlwiKSl9LGkuZXhwYW5kQmFycz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcztjJiZkLnVuZXhwYW5kQmFycygpLGQuZ2V0QmFycyhhLGIpLmNsYXNzZWQobC5FWFBBTkRFRCwhMCl9LGkudW5leHBhbmRCYXJzPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7Yi5nZXRCYXJzKGEpLmNsYXNzZWQobC5FWFBBTkRFRCwhMSl9LGkuZ2VuZXJhdGVEcmF3QmFyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPWMuY29uZmlnLGU9Yy5nZW5lcmF0ZUdldEJhclBvaW50cyhhLGIpO3JldHVybiBmdW5jdGlvbihhLGIpe3ZhciBjPWUoYSxiKSxmPWQuYXhpc19yb3RhdGVkPzE6MCxnPWQuYXhpc19yb3RhdGVkPzA6MSxoPVwiTSBcIitjWzBdW2ZdK1wiLFwiK2NbMF1bZ10rXCIgTFwiK2NbMV1bZl0rXCIsXCIrY1sxXVtnXStcIiBMXCIrY1syXVtmXStcIixcIitjWzJdW2ddK1wiIExcIitjWzNdW2ZdK1wiLFwiK2NbM11bZ10rXCIgelwiO3JldHVybiBofX0saS5nZW5lcmF0ZUdldEJhclBvaW50cz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1iP2Muc3ViWEF4aXM6Yy54QXhpcyxlPWEuX19tYXhfXysxLGY9Yy5nZXRCYXJXKGQsZSksZz1jLmdldFNoYXBlWChmLGUsYSwhIWIpLGg9Yy5nZXRTaGFwZVkoISFiKSxpPWMuZ2V0U2hhcGVPZmZzZXQoYy5pc0JhclR5cGUsYSwhIWIpLGo9Yj9jLmdldFN1YllTY2FsZTpjLmdldFlTY2FsZTtcbnJldHVybiBmdW5jdGlvbihhLGIpe3ZhciBkPWouY2FsbChjLGEuaWQpKDApLGU9aShhLGIpfHxkLGs9ZyhhKSxsPWgoYSk7cmV0dXJuIGMuY29uZmlnLmF4aXNfcm90YXRlZCYmKDA8YS52YWx1ZSYmZD5sfHxhLnZhbHVlPDAmJmw+ZCkmJihsPWQpLFtbayxlXSxbayxsLShkLWUpXSxbaytmLGwtKGQtZSldLFtrK2YsZV1dfX0saS5pc1dpdGhpbkJhcj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmQzLm1vdXNlKGEpLGM9YS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxkPWEucGF0aFNlZ0xpc3QuZ2V0SXRlbSgwKSxlPWEucGF0aFNlZ0xpc3QuZ2V0SXRlbSgxKSxmPU1hdGgubWluKGQueCxlLngpLGc9TWF0aC5taW4oZC55LGUueSksaD1jLndpZHRoLGk9Yy5oZWlnaHQsaj0yLGs9Zi1qLGw9ZitoK2osbT1nK2kraixuPWctajtyZXR1cm4gazxiWzBdJiZiWzBdPGwmJm48YlsxXSYmYlsxXTxtfSxpLmluaXRUZXh0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpczthLm1haW4uc2VsZWN0KFwiLlwiK2wuY2hhcnQpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsbC5jaGFydFRleHRzKSxhLm1haW5UZXh0PWEuZDMuc2VsZWN0QWxsKFtdKX0saS51cGRhdGVUYXJnZXRzRm9yVGV4dD1mdW5jdGlvbihhKXt2YXIgYixjLGQ9dGhpcyxlPWQuY2xhc3NDaGFydFRleHQuYmluZChkKSxmPWQuY2xhc3NUZXh0cy5iaW5kKGQpLGc9ZC5jbGFzc0ZvY3VzLmJpbmQoZCk7Yj1kLm1haW4uc2VsZWN0KFwiLlwiK2wuY2hhcnRUZXh0cykuc2VsZWN0QWxsKFwiLlwiK2wuY2hhcnRUZXh0KS5kYXRhKGEpLmF0dHIoXCJjbGFzc1wiLGZ1bmN0aW9uKGEpe3JldHVybiBlKGEpK2coYSl9KSxjPWIuZW50ZXIoKS5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGUpLnN0eWxlKFwib3BhY2l0eVwiLDApLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIixcIm5vbmVcIiksYy5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGYpfSxpLnVwZGF0ZVRleHQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnLGQ9Yi5iYXJPckxpbmVEYXRhLmJpbmQoYiksZT1iLmNsYXNzVGV4dC5iaW5kKGIpO2IubWFpblRleHQ9Yi5tYWluLnNlbGVjdEFsbChcIi5cIitsLnRleHRzKS5zZWxlY3RBbGwoXCIuXCIrbC50ZXh0KS5kYXRhKGQpLGIubWFpblRleHQuZW50ZXIoKS5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJjbGFzc1wiLGUpLmF0dHIoXCJ0ZXh0LWFuY2hvclwiLGZ1bmN0aW9uKGEpe3JldHVybiBjLmF4aXNfcm90YXRlZD9hLnZhbHVlPDA/XCJlbmRcIjpcInN0YXJ0XCI6XCJtaWRkbGVcIn0pLnN0eWxlKFwic3Ryb2tlXCIsXCJub25lXCIpLnN0eWxlKFwiZmlsbFwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNvbG9yKGEpfSkuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIiwwKSxiLm1haW5UZXh0LnRleHQoZnVuY3Rpb24oYSxjLGQpe3JldHVybiBiLmRhdGFMYWJlbEZvcm1hdChhLmlkKShhLnZhbHVlLGEuaWQsYyxkKX0pLGIubWFpblRleHQuZXhpdCgpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5zdHlsZShcImZpbGwtb3BhY2l0eVwiLDApLnJlbW92ZSgpfSxpLnJlZHJhd1RleHQ9ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuWyhkP3RoaXMubWFpblRleHQudHJhbnNpdGlvbigpOnRoaXMubWFpblRleHQpLmF0dHIoXCJ4XCIsYSkuYXR0cihcInlcIixiKS5zdHlsZShcImZpbGxcIix0aGlzLmNvbG9yKS5zdHlsZShcImZpbGwtb3BhY2l0eVwiLGM/MDp0aGlzLm9wYWNpdHlGb3JUZXh0LmJpbmQodGhpcykpXX0saS5nZXRUZXh0UmVjdD1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9dGhpcy5kMy5zZWxlY3QoXCJib2R5XCIpLmFwcGVuZChcImRpdlwiKS5jbGFzc2VkKFwiYzNcIiwhMCksZT1kLmFwcGVuZChcInN2Z1wiKS5zdHlsZShcInZpc2liaWxpdHlcIixcImhpZGRlblwiKS5zdHlsZShcInBvc2l0aW9uXCIsXCJmaXhlZFwiKS5zdHlsZShcInRvcFwiLDApLnN0eWxlKFwibGVmdFwiLDApO3JldHVybiBlLnNlbGVjdEFsbChcIi5kdW1teVwiKS5kYXRhKFthXSkuZW50ZXIoKS5hcHBlbmQoXCJ0ZXh0XCIpLmNsYXNzZWQoYj9iOlwiXCIsITApLnRleHQoYSkuZWFjaChmdW5jdGlvbigpe2M9dGhpcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKX0pLGQucmVtb3ZlKCksY30saS5nZW5lcmF0ZVhZRm9yVGV4dD1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT10aGlzLGY9ZS5nZW5lcmF0ZUdldEFyZWFQb2ludHMoYSwhMSksZz1lLmdlbmVyYXRlR2V0QmFyUG9pbnRzKGIsITEpLGg9ZS5nZW5lcmF0ZUdldExpbmVQb2ludHMoYywhMSksaT1kP2UuZ2V0WEZvclRleHQ6ZS5nZXRZRm9yVGV4dDtyZXR1cm4gZnVuY3Rpb24oYSxiKXt2YXIgYz1lLmlzQXJlYVR5cGUoYSk/ZjplLmlzQmFyVHlwZShhKT9nOmg7cmV0dXJuIGkuY2FsbChlLGMoYSxiKSxhLHRoaXMpfX0saS5nZXRYRm9yVGV4dD1mdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmPXRoaXMsZz1jLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybiBmLmNvbmZpZy5heGlzX3JvdGF0ZWQ/KGU9Zi5pc0JhclR5cGUoYik/NDo2LGQ9YVsyXVsxXStlKihiLnZhbHVlPDA/LTE6MSkpOmQ9Zi5oYXNUeXBlKFwiYmFyXCIpPyhhWzJdWzBdK2FbMF1bMF0pLzI6YVswXVswXSxudWxsPT09Yi52YWx1ZSYmKGQ+Zi53aWR0aD9kPWYud2lkdGgtZy53aWR0aDowPmQmJihkPTQpKSxkfSxpLmdldFlGb3JUZXh0PWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlPXRoaXMsZj1jLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybiBlLmNvbmZpZy5heGlzX3JvdGF0ZWQ/ZD0oYVswXVswXSthWzJdWzBdKy42KmYuaGVpZ2h0KS8yOihkPWFbMl1bMV0sYi52YWx1ZTwwPyhkKz1mLmhlaWdodCxlLmlzQmFyVHlwZShiKSYmZS5pc1NhZmFyaSgpP2QtPTM6IWUuaXNCYXJUeXBlKGIpJiZlLmlzQ2hyb21lKCkmJihkKz0zKSk6ZCs9ZS5pc0JhclR5cGUoYik/LTM6LTYpLG51bGwhPT1iLnZhbHVlfHxlLmNvbmZpZy5heGlzX3JvdGF0ZWR8fChkPGYuaGVpZ2h0P2Q9Zi5oZWlnaHQ6ZD50aGlzLmhlaWdodCYmKGQ9dGhpcy5oZWlnaHQtNCkpLGR9LGkuc2V0VGFyZ2V0VHlwZT1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1jLmNvbmZpZztjLm1hcFRvVGFyZ2V0SWRzKGEpLmZvckVhY2goZnVuY3Rpb24oYSl7Yy53aXRob3V0RmFkZUluW2FdPWI9PT1kLmRhdGFfdHlwZXNbYV0sZC5kYXRhX3R5cGVzW2FdPWJ9KSxhfHwoZC5kYXRhX3R5cGU9Yil9LGkuaGFzVHlwZT1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1jLmNvbmZpZy5kYXRhX3R5cGVzLGU9ITE7cmV0dXJuIGI9Ynx8Yy5kYXRhLnRhcmdldHMsYiYmYi5sZW5ndGg/Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBjPWRbYi5pZF07KGMmJmMuaW5kZXhPZihhKT49MHx8IWMmJlwibGluZVwiPT09YSkmJihlPSEwKX0pOk9iamVjdC5rZXlzKGQpLmxlbmd0aD9PYmplY3Qua2V5cyhkKS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2RbYl09PT1hJiYoZT0hMCl9KTplPWMuY29uZmlnLmRhdGFfdHlwZT09PWEsZX0saS5oYXNBcmNUeXBlPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmhhc1R5cGUoXCJwaWVcIixhKXx8dGhpcy5oYXNUeXBlKFwiZG9udXRcIixhKXx8dGhpcy5oYXNUeXBlKFwiZ2F1Z2VcIixhKX0saS5pc0xpbmVUeXBlPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuY29uZmlnLGM9byhhKT9hOmEuaWQ7cmV0dXJuIWIuZGF0YV90eXBlc1tjXXx8W1wibGluZVwiLFwic3BsaW5lXCIsXCJhcmVhXCIsXCJhcmVhLXNwbGluZVwiLFwic3RlcFwiLFwiYXJlYS1zdGVwXCJdLmluZGV4T2YoYi5kYXRhX3R5cGVzW2NdKT49MH0saS5pc1N0ZXBUeXBlPWZ1bmN0aW9uKGEpe3ZhciBiPW8oYSk/YTphLmlkO3JldHVybltcInN0ZXBcIixcImFyZWEtc3RlcFwiXS5pbmRleE9mKHRoaXMuY29uZmlnLmRhdGFfdHlwZXNbYl0pPj0wfSxpLmlzU3BsaW5lVHlwZT1mdW5jdGlvbihhKXt2YXIgYj1vKGEpP2E6YS5pZDtyZXR1cm5bXCJzcGxpbmVcIixcImFyZWEtc3BsaW5lXCJdLmluZGV4T2YodGhpcy5jb25maWcuZGF0YV90eXBlc1tiXSk+PTB9LGkuaXNBcmVhVHlwZT1mdW5jdGlvbihhKXt2YXIgYj1vKGEpP2E6YS5pZDtyZXR1cm5bXCJhcmVhXCIsXCJhcmVhLXNwbGluZVwiLFwiYXJlYS1zdGVwXCJdLmluZGV4T2YodGhpcy5jb25maWcuZGF0YV90eXBlc1tiXSk+PTB9LGkuaXNCYXJUeXBlPWZ1bmN0aW9uKGEpe3ZhciBiPW8oYSk/YTphLmlkO3JldHVyblwiYmFyXCI9PT10aGlzLmNvbmZpZy5kYXRhX3R5cGVzW2JdfSxpLmlzU2NhdHRlclR5cGU9ZnVuY3Rpb24oYSl7dmFyIGI9byhhKT9hOmEuaWQ7cmV0dXJuXCJzY2F0dGVyXCI9PT10aGlzLmNvbmZpZy5kYXRhX3R5cGVzW2JdfSxpLmlzUGllVHlwZT1mdW5jdGlvbihhKXt2YXIgYj1vKGEpP2E6YS5pZDtyZXR1cm5cInBpZVwiPT09dGhpcy5jb25maWcuZGF0YV90eXBlc1tiXX0saS5pc0dhdWdlVHlwZT1mdW5jdGlvbihhKXt2YXIgYj1vKGEpP2E6YS5pZDtyZXR1cm5cImdhdWdlXCI9PT10aGlzLmNvbmZpZy5kYXRhX3R5cGVzW2JdfSxpLmlzRG9udXRUeXBlPWZ1bmN0aW9uKGEpe3ZhciBiPW8oYSk/YTphLmlkO3JldHVyblwiZG9udXRcIj09PXRoaXMuY29uZmlnLmRhdGFfdHlwZXNbYl19LGkuaXNBcmNUeXBlPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmlzUGllVHlwZShhKXx8dGhpcy5pc0RvbnV0VHlwZShhKXx8dGhpcy5pc0dhdWdlVHlwZShhKX0saS5saW5lRGF0YT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pc0xpbmVUeXBlKGEpP1thXTpbXX0saS5hcmNEYXRhPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmlzQXJjVHlwZShhLmRhdGEpP1thXTpbXX0saS5iYXJEYXRhPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmlzQmFyVHlwZShhKT9hLnZhbHVlczpbXX0saS5saW5lT3JTY2F0dGVyRGF0YT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pc0xpbmVUeXBlKGEpfHx0aGlzLmlzU2NhdHRlclR5cGUoYSk/YS52YWx1ZXM6W119LGkuYmFyT3JMaW5lRGF0YT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pc0JhclR5cGUoYSl8fHRoaXMuaXNMaW5lVHlwZShhKT9hLnZhbHVlczpbXX0saS5pbml0R3JpZD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmNvbmZpZyxjPWEuZDM7YS5ncmlkPWEubWFpbi5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGlwLXBhdGhcIixhLmNsaXBQYXRoRm9yR3JpZCkuYXR0cihcImNsYXNzXCIsbC5ncmlkKSxiLmdyaWRfeF9zaG93JiZhLmdyaWQuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLnhncmlkcyksYi5ncmlkX3lfc2hvdyYmYS5ncmlkLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsbC55Z3JpZHMpLGIuZ3JpZF9mb2N1c19zaG93JiZhLmdyaWQuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLnhncmlkRm9jdXMpLmFwcGVuZChcImxpbmVcIikuYXR0cihcImNsYXNzXCIsbC54Z3JpZEZvY3VzKSxhLnhncmlkPWMuc2VsZWN0QWxsKFtdKSxiLmdyaWRfbGluZXNfZnJvbnR8fGEuaW5pdEdyaWRMaW5lcygpfSxpLmluaXRHcmlkTGluZXM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5kMzthLmdyaWRMaW5lcz1hLm1haW4uYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xpcC1wYXRoXCIsYS5jbGlwUGF0aEZvckdyaWQpLmF0dHIoXCJjbGFzc1wiLGwuZ3JpZCtcIiBcIitsLmdyaWRMaW5lcyksYS5ncmlkTGluZXMuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLnhncmlkTGluZXMpLGEuZ3JpZExpbmVzLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsbC55Z3JpZExpbmVzKSxhLnhncmlkTGluZXM9Yi5zZWxlY3RBbGwoW10pfSxpLnVwZGF0ZVhHcmlkPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmNvbmZpZyxkPWIuZDMsZT1iLmdlbmVyYXRlR3JpZERhdGEoYy5ncmlkX3hfdHlwZSxiLngpLGY9Yi5pc0NhdGVnb3JpemVkKCk/Yi54QXhpcy50aWNrT2Zmc2V0KCk6MDtiLnhncmlkQXR0cj1jLmF4aXNfcm90YXRlZD97eDE6MCx4MjpiLndpZHRoLHkxOmZ1bmN0aW9uKGEpe3JldHVybiBiLngoYSktZn0seTI6ZnVuY3Rpb24oYSl7cmV0dXJuIGIueChhKS1mfX06e3gxOmZ1bmN0aW9uKGEpe3JldHVybiBiLngoYSkrZn0seDI6ZnVuY3Rpb24oYSl7cmV0dXJuIGIueChhKStmfSx5MTowLHkyOmIuaGVpZ2h0fSxiLnhncmlkPWIubWFpbi5zZWxlY3QoXCIuXCIrbC54Z3JpZHMpLnNlbGVjdEFsbChcIi5cIitsLnhncmlkKS5kYXRhKGUpLGIueGdyaWQuZW50ZXIoKS5hcHBlbmQoXCJsaW5lXCIpLmF0dHIoXCJjbGFzc1wiLGwueGdyaWQpLGF8fGIueGdyaWQuYXR0cihiLnhncmlkQXR0cikuc3R5bGUoXCJvcGFjaXR5XCIsZnVuY3Rpb24oKXtyZXR1cm4rZC5zZWxlY3QodGhpcykuYXR0cihjLmF4aXNfcm90YXRlZD9cInkxXCI6XCJ4MVwiKT09PShjLmF4aXNfcm90YXRlZD9iLmhlaWdodDowKT8wOjF9KSxiLnhncmlkLmV4aXQoKS5yZW1vdmUoKX0saS51cGRhdGVZR3JpZD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmNvbmZpZyxjPWEueUF4aXMudGlja1ZhbHVlcygpfHxhLnkudGlja3MoYi5ncmlkX3lfdGlja3MpO2EueWdyaWQ9YS5tYWluLnNlbGVjdChcIi5cIitsLnlncmlkcykuc2VsZWN0QWxsKFwiLlwiK2wueWdyaWQpLmRhdGEoYyksYS55Z3JpZC5lbnRlcigpLmFwcGVuZChcImxpbmVcIikuYXR0cihcImNsYXNzXCIsbC55Z3JpZCksYS55Z3JpZC5hdHRyKFwieDFcIixiLmF4aXNfcm90YXRlZD9hLnk6MCkuYXR0cihcIngyXCIsYi5heGlzX3JvdGF0ZWQ/YS55OmEud2lkdGgpLmF0dHIoXCJ5MVwiLGIuYXhpc19yb3RhdGVkPzA6YS55KS5hdHRyKFwieTJcIixiLmF4aXNfcm90YXRlZD9hLmhlaWdodDphLnkpLGEueWdyaWQuZXhpdCgpLnJlbW92ZSgpLGEuc21vb3RoTGluZXMoYS55Z3JpZCxcImdyaWRcIil9LGkuZ3JpZFRleHRBbmNob3I9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucG9zaXRpb24/YS5wb3NpdGlvbjpcImVuZFwifSxpLmdyaWRUZXh0RHg9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdGFydFwiPT09YS5wb3NpdGlvbj80OlwibWlkZGxlXCI9PT1hLnBvc2l0aW9uPzA6LTR9LGkueEdyaWRUZXh0WD1mdW5jdGlvbihhKXtyZXR1cm5cInN0YXJ0XCI9PT1hLnBvc2l0aW9uPy10aGlzLmhlaWdodDpcIm1pZGRsZVwiPT09YS5wb3NpdGlvbj8tdGhpcy5oZWlnaHQvMjowfSxpLnlHcmlkVGV4dFg9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdGFydFwiPT09YS5wb3NpdGlvbj8wOlwibWlkZGxlXCI9PT1hLnBvc2l0aW9uP3RoaXMud2lkdGgvMjp0aGlzLndpZHRofSxpLnVwZGF0ZUdyaWQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpcyxmPWUubWFpbixnPWUuY29uZmlnO2UuZ3JpZC5zdHlsZShcInZpc2liaWxpdHlcIixlLmhhc0FyY1R5cGUoKT9cImhpZGRlblwiOlwidmlzaWJsZVwiKSxmLnNlbGVjdChcImxpbmUuXCIrbC54Z3JpZEZvY3VzKS5zdHlsZShcInZpc2liaWxpdHlcIixcImhpZGRlblwiKSxnLmdyaWRfeF9zaG93JiZlLnVwZGF0ZVhHcmlkKCksZS54Z3JpZExpbmVzPWYuc2VsZWN0KFwiLlwiK2wueGdyaWRMaW5lcykuc2VsZWN0QWxsKFwiLlwiK2wueGdyaWRMaW5lKS5kYXRhKGcuZ3JpZF94X2xpbmVzKSxiPWUueGdyaWRMaW5lcy5lbnRlcigpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGwueGdyaWRMaW5lKyhhW1wiY2xhc3NcIl0/XCIgXCIrYVtcImNsYXNzXCJdOlwiXCIpfSksYi5hcHBlbmQoXCJsaW5lXCIpLnN0eWxlKFwib3BhY2l0eVwiLDApLGIuYXBwZW5kKFwidGV4dFwiKS5hdHRyKFwidGV4dC1hbmNob3JcIixlLmdyaWRUZXh0QW5jaG9yKS5hdHRyKFwidHJhbnNmb3JtXCIsZy5heGlzX3JvdGF0ZWQ/XCJcIjpcInJvdGF0ZSgtOTApXCIpLmF0dHIoXCJkeFwiLGUuZ3JpZFRleHREeCkuYXR0cihcImR5XCIsLTUpLnN0eWxlKFwib3BhY2l0eVwiLDApLGUueGdyaWRMaW5lcy5leGl0KCkudHJhbnNpdGlvbigpLmR1cmF0aW9uKGEpLnN0eWxlKFwib3BhY2l0eVwiLDApLnJlbW92ZSgpLGcuZ3JpZF95X3Nob3cmJmUudXBkYXRlWUdyaWQoKSxlLnlncmlkTGluZXM9Zi5zZWxlY3QoXCIuXCIrbC55Z3JpZExpbmVzKS5zZWxlY3RBbGwoXCIuXCIrbC55Z3JpZExpbmUpLmRhdGEoZy5ncmlkX3lfbGluZXMpLGM9ZS55Z3JpZExpbmVzLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixmdW5jdGlvbihhKXtyZXR1cm4gbC55Z3JpZExpbmUrKGFbXCJjbGFzc1wiXT9cIiBcIithW1wiY2xhc3NcIl06XCJcIil9KSxjLmFwcGVuZChcImxpbmVcIikuc3R5bGUoXCJvcGFjaXR5XCIsMCksYy5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJ0ZXh0LWFuY2hvclwiLGUuZ3JpZFRleHRBbmNob3IpLmF0dHIoXCJ0cmFuc2Zvcm1cIixnLmF4aXNfcm90YXRlZD9cInJvdGF0ZSgtOTApXCI6XCJcIikuYXR0cihcImR4XCIsZS5ncmlkVGV4dER4KS5hdHRyKFwiZHlcIiwtNSkuc3R5bGUoXCJvcGFjaXR5XCIsMCksZD1lLnl2LmJpbmQoZSksZS55Z3JpZExpbmVzLnNlbGVjdChcImxpbmVcIikudHJhbnNpdGlvbigpLmR1cmF0aW9uKGEpLmF0dHIoXCJ4MVwiLGcuYXhpc19yb3RhdGVkP2Q6MCkuYXR0cihcIngyXCIsZy5heGlzX3JvdGF0ZWQ/ZDplLndpZHRoKS5hdHRyKFwieTFcIixnLmF4aXNfcm90YXRlZD8wOmQpLmF0dHIoXCJ5MlwiLGcuYXhpc19yb3RhdGVkP2UuaGVpZ2h0OmQpLnN0eWxlKFwib3BhY2l0eVwiLDEpLGUueWdyaWRMaW5lcy5zZWxlY3QoXCJ0ZXh0XCIpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5hdHRyKFwieFwiLGcuYXhpc19yb3RhdGVkP2UueEdyaWRUZXh0WC5iaW5kKGUpOmUueUdyaWRUZXh0WC5iaW5kKGUpKS5hdHRyKFwieVwiLGQpLnRleHQoZnVuY3Rpb24oYSl7cmV0dXJuIGEudGV4dH0pLnN0eWxlKFwib3BhY2l0eVwiLDEpLGUueWdyaWRMaW5lcy5leGl0KCkudHJhbnNpdGlvbigpLmR1cmF0aW9uKGEpLnN0eWxlKFwib3BhY2l0eVwiLDApLnJlbW92ZSgpfSxpLnJlZHJhd0dyaWQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnLGQ9Yi54di5iaW5kKGIpLGU9Yi54Z3JpZExpbmVzLnNlbGVjdChcImxpbmVcIiksZj1iLnhncmlkTGluZXMuc2VsZWN0KFwidGV4dFwiKTtyZXR1cm5bKGE/ZS50cmFuc2l0aW9uKCk6ZSkuYXR0cihcIngxXCIsYy5heGlzX3JvdGF0ZWQ/MDpkKS5hdHRyKFwieDJcIixjLmF4aXNfcm90YXRlZD9iLndpZHRoOmQpLmF0dHIoXCJ5MVwiLGMuYXhpc19yb3RhdGVkP2Q6MCkuYXR0cihcInkyXCIsYy5heGlzX3JvdGF0ZWQ/ZDpiLmhlaWdodCkuc3R5bGUoXCJvcGFjaXR5XCIsMSksKGE/Zi50cmFuc2l0aW9uKCk6ZikuYXR0cihcInhcIixjLmF4aXNfcm90YXRlZD9iLnlHcmlkVGV4dFguYmluZChiKTpiLnhHcmlkVGV4dFguYmluZChiKSkuYXR0cihcInlcIixkKS50ZXh0KGZ1bmN0aW9uKGEpe3JldHVybiBhLnRleHR9KS5zdHlsZShcIm9wYWNpdHlcIiwxKV19LGkuc2hvd1hHcmlkRm9jdXM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnLGQ9YS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIGEmJm0oYS52YWx1ZSl9KSxlPWIubWFpbi5zZWxlY3RBbGwoXCJsaW5lLlwiK2wueGdyaWRGb2N1cyksZj1iLnh4LmJpbmQoYik7Yy50b29sdGlwX3Nob3cmJihiLmhhc1R5cGUoXCJzY2F0dGVyXCIpfHxiLmhhc0FyY1R5cGUoKXx8KGUuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsXCJ2aXNpYmxlXCIpLmRhdGEoW2RbMF1dKS5hdHRyKGMuYXhpc19yb3RhdGVkP1wieTFcIjpcIngxXCIsZikuYXR0cihjLmF4aXNfcm90YXRlZD9cInkyXCI6XCJ4MlwiLGYpLGIuc21vb3RoTGluZXMoZSxcImdyaWRcIikpKX0saS5oaWRlWEdyaWRGb2N1cz1mdW5jdGlvbigpe3RoaXMubWFpbi5zZWxlY3QoXCJsaW5lLlwiK2wueGdyaWRGb2N1cykuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIil9LGkudXBkYXRlWGdyaWRGb2N1cz1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmNvbmZpZzthLm1haW4uc2VsZWN0KFwibGluZS5cIitsLnhncmlkRm9jdXMpLmF0dHIoXCJ4MVwiLGIuYXhpc19yb3RhdGVkPzA6LTEwKS5hdHRyKFwieDJcIixiLmF4aXNfcm90YXRlZD9hLndpZHRoOi0xMCkuYXR0cihcInkxXCIsYi5heGlzX3JvdGF0ZWQ/LTEwOjApLmF0dHIoXCJ5MlwiLGIuYXhpc19yb3RhdGVkPy0xMDphLmhlaWdodCl9LGkuZ2VuZXJhdGVHcmlkRGF0YT1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGc9dGhpcyxoPVtdLGk9Zy5tYWluLnNlbGVjdChcIi5cIitsLmF4aXNYKS5zZWxlY3RBbGwoXCIudGlja1wiKS5zaXplKCk7aWYoXCJ5ZWFyXCI9PT1hKWZvcihjPWcuZ2V0WERvbWFpbigpLGQ9Y1swXS5nZXRGdWxsWWVhcigpLGU9Y1sxXS5nZXRGdWxsWWVhcigpLGY9ZDtlPj1mO2YrKyloLnB1c2gobmV3IERhdGUoZitcIi0wMS0wMSAwMDowMDowMFwiKSk7ZWxzZSBoPWIudGlja3MoMTApLGgubGVuZ3RoPmkmJihoPWguZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybihcIlwiK2EpLmluZGV4T2YoXCIuXCIpPDB9KSk7cmV0dXJuIGh9LGkuZ2V0R3JpZEZpbHRlclRvUmVtb3ZlPWZ1bmN0aW9uKGEpe3JldHVybiBhP2Z1bmN0aW9uKGIpe3ZhciBjPSExO3JldHVybltdLmNvbmNhdChhKS5mb3JFYWNoKGZ1bmN0aW9uKGEpeyhcInZhbHVlXCJpbiBhJiZiLnZhbHVlPT09YS52YWx1ZXx8XCJjbGFzc1wiaW4gYSYmYltcImNsYXNzXCJdPT09YVtcImNsYXNzXCJdKSYmKGM9ITApfSksY306ZnVuY3Rpb24oKXtyZXR1cm4hMH19LGkucmVtb3ZlR3JpZExpbmVzPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPWMuY29uZmlnLGU9Yy5nZXRHcmlkRmlsdGVyVG9SZW1vdmUoYSksZj1mdW5jdGlvbihhKXtyZXR1cm4hZShhKX0sZz1iP2wueGdyaWRMaW5lczpsLnlncmlkTGluZXMsaD1iP2wueGdyaWRMaW5lOmwueWdyaWRMaW5lO2MubWFpbi5zZWxlY3QoXCIuXCIrZykuc2VsZWN0QWxsKFwiLlwiK2gpLmZpbHRlcihlKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oZC50cmFuc2l0aW9uX2R1cmF0aW9uKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5yZW1vdmUoKSxiP2QuZ3JpZF94X2xpbmVzPWQuZ3JpZF94X2xpbmVzLmZpbHRlcihmKTpkLmdyaWRfeV9saW5lcz1kLmdyaWRfeV9saW5lcy5maWx0ZXIoZil9LGkuaW5pdFRvb2x0aXA9ZnVuY3Rpb24oKXt2YXIgYSxiPXRoaXMsYz1iLmNvbmZpZztpZihiLnRvb2x0aXA9Yi5zZWxlY3RDaGFydC5zdHlsZShcInBvc2l0aW9uXCIsXCJyZWxhdGl2ZVwiKS5hcHBlbmQoXCJkaXZcIikuYXR0cihcImNsYXNzXCIsbC50b29sdGlwQ29udGFpbmVyKS5zdHlsZShcInBvc2l0aW9uXCIsXCJhYnNvbHV0ZVwiKS5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsXCJub25lXCIpLnN0eWxlKFwiZGlzcGxheVwiLFwibm9uZVwiKSxjLnRvb2x0aXBfaW5pdF9zaG93KXtpZihiLmlzVGltZVNlcmllcygpJiZvKGMudG9vbHRpcF9pbml0X3gpKXtmb3IoYy50b29sdGlwX2luaXRfeD1iLnBhcnNlRGF0ZShjLnRvb2x0aXBfaW5pdF94KSxhPTA7YTxiLmRhdGEudGFyZ2V0c1swXS52YWx1ZXMubGVuZ3RoJiZiLmRhdGEudGFyZ2V0c1swXS52YWx1ZXNbYV0ueC1jLnRvb2x0aXBfaW5pdF94IT09MDthKyspO2MudG9vbHRpcF9pbml0X3g9YX1iLnRvb2x0aXAuaHRtbChjLnRvb2x0aXBfY29udGVudHMuY2FsbChiLGIuZGF0YS50YXJnZXRzLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYi5hZGROYW1lKGEudmFsdWVzW2MudG9vbHRpcF9pbml0X3hdKX0pLGIuYXhpcy5nZXRYQXhpc1RpY2tGb3JtYXQoKSxiLmdldFlGb3JtYXQoYi5oYXNBcmNUeXBlKCkpLGIuY29sb3IpKSxiLnRvb2x0aXAuc3R5bGUoXCJ0b3BcIixjLnRvb2x0aXBfaW5pdF9wb3NpdGlvbi50b3ApLnN0eWxlKFwibGVmdFwiLGMudG9vbHRpcF9pbml0X3Bvc2l0aW9uLmxlZnQpLnN0eWxlKFwiZGlzcGxheVwiLFwiYmxvY2tcIil9fSxpLmdldFRvb2x0aXBDb250ZW50PWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZyxoLGksaixrPXRoaXMsbT1rLmNvbmZpZyxuPW0udG9vbHRpcF9mb3JtYXRfdGl0bGV8fGIsbz1tLnRvb2x0aXBfZm9ybWF0X25hbWV8fGZ1bmN0aW9uKGEpe3JldHVybiBhfSxwPW0udG9vbHRpcF9mb3JtYXRfdmFsdWV8fGM7Zm9yKGY9MDtmPGEubGVuZ3RoO2YrKylhW2ZdJiYoYVtmXS52YWx1ZXx8MD09PWFbZl0udmFsdWUpJiYoZXx8KGc9bj9uKGFbZl0ueCk6YVtmXS54LGU9XCI8dGFibGUgY2xhc3M9J1wiK2wudG9vbHRpcCtcIic+XCIrKGd8fDA9PT1nP1wiPHRyPjx0aCBjb2xzcGFuPScyJz5cIitnK1wiPC90aD48L3RyPlwiOlwiXCIpKSxoPXAoYVtmXS52YWx1ZSxhW2ZdLnJhdGlvLGFbZl0uaWQsYVtmXS5pbmRleCksdm9pZCAwIT09aCYmKGk9byhhW2ZdLm5hbWUsYVtmXS5yYXRpbyxhW2ZdLmlkLGFbZl0uaW5kZXgpLGo9ay5sZXZlbENvbG9yP2subGV2ZWxDb2xvcihhW2ZdLnZhbHVlKTpkKGFbZl0uaWQpLGUrPVwiPHRyIGNsYXNzPSdcIitsLnRvb2x0aXBOYW1lK1wiLVwiK2FbZl0uaWQrXCInPlwiLGUrPVwiPHRkIGNsYXNzPSduYW1lJz48c3BhbiBzdHlsZT0nYmFja2dyb3VuZC1jb2xvcjpcIitqK1wiJz48L3NwYW4+XCIraStcIjwvdGQ+XCIsZSs9XCI8dGQgY2xhc3M9J3ZhbHVlJz5cIitoK1wiPC90ZD5cIixlKz1cIjwvdHI+XCIpKTtyZXR1cm4gZStcIjwvdGFibGU+XCJ9LGkudG9vbHRpcFBvc2l0aW9uPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZyxoLGksaj10aGlzLGs9ai5jb25maWcsbD1qLmQzLG09ai5oYXNBcmNUeXBlKCksbj1sLm1vdXNlKGQpO3JldHVybiBtPyhmPShqLndpZHRoLShqLmlzTGVnZW5kUmlnaHQ/ai5nZXRMZWdlbmRXaWR0aCgpOjApKS8yK25bMF0saD1qLmhlaWdodC8yK25bMV0rMjApOihlPWouZ2V0U3ZnTGVmdCghMCksay5heGlzX3JvdGF0ZWQ/KGY9ZStuWzBdKzEwMCxnPWYrYixpPWouY3VycmVudFdpZHRoLWouZ2V0Q3VycmVudFBhZGRpbmdSaWdodCgpLGg9ai54KGFbMF0ueCkrMjApOihmPWUrai5nZXRDdXJyZW50UGFkZGluZ0xlZnQoITApK2oueChhWzBdLngpKzIwLGc9ZitiLGk9ZStqLmN1cnJlbnRXaWR0aC1qLmdldEN1cnJlbnRQYWRkaW5nUmlnaHQoKSxoPW5bMV0rMTUpLGc+aSYmKGYtPWctaSsyMCksaCtjPmouY3VycmVudEhlaWdodCYmKGgtPWMrMzApKSwwPmgmJihoPTApLHt0b3A6aCxsZWZ0OmZ9fSxpLnNob3dUb29sdGlwPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGY9dGhpcyxnPWYuY29uZmlnLGg9Zi5oYXNBcmNUeXBlKCksaj1hLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gYSYmbShhLnZhbHVlKX0pLGs9Zy50b29sdGlwX3Bvc2l0aW9ufHxpLnRvb2x0aXBQb3NpdGlvbjswIT09ai5sZW5ndGgmJmcudG9vbHRpcF9zaG93JiYoZi50b29sdGlwLmh0bWwoZy50b29sdGlwX2NvbnRlbnRzLmNhbGwoZixhLGYuYXhpcy5nZXRYQXhpc1RpY2tGb3JtYXQoKSxmLmdldFlGb3JtYXQoaCksZi5jb2xvcikpLnN0eWxlKFwiZGlzcGxheVwiLFwiYmxvY2tcIiksYz1mLnRvb2x0aXAucHJvcGVydHkoXCJvZmZzZXRXaWR0aFwiKSxkPWYudG9vbHRpcC5wcm9wZXJ0eShcIm9mZnNldEhlaWdodFwiKSxlPWsuY2FsbCh0aGlzLGosYyxkLGIpLGYudG9vbHRpcC5zdHlsZShcInRvcFwiLGUudG9wK1wicHhcIikuc3R5bGUoXCJsZWZ0XCIsZS5sZWZ0K1wicHhcIikpfSxpLmhpZGVUb29sdGlwPWZ1bmN0aW9uKCl7dGhpcy50b29sdGlwLnN0eWxlKFwiZGlzcGxheVwiLFwibm9uZVwiKX0saS5pbml0TGVnZW5kPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztyZXR1cm4gYS5sZWdlbmRJdGVtVGV4dEJveD17fSxhLmxlZ2VuZEhhc1JlbmRlcmVkPSExLGEubGVnZW5kPWEuc3ZnLmFwcGVuZChcImdcIikuYXR0cihcInRyYW5zZm9ybVwiLGEuZ2V0VHJhbnNsYXRlKFwibGVnZW5kXCIpKSxhLmNvbmZpZy5sZWdlbmRfc2hvdz92b2lkIGEudXBkYXRlTGVnZW5kV2l0aERlZmF1bHRzKCk6KGEubGVnZW5kLnN0eWxlKFwidmlzaWJpbGl0eVwiLFwiaGlkZGVuXCIpLHZvaWQoYS5oaWRkZW5MZWdlbmRJZHM9YS5tYXBUb0lkcyhhLmRhdGEudGFyZ2V0cykpKX0saS51cGRhdGVMZWdlbmRXaXRoRGVmYXVsdHM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EudXBkYXRlTGVnZW5kKGEubWFwVG9JZHMoYS5kYXRhLnRhcmdldHMpLHt3aXRoVHJhbnNmb3JtOiExLHdpdGhUcmFuc2l0aW9uRm9yVHJhbnNmb3JtOiExLHdpdGhUcmFuc2l0aW9uOiExfSl9LGkudXBkYXRlU2l6ZUZvckxlZ2VuZD1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD1jLmNvbmZpZyxlPXt0b3A6Yy5pc0xlZ2VuZFRvcD9jLmdldEN1cnJlbnRQYWRkaW5nVG9wKCkrZC5sZWdlbmRfaW5zZXRfeSs1LjU6Yy5jdXJyZW50SGVpZ2h0LWEtYy5nZXRDdXJyZW50UGFkZGluZ0JvdHRvbSgpLWQubGVnZW5kX2luc2V0X3ksbGVmdDpjLmlzTGVnZW5kTGVmdD9jLmdldEN1cnJlbnRQYWRkaW5nTGVmdCgpK2QubGVnZW5kX2luc2V0X3grLjU6Yy5jdXJyZW50V2lkdGgtYi1jLmdldEN1cnJlbnRQYWRkaW5nUmlnaHQoKS1kLmxlZ2VuZF9pbnNldF94Ky41fTtjLm1hcmdpbjM9e3RvcDpjLmlzTGVnZW5kUmlnaHQ/MDpjLmlzTGVnZW5kSW5zZXQ/ZS50b3A6Yy5jdXJyZW50SGVpZ2h0LWEscmlnaHQ6MC8wLGJvdHRvbTowLGxlZnQ6Yy5pc0xlZ2VuZFJpZ2h0P2MuY3VycmVudFdpZHRoLWI6Yy5pc0xlZ2VuZEluc2V0P2UubGVmdDowfX0saS50cmFuc2Zvcm1MZWdlbmQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpczsoYT9iLmxlZ2VuZC50cmFuc2l0aW9uKCk6Yi5sZWdlbmQpLmF0dHIoXCJ0cmFuc2Zvcm1cIixiLmdldFRyYW5zbGF0ZShcImxlZ2VuZFwiKSl9LGkudXBkYXRlTGVnZW5kU3RlcD1mdW5jdGlvbihhKXt0aGlzLmxlZ2VuZFN0ZXA9YX0saS51cGRhdGVMZWdlbmRJdGVtV2lkdGg9ZnVuY3Rpb24oYSl7dGhpcy5sZWdlbmRJdGVtV2lkdGg9YX0saS51cGRhdGVMZWdlbmRJdGVtSGVpZ2h0PWZ1bmN0aW9uKGEpe3RoaXMubGVnZW5kSXRlbUhlaWdodD1hfSxpLmdldExlZ2VuZFdpZHRoPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztyZXR1cm4gYS5jb25maWcubGVnZW5kX3Nob3c/YS5pc0xlZ2VuZFJpZ2h0fHxhLmlzTGVnZW5kSW5zZXQ/YS5sZWdlbmRJdGVtV2lkdGgqKGEubGVnZW5kU3RlcCsxKTphLmN1cnJlbnRXaWR0aDowfSxpLmdldExlZ2VuZEhlaWdodD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj0wO3JldHVybiBhLmNvbmZpZy5sZWdlbmRfc2hvdyYmKGI9YS5pc0xlZ2VuZFJpZ2h0P2EuY3VycmVudEhlaWdodDpNYXRoLm1heCgyMCxhLmxlZ2VuZEl0ZW1IZWlnaHQpKihhLmxlZ2VuZFN0ZXArMSkpLGJ9LGkub3BhY2l0eUZvckxlZ2VuZD1mdW5jdGlvbihhKXtyZXR1cm4gYS5jbGFzc2VkKGwubGVnZW5kSXRlbUhpZGRlbik/bnVsbDoxfSxpLm9wYWNpdHlGb3JVbmZvY3VzZWRMZWdlbmQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGEuY2xhc3NlZChsLmxlZ2VuZEl0ZW1IaWRkZW4pP251bGw6LjN9LGkudG9nZ2xlRm9jdXNMZWdlbmQ9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO2E9Yy5tYXBUb1RhcmdldElkcyhhKSxjLmxlZ2VuZC5zZWxlY3RBbGwoXCIuXCIrbC5sZWdlbmRJdGVtKS5maWx0ZXIoZnVuY3Rpb24oYil7cmV0dXJuIGEuaW5kZXhPZihiKT49MH0pLmNsYXNzZWQobC5sZWdlbmRJdGVtRm9jdXNlZCxiKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwKS5zdHlsZShcIm9wYWNpdHlcIixmdW5jdGlvbigpe3ZhciBhPWI/Yy5vcGFjaXR5Rm9yTGVnZW5kOmMub3BhY2l0eUZvclVuZm9jdXNlZExlZ2VuZDtyZXR1cm4gYS5jYWxsKGMsYy5kMy5zZWxlY3QodGhpcykpfSl9LGkucmV2ZXJ0TGVnZW5kPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuZDM7YS5sZWdlbmQuc2VsZWN0QWxsKFwiLlwiK2wubGVnZW5kSXRlbSkuY2xhc3NlZChsLmxlZ2VuZEl0ZW1Gb2N1c2VkLCExKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwKS5zdHlsZShcIm9wYWNpdHlcIixmdW5jdGlvbigpe3JldHVybiBhLm9wYWNpdHlGb3JMZWdlbmQoYi5zZWxlY3QodGhpcykpfSl9LGkuc2hvd0xlZ2VuZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWc7Yy5sZWdlbmRfc2hvd3x8KGMubGVnZW5kX3Nob3c9ITAsYi5sZWdlbmQuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsXCJ2aXNpYmxlXCIpLGIubGVnZW5kSGFzUmVuZGVyZWR8fGIudXBkYXRlTGVnZW5kV2l0aERlZmF1bHRzKCkpLGIucmVtb3ZlSGlkZGVuTGVnZW5kSWRzKGEpLGIubGVnZW5kLnNlbGVjdEFsbChiLnNlbGVjdG9yTGVnZW5kcyhhKSkuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsXCJ2aXNpYmxlXCIpLnRyYW5zaXRpb24oKS5zdHlsZShcIm9wYWNpdHlcIixmdW5jdGlvbigpe3JldHVybiBiLm9wYWNpdHlGb3JMZWdlbmQoYi5kMy5zZWxlY3QodGhpcykpfSl9LGkuaGlkZUxlZ2VuZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWc7Yy5sZWdlbmRfc2hvdyYmdShhKSYmKGMubGVnZW5kX3Nob3c9ITEsYi5sZWdlbmQuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIikpLGIuYWRkSGlkZGVuTGVnZW5kSWRzKGEpLGIubGVnZW5kLnNlbGVjdEFsbChiLnNlbGVjdG9yTGVnZW5kcyhhKSkuc3R5bGUoXCJvcGFjaXR5XCIsMCkuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIil9LGkuY2xlYXJMZWdlbmRJdGVtVGV4dEJveENhY2hlPWZ1bmN0aW9uKCl7dGhpcy5sZWdlbmRJdGVtVGV4dEJveD17fX0saS51cGRhdGVMZWdlbmQ9ZnVuY3Rpb24oYSxiLGMpe2Z1bmN0aW9uIGQoYSxiKXtyZXR1cm4gdS5sZWdlbmRJdGVtVGV4dEJveFtiXXx8KHUubGVnZW5kSXRlbVRleHRCb3hbYl09dS5nZXRUZXh0UmVjdChhLnRleHRDb250ZW50LGwubGVnZW5kSXRlbSkpLHUubGVnZW5kSXRlbVRleHRCb3hbYl19ZnVuY3Rpb24gZShiLGMsZSl7ZnVuY3Rpb24gZihhLGIpe2J8fChnPShvLUQtbikvMixCPmcmJihnPShvLW4pLzIsRD0wLEorKykpLElbYV09SixIW0pdPXUuaXNMZWdlbmRJbnNldD8xMDpnLEVbYV09RCxEKz1ufXZhciBnLGgsaT0wPT09ZSxqPWU9PT1hLmxlbmd0aC0xLGs9ZChiLGMpLGw9ay53aWR0aCtDKyghanx8dS5pc0xlZ2VuZFJpZ2h0fHx1LmlzTGVnZW5kSW5zZXQ/eTowKSxtPWsuaGVpZ2h0K3gsbj11LmlzTGVnZW5kUmlnaHR8fHUuaXNMZWdlbmRJbnNldD9tOmwsbz11LmlzTGVnZW5kUmlnaHR8fHUuaXNMZWdlbmRJbnNldD91LmdldExlZ2VuZEhlaWdodCgpOnUuZ2V0TGVnZW5kV2lkdGgoKTtyZXR1cm4gaSYmKEQ9MCxKPTAsej0wLEE9MCksdi5sZWdlbmRfc2hvdyYmIXUuaXNMZWdlbmRUb1Nob3coYyk/dm9pZChGW2NdPUdbY109SVtjXT1FW2NdPTApOihGW2NdPWwsR1tjXT1tLCghenx8bD49eikmJih6PWwpLCghQXx8bT49QSkmJihBPW0pLGg9dS5pc0xlZ2VuZFJpZ2h0fHx1LmlzTGVnZW5kSW5zZXQ/QTp6LHZvaWQodi5sZWdlbmRfZXF1YWxseT8oT2JqZWN0LmtleXMoRikuZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPXp9KSxPYmplY3Qua2V5cyhHKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09QX0pLGc9KG8taCphLmxlbmd0aCkvMixCPmc/KEQ9MCxKPTAsYS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2YoYSl9KSk6ZihjLCEwKSk6ZihjKSkpfXZhciBmLGcsaCxpLGosayxtLG4sbyxwLHIscyx0LHU9dGhpcyx2PXUuY29uZmlnLHg9NCx5PTEwLHo9MCxBPTAsQj0xMCxDPTE1LEQ9MCxFPXt9LEY9e30sRz17fSxIPVswXSxJPXt9LEo9MDtiPWJ8fHt9LG49dyhiLFwid2l0aFRyYW5zaXRpb25cIiwhMCksbz13KGIsXCJ3aXRoVHJhbnNpdGlvbkZvclRyYW5zZm9ybVwiLCEwKSx1LmlzTGVnZW5kSW5zZXQmJihKPXYubGVnZW5kX2luc2V0X3N0ZXA/di5sZWdlbmRfaW5zZXRfc3RlcDphLmxlbmd0aCx1LnVwZGF0ZUxlZ2VuZFN0ZXAoSikpLHUuaXNMZWdlbmRSaWdodD8oZj1mdW5jdGlvbihhKXtyZXR1cm4geipJW2FdfSxpPWZ1bmN0aW9uKGEpe3JldHVybiBIW0lbYV1dK0VbYV19KTp1LmlzTGVnZW5kSW5zZXQ/KGY9ZnVuY3Rpb24oYSl7cmV0dXJuIHoqSVthXSsxMH0saT1mdW5jdGlvbihhKXtyZXR1cm4gSFtJW2FdXStFW2FdfSk6KGY9ZnVuY3Rpb24oYSl7cmV0dXJuIEhbSVthXV0rRVthXX0saT1mdW5jdGlvbihhKXtyZXR1cm4gQSpJW2FdfSksZz1mdW5jdGlvbihhLGIpe3JldHVybiBmKGEsYikrMTR9LGo9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gaShhLGIpKzl9LGg9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZihhLGIpfSxrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGkoYSxiKS01fSxtPXUubGVnZW5kLnNlbGVjdEFsbChcIi5cIitsLmxlZ2VuZEl0ZW0pLmRhdGEoYSkuZW50ZXIoKS5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGZ1bmN0aW9uKGEpe3JldHVybiB1LmdlbmVyYXRlQ2xhc3MobC5sZWdlbmRJdGVtLGEpfSkuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsZnVuY3Rpb24oYSl7cmV0dXJuIHUuaXNMZWdlbmRUb1Nob3coYSk/XCJ2aXNpYmxlXCI6XCJoaWRkZW5cIn0pLnN0eWxlKFwiY3Vyc29yXCIsXCJwb2ludGVyXCIpLm9uKFwiY2xpY2tcIixmdW5jdGlvbihhKXt2LmxlZ2VuZF9pdGVtX29uY2xpY2s/di5sZWdlbmRfaXRlbV9vbmNsaWNrLmNhbGwodSxhKTp1LmQzLmV2ZW50LmFsdEtleT8odS5hcGkuaGlkZSgpLHUuYXBpLnNob3coYSkpOih1LmFwaS50b2dnbGUoYSksdS5pc1RhcmdldFRvU2hvdyhhKT91LmFwaS5mb2N1cyhhKTp1LmFwaS5yZXZlcnQoKSl9KS5vbihcIm1vdXNlb3ZlclwiLGZ1bmN0aW9uKGEpe3UuZDMuc2VsZWN0KHRoaXMpLmNsYXNzZWQobC5sZWdlbmRJdGVtRm9jdXNlZCwhMCksIXUudHJhbnNpdGluZyYmdS5pc1RhcmdldFRvU2hvdyhhKSYmdS5hcGkuZm9jdXMoYSksdi5sZWdlbmRfaXRlbV9vbm1vdXNlb3ZlciYmdi5sZWdlbmRfaXRlbV9vbm1vdXNlb3Zlci5jYWxsKHUsYSl9KS5vbihcIm1vdXNlb3V0XCIsZnVuY3Rpb24oYSl7dS5kMy5zZWxlY3QodGhpcykuY2xhc3NlZChsLmxlZ2VuZEl0ZW1Gb2N1c2VkLCExKSx1LmFwaS5yZXZlcnQoKSx2LmxlZ2VuZF9pdGVtX29ubW91c2VvdXQmJnYubGVnZW5kX2l0ZW1fb25tb3VzZW91dC5jYWxsKHUsYSl9KSxtLmFwcGVuZChcInRleHRcIikudGV4dChmdW5jdGlvbihhKXtyZXR1cm4gcSh2LmRhdGFfbmFtZXNbYV0pP3YuZGF0YV9uYW1lc1thXTphfSkuZWFjaChmdW5jdGlvbihhLGIpe2UodGhpcyxhLGIpfSkuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLFwibm9uZVwiKS5hdHRyKFwieFwiLHUuaXNMZWdlbmRSaWdodHx8dS5pc0xlZ2VuZEluc2V0P2c6LTIwMCkuYXR0cihcInlcIix1LmlzTGVnZW5kUmlnaHR8fHUuaXNMZWdlbmRJbnNldD8tMjAwOmopLG0uYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwiY2xhc3NcIixsLmxlZ2VuZEl0ZW1FdmVudCkuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIiwwKS5hdHRyKFwieFwiLHUuaXNMZWdlbmRSaWdodHx8dS5pc0xlZ2VuZEluc2V0P2g6LTIwMCkuYXR0cihcInlcIix1LmlzTGVnZW5kUmlnaHR8fHUuaXNMZWdlbmRJbnNldD8tMjAwOmspLG0uYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwiY2xhc3NcIixsLmxlZ2VuZEl0ZW1UaWxlKS5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsXCJub25lXCIpLnN0eWxlKFwiZmlsbFwiLHUuY29sb3IpLmF0dHIoXCJ4XCIsdS5pc0xlZ2VuZFJpZ2h0fHx1LmlzTGVnZW5kSW5zZXQ/ZzotMjAwKS5hdHRyKFwieVwiLHUuaXNMZWdlbmRSaWdodHx8dS5pc0xlZ2VuZEluc2V0Py0yMDA6aSkuYXR0cihcIndpZHRoXCIsMTApLmF0dHIoXCJoZWlnaHRcIiwxMCksdD11LmxlZ2VuZC5zZWxlY3QoXCIuXCIrbC5sZWdlbmRCYWNrZ3JvdW5kK1wiIHJlY3RcIiksdS5pc0xlZ2VuZEluc2V0JiZ6PjAmJjA9PT10LnNpemUoKSYmKHQ9dS5sZWdlbmQuaW5zZXJ0KFwiZ1wiLFwiLlwiK2wubGVnZW5kSXRlbSkuYXR0cihcImNsYXNzXCIsbC5sZWdlbmRCYWNrZ3JvdW5kKS5hcHBlbmQoXCJyZWN0XCIpKSxwPXUubGVnZW5kLnNlbGVjdEFsbChcInRleHRcIikuZGF0YShhKS50ZXh0KGZ1bmN0aW9uKGEpe3JldHVybiBxKHYuZGF0YV9uYW1lc1thXSk/di5kYXRhX25hbWVzW2FdOmF9KS5lYWNoKGZ1bmN0aW9uKGEsYil7ZSh0aGlzLGEsYil9KSwobj9wLnRyYW5zaXRpb24oKTpwKS5hdHRyKFwieFwiLGcpLmF0dHIoXCJ5XCIsaikscj11LmxlZ2VuZC5zZWxlY3RBbGwoXCJyZWN0LlwiK2wubGVnZW5kSXRlbUV2ZW50KS5kYXRhKGEpLChuP3IudHJhbnNpdGlvbigpOnIpLmF0dHIoXCJ3aWR0aFwiLGZ1bmN0aW9uKGEpe3JldHVybiBGW2FdfSkuYXR0cihcImhlaWdodFwiLGZ1bmN0aW9uKGEpe3JldHVybiBHW2FdfSkuYXR0cihcInhcIixoKS5hdHRyKFwieVwiLGspLHM9dS5sZWdlbmQuc2VsZWN0QWxsKFwicmVjdC5cIitsLmxlZ2VuZEl0ZW1UaWxlKS5kYXRhKGEpLChuP3MudHJhbnNpdGlvbigpOnMpLnN0eWxlKFwiZmlsbFwiLHUuY29sb3IpLmF0dHIoXCJ4XCIsZikuYXR0cihcInlcIixpKSx0JiYobj90LnRyYW5zaXRpb24oKTp0KS5hdHRyKFwiaGVpZ2h0XCIsdS5nZXRMZWdlbmRIZWlnaHQoKS0xMikuYXR0cihcIndpZHRoXCIseiooSisxKSsxMCksdS5sZWdlbmQuc2VsZWN0QWxsKFwiLlwiK2wubGVnZW5kSXRlbSkuY2xhc3NlZChsLmxlZ2VuZEl0ZW1IaWRkZW4sZnVuY3Rpb24oYSl7cmV0dXJuIXUuaXNUYXJnZXRUb1Nob3coYSl9KSx1LnVwZGF0ZUxlZ2VuZEl0ZW1XaWR0aCh6KSx1LnVwZGF0ZUxlZ2VuZEl0ZW1IZWlnaHQoQSksdS51cGRhdGVMZWdlbmRTdGVwKEopLHUudXBkYXRlU2l6ZXMoKSx1LnVwZGF0ZVNjYWxlcygpLHUudXBkYXRlU3ZnU2l6ZSgpLHUudHJhbnNmb3JtQWxsKG8sYyksdS5sZWdlbmRIYXNSZW5kZXJlZD0hMH0sYyhiLGYpLGYucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm93bmVyLGI9YS5jb25maWcsYz1hLm1haW47YS5heGVzLng9Yy5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGwuYXhpcytcIiBcIitsLmF4aXNYKS5hdHRyKFwiY2xpcC1wYXRoXCIsYS5jbGlwUGF0aEZvclhBeGlzKS5hdHRyKFwidHJhbnNmb3JtXCIsYS5nZXRUcmFuc2xhdGUoXCJ4XCIpKS5zdHlsZShcInZpc2liaWxpdHlcIixiLmF4aXNfeF9zaG93P1widmlzaWJsZVwiOlwiaGlkZGVuXCIpLGEuYXhlcy54LmFwcGVuZChcInRleHRcIikuYXR0cihcImNsYXNzXCIsbC5heGlzWExhYmVsKS5hdHRyKFwidHJhbnNmb3JtXCIsYi5heGlzX3JvdGF0ZWQ/XCJyb3RhdGUoLTkwKVwiOlwiXCIpLnN0eWxlKFwidGV4dC1hbmNob3JcIix0aGlzLnRleHRBbmNob3JGb3JYQXhpc0xhYmVsLmJpbmQodGhpcykpLGEuYXhlcy55PWMuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLmF4aXMrXCIgXCIrbC5heGlzWSkuYXR0cihcImNsaXAtcGF0aFwiLGIuYXhpc195X2lubmVyP1wiXCI6YS5jbGlwUGF0aEZvcllBeGlzKS5hdHRyKFwidHJhbnNmb3JtXCIsYS5nZXRUcmFuc2xhdGUoXCJ5XCIpKS5zdHlsZShcInZpc2liaWxpdHlcIixiLmF4aXNfeV9zaG93P1widmlzaWJsZVwiOlwiaGlkZGVuXCIpLGEuYXhlcy55LmFwcGVuZChcInRleHRcIikuYXR0cihcImNsYXNzXCIsbC5heGlzWUxhYmVsKS5hdHRyKFwidHJhbnNmb3JtXCIsYi5heGlzX3JvdGF0ZWQ/XCJcIjpcInJvdGF0ZSgtOTApXCIpLnN0eWxlKFwidGV4dC1hbmNob3JcIix0aGlzLnRleHRBbmNob3JGb3JZQXhpc0xhYmVsLmJpbmQodGhpcykpLGEuYXhlcy55Mj1jLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsbC5heGlzK1wiIFwiK2wuYXhpc1kyKS5hdHRyKFwidHJhbnNmb3JtXCIsYS5nZXRUcmFuc2xhdGUoXCJ5MlwiKSkuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsYi5heGlzX3kyX3Nob3c/XCJ2aXNpYmxlXCI6XCJoaWRkZW5cIiksYS5heGVzLnkyLmFwcGVuZChcInRleHRcIikuYXR0cihcImNsYXNzXCIsbC5heGlzWTJMYWJlbCkuYXR0cihcInRyYW5zZm9ybVwiLGIuYXhpc19yb3RhdGVkP1wiXCI6XCJyb3RhdGUoLTkwKVwiKS5zdHlsZShcInRleHQtYW5jaG9yXCIsdGhpcy50ZXh0QW5jaG9yRm9yWTJBeGlzTGFiZWwuYmluZCh0aGlzKSl9LGYucHJvdG90eXBlLmdldFhBeGlzPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGgpe3ZhciBpPXRoaXMub3duZXIsaj1pLmNvbmZpZyxrPXtpc0NhdGVnb3J5OmkuaXNDYXRlZ29yaXplZCgpLHdpdGhPdXRlclRpY2s6ZSx0aWNrTXVsdGlsaW5lOmouYXhpc194X3RpY2tfbXVsdGlsaW5lLHRpY2tXaWR0aDpqLmF4aXNfeF90aWNrX3dpZHRoLHRpY2tUZXh0Um90YXRlOmg/MDpqLmF4aXNfeF90aWNrX3JvdGF0ZSx3aXRob3V0VHJhbnNpdGlvbjpmfSxsPWcoaS5kMyxrKS5zY2FsZShhKS5vcmllbnQoYik7cmV0dXJuIGkuaXNUaW1lU2VyaWVzKCkmJmQmJihkPWQubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBpLnBhcnNlRGF0ZShhKX0pKSxsLnRpY2tGb3JtYXQoYykudGlja1ZhbHVlcyhkKSxpLmlzQ2F0ZWdvcml6ZWQoKSYmKGwudGlja0NlbnRlcmVkKGouYXhpc194X3RpY2tfY2VudGVyZWQpLHUoai5heGlzX3hfdGlja19jdWxsaW5nKSYmKGouYXhpc194X3RpY2tfY3VsbGluZz0hMSkpLGx9LGYucHJvdG90eXBlLnVwZGF0ZVhBeGlzVGlja1ZhbHVlcz1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9dGhpcy5vd25lcixlPWQuY29uZmlnO3JldHVybihlLmF4aXNfeF90aWNrX2ZpdHx8ZS5heGlzX3hfdGlja19jb3VudCkmJihjPXRoaXMuZ2VuZXJhdGVUaWNrVmFsdWVzKGQubWFwVGFyZ2V0c1RvVW5pcXVlWHMoYSksZS5heGlzX3hfdGlja19jb3VudCxkLmlzVGltZVNlcmllcygpKSksYj9iLnRpY2tWYWx1ZXMoYyk6KGQueEF4aXMudGlja1ZhbHVlcyhjKSxkLnN1YlhBeGlzLnRpY2tWYWx1ZXMoYykpLGN9LGYucHJvdG90eXBlLmdldFlBeGlzPWZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgaD17d2l0aE91dGVyVGljazplLHdpdGhvdXRUcmFuc2l0aW9uOmZ9LGk9dGhpcy5vd25lcixqPWkuZDMsaz1pLmNvbmZpZyxsPWcoaixoKS5zY2FsZShhKS5vcmllbnQoYikudGlja0Zvcm1hdChjKTtyZXR1cm4gaS5pc1RpbWVTZXJpZXNZKCk/bC50aWNrcyhqLnRpbWVbay5heGlzX3lfdGlja190aW1lX3ZhbHVlXSxrLmF4aXNfeV90aWNrX3RpbWVfaW50ZXJ2YWwpOmwudGlja1ZhbHVlcyhkKSxsfSxmLnByb3RvdHlwZS5nZXRJZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLm93bmVyLmNvbmZpZztyZXR1cm4gYSBpbiBiLmRhdGFfYXhlcz9iLmRhdGFfYXhlc1thXTpcInlcIn0sZi5wcm90b3R5cGUuZ2V0WEF4aXNUaWNrRm9ybWF0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vd25lcixiPWEuY29uZmlnLGM9YS5pc1RpbWVTZXJpZXMoKT9hLmRlZmF1bHRBeGlzVGltZUZvcm1hdDphLmlzQ2F0ZWdvcml6ZWQoKT9hLmNhdGVnb3J5TmFtZTpmdW5jdGlvbihhKXtyZXR1cm4gMD5hP2EudG9GaXhlZCgwKTphfTtyZXR1cm4gYi5heGlzX3hfdGlja19mb3JtYXQmJihuKGIuYXhpc194X3RpY2tfZm9ybWF0KT9jPWIuYXhpc194X3RpY2tfZm9ybWF0OmEuaXNUaW1lU2VyaWVzKCkmJihjPWZ1bmN0aW9uKGMpe3JldHVybiBjP2EuYXhpc1RpbWVGb3JtYXQoYi5heGlzX3hfdGlja19mb3JtYXQpKGMpOlwiXCJ9KSksbihjKT9mdW5jdGlvbihiKXtyZXR1cm4gYy5jYWxsKGEsYil9OmN9LGYucHJvdG90eXBlLmdldFRpY2tWYWx1ZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT9hOmI/Yi50aWNrVmFsdWVzKCk6dm9pZCAwfSxmLnByb3RvdHlwZS5nZXRYQXhpc1RpY2tWYWx1ZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRUaWNrVmFsdWVzKHRoaXMub3duZXIuY29uZmlnLmF4aXNfeF90aWNrX3ZhbHVlcyx0aGlzLm93bmVyLnhBeGlzKX0sZi5wcm90b3R5cGUuZ2V0WUF4aXNUaWNrVmFsdWVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0VGlja1ZhbHVlcyh0aGlzLm93bmVyLmNvbmZpZy5heGlzX3lfdGlja192YWx1ZXMsdGhpcy5vd25lci55QXhpcyl9LGYucHJvdG90eXBlLmdldFkyQXhpc1RpY2tWYWx1ZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRUaWNrVmFsdWVzKHRoaXMub3duZXIuY29uZmlnLmF4aXNfeTJfdGlja192YWx1ZXMsdGhpcy5vd25lci55MkF4aXMpfSxmLnByb3RvdHlwZS5nZXRMYWJlbE9wdGlvbkJ5QXhpc0lkPWZ1bmN0aW9uKGEpe3ZhciBiLGM9dGhpcy5vd25lcixkPWMuY29uZmlnO3JldHVyblwieVwiPT09YT9iPWQuYXhpc195X2xhYmVsOlwieTJcIj09PWE/Yj1kLmF4aXNfeTJfbGFiZWw6XCJ4XCI9PT1hJiYoYj1kLmF4aXNfeF9sYWJlbCksYn0sZi5wcm90b3R5cGUuZ2V0TGFiZWxUZXh0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZ2V0TGFiZWxPcHRpb25CeUF4aXNJZChhKTtyZXR1cm4gbyhiKT9iOmI/Yi50ZXh0Om51bGx9LGYucHJvdG90eXBlLnNldExhYmVsVGV4dD1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMub3duZXIsZD1jLmNvbmZpZyxlPXRoaXMuZ2V0TGFiZWxPcHRpb25CeUF4aXNJZChhKTtvKGUpP1wieVwiPT09YT9kLmF4aXNfeV9sYWJlbD1iOlwieTJcIj09PWE/ZC5heGlzX3kyX2xhYmVsPWI6XCJ4XCI9PT1hJiYoZC5heGlzX3hfbGFiZWw9Yik6ZSYmKGUudGV4dD1iKX0sZi5wcm90b3R5cGUuZ2V0TGFiZWxQb3NpdGlvbj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZ2V0TGFiZWxPcHRpb25CeUF4aXNJZChhKSxkPWMmJlwib2JqZWN0XCI9PXR5cGVvZiBjJiZjLnBvc2l0aW9uP2MucG9zaXRpb246YjtyZXR1cm57aXNJbm5lcjpkLmluZGV4T2YoXCJpbm5lclwiKT49MCxpc091dGVyOmQuaW5kZXhPZihcIm91dGVyXCIpPj0wLGlzTGVmdDpkLmluZGV4T2YoXCJsZWZ0XCIpPj0wLGlzQ2VudGVyOmQuaW5kZXhPZihcImNlbnRlclwiKT49MCxpc1JpZ2h0OmQuaW5kZXhPZihcInJpZ2h0XCIpPj0wLGlzVG9wOmQuaW5kZXhPZihcInRvcFwiKT49MCxpc01pZGRsZTpkLmluZGV4T2YoXCJtaWRkbGVcIik+PTAsaXNCb3R0b206ZC5pbmRleE9mKFwiYm90dG9tXCIpPj0wfX0sZi5wcm90b3R5cGUuZ2V0WEF4aXNMYWJlbFBvc2l0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0TGFiZWxQb3NpdGlvbihcInhcIix0aGlzLm93bmVyLmNvbmZpZy5heGlzX3JvdGF0ZWQ/XCJpbm5lci10b3BcIjpcImlubmVyLXJpZ2h0XCIpfSxmLnByb3RvdHlwZS5nZXRZQXhpc0xhYmVsUG9zaXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRMYWJlbFBvc2l0aW9uKFwieVwiLHRoaXMub3duZXIuY29uZmlnLmF4aXNfcm90YXRlZD9cImlubmVyLXJpZ2h0XCI6XCJpbm5lci10b3BcIil9LGYucHJvdG90eXBlLmdldFkyQXhpc0xhYmVsUG9zaXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRMYWJlbFBvc2l0aW9uKFwieTJcIix0aGlzLm93bmVyLmNvbmZpZy5heGlzX3JvdGF0ZWQ/XCJpbm5lci1yaWdodFwiOlwiaW5uZXItdG9wXCIpfSxmLnByb3RvdHlwZS5nZXRMYWJlbFBvc2l0aW9uQnlJZD1mdW5jdGlvbihhKXtyZXR1cm5cInkyXCI9PT1hP3RoaXMuZ2V0WTJBeGlzTGFiZWxQb3NpdGlvbigpOlwieVwiPT09YT90aGlzLmdldFlBeGlzTGFiZWxQb3NpdGlvbigpOnRoaXMuZ2V0WEF4aXNMYWJlbFBvc2l0aW9uKCl9LGYucHJvdG90eXBlLnRleHRGb3JYQXhpc0xhYmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0TGFiZWxUZXh0KFwieFwiKX0sZi5wcm90b3R5cGUudGV4dEZvcllBeGlzTGFiZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRMYWJlbFRleHQoXCJ5XCIpfSxmLnByb3RvdHlwZS50ZXh0Rm9yWTJBeGlzTGFiZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRMYWJlbFRleHQoXCJ5MlwiKX0sZi5wcm90b3R5cGUueEZvckF4aXNMYWJlbD1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMub3duZXI7cmV0dXJuIGE/Yi5pc0xlZnQ/MDpiLmlzQ2VudGVyP2Mud2lkdGgvMjpjLndpZHRoOmIuaXNCb3R0b20/LWMuaGVpZ2h0OmIuaXNNaWRkbGU/LWMuaGVpZ2h0LzI6MH0sZi5wcm90b3R5cGUuZHhGb3JBeGlzTGFiZWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT9iLmlzTGVmdD9cIjAuNWVtXCI6Yi5pc1JpZ2h0P1wiLTAuNWVtXCI6XCIwXCI6Yi5pc1RvcD9cIi0wLjVlbVwiOmIuaXNCb3R0b20/XCIwLjVlbVwiOlwiMFwifSxmLnByb3RvdHlwZS50ZXh0QW5jaG9yRm9yQXhpc0xhYmVsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE/Yi5pc0xlZnQ/XCJzdGFydFwiOmIuaXNDZW50ZXI/XCJtaWRkbGVcIjpcImVuZFwiOmIuaXNCb3R0b20/XCJzdGFydFwiOmIuaXNNaWRkbGU/XCJtaWRkbGVcIjpcImVuZFwifSxmLnByb3RvdHlwZS54Rm9yWEF4aXNMYWJlbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnhGb3JBeGlzTGFiZWwoIXRoaXMub3duZXIuY29uZmlnLmF4aXNfcm90YXRlZCx0aGlzLmdldFhBeGlzTGFiZWxQb3NpdGlvbigpKX0sZi5wcm90b3R5cGUueEZvcllBeGlzTGFiZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54Rm9yQXhpc0xhYmVsKHRoaXMub3duZXIuY29uZmlnLmF4aXNfcm90YXRlZCx0aGlzLmdldFlBeGlzTGFiZWxQb3NpdGlvbigpKX0sZi5wcm90b3R5cGUueEZvclkyQXhpc0xhYmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueEZvckF4aXNMYWJlbCh0aGlzLm93bmVyLmNvbmZpZy5heGlzX3JvdGF0ZWQsdGhpcy5nZXRZMkF4aXNMYWJlbFBvc2l0aW9uKCkpfSxmLnByb3RvdHlwZS5keEZvclhBeGlzTGFiZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5keEZvckF4aXNMYWJlbCghdGhpcy5vd25lci5jb25maWcuYXhpc19yb3RhdGVkLHRoaXMuZ2V0WEF4aXNMYWJlbFBvc2l0aW9uKCkpfSxmLnByb3RvdHlwZS5keEZvcllBeGlzTGFiZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5keEZvckF4aXNMYWJlbCh0aGlzLm93bmVyLmNvbmZpZy5heGlzX3JvdGF0ZWQsdGhpcy5nZXRZQXhpc0xhYmVsUG9zaXRpb24oKSl9LGYucHJvdG90eXBlLmR4Rm9yWTJBeGlzTGFiZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5keEZvckF4aXNMYWJlbCh0aGlzLm93bmVyLmNvbmZpZy5heGlzX3JvdGF0ZWQsdGhpcy5nZXRZMkF4aXNMYWJlbFBvc2l0aW9uKCkpfSxmLnByb3RvdHlwZS5keUZvclhBeGlzTGFiZWw9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm93bmVyLGI9YS5jb25maWcsYz10aGlzLmdldFhBeGlzTGFiZWxQb3NpdGlvbigpO3JldHVybiBiLmF4aXNfcm90YXRlZD9jLmlzSW5uZXI/XCIxLjJlbVwiOi0yNS10aGlzLmdldE1heFRpY2tXaWR0aChcInhcIik6Yy5pc0lubmVyP1wiLTAuNWVtXCI6Yi5heGlzX3hfaGVpZ2h0P2IuYXhpc194X2hlaWdodC0xMDpcIjNlbVwifSxmLnByb3RvdHlwZS5keUZvcllBeGlzTGFiZWw9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm93bmVyLGI9dGhpcy5nZXRZQXhpc0xhYmVsUG9zaXRpb24oKTtyZXR1cm4gYS5jb25maWcuYXhpc19yb3RhdGVkP2IuaXNJbm5lcj9cIi0wLjVlbVwiOlwiM2VtXCI6Yi5pc0lubmVyP1wiMS4yZW1cIjotMTAtKGEuY29uZmlnLmF4aXNfeV9pbm5lcj8wOnRoaXMuZ2V0TWF4VGlja1dpZHRoKFwieVwiKSsxMCl9LGYucHJvdG90eXBlLmR5Rm9yWTJBeGlzTGFiZWw9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm93bmVyLGI9dGhpcy5nZXRZMkF4aXNMYWJlbFBvc2l0aW9uKCk7cmV0dXJuIGEuY29uZmlnLmF4aXNfcm90YXRlZD9iLmlzSW5uZXI/XCIxLjJlbVwiOlwiLTIuMmVtXCI6Yi5pc0lubmVyP1wiLTAuNWVtXCI6MTUrKGEuY29uZmlnLmF4aXNfeTJfaW5uZXI/MDp0aGlzLmdldE1heFRpY2tXaWR0aChcInkyXCIpKzE1KX0sZi5wcm90b3R5cGUudGV4dEFuY2hvckZvclhBeGlzTGFiZWw9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm93bmVyO3JldHVybiB0aGlzLnRleHRBbmNob3JGb3JBeGlzTGFiZWwoIWEuY29uZmlnLmF4aXNfcm90YXRlZCx0aGlzLmdldFhBeGlzTGFiZWxQb3NpdGlvbigpKX0sZi5wcm90b3R5cGUudGV4dEFuY2hvckZvcllBeGlzTGFiZWw9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm93bmVyO3JldHVybiB0aGlzLnRleHRBbmNob3JGb3JBeGlzTGFiZWwoYS5jb25maWcuYXhpc19yb3RhdGVkLHRoaXMuZ2V0WUF4aXNMYWJlbFBvc2l0aW9uKCkpfSxmLnByb3RvdHlwZS50ZXh0QW5jaG9yRm9yWTJBeGlzTGFiZWw9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm93bmVyO3JldHVybiB0aGlzLnRleHRBbmNob3JGb3JBeGlzTGFiZWwoYS5jb25maWcuYXhpc19yb3RhdGVkLHRoaXMuZ2V0WTJBeGlzTGFiZWxQb3NpdGlvbigpKX0sZi5wcm90b3R5cGUuZ2V0TWF4VGlja1dpZHRoPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsZyxoPXRoaXMub3duZXIsaT1oLmNvbmZpZyxqPTA7cmV0dXJuIGImJmguY3VycmVudE1heFRpY2tXaWR0aHNbYV0/aC5jdXJyZW50TWF4VGlja1dpZHRoc1thXTooaC5zdmcmJihjPWguZmlsdGVyVGFyZ2V0c1RvU2hvdyhoLmRhdGEudGFyZ2V0cyksXCJ5XCI9PT1hPyhkPWgueS5jb3B5KCkuZG9tYWluKGguZ2V0WURvbWFpbihjLFwieVwiKSksZT10aGlzLmdldFlBeGlzKGQsaC55T3JpZW50LGkuYXhpc195X3RpY2tfZm9ybWF0LGgueUF4aXNUaWNrVmFsdWVzLCExLCEwKSk6XCJ5MlwiPT09YT8oZD1oLnkyLmNvcHkoKS5kb21haW4oaC5nZXRZRG9tYWluKGMsXCJ5MlwiKSksZT10aGlzLmdldFlBeGlzKGQsaC55Mk9yaWVudCxpLmF4aXNfeTJfdGlja19mb3JtYXQsaC55MkF4aXNUaWNrVmFsdWVzLCExLCEwKSk6KGQ9aC54LmNvcHkoKS5kb21haW4oaC5nZXRYRG9tYWluKGMpKSxlPXRoaXMuZ2V0WEF4aXMoZCxoLnhPcmllbnQsaC54QXhpc1RpY2tGb3JtYXQsaC54QXhpc1RpY2tWYWx1ZXMsITEsITAsITApLHRoaXMudXBkYXRlWEF4aXNUaWNrVmFsdWVzKGMsZSkpLGY9aC5kMy5zZWxlY3QoXCJib2R5XCIpLmFwcGVuZChcImRpdlwiKS5jbGFzc2VkKFwiYzNcIiwhMCksZz1mLmFwcGVuZChcInN2Z1wiKS5zdHlsZShcInZpc2liaWxpdHlcIixcImhpZGRlblwiKS5zdHlsZShcInBvc2l0aW9uXCIsXCJmaXhlZFwiKS5zdHlsZShcInRvcFwiLDApLnN0eWxlKFwibGVmdFwiLDApLGcuYXBwZW5kKFwiZ1wiKS5jYWxsKGUpLmVhY2goZnVuY3Rpb24oKXtoLmQzLnNlbGVjdCh0aGlzKS5zZWxlY3RBbGwoXCJ0ZXh0XCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgYT10aGlzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2o8YS53aWR0aCYmKGo9YS53aWR0aCl9KSxmLnJlbW92ZSgpfSkpLGguY3VycmVudE1heFRpY2tXaWR0aHNbYV09MD49aj9oLmN1cnJlbnRNYXhUaWNrV2lkdGhzW2FdOmosaC5jdXJyZW50TWF4VGlja1dpZHRoc1thXSl9LGYucHJvdG90eXBlLnVwZGF0ZUxhYmVscz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLm93bmVyLGM9Yi5tYWluLnNlbGVjdChcIi5cIitsLmF4aXNYK1wiIC5cIitsLmF4aXNYTGFiZWwpLGQ9Yi5tYWluLnNlbGVjdChcIi5cIitsLmF4aXNZK1wiIC5cIitsLmF4aXNZTGFiZWwpLGU9Yi5tYWluLnNlbGVjdChcIi5cIitsLmF4aXNZMitcIiAuXCIrbC5heGlzWTJMYWJlbCk7KGE/Yy50cmFuc2l0aW9uKCk6YykuYXR0cihcInhcIix0aGlzLnhGb3JYQXhpc0xhYmVsLmJpbmQodGhpcykpLmF0dHIoXCJkeFwiLHRoaXMuZHhGb3JYQXhpc0xhYmVsLmJpbmQodGhpcykpLmF0dHIoXCJkeVwiLHRoaXMuZHlGb3JYQXhpc0xhYmVsLmJpbmQodGhpcykpLnRleHQodGhpcy50ZXh0Rm9yWEF4aXNMYWJlbC5iaW5kKHRoaXMpKSwoYT9kLnRyYW5zaXRpb24oKTpkKS5hdHRyKFwieFwiLHRoaXMueEZvcllBeGlzTGFiZWwuYmluZCh0aGlzKSkuYXR0cihcImR4XCIsdGhpcy5keEZvcllBeGlzTGFiZWwuYmluZCh0aGlzKSkuYXR0cihcImR5XCIsdGhpcy5keUZvcllBeGlzTGFiZWwuYmluZCh0aGlzKSkudGV4dCh0aGlzLnRleHRGb3JZQXhpc0xhYmVsLmJpbmQodGhpcykpLChhP2UudHJhbnNpdGlvbigpOmUpLmF0dHIoXCJ4XCIsdGhpcy54Rm9yWTJBeGlzTGFiZWwuYmluZCh0aGlzKSkuYXR0cihcImR4XCIsdGhpcy5keEZvclkyQXhpc0xhYmVsLmJpbmQodGhpcykpLmF0dHIoXCJkeVwiLHRoaXMuZHlGb3JZMkF4aXNMYWJlbC5iaW5kKHRoaXMpKS50ZXh0KHRoaXMudGV4dEZvclkyQXhpc0xhYmVsLmJpbmQodGhpcykpfSxmLnByb3RvdHlwZS5nZXRQYWRkaW5nPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiBtKGFbYl0pP1wicmF0aW9cIj09PWEudW5pdD9hW2JdKmQ6dGhpcy5jb252ZXJ0UGl4ZWxzVG9BeGlzUGFkZGluZyhhW2JdLGQpOmN9LGYucHJvdG90eXBlLmNvbnZlcnRQaXhlbHNUb0F4aXNQYWRkaW5nPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5vd25lcixkPWMuY29uZmlnLmF4aXNfcm90YXRlZD9jLndpZHRoOmMuaGVpZ2h0O3JldHVybiBiKihhL2QpfSxmLnByb3RvdHlwZS5nZW5lcmF0ZVRpY2tWYWx1ZXM9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnLGgsaSxqLGs9YTtpZihiKWlmKGQ9bihiKT9iKCk6YiwxPT09ZClrPVthWzBdXTtlbHNlIGlmKDI9PT1kKWs9W2FbMF0sYVthLmxlbmd0aC0xXV07ZWxzZSBpZihkPjIpe2ZvcihnPWQtMixlPWFbMF0sZj1hW2EubGVuZ3RoLTFdLGg9KGYtZSkvKGcrMSksaz1bZV0saT0wO2c+aTtpKyspaj0rZStoKihpKzEpLGsucHVzaChjP25ldyBEYXRlKGopOmopO2sucHVzaChmKX1yZXR1cm4gY3x8KGs9ay5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEtYn0pKSxrfSxmLnByb3RvdHlwZS5nZW5lcmF0ZVRyYW5zaXRpb25zPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMub3duZXIsYz1iLmF4ZXM7cmV0dXJue2F4aXNYOmE/Yy54LnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKTpjLngsYXhpc1k6YT9jLnkudHJhbnNpdGlvbigpLmR1cmF0aW9uKGEpOmMueSxheGlzWTI6YT9jLnkyLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKTpjLnkyLGF4aXNTdWJYOmE/Yy5zdWJ4LnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKTpjLnN1Ynh9fSxmLnByb3RvdHlwZS5yZWRyYXc9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLm93bmVyO2MuYXhlcy54LnN0eWxlKFwib3BhY2l0eVwiLGI/MDoxKSxjLmF4ZXMueS5zdHlsZShcIm9wYWNpdHlcIixiPzA6MSksYy5heGVzLnkyLnN0eWxlKFwib3BhY2l0eVwiLGI/MDoxKSxjLmF4ZXMuc3VieC5zdHlsZShcIm9wYWNpdHlcIixiPzA6MSksYS5heGlzWC5jYWxsKGMueEF4aXMpLGEuYXhpc1kuY2FsbChjLnlBeGlzKSxhLmF4aXNZMi5jYWxsKGMueTJBeGlzKSxhLmF4aXNTdWJYLmNhbGwoYy5zdWJYQXhpcyl9LGkuZ2V0Q2xpcFBhdGg9ZnVuY3Rpb24oYil7dmFyIGM9YS5uYXZpZ2F0b3IuYXBwVmVyc2lvbi50b0xvd2VyQ2FzZSgpLmluZGV4T2YoXCJtc2llIDkuXCIpPj0wO3JldHVyblwidXJsKFwiKyhjP1wiXCI6ZG9jdW1lbnQuVVJMLnNwbGl0KFwiI1wiKVswXSkrXCIjXCIrYitcIilcIn0saS5hcHBlbmRDbGlwPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEuYXBwZW5kKFwiY2xpcFBhdGhcIikuYXR0cihcImlkXCIsYikuYXBwZW5kKFwicmVjdFwiKX0saS5nZXRBeGlzQ2xpcFg9ZnVuY3Rpb24oYSl7dmFyIGI9TWF0aC5tYXgoMzAsdGhpcy5tYXJnaW4ubGVmdCk7cmV0dXJuIGE/LSgxK2IpOi0oYi0xKX0saS5nZXRBeGlzQ2xpcFk9ZnVuY3Rpb24oYSl7cmV0dXJuIGE/LTIwOi10aGlzLm1hcmdpbi50b3B9LGkuZ2V0WEF4aXNDbGlwWD1mdW5jdGlvbigpe3ZhciBhPXRoaXM7cmV0dXJuIGEuZ2V0QXhpc0NsaXBYKCFhLmNvbmZpZy5heGlzX3JvdGF0ZWQpfSxpLmdldFhBeGlzQ2xpcFk9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiBhLmdldEF4aXNDbGlwWSghYS5jb25maWcuYXhpc19yb3RhdGVkKX0saS5nZXRZQXhpc0NsaXBYPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztyZXR1cm4gYS5jb25maWcuYXhpc195X2lubmVyPy0xOmEuZ2V0QXhpc0NsaXBYKGEuY29uZmlnLmF4aXNfcm90YXRlZCl9LGkuZ2V0WUF4aXNDbGlwWT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7cmV0dXJuIGEuZ2V0QXhpc0NsaXBZKGEuY29uZmlnLmF4aXNfcm90YXRlZCl9LGkuZ2V0QXhpc0NsaXBXaWR0aD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9TWF0aC5tYXgoMzAsYi5tYXJnaW4ubGVmdCksZD1NYXRoLm1heCgzMCxiLm1hcmdpbi5yaWdodCk7cmV0dXJuIGE/Yi53aWR0aCsyK2MrZDpiLm1hcmdpbi5sZWZ0KzIwfSxpLmdldEF4aXNDbGlwSGVpZ2h0PWZ1bmN0aW9uKGEpe3JldHVybihhP3RoaXMubWFyZ2luLmJvdHRvbTp0aGlzLm1hcmdpbi50b3ArdGhpcy5oZWlnaHQpKzIwfSxpLmdldFhBeGlzQ2xpcFdpZHRoPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztyZXR1cm4gYS5nZXRBeGlzQ2xpcFdpZHRoKCFhLmNvbmZpZy5heGlzX3JvdGF0ZWQpfSxpLmdldFhBeGlzQ2xpcEhlaWdodD1mdW5jdGlvbigpe3ZhciBhPXRoaXM7cmV0dXJuIGEuZ2V0QXhpc0NsaXBIZWlnaHQoIWEuY29uZmlnLmF4aXNfcm90YXRlZCl9LGkuZ2V0WUF4aXNDbGlwV2lkdGg9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiBhLmdldEF4aXNDbGlwV2lkdGgoYS5jb25maWcuYXhpc19yb3RhdGVkKSsoYS5jb25maWcuYXhpc195X2lubmVyPzIwOjApfSxpLmdldFlBeGlzQ2xpcEhlaWdodD1mdW5jdGlvbigpe3ZhciBhPXRoaXM7cmV0dXJuIGEuZ2V0QXhpc0NsaXBIZWlnaHQoYS5jb25maWcuYXhpc19yb3RhdGVkKX0saS5pbml0UGllPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuZDMsYz1hLmNvbmZpZzthLnBpZT1iLmxheW91dC5waWUoKS52YWx1ZShmdW5jdGlvbihhKXtyZXR1cm4gYS52YWx1ZXMucmVkdWNlKGZ1bmN0aW9uKGEsYil7cmV0dXJuIGErYi52YWx1ZX0sMCl9KSxjLmRhdGFfb3JkZXJ8fGEucGllLnNvcnQobnVsbCl9LGkudXBkYXRlUmFkaXVzPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnLGM9Yi5nYXVnZV93aWR0aHx8Yi5kb251dF93aWR0aDthLnJhZGl1c0V4cGFuZGVkPU1hdGgubWluKGEuYXJjV2lkdGgsYS5hcmNIZWlnaHQpLzIsYS5yYWRpdXM9Ljk1KmEucmFkaXVzRXhwYW5kZWQsYS5pbm5lclJhZGl1c1JhdGlvPWM/KGEucmFkaXVzLWMpL2EucmFkaXVzOi42LGEuaW5uZXJSYWRpdXM9YS5oYXNUeXBlKFwiZG9udXRcIil8fGEuaGFzVHlwZShcImdhdWdlXCIpP2EucmFkaXVzKmEuaW5uZXJSYWRpdXNSYXRpbzowfSxpLnVwZGF0ZUFyYz1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5zdmdBcmM9YS5nZXRTdmdBcmMoKSxhLnN2Z0FyY0V4cGFuZGVkPWEuZ2V0U3ZnQXJjRXhwYW5kZWQoKSxhLnN2Z0FyY0V4cGFuZGVkU3ViPWEuZ2V0U3ZnQXJjRXhwYW5kZWQoLjk4KX0saS51cGRhdGVBbmdsZT1mdW5jdGlvbihhKXt2YXIgYixjLGQ9dGhpcyxlPWQuY29uZmlnLGY9ITEsZz0wLGg9ZS5nYXVnZV9taW4saT1lLmdhdWdlX21heDtcbnJldHVybiBkLnBpZShkLmZpbHRlclRhcmdldHNUb1Nob3coZC5kYXRhLnRhcmdldHMpKS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2Z8fGIuZGF0YS5pZCE9PWEuZGF0YS5pZHx8KGY9ITAsYT1iLGEuaW5kZXg9ZyksZysrfSksaXNOYU4oYS5zdGFydEFuZ2xlKSYmKGEuc3RhcnRBbmdsZT0wKSxpc05hTihhLmVuZEFuZ2xlKSYmKGEuZW5kQW5nbGU9YS5zdGFydEFuZ2xlKSxkLmlzR2F1Z2VUeXBlKGEuZGF0YSkmJihiPU1hdGguUEkvKGktaCksYz1hLnZhbHVlPGg/MDphLnZhbHVlPGk/YS52YWx1ZS1oOmktaCxhLnN0YXJ0QW5nbGU9LTEqKE1hdGguUEkvMiksYS5lbmRBbmdsZT1hLnN0YXJ0QW5nbGUrYipjKSxmP2E6bnVsbH0saS5nZXRTdmdBcmM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5kMy5zdmcuYXJjKCkub3V0ZXJSYWRpdXMoYS5yYWRpdXMpLmlubmVyUmFkaXVzKGEuaW5uZXJSYWRpdXMpLGM9ZnVuY3Rpb24oYyxkKXt2YXIgZTtyZXR1cm4gZD9iKGMpOihlPWEudXBkYXRlQW5nbGUoYyksZT9iKGUpOlwiTSAwIDBcIil9O3JldHVybiBjLmNlbnRyb2lkPWIuY2VudHJvaWQsY30saS5nZXRTdmdBcmNFeHBhbmRlZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5kMy5zdmcuYXJjKCkub3V0ZXJSYWRpdXMoYi5yYWRpdXNFeHBhbmRlZCooYT9hOjEpKS5pbm5lclJhZGl1cyhiLmlubmVyUmFkaXVzKTtyZXR1cm4gZnVuY3Rpb24oYSl7dmFyIGQ9Yi51cGRhdGVBbmdsZShhKTtyZXR1cm4gZD9jKGQpOlwiTSAwIDBcIn19LGkuZ2V0QXJjPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gY3x8dGhpcy5pc0FyY1R5cGUoYS5kYXRhKT90aGlzLnN2Z0FyYyhhLGIpOlwiTSAwIDBcIn0saS50cmFuc2Zvcm1Gb3JBcmNMYWJlbD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGc9dGhpcyxoPWcudXBkYXRlQW5nbGUoYSksaT1cIlwiO3JldHVybiBoJiYhZy5oYXNUeXBlKFwiZ2F1Z2VcIikmJihiPXRoaXMuc3ZnQXJjLmNlbnRyb2lkKGgpLGM9aXNOYU4oYlswXSk/MDpiWzBdLGQ9aXNOYU4oYlsxXSk/MDpiWzFdLGU9TWF0aC5zcXJ0KGMqYytkKmQpLGY9Zy5yYWRpdXMmJmU/KDM2L2cucmFkaXVzPi4zNzU/MS4xNzUtMzYvZy5yYWRpdXM6LjgpKmcucmFkaXVzL2U6MCxpPVwidHJhbnNsYXRlKFwiK2MqZitcIixcIitkKmYrXCIpXCIpLGl9LGkuZ2V0QXJjUmF0aW89ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuaGFzVHlwZShcImdhdWdlXCIpP01hdGguUEk6MipNYXRoLlBJO3JldHVybiBhPyhhLmVuZEFuZ2xlLWEuc3RhcnRBbmdsZSkvYzpudWxsfSxpLmNvbnZlcnRUb0FyY0RhdGE9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuYWRkTmFtZSh7aWQ6YS5kYXRhLmlkLHZhbHVlOmEudmFsdWUscmF0aW86dGhpcy5nZXRBcmNSYXRpbyhhKSxpbmRleDphLmluZGV4fSl9LGkudGV4dEZvckFyY0xhYmVsPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZz10aGlzO3JldHVybiBnLnNob3VsZFNob3dBcmNMYWJlbCgpPyhiPWcudXBkYXRlQW5nbGUoYSksYz1iP2IudmFsdWU6bnVsbCxkPWcuZ2V0QXJjUmF0aW8oYiksZT1hLmRhdGEuaWQsZy5oYXNUeXBlKFwiZ2F1Z2VcIil8fGcubWVldHNBcmNMYWJlbFRocmVzaG9sZChkKT8oZj1nLmdldEFyY0xhYmVsRm9ybWF0KCksZj9mKGMsZCxlKTpnLmRlZmF1bHRBcmNWYWx1ZUZvcm1hdChjLGQpKTpcIlwiKTpcIlwifSxpLmV4cGFuZEFyYz1mdW5jdGlvbihiKXt2YXIgYyxkPXRoaXM7cmV0dXJuIGQudHJhbnNpdGluZz92b2lkKGM9YS5zZXRJbnRlcnZhbChmdW5jdGlvbigpe2QudHJhbnNpdGluZ3x8KGEuY2xlYXJJbnRlcnZhbChjKSxkLmxlZ2VuZC5zZWxlY3RBbGwoXCIuYzMtbGVnZW5kLWl0ZW0tZm9jdXNlZFwiKS5zaXplKCk+MCYmZC5leHBhbmRBcmMoYikpfSwxMCkpOihiPWQubWFwVG9UYXJnZXRJZHMoYiksdm9pZCBkLnN2Zy5zZWxlY3RBbGwoZC5zZWxlY3RvclRhcmdldHMoYixcIi5cIitsLmNoYXJ0QXJjKSkuZWFjaChmdW5jdGlvbihhKXtkLnNob3VsZEV4cGFuZChhLmRhdGEuaWQpJiZkLmQzLnNlbGVjdCh0aGlzKS5zZWxlY3RBbGwoXCJwYXRoXCIpLnRyYW5zaXRpb24oKS5kdXJhdGlvbig1MCkuYXR0cihcImRcIixkLnN2Z0FyY0V4cGFuZGVkKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwKS5hdHRyKFwiZFwiLGQuc3ZnQXJjRXhwYW5kZWRTdWIpLmVhY2goZnVuY3Rpb24oYSl7ZC5pc0RvbnV0VHlwZShhLmRhdGEpfSl9KSl9LGkudW5leHBhbmRBcmM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztiLnRyYW5zaXRpbmd8fChhPWIubWFwVG9UYXJnZXRJZHMoYSksYi5zdmcuc2VsZWN0QWxsKGIuc2VsZWN0b3JUYXJnZXRzKGEsXCIuXCIrbC5jaGFydEFyYykpLnNlbGVjdEFsbChcInBhdGhcIikudHJhbnNpdGlvbigpLmR1cmF0aW9uKDUwKS5hdHRyKFwiZFwiLGIuc3ZnQXJjKSxiLnN2Zy5zZWxlY3RBbGwoXCIuXCIrbC5hcmMpLnN0eWxlKFwib3BhY2l0eVwiLDEpKX0saS5zaG91bGRFeHBhbmQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnO3JldHVybiBiLmlzRG9udXRUeXBlKGEpJiZjLmRvbnV0X2V4cGFuZHx8Yi5pc0dhdWdlVHlwZShhKSYmYy5nYXVnZV9leHBhbmR8fGIuaXNQaWVUeXBlKGEpJiZjLnBpZV9leHBhbmR9LGkuc2hvdWxkU2hvd0FyY0xhYmVsPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnLGM9ITA7cmV0dXJuIGEuaGFzVHlwZShcImRvbnV0XCIpP2M9Yi5kb251dF9sYWJlbF9zaG93OmEuaGFzVHlwZShcInBpZVwiKSYmKGM9Yi5waWVfbGFiZWxfc2hvdyksY30saS5tZWV0c0FyY0xhYmVsVGhyZXNob2xkPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmNvbmZpZyxkPWIuaGFzVHlwZShcImRvbnV0XCIpP2MuZG9udXRfbGFiZWxfdGhyZXNob2xkOmMucGllX2xhYmVsX3RocmVzaG9sZDtyZXR1cm4gYT49ZH0saS5nZXRBcmNMYWJlbEZvcm1hdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmNvbmZpZyxjPWIucGllX2xhYmVsX2Zvcm1hdDtyZXR1cm4gYS5oYXNUeXBlKFwiZ2F1Z2VcIik/Yz1iLmdhdWdlX2xhYmVsX2Zvcm1hdDphLmhhc1R5cGUoXCJkb251dFwiKSYmKGM9Yi5kb251dF9sYWJlbF9mb3JtYXQpLGN9LGkuZ2V0QXJjVGl0bGU9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiBhLmhhc1R5cGUoXCJkb251dFwiKT9hLmNvbmZpZy5kb251dF90aXRsZTpcIlwifSxpLnVwZGF0ZVRhcmdldHNGb3JBcmM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPXRoaXMsZT1kLm1haW4sZj1kLmNsYXNzQ2hhcnRBcmMuYmluZChkKSxnPWQuY2xhc3NBcmNzLmJpbmQoZCksaD1kLmNsYXNzRm9jdXMuYmluZChkKTtiPWUuc2VsZWN0KFwiLlwiK2wuY2hhcnRBcmNzKS5zZWxlY3RBbGwoXCIuXCIrbC5jaGFydEFyYykuZGF0YShkLnBpZShhKSkuYXR0cihcImNsYXNzXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGYoYSkraChhLmRhdGEpfSksYz1iLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixmKSxjLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsZyksYy5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJkeVwiLGQuaGFzVHlwZShcImdhdWdlXCIpP1wiLS4xZW1cIjpcIi4zNWVtXCIpLnN0eWxlKFwib3BhY2l0eVwiLDApLnN0eWxlKFwidGV4dC1hbmNob3JcIixcIm1pZGRsZVwiKS5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsXCJub25lXCIpfSxpLmluaXRBcmM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EuYXJjcz1hLm1haW4uc2VsZWN0KFwiLlwiK2wuY2hhcnQpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsbC5jaGFydEFyY3MpLmF0dHIoXCJ0cmFuc2Zvcm1cIixhLmdldFRyYW5zbGF0ZShcImFyY1wiKSksYS5hcmNzLmFwcGVuZChcInRleHRcIikuYXR0cihcImNsYXNzXCIsbC5jaGFydEFyY3NUaXRsZSkuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLFwibWlkZGxlXCIpLnRleHQoYS5nZXRBcmNUaXRsZSgpKX0saS5yZWRyYXdBcmM9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGU9dGhpcyxmPWUuZDMsZz1lLmNvbmZpZyxoPWUubWFpbjtkPWguc2VsZWN0QWxsKFwiLlwiK2wuYXJjcykuc2VsZWN0QWxsKFwiLlwiK2wuYXJjKS5kYXRhKGUuYXJjRGF0YS5iaW5kKGUpKSxkLmVudGVyKCkuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiY2xhc3NcIixlLmNsYXNzQXJjLmJpbmQoZSkpLnN0eWxlKFwiZmlsbFwiLGZ1bmN0aW9uKGEpe3JldHVybiBlLmNvbG9yKGEuZGF0YSl9KS5zdHlsZShcImN1cnNvclwiLGZ1bmN0aW9uKGEpe3JldHVybiBnLmludGVyYWN0aW9uX2VuYWJsZWQmJmcuZGF0YV9zZWxlY3Rpb25faXNzZWxlY3RhYmxlKGEpP1wicG9pbnRlclwiOm51bGx9KS5zdHlsZShcIm9wYWNpdHlcIiwwKS5lYWNoKGZ1bmN0aW9uKGEpe2UuaXNHYXVnZVR5cGUoYS5kYXRhKSYmKGEuc3RhcnRBbmdsZT1hLmVuZEFuZ2xlPS0xKihNYXRoLlBJLzIpKSx0aGlzLl9jdXJyZW50PWF9KSxkLmF0dHIoXCJ0cmFuc2Zvcm1cIixmdW5jdGlvbihhKXtyZXR1cm4hZS5pc0dhdWdlVHlwZShhLmRhdGEpJiZjP1wic2NhbGUoMClcIjpcIlwifSkuc3R5bGUoXCJvcGFjaXR5XCIsZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT10aGlzLl9jdXJyZW50PzA6MX0pLm9uKFwibW91c2VvdmVyXCIsZy5pbnRlcmFjdGlvbl9lbmFibGVkP2Z1bmN0aW9uKGEpe3ZhciBiLGM7ZS50cmFuc2l0aW5nfHwoYj1lLnVwZGF0ZUFuZ2xlKGEpLGM9ZS5jb252ZXJ0VG9BcmNEYXRhKGIpLGUuZXhwYW5kQXJjKGIuZGF0YS5pZCksZS5hcGkuZm9jdXMoYi5kYXRhLmlkKSxlLnRvZ2dsZUZvY3VzTGVnZW5kKGIuZGF0YS5pZCwhMCksZS5jb25maWcuZGF0YV9vbm1vdXNlb3ZlcihjLHRoaXMpKX06bnVsbCkub24oXCJtb3VzZW1vdmVcIixnLmludGVyYWN0aW9uX2VuYWJsZWQ/ZnVuY3Rpb24oYSl7dmFyIGI9ZS51cGRhdGVBbmdsZShhKSxjPWUuY29udmVydFRvQXJjRGF0YShiKSxkPVtjXTtlLnNob3dUb29sdGlwKGQsdGhpcyl9Om51bGwpLm9uKFwibW91c2VvdXRcIixnLmludGVyYWN0aW9uX2VuYWJsZWQ/ZnVuY3Rpb24oYSl7dmFyIGIsYztlLnRyYW5zaXRpbmd8fChiPWUudXBkYXRlQW5nbGUoYSksYz1lLmNvbnZlcnRUb0FyY0RhdGEoYiksZS51bmV4cGFuZEFyYyhiLmRhdGEuaWQpLGUuYXBpLnJldmVydCgpLGUucmV2ZXJ0TGVnZW5kKCksZS5oaWRlVG9vbHRpcCgpLGUuY29uZmlnLmRhdGFfb25tb3VzZW91dChjLHRoaXMpKX06bnVsbCkub24oXCJjbGlja1wiLGcuaW50ZXJhY3Rpb25fZW5hYmxlZD9mdW5jdGlvbihhLGIpe3ZhciBjPWUudXBkYXRlQW5nbGUoYSksZD1lLmNvbnZlcnRUb0FyY0RhdGEoYyk7ZS50b2dnbGVTaGFwZSYmZS50b2dnbGVTaGFwZSh0aGlzLGQsYiksZS5jb25maWcuZGF0YV9vbmNsaWNrLmNhbGwoZS5hcGksZCx0aGlzKX06bnVsbCkuZWFjaChmdW5jdGlvbigpe2UudHJhbnNpdGluZz0hMH0pLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5hdHRyVHdlZW4oXCJkXCIsZnVuY3Rpb24oYSl7dmFyIGIsYz1lLnVwZGF0ZUFuZ2xlKGEpO3JldHVybiBjPyhpc05hTih0aGlzLl9jdXJyZW50LnN0YXJ0QW5nbGUpJiYodGhpcy5fY3VycmVudC5zdGFydEFuZ2xlPTApLGlzTmFOKHRoaXMuX2N1cnJlbnQuZW5kQW5nbGUpJiYodGhpcy5fY3VycmVudC5lbmRBbmdsZT10aGlzLl9jdXJyZW50LnN0YXJ0QW5nbGUpLGI9Zi5pbnRlcnBvbGF0ZSh0aGlzLl9jdXJyZW50LGMpLHRoaXMuX2N1cnJlbnQ9YigwKSxmdW5jdGlvbihjKXt2YXIgZD1iKGMpO3JldHVybiBkLmRhdGE9YS5kYXRhLGUuZ2V0QXJjKGQsITApfSk6ZnVuY3Rpb24oKXtyZXR1cm5cIk0gMCAwXCJ9fSkuYXR0cihcInRyYW5zZm9ybVwiLGM/XCJzY2FsZSgxKVwiOlwiXCIpLnN0eWxlKFwiZmlsbFwiLGZ1bmN0aW9uKGEpe3JldHVybiBlLmxldmVsQ29sb3I/ZS5sZXZlbENvbG9yKGEuZGF0YS52YWx1ZXNbMF0udmFsdWUpOmUuY29sb3IoYS5kYXRhLmlkKX0pLnN0eWxlKFwib3BhY2l0eVwiLDEpLmNhbGwoZS5lbmRhbGwsZnVuY3Rpb24oKXtlLnRyYW5zaXRpbmc9ITF9KSxkLmV4aXQoKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oYikuc3R5bGUoXCJvcGFjaXR5XCIsMCkucmVtb3ZlKCksaC5zZWxlY3RBbGwoXCIuXCIrbC5jaGFydEFyYykuc2VsZWN0KFwidGV4dFwiKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5hdHRyKFwiY2xhc3NcIixmdW5jdGlvbihhKXtyZXR1cm4gZS5pc0dhdWdlVHlwZShhLmRhdGEpP2wuZ2F1Z2VWYWx1ZTpcIlwifSkudGV4dChlLnRleHRGb3JBcmNMYWJlbC5iaW5kKGUpKS5hdHRyKFwidHJhbnNmb3JtXCIsZS50cmFuc2Zvcm1Gb3JBcmNMYWJlbC5iaW5kKGUpKS5zdHlsZShcImZvbnQtc2l6ZVwiLGZ1bmN0aW9uKGEpe3JldHVybiBlLmlzR2F1Z2VUeXBlKGEuZGF0YSk/TWF0aC5yb3VuZChlLnJhZGl1cy81KStcInB4XCI6XCJcIn0pLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5zdHlsZShcIm9wYWNpdHlcIixmdW5jdGlvbihhKXtyZXR1cm4gZS5pc1RhcmdldFRvU2hvdyhhLmRhdGEuaWQpJiZlLmlzQXJjVHlwZShhLmRhdGEpPzE6MH0pLGguc2VsZWN0KFwiLlwiK2wuY2hhcnRBcmNzVGl0bGUpLnN0eWxlKFwib3BhY2l0eVwiLGUuaGFzVHlwZShcImRvbnV0XCIpfHxlLmhhc1R5cGUoXCJnYXVnZVwiKT8xOjApLGUuaGFzVHlwZShcImdhdWdlXCIpJiYoZS5hcmNzLnNlbGVjdChcIi5cIitsLmNoYXJ0QXJjc0JhY2tncm91bmQpLmF0dHIoXCJkXCIsZnVuY3Rpb24oKXt2YXIgYT17ZGF0YTpbe3ZhbHVlOmcuZ2F1Z2VfbWF4fV0sc3RhcnRBbmdsZTotMSooTWF0aC5QSS8yKSxlbmRBbmdsZTpNYXRoLlBJLzJ9O3JldHVybiBlLmdldEFyYyhhLCEwLCEwKX0pLGUuYXJjcy5zZWxlY3QoXCIuXCIrbC5jaGFydEFyY3NHYXVnZVVuaXQpLmF0dHIoXCJkeVwiLFwiLjc1ZW1cIikudGV4dChnLmdhdWdlX2xhYmVsX3Nob3c/Zy5nYXVnZV91bml0czpcIlwiKSxlLmFyY3Muc2VsZWN0KFwiLlwiK2wuY2hhcnRBcmNzR2F1Z2VNaW4pLmF0dHIoXCJkeFwiLC0xKihlLmlubmVyUmFkaXVzKyhlLnJhZGl1cy1lLmlubmVyUmFkaXVzKS8yKStcInB4XCIpLmF0dHIoXCJkeVwiLFwiMS4yZW1cIikudGV4dChnLmdhdWdlX2xhYmVsX3Nob3c/Zy5nYXVnZV9taW46XCJcIiksZS5hcmNzLnNlbGVjdChcIi5cIitsLmNoYXJ0QXJjc0dhdWdlTWF4KS5hdHRyKFwiZHhcIixlLmlubmVyUmFkaXVzKyhlLnJhZGl1cy1lLmlubmVyUmFkaXVzKS8yK1wicHhcIikuYXR0cihcImR5XCIsXCIxLjJlbVwiKS50ZXh0KGcuZ2F1Z2VfbGFiZWxfc2hvdz9nLmdhdWdlX21heDpcIlwiKSl9LGkuaW5pdEdhdWdlPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5hcmNzO3RoaXMuaGFzVHlwZShcImdhdWdlXCIpJiYoYS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJjbGFzc1wiLGwuY2hhcnRBcmNzQmFja2dyb3VuZCksYS5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJjbGFzc1wiLGwuY2hhcnRBcmNzR2F1Z2VVbml0KS5zdHlsZShcInRleHQtYW5jaG9yXCIsXCJtaWRkbGVcIikuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLFwibm9uZVwiKSxhLmFwcGVuZChcInRleHRcIikuYXR0cihcImNsYXNzXCIsbC5jaGFydEFyY3NHYXVnZU1pbikuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLFwibWlkZGxlXCIpLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIixcIm5vbmVcIiksYS5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJjbGFzc1wiLGwuY2hhcnRBcmNzR2F1Z2VNYXgpLnN0eWxlKFwidGV4dC1hbmNob3JcIixcIm1pZGRsZVwiKS5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsXCJub25lXCIpKX0saS5nZXRHYXVnZUxhYmVsSGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29uZmlnLmdhdWdlX2xhYmVsX3Nob3c/MjA6MH0saS5pbml0UmVnaW9uPWZ1bmN0aW9uKCl7dmFyIGE9dGhpczthLnJlZ2lvbj1hLm1haW4uYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xpcC1wYXRoXCIsYS5jbGlwUGF0aCkuYXR0cihcImNsYXNzXCIsbC5yZWdpb25zKX0saS51cGRhdGVSZWdpb249ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIuY29uZmlnO2IucmVnaW9uLnN0eWxlKFwidmlzaWJpbGl0eVwiLGIuaGFzQXJjVHlwZSgpP1wiaGlkZGVuXCI6XCJ2aXNpYmxlXCIpLGIubWFpblJlZ2lvbj1iLm1haW4uc2VsZWN0KFwiLlwiK2wucmVnaW9ucykuc2VsZWN0QWxsKFwiLlwiK2wucmVnaW9uKS5kYXRhKGMucmVnaW9ucyksYi5tYWluUmVnaW9uLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixiLmNsYXNzUmVnaW9uLmJpbmQoYikpLmFwcGVuZChcInJlY3RcIikuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIiwwKSxiLm1haW5SZWdpb24uZXhpdCgpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5yZW1vdmUoKX0saS5yZWRyYXdSZWdpb249ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIubWFpblJlZ2lvbi5zZWxlY3RBbGwoXCJyZWN0XCIpLGQ9Yi5yZWdpb25YLmJpbmQoYiksZT1iLnJlZ2lvblkuYmluZChiKSxmPWIucmVnaW9uV2lkdGguYmluZChiKSxnPWIucmVnaW9uSGVpZ2h0LmJpbmQoYik7cmV0dXJuWyhhP2MudHJhbnNpdGlvbigpOmMpLmF0dHIoXCJ4XCIsZCkuYXR0cihcInlcIixlKS5hdHRyKFwid2lkdGhcIixmKS5hdHRyKFwiaGVpZ2h0XCIsZykuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIixmdW5jdGlvbihhKXtyZXR1cm4gbShhLm9wYWNpdHkpP2Eub3BhY2l0eTouMX0pXX0saS5yZWdpb25YPWZ1bmN0aW9uKGEpe3ZhciBiLGM9dGhpcyxkPWMuY29uZmlnLGU9XCJ5XCI9PT1hLmF4aXM/Yy55OmMueTI7cmV0dXJuIGI9XCJ5XCI9PT1hLmF4aXN8fFwieTJcIj09PWEuYXhpcz9kLmF4aXNfcm90YXRlZCYmXCJzdGFydFwiaW4gYT9lKGEuc3RhcnQpOjA6ZC5heGlzX3JvdGF0ZWQ/MDpcInN0YXJ0XCJpbiBhP2MueChjLmlzVGltZVNlcmllcygpP2MucGFyc2VEYXRlKGEuc3RhcnQpOmEuc3RhcnQpOjB9LGkucmVnaW9uWT1mdW5jdGlvbihhKXt2YXIgYixjPXRoaXMsZD1jLmNvbmZpZyxlPVwieVwiPT09YS5heGlzP2MueTpjLnkyO3JldHVybiBiPVwieVwiPT09YS5heGlzfHxcInkyXCI9PT1hLmF4aXM/ZC5heGlzX3JvdGF0ZWQ/MDpcImVuZFwiaW4gYT9lKGEuZW5kKTowOmQuYXhpc19yb3RhdGVkJiZcInN0YXJ0XCJpbiBhP2MueChjLmlzVGltZVNlcmllcygpP2MucGFyc2VEYXRlKGEuc3RhcnQpOmEuc3RhcnQpOjB9LGkucmVnaW9uV2lkdGg9ZnVuY3Rpb24oYSl7dmFyIGIsYz10aGlzLGQ9Yy5jb25maWcsZT1jLnJlZ2lvblgoYSksZj1cInlcIj09PWEuYXhpcz9jLnk6Yy55MjtyZXR1cm4gYj1cInlcIj09PWEuYXhpc3x8XCJ5MlwiPT09YS5heGlzP2QuYXhpc19yb3RhdGVkJiZcImVuZFwiaW4gYT9mKGEuZW5kKTpjLndpZHRoOmQuYXhpc19yb3RhdGVkP2Mud2lkdGg6XCJlbmRcImluIGE/Yy54KGMuaXNUaW1lU2VyaWVzKCk/Yy5wYXJzZURhdGUoYS5lbmQpOmEuZW5kKTpjLndpZHRoLGU+Yj8wOmItZX0saS5yZWdpb25IZWlnaHQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz10aGlzLGQ9Yy5jb25maWcsZT10aGlzLnJlZ2lvblkoYSksZj1cInlcIj09PWEuYXhpcz9jLnk6Yy55MjtyZXR1cm4gYj1cInlcIj09PWEuYXhpc3x8XCJ5MlwiPT09YS5heGlzP2QuYXhpc19yb3RhdGVkP2MuaGVpZ2h0Olwic3RhcnRcImluIGE/ZihhLnN0YXJ0KTpjLmhlaWdodDpkLmF4aXNfcm90YXRlZCYmXCJlbmRcImluIGE/Yy54KGMuaXNUaW1lU2VyaWVzKCk/Yy5wYXJzZURhdGUoYS5lbmQpOmEuZW5kKTpjLmhlaWdodCxlPmI/MDpiLWV9LGkuaXNSZWdpb25Pblg9ZnVuY3Rpb24oYSl7cmV0dXJuIWEuYXhpc3x8XCJ4XCI9PT1hLmF4aXN9LGkuZHJhZz1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpLGo9dGhpcyxrPWouY29uZmlnLG09ai5tYWluLG49ai5kMztqLmhhc0FyY1R5cGUoKXx8ay5kYXRhX3NlbGVjdGlvbl9lbmFibGVkJiYoIWsuem9vbV9lbmFibGVkfHxqLnpvb20uYWx0RG9tYWluKSYmay5kYXRhX3NlbGVjdGlvbl9tdWx0aXBsZSYmKGI9ai5kcmFnU3RhcnRbMF0sYz1qLmRyYWdTdGFydFsxXSxkPWFbMF0sZT1hWzFdLGY9TWF0aC5taW4oYixkKSxnPU1hdGgubWF4KGIsZCksaD1rLmRhdGFfc2VsZWN0aW9uX2dyb3VwZWQ/ai5tYXJnaW4udG9wOk1hdGgubWluKGMsZSksaT1rLmRhdGFfc2VsZWN0aW9uX2dyb3VwZWQ/ai5oZWlnaHQ6TWF0aC5tYXgoYyxlKSxtLnNlbGVjdChcIi5cIitsLmRyYWdhcmVhKS5hdHRyKFwieFwiLGYpLmF0dHIoXCJ5XCIsaCkuYXR0cihcIndpZHRoXCIsZy1mKS5hdHRyKFwiaGVpZ2h0XCIsaS1oKSxtLnNlbGVjdEFsbChcIi5cIitsLnNoYXBlcykuc2VsZWN0QWxsKFwiLlwiK2wuc2hhcGUpLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gay5kYXRhX3NlbGVjdGlvbl9pc3NlbGVjdGFibGUoYSl9KS5lYWNoKGZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGssbSxvLHA9bi5zZWxlY3QodGhpcykscT1wLmNsYXNzZWQobC5TRUxFQ1RFRCkscj1wLmNsYXNzZWQobC5JTkNMVURFRCkscz0hMTtpZihwLmNsYXNzZWQobC5jaXJjbGUpKWM9MSpwLmF0dHIoXCJjeFwiKSxkPTEqcC5hdHRyKFwiY3lcIiksbT1qLnRvZ2dsZVBvaW50LHM9Yz5mJiZnPmMmJmQ+aCYmaT5kO2Vsc2V7aWYoIXAuY2xhc3NlZChsLmJhcikpcmV0dXJuO289eSh0aGlzKSxjPW8ueCxkPW8ueSxlPW8ud2lkdGgsaz1vLmhlaWdodCxtPWoudG9nZ2xlUGF0aCxzPSEoYz5nfHxmPmMrZXx8ZD5pfHxoPmQrayl9c15yJiYocC5jbGFzc2VkKGwuSU5DTFVERUQsIXIpLHAuY2xhc3NlZChsLlNFTEVDVEVELCFxKSxtLmNhbGwoaiwhcSxwLGEsYikpfSkpfSxpLmRyYWdzdGFydD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWc7Yi5oYXNBcmNUeXBlKCl8fGMuZGF0YV9zZWxlY3Rpb25fZW5hYmxlZCYmKGIuZHJhZ1N0YXJ0PWEsYi5tYWluLnNlbGVjdChcIi5cIitsLmNoYXJ0KS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJjbGFzc1wiLGwuZHJhZ2FyZWEpLnN0eWxlKFwib3BhY2l0eVwiLC4xKSxiLmRyYWdnaW5nPSEwKX0saS5kcmFnZW5kPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnO2EuaGFzQXJjVHlwZSgpfHxiLmRhdGFfc2VsZWN0aW9uX2VuYWJsZWQmJihhLm1haW4uc2VsZWN0KFwiLlwiK2wuZHJhZ2FyZWEpLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDApLnN0eWxlKFwib3BhY2l0eVwiLDApLnJlbW92ZSgpLGEubWFpbi5zZWxlY3RBbGwoXCIuXCIrbC5zaGFwZSkuY2xhc3NlZChsLklOQ0xVREVELCExKSxhLmRyYWdnaW5nPSExKX0saS5zZWxlY3RQb2ludD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcyxlPWQuY29uZmlnLGY9KGUuYXhpc19yb3RhdGVkP2QuY2lyY2xlWTpkLmNpcmNsZVgpLmJpbmQoZCksZz0oZS5heGlzX3JvdGF0ZWQ/ZC5jaXJjbGVYOmQuY2lyY2xlWSkuYmluZChkKSxoPWQucG9pbnRTZWxlY3RSLmJpbmQoZCk7ZS5kYXRhX29uc2VsZWN0ZWQuY2FsbChkLmFwaSxiLGEubm9kZSgpKSxkLm1haW4uc2VsZWN0KFwiLlwiK2wuc2VsZWN0ZWRDaXJjbGVzK2QuZ2V0VGFyZ2V0U2VsZWN0b3JTdWZmaXgoYi5pZCkpLnNlbGVjdEFsbChcIi5cIitsLnNlbGVjdGVkQ2lyY2xlK1wiLVwiK2MpLmRhdGEoW2JdKS5lbnRlcigpLmFwcGVuZChcImNpcmNsZVwiKS5hdHRyKFwiY2xhc3NcIixmdW5jdGlvbigpe3JldHVybiBkLmdlbmVyYXRlQ2xhc3MobC5zZWxlY3RlZENpcmNsZSxjKX0pLmF0dHIoXCJjeFwiLGYpLmF0dHIoXCJjeVwiLGcpLmF0dHIoXCJzdHJva2VcIixmdW5jdGlvbigpe3JldHVybiBkLmNvbG9yKGIpfSkuYXR0cihcInJcIixmdW5jdGlvbihhKXtyZXR1cm4gMS40KmQucG9pbnRTZWxlY3RSKGEpfSkudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMCkuYXR0cihcInJcIixoKX0saS51bnNlbGVjdFBvaW50PWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzO2QuY29uZmlnLmRhdGFfb251bnNlbGVjdGVkKGIsYS5ub2RlKCkpLGQubWFpbi5zZWxlY3QoXCIuXCIrbC5zZWxlY3RlZENpcmNsZXMrZC5nZXRUYXJnZXRTZWxlY3RvclN1ZmZpeChiLmlkKSkuc2VsZWN0QWxsKFwiLlwiK2wuc2VsZWN0ZWRDaXJjbGUrXCItXCIrYykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMCkuYXR0cihcInJcIiwwKS5yZW1vdmUoKX0saS50b2dnbGVQb2ludD1mdW5jdGlvbihhLGIsYyxkKXthP3RoaXMuc2VsZWN0UG9pbnQoYixjLGQpOnRoaXMudW5zZWxlY3RQb2ludChiLGMsZCl9LGkuc2VsZWN0UGF0aD1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXM7Yy5jb25maWcuZGF0YV9vbnNlbGVjdGVkLmNhbGwoYyxiLGEubm9kZSgpKSxhLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDApLnN0eWxlKFwiZmlsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGMuZDMucmdiKGMuY29sb3IoYikpLmJyaWdodGVyKC43NSl9KX0saS51bnNlbGVjdFBhdGg9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO2MuY29uZmlnLmRhdGFfb251bnNlbGVjdGVkLmNhbGwoYyxiLGEubm9kZSgpKSxhLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDApLnN0eWxlKFwiZmlsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGMuY29sb3IoYil9KX0saS50b2dnbGVQYXRoPWZ1bmN0aW9uKGEsYixjLGQpe2E/dGhpcy5zZWxlY3RQYXRoKGIsYyxkKTp0aGlzLnVuc2VsZWN0UGF0aChiLGMsZCl9LGkuZ2V0VG9nZ2xlPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD10aGlzO3JldHVyblwiY2lyY2xlXCI9PT1hLm5vZGVOYW1lP2M9ZC5pc1N0ZXBUeXBlKGIpP2Z1bmN0aW9uKCl7fTpkLnRvZ2dsZVBvaW50OlwicGF0aFwiPT09YS5ub2RlTmFtZSYmKGM9ZC50b2dnbGVQYXRoKSxjfSxpLnRvZ2dsZVNoYXBlPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLGU9ZC5kMyxmPWQuY29uZmlnLGc9ZS5zZWxlY3QoYSksaD1nLmNsYXNzZWQobC5TRUxFQ1RFRCksaT1kLmdldFRvZ2dsZShhLGIpLmJpbmQoZCk7Zi5kYXRhX3NlbGVjdGlvbl9lbmFibGVkJiZmLmRhdGFfc2VsZWN0aW9uX2lzc2VsZWN0YWJsZShiKSYmKGYuZGF0YV9zZWxlY3Rpb25fbXVsdGlwbGV8fGQubWFpbi5zZWxlY3RBbGwoXCIuXCIrbC5zaGFwZXMrKGYuZGF0YV9zZWxlY3Rpb25fZ3JvdXBlZD9kLmdldFRhcmdldFNlbGVjdG9yU3VmZml4KGIuaWQpOlwiXCIpKS5zZWxlY3RBbGwoXCIuXCIrbC5zaGFwZSkuZWFjaChmdW5jdGlvbihhLGIpe3ZhciBjPWUuc2VsZWN0KHRoaXMpO2MuY2xhc3NlZChsLlNFTEVDVEVEKSYmaSghMSxjLmNsYXNzZWQobC5TRUxFQ1RFRCwhMSksYSxiKX0pLGcuY2xhc3NlZChsLlNFTEVDVEVELCFoKSxpKCFoLGcsYixjKSl9LGkuaW5pdEJydXNoPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuZDM7YS5icnVzaD1iLnN2Zy5icnVzaCgpLm9uKFwiYnJ1c2hcIixmdW5jdGlvbigpe2EucmVkcmF3Rm9yQnJ1c2goKX0pLGEuYnJ1c2gudXBkYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIGEuY29udGV4dCYmYS5jb250ZXh0LnNlbGVjdChcIi5cIitsLmJydXNoKS5jYWxsKHRoaXMpLHRoaXN9LGEuYnJ1c2guc2NhbGU9ZnVuY3Rpb24oYil7cmV0dXJuIGEuY29uZmlnLmF4aXNfcm90YXRlZD90aGlzLnkoYik6dGhpcy54KGIpfX0saS5pbml0U3ViY2hhcnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5jb25maWcsYz1hLmNvbnRleHQ9YS5zdmcuYXBwZW5kKFwiZ1wiKS5hdHRyKFwidHJhbnNmb3JtXCIsYS5nZXRUcmFuc2xhdGUoXCJjb250ZXh0XCIpKTtjLnN0eWxlKFwidmlzaWJpbGl0eVwiLGIuc3ViY2hhcnRfc2hvdz9cInZpc2libGVcIjpcImhpZGRlblwiKSxjLmFwcGVuZChcImdcIikuYXR0cihcImNsaXAtcGF0aFwiLGEuY2xpcFBhdGhGb3JTdWJjaGFydCkuYXR0cihcImNsYXNzXCIsbC5jaGFydCksYy5zZWxlY3QoXCIuXCIrbC5jaGFydCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLmNoYXJ0QmFycyksYy5zZWxlY3QoXCIuXCIrbC5jaGFydCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIixsLmNoYXJ0TGluZXMpLGMuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xpcC1wYXRoXCIsYS5jbGlwUGF0aCkuYXR0cihcImNsYXNzXCIsbC5icnVzaCkuY2FsbChhLmJydXNoKSxhLmF4ZXMuc3VieD1jLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsbC5heGlzWCkuYXR0cihcInRyYW5zZm9ybVwiLGEuZ2V0VHJhbnNsYXRlKFwic3VieFwiKSkuYXR0cihcImNsaXAtcGF0aFwiLGIuYXhpc19yb3RhdGVkP1wiXCI6YS5jbGlwUGF0aEZvclhBeGlzKX0saS51cGRhdGVUYXJnZXRzRm9yU3ViY2hhcnQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZj10aGlzLGc9Zi5jb250ZXh0LGg9Zi5jb25maWcsaT1mLmNsYXNzQ2hhcnRCYXIuYmluZChmKSxqPWYuY2xhc3NCYXJzLmJpbmQoZiksaz1mLmNsYXNzQ2hhcnRMaW5lLmJpbmQoZiksbT1mLmNsYXNzTGluZXMuYmluZChmKSxuPWYuY2xhc3NBcmVhcy5iaW5kKGYpO2guc3ViY2hhcnRfc2hvdyYmKGU9Zy5zZWxlY3QoXCIuXCIrbC5jaGFydEJhcnMpLnNlbGVjdEFsbChcIi5cIitsLmNoYXJ0QmFyKS5kYXRhKGEpLmF0dHIoXCJjbGFzc1wiLGkpLGQ9ZS5lbnRlcigpLmFwcGVuZChcImdcIikuc3R5bGUoXCJvcGFjaXR5XCIsMCkuYXR0cihcImNsYXNzXCIsaSksZC5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLGopLGM9Zy5zZWxlY3QoXCIuXCIrbC5jaGFydExpbmVzKS5zZWxlY3RBbGwoXCIuXCIrbC5jaGFydExpbmUpLmRhdGEoYSkuYXR0cihcImNsYXNzXCIsayksYj1jLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5hdHRyKFwiY2xhc3NcIixrKSxiLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsbSksYi5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLG4pLGcuc2VsZWN0QWxsKFwiLlwiK2wuYnJ1c2grXCIgcmVjdFwiKS5hdHRyKGguYXhpc19yb3RhdGVkP1wid2lkdGhcIjpcImhlaWdodFwiLGguYXhpc19yb3RhdGVkP2Yud2lkdGgyOmYuaGVpZ2h0MikpfSxpLnVwZGF0ZUJhckZvclN1YmNoYXJ0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7Yi5jb250ZXh0QmFyPWIuY29udGV4dC5zZWxlY3RBbGwoXCIuXCIrbC5iYXJzKS5zZWxlY3RBbGwoXCIuXCIrbC5iYXIpLmRhdGEoYi5iYXJEYXRhLmJpbmQoYikpLGIuY29udGV4dEJhci5lbnRlcigpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImNsYXNzXCIsYi5jbGFzc0Jhci5iaW5kKGIpKS5zdHlsZShcInN0cm9rZVwiLFwibm9uZVwiKS5zdHlsZShcImZpbGxcIixiLmNvbG9yKSxiLmNvbnRleHRCYXIuc3R5bGUoXCJvcGFjaXR5XCIsYi5pbml0aWFsT3BhY2l0eS5iaW5kKGIpKSxiLmNvbnRleHRCYXIuZXhpdCgpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihhKS5zdHlsZShcIm9wYWNpdHlcIiwwKS5yZW1vdmUoKX0saS5yZWRyYXdCYXJGb3JTdWJjaGFydD1mdW5jdGlvbihhLGIsYyl7KGI/dGhpcy5jb250ZXh0QmFyLnRyYW5zaXRpb24oKS5kdXJhdGlvbihjKTp0aGlzLmNvbnRleHRCYXIpLmF0dHIoXCJkXCIsYSkuc3R5bGUoXCJvcGFjaXR5XCIsMSl9LGkudXBkYXRlTGluZUZvclN1YmNoYXJ0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7Yi5jb250ZXh0TGluZT1iLmNvbnRleHQuc2VsZWN0QWxsKFwiLlwiK2wubGluZXMpLnNlbGVjdEFsbChcIi5cIitsLmxpbmUpLmRhdGEoYi5saW5lRGF0YS5iaW5kKGIpKSxiLmNvbnRleHRMaW5lLmVudGVyKCkuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiY2xhc3NcIixiLmNsYXNzTGluZS5iaW5kKGIpKS5zdHlsZShcInN0cm9rZVwiLGIuY29sb3IpLGIuY29udGV4dExpbmUuc3R5bGUoXCJvcGFjaXR5XCIsYi5pbml0aWFsT3BhY2l0eS5iaW5kKGIpKSxiLmNvbnRleHRMaW5lLmV4aXQoKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oYSkuc3R5bGUoXCJvcGFjaXR5XCIsMCkucmVtb3ZlKCl9LGkucmVkcmF3TGluZUZvclN1YmNoYXJ0PWZ1bmN0aW9uKGEsYixjKXsoYj90aGlzLmNvbnRleHRMaW5lLnRyYW5zaXRpb24oKS5kdXJhdGlvbihjKTp0aGlzLmNvbnRleHRMaW5lKS5hdHRyKFwiZFwiLGEpLnN0eWxlKFwib3BhY2l0eVwiLDEpfSxpLnVwZGF0ZUFyZWFGb3JTdWJjaGFydD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5kMztiLmNvbnRleHRBcmVhPWIuY29udGV4dC5zZWxlY3RBbGwoXCIuXCIrbC5hcmVhcykuc2VsZWN0QWxsKFwiLlwiK2wuYXJlYSkuZGF0YShiLmxpbmVEYXRhLmJpbmQoYikpLGIuY29udGV4dEFyZWEuZW50ZXIoKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJjbGFzc1wiLGIuY2xhc3NBcmVhLmJpbmQoYikpLnN0eWxlKFwiZmlsbFwiLGIuY29sb3IpLnN0eWxlKFwib3BhY2l0eVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGIub3JnQXJlYU9wYWNpdHk9K2Muc2VsZWN0KHRoaXMpLnN0eWxlKFwib3BhY2l0eVwiKSwwfSksYi5jb250ZXh0QXJlYS5zdHlsZShcIm9wYWNpdHlcIiwwKSxiLmNvbnRleHRBcmVhLmV4aXQoKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oYSkuc3R5bGUoXCJvcGFjaXR5XCIsMCkucmVtb3ZlKCl9LGkucmVkcmF3QXJlYUZvclN1YmNoYXJ0PWZ1bmN0aW9uKGEsYixjKXsoYj90aGlzLmNvbnRleHRBcmVhLnRyYW5zaXRpb24oKS5kdXJhdGlvbihjKTp0aGlzLmNvbnRleHRBcmVhKS5hdHRyKFwiZFwiLGEpLnN0eWxlKFwiZmlsbFwiLHRoaXMuY29sb3IpLnN0eWxlKFwib3BhY2l0eVwiLHRoaXMub3JnQXJlYU9wYWNpdHkpfSxpLnJlZHJhd1N1YmNoYXJ0PWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe3ZhciBoLGksaixrPXRoaXMsbD1rLmQzLG09ay5jb25maWc7ay5jb250ZXh0LnN0eWxlKFwidmlzaWJpbGl0eVwiLG0uc3ViY2hhcnRfc2hvdz9cInZpc2libGVcIjpcImhpZGRlblwiKSxtLnN1YmNoYXJ0X3Nob3cmJihsLmV2ZW50JiZcInpvb21cIj09PWwuZXZlbnQudHlwZSYmay5icnVzaC5leHRlbnQoay54Lm9yZ0RvbWFpbigpKS51cGRhdGUoKSxhJiYoay5icnVzaC5lbXB0eSgpfHxrLmJydXNoLmV4dGVudChrLngub3JnRG9tYWluKCkpLnVwZGF0ZSgpLGg9ay5nZW5lcmF0ZURyYXdBcmVhKGUsITApLGk9ay5nZW5lcmF0ZURyYXdCYXIoZiwhMCksaj1rLmdlbmVyYXRlRHJhd0xpbmUoZywhMCksay51cGRhdGVCYXJGb3JTdWJjaGFydChjKSxrLnVwZGF0ZUxpbmVGb3JTdWJjaGFydChjKSxrLnVwZGF0ZUFyZWFGb3JTdWJjaGFydChjKSxrLnJlZHJhd0JhckZvclN1YmNoYXJ0KGksYyxjKSxrLnJlZHJhd0xpbmVGb3JTdWJjaGFydChqLGMsYyksay5yZWRyYXdBcmVhRm9yU3ViY2hhcnQoaCxjLGMpKSl9LGkucmVkcmF3Rm9yQnJ1c2g9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS54O2EucmVkcmF3KHt3aXRoVHJhbnNpdGlvbjohMSx3aXRoWTphLmNvbmZpZy56b29tX3Jlc2NhbGUsd2l0aFN1YmNoYXJ0OiExLHdpdGhVcGRhdGVYRG9tYWluOiEwLHdpdGhEaW1lbnNpb246ITF9KSxhLmNvbmZpZy5zdWJjaGFydF9vbmJydXNoLmNhbGwoYS5hcGksYi5vcmdEb21haW4oKSl9LGkudHJhbnNmb3JtQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9dGhpcztiJiZiLmF4aXNTdWJYP2M9Yi5heGlzU3ViWDooYz1kLmNvbnRleHQuc2VsZWN0KFwiLlwiK2wuYXhpc1gpLGEmJihjPWMudHJhbnNpdGlvbigpKSksZC5jb250ZXh0LmF0dHIoXCJ0cmFuc2Zvcm1cIixkLmdldFRyYW5zbGF0ZShcImNvbnRleHRcIikpLGMuYXR0cihcInRyYW5zZm9ybVwiLGQuZ2V0VHJhbnNsYXRlKFwic3VieFwiKSl9LGkuZ2V0RGVmYXVsdEV4dGVudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmNvbmZpZyxjPW4oYi5heGlzX3hfZXh0ZW50KT9iLmF4aXNfeF9leHRlbnQoYS5nZXRYRG9tYWluKGEuZGF0YS50YXJnZXRzKSk6Yi5heGlzX3hfZXh0ZW50O3JldHVybiBhLmlzVGltZVNlcmllcygpJiYoYz1bYS5wYXJzZURhdGUoY1swXSksYS5wYXJzZURhdGUoY1sxXSldKSxjfSxpLmluaXRab29tPWZ1bmN0aW9uKCl7dmFyIGEsYj10aGlzLGM9Yi5kMyxkPWIuY29uZmlnO2Iuem9vbT1jLmJlaGF2aW9yLnpvb20oKS5vbihcInpvb21zdGFydFwiLGZ1bmN0aW9uKCl7YT1jLmV2ZW50LnNvdXJjZUV2ZW50LGIuem9vbS5hbHREb21haW49Yy5ldmVudC5zb3VyY2VFdmVudC5hbHRLZXk/Yi54Lm9yZ0RvbWFpbigpOm51bGwsZC56b29tX29uem9vbXN0YXJ0LmNhbGwoYi5hcGksYy5ldmVudC5zb3VyY2VFdmVudCl9KS5vbihcInpvb21cIixmdW5jdGlvbigpe2IucmVkcmF3Rm9yWm9vbS5jYWxsKGIpfSkub24oXCJ6b29tZW5kXCIsZnVuY3Rpb24oKXt2YXIgZT1jLmV2ZW50LnNvdXJjZUV2ZW50O2UmJmEuY2xpZW50WD09PWUuY2xpZW50WCYmYS5jbGllbnRZPT09ZS5jbGllbnRZfHwoYi5yZWRyYXdFdmVudFJlY3QoKSxiLnVwZGF0ZVpvb20oKSxkLnpvb21fb256b29tZW5kLmNhbGwoYi5hcGksYi54Lm9yZ0RvbWFpbigpKSl9KSxiLnpvb20uc2NhbGU9ZnVuY3Rpb24oYSl7cmV0dXJuIGQuYXhpc19yb3RhdGVkP3RoaXMueShhKTp0aGlzLngoYSl9LGIuem9vbS5vcmdTY2FsZUV4dGVudD1mdW5jdGlvbigpe3ZhciBhPWQuem9vbV9leHRlbnQ/ZC56b29tX2V4dGVudDpbMSwxMF07cmV0dXJuW2FbMF0sTWF0aC5tYXgoYi5nZXRNYXhEYXRhQ291bnQoKS9hWzFdLGFbMV0pXX0sYi56b29tLnVwZGF0ZVNjYWxlRXh0ZW50PWZ1bmN0aW9uKCl7dmFyIGE9dChiLngub3JnRG9tYWluKCkpL3QoYi5vcmdYRG9tYWluKSxjPXRoaXMub3JnU2NhbGVFeHRlbnQoKTtyZXR1cm4gdGhpcy5zY2FsZUV4dGVudChbY1swXSphLGNbMV0qYV0pLHRoaXN9fSxpLnVwZGF0ZVpvb209ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5jb25maWcuem9vbV9lbmFibGVkP2Euem9vbTpmdW5jdGlvbigpe307YS5tYWluLnNlbGVjdChcIi5cIitsLnpvb21SZWN0KS5jYWxsKGIpLm9uKFwiZGJsY2xpY2suem9vbVwiLG51bGwpLGEubWFpbi5zZWxlY3RBbGwoXCIuXCIrbC5ldmVudFJlY3QpLmNhbGwoYikub24oXCJkYmxjbGljay56b29tXCIsbnVsbCl9LGkucmVkcmF3Rm9yWm9vbT1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1hLmQzLGM9YS5jb25maWcsZD1hLnpvb20sZT1hLng7aWYoYy56b29tX2VuYWJsZWQmJjAhPT1hLmZpbHRlclRhcmdldHNUb1Nob3coYS5kYXRhLnRhcmdldHMpLmxlbmd0aCl7aWYoXCJtb3VzZW1vdmVcIj09PWIuZXZlbnQuc291cmNlRXZlbnQudHlwZSYmZC5hbHREb21haW4pcmV0dXJuIGUuZG9tYWluKGQuYWx0RG9tYWluKSx2b2lkIGQuc2NhbGUoZSkudXBkYXRlU2NhbGVFeHRlbnQoKTthLmlzQ2F0ZWdvcml6ZWQoKSYmZS5vcmdEb21haW4oKVswXT09PWEub3JnWERvbWFpblswXSYmZS5kb21haW4oW2Eub3JnWERvbWFpblswXS0xZS0xMCxlLm9yZ0RvbWFpbigpWzFdXSksYS5yZWRyYXcoe3dpdGhUcmFuc2l0aW9uOiExLHdpdGhZOmMuem9vbV9yZXNjYWxlLHdpdGhTdWJjaGFydDohMSx3aXRoRXZlbnRSZWN0OiExLHdpdGhEaW1lbnNpb246ITF9KSxcIm1vdXNlbW92ZVwiPT09Yi5ldmVudC5zb3VyY2VFdmVudC50eXBlJiYoYS5jYW5jZWxDbGljaz0hMCksYy56b29tX29uem9vbS5jYWxsKGEuYXBpLGUub3JnRG9tYWluKCkpfX0saS5nZW5lcmF0ZUNvbG9yPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY29uZmlnLGM9YS5kMyxkPWIuZGF0YV9jb2xvcnMsZT12KGIuY29sb3JfcGF0dGVybik/Yi5jb2xvcl9wYXR0ZXJuOmMuc2NhbGUuY2F0ZWdvcnkxMCgpLnJhbmdlKCksZj1iLmRhdGFfY29sb3IsZz1bXTtyZXR1cm4gZnVuY3Rpb24oYSl7dmFyIGIsYz1hLmlkfHxhLmRhdGEmJmEuZGF0YS5pZHx8YTtyZXR1cm4gZFtjXWluc3RhbmNlb2YgRnVuY3Rpb24/Yj1kW2NdKGEpOmRbY10/Yj1kW2NdOihnLmluZGV4T2YoYyk8MCYmZy5wdXNoKGMpLGI9ZVtnLmluZGV4T2YoYyklZS5sZW5ndGhdLGRbY109YiksZiBpbnN0YW5jZW9mIEZ1bmN0aW9uP2YoYixhKTpifX0saS5nZW5lcmF0ZUxldmVsQ29sb3I9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5jb25maWcsYz1iLmNvbG9yX3BhdHRlcm4sZD1iLmNvbG9yX3RocmVzaG9sZCxlPVwidmFsdWVcIj09PWQudW5pdCxmPWQudmFsdWVzJiZkLnZhbHVlcy5sZW5ndGg/ZC52YWx1ZXM6W10sZz1kLm1heHx8MTAwO3JldHVybiB2KGIuY29sb3JfdGhyZXNob2xkKT9mdW5jdGlvbihhKXt2YXIgYixkLGg9Y1tjLmxlbmd0aC0xXTtmb3IoYj0wO2I8Zi5sZW5ndGg7YisrKWlmKGQ9ZT9hOjEwMCphL2csZDxmW2JdKXtoPWNbYl07YnJlYWt9cmV0dXJuIGh9Om51bGx9LGkuZ2V0WUZvcm1hdD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9YSYmIWIuaGFzVHlwZShcImdhdWdlXCIpP2IuZGVmYXVsdEFyY1ZhbHVlRm9ybWF0OmIueUZvcm1hdCxkPWEmJiFiLmhhc1R5cGUoXCJnYXVnZVwiKT9iLmRlZmF1bHRBcmNWYWx1ZUZvcm1hdDpiLnkyRm9ybWF0O3JldHVybiBmdW5jdGlvbihhLGUsZil7dmFyIGc9XCJ5MlwiPT09Yi5heGlzLmdldElkKGYpP2Q6YztyZXR1cm4gZy5jYWxsKGIsYSxlKX19LGkueUZvcm1hdD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWcsZD1jLmF4aXNfeV90aWNrX2Zvcm1hdD9jLmF4aXNfeV90aWNrX2Zvcm1hdDpiLmRlZmF1bHRWYWx1ZUZvcm1hdDtyZXR1cm4gZChhKX0saS55MkZvcm1hdD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWcsZD1jLmF4aXNfeTJfdGlja19mb3JtYXQ/Yy5heGlzX3kyX3RpY2tfZm9ybWF0OmIuZGVmYXVsdFZhbHVlRm9ybWF0O3JldHVybiBkKGEpfSxpLmRlZmF1bHRWYWx1ZUZvcm1hdD1mdW5jdGlvbihhKXtyZXR1cm4gbShhKT8rYTpcIlwifSxpLmRlZmF1bHRBcmNWYWx1ZUZvcm1hdD1mdW5jdGlvbihhLGIpe3JldHVybigxMDAqYikudG9GaXhlZCgxKStcIiVcIn0saS5kYXRhTGFiZWxGb3JtYXQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz10aGlzLGQ9Yy5jb25maWcuZGF0YV9sYWJlbHMsZT1mdW5jdGlvbihhKXtyZXR1cm4gbShhKT8rYTpcIlwifTtyZXR1cm4gYj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBkLmZvcm1hdD9kLmZvcm1hdDpcIm9iamVjdFwiPT10eXBlb2YgZC5mb3JtYXQ/ZC5mb3JtYXRbYV0/ZC5mb3JtYXRbYV09PT0hMD9lOmQuZm9ybWF0W2FdOmZ1bmN0aW9uKCl7cmV0dXJuXCJcIn06ZX0saS5oYXNDYWNoZXM9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspaWYoIShhW2JdaW4gdGhpcy5jYWNoZSkpcmV0dXJuITE7cmV0dXJuITB9LGkuYWRkQ2FjaGU9ZnVuY3Rpb24oYSxiKXt0aGlzLmNhY2hlW2FdPXRoaXMuY2xvbmVUYXJnZXQoYil9LGkuZ2V0Q2FjaGVzPWZ1bmN0aW9uKGEpe3ZhciBiLGM9W107Zm9yKGI9MDtiPGEubGVuZ3RoO2IrKylhW2JdaW4gdGhpcy5jYWNoZSYmYy5wdXNoKHRoaXMuY2xvbmVUYXJnZXQodGhpcy5jYWNoZVthW2JdXSkpO3JldHVybiBjfTt2YXIgbD1pLkNMQVNTPXt0YXJnZXQ6XCJjMy10YXJnZXRcIixjaGFydDpcImMzLWNoYXJ0XCIsY2hhcnRMaW5lOlwiYzMtY2hhcnQtbGluZVwiLGNoYXJ0TGluZXM6XCJjMy1jaGFydC1saW5lc1wiLGNoYXJ0QmFyOlwiYzMtY2hhcnQtYmFyXCIsY2hhcnRCYXJzOlwiYzMtY2hhcnQtYmFyc1wiLGNoYXJ0VGV4dDpcImMzLWNoYXJ0LXRleHRcIixjaGFydFRleHRzOlwiYzMtY2hhcnQtdGV4dHNcIixjaGFydEFyYzpcImMzLWNoYXJ0LWFyY1wiLGNoYXJ0QXJjczpcImMzLWNoYXJ0LWFyY3NcIixjaGFydEFyY3NUaXRsZTpcImMzLWNoYXJ0LWFyY3MtdGl0bGVcIixjaGFydEFyY3NCYWNrZ3JvdW5kOlwiYzMtY2hhcnQtYXJjcy1iYWNrZ3JvdW5kXCIsY2hhcnRBcmNzR2F1Z2VVbml0OlwiYzMtY2hhcnQtYXJjcy1nYXVnZS11bml0XCIsY2hhcnRBcmNzR2F1Z2VNYXg6XCJjMy1jaGFydC1hcmNzLWdhdWdlLW1heFwiLGNoYXJ0QXJjc0dhdWdlTWluOlwiYzMtY2hhcnQtYXJjcy1nYXVnZS1taW5cIixzZWxlY3RlZENpcmNsZTpcImMzLXNlbGVjdGVkLWNpcmNsZVwiLHNlbGVjdGVkQ2lyY2xlczpcImMzLXNlbGVjdGVkLWNpcmNsZXNcIixldmVudFJlY3Q6XCJjMy1ldmVudC1yZWN0XCIsZXZlbnRSZWN0czpcImMzLWV2ZW50LXJlY3RzXCIsZXZlbnRSZWN0c1NpbmdsZTpcImMzLWV2ZW50LXJlY3RzLXNpbmdsZVwiLGV2ZW50UmVjdHNNdWx0aXBsZTpcImMzLWV2ZW50LXJlY3RzLW11bHRpcGxlXCIsem9vbVJlY3Q6XCJjMy16b29tLXJlY3RcIixicnVzaDpcImMzLWJydXNoXCIsZm9jdXNlZDpcImMzLWZvY3VzZWRcIixkZWZvY3VzZWQ6XCJjMy1kZWZvY3VzZWRcIixyZWdpb246XCJjMy1yZWdpb25cIixyZWdpb25zOlwiYzMtcmVnaW9uc1wiLHRvb2x0aXBDb250YWluZXI6XCJjMy10b29sdGlwLWNvbnRhaW5lclwiLHRvb2x0aXA6XCJjMy10b29sdGlwXCIsdG9vbHRpcE5hbWU6XCJjMy10b29sdGlwLW5hbWVcIixzaGFwZTpcImMzLXNoYXBlXCIsc2hhcGVzOlwiYzMtc2hhcGVzXCIsbGluZTpcImMzLWxpbmVcIixsaW5lczpcImMzLWxpbmVzXCIsYmFyOlwiYzMtYmFyXCIsYmFyczpcImMzLWJhcnNcIixjaXJjbGU6XCJjMy1jaXJjbGVcIixjaXJjbGVzOlwiYzMtY2lyY2xlc1wiLGFyYzpcImMzLWFyY1wiLGFyY3M6XCJjMy1hcmNzXCIsYXJlYTpcImMzLWFyZWFcIixhcmVhczpcImMzLWFyZWFzXCIsZW1wdHk6XCJjMy1lbXB0eVwiLHRleHQ6XCJjMy10ZXh0XCIsdGV4dHM6XCJjMy10ZXh0c1wiLGdhdWdlVmFsdWU6XCJjMy1nYXVnZS12YWx1ZVwiLGdyaWQ6XCJjMy1ncmlkXCIsZ3JpZExpbmVzOlwiYzMtZ3JpZC1saW5lc1wiLHhncmlkOlwiYzMteGdyaWRcIix4Z3JpZHM6XCJjMy14Z3JpZHNcIix4Z3JpZExpbmU6XCJjMy14Z3JpZC1saW5lXCIseGdyaWRMaW5lczpcImMzLXhncmlkLWxpbmVzXCIseGdyaWRGb2N1czpcImMzLXhncmlkLWZvY3VzXCIseWdyaWQ6XCJjMy15Z3JpZFwiLHlncmlkczpcImMzLXlncmlkc1wiLHlncmlkTGluZTpcImMzLXlncmlkLWxpbmVcIix5Z3JpZExpbmVzOlwiYzMteWdyaWQtbGluZXNcIixheGlzOlwiYzMtYXhpc1wiLGF4aXNYOlwiYzMtYXhpcy14XCIsYXhpc1hMYWJlbDpcImMzLWF4aXMteC1sYWJlbFwiLGF4aXNZOlwiYzMtYXhpcy15XCIsYXhpc1lMYWJlbDpcImMzLWF4aXMteS1sYWJlbFwiLGF4aXNZMjpcImMzLWF4aXMteTJcIixheGlzWTJMYWJlbDpcImMzLWF4aXMteTItbGFiZWxcIixsZWdlbmRCYWNrZ3JvdW5kOlwiYzMtbGVnZW5kLWJhY2tncm91bmRcIixsZWdlbmRJdGVtOlwiYzMtbGVnZW5kLWl0ZW1cIixsZWdlbmRJdGVtRXZlbnQ6XCJjMy1sZWdlbmQtaXRlbS1ldmVudFwiLGxlZ2VuZEl0ZW1UaWxlOlwiYzMtbGVnZW5kLWl0ZW0tdGlsZVwiLGxlZ2VuZEl0ZW1IaWRkZW46XCJjMy1sZWdlbmQtaXRlbS1oaWRkZW5cIixsZWdlbmRJdGVtRm9jdXNlZDpcImMzLWxlZ2VuZC1pdGVtLWZvY3VzZWRcIixkcmFnYXJlYTpcImMzLWRyYWdhcmVhXCIsRVhQQU5ERUQ6XCJfZXhwYW5kZWRfXCIsU0VMRUNURUQ6XCJfc2VsZWN0ZWRfXCIsSU5DTFVERUQ6XCJfaW5jbHVkZWRfXCJ9O2kuZ2VuZXJhdGVDbGFzcz1mdW5jdGlvbihhLGIpe3JldHVyblwiIFwiK2ErXCIgXCIrYSt0aGlzLmdldFRhcmdldFNlbGVjdG9yU3VmZml4KGIpfSxpLmNsYXNzVGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5nZW5lcmF0ZUNsYXNzKGwudGV4dCxhLmluZGV4KX0saS5jbGFzc1RleHRzPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmdlbmVyYXRlQ2xhc3MobC50ZXh0cyxhLmlkKX0saS5jbGFzc1NoYXBlPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmdlbmVyYXRlQ2xhc3MobC5zaGFwZSxhLmluZGV4KX0saS5jbGFzc1NoYXBlcz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5nZW5lcmF0ZUNsYXNzKGwuc2hhcGVzLGEuaWQpfSxpLmNsYXNzTGluZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc1NoYXBlKGEpK3RoaXMuZ2VuZXJhdGVDbGFzcyhsLmxpbmUsYS5pZCl9LGkuY2xhc3NMaW5lcz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc1NoYXBlcyhhKSt0aGlzLmdlbmVyYXRlQ2xhc3MobC5saW5lcyxhLmlkKX0saS5jbGFzc0NpcmNsZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc1NoYXBlKGEpK3RoaXMuZ2VuZXJhdGVDbGFzcyhsLmNpcmNsZSxhLmluZGV4KX0saS5jbGFzc0NpcmNsZXM9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuY2xhc3NTaGFwZXMoYSkrdGhpcy5nZW5lcmF0ZUNsYXNzKGwuY2lyY2xlcyxhLmlkKX0saS5jbGFzc0Jhcj1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc1NoYXBlKGEpK3RoaXMuZ2VuZXJhdGVDbGFzcyhsLmJhcixhLmluZGV4KX0saS5jbGFzc0JhcnM9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuY2xhc3NTaGFwZXMoYSkrdGhpcy5nZW5lcmF0ZUNsYXNzKGwuYmFycyxhLmlkKX0saS5jbGFzc0FyYz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc1NoYXBlKGEuZGF0YSkrdGhpcy5nZW5lcmF0ZUNsYXNzKGwuYXJjLGEuZGF0YS5pZCl9LGkuY2xhc3NBcmNzPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmNsYXNzU2hhcGVzKGEuZGF0YSkrdGhpcy5nZW5lcmF0ZUNsYXNzKGwuYXJjcyxhLmRhdGEuaWQpfSxpLmNsYXNzQXJlYT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc1NoYXBlKGEpK3RoaXMuZ2VuZXJhdGVDbGFzcyhsLmFyZWEsYS5pZCl9LGkuY2xhc3NBcmVhcz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc1NoYXBlcyhhKSt0aGlzLmdlbmVyYXRlQ2xhc3MobC5hcmVhcyxhLmlkKX0saS5jbGFzc1JlZ2lvbj1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmdlbmVyYXRlQ2xhc3MobC5yZWdpb24sYikrXCIgXCIrKFwiY2xhc3NcImluIGE/YVtcImNsYXNzXCJdOlwiXCIpfSxpLmNsYXNzRXZlbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZ2VuZXJhdGVDbGFzcyhsLmV2ZW50UmVjdCxhLmluZGV4KX0saS5jbGFzc1RhcmdldD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5jb25maWcuZGF0YV9jbGFzc2VzW2FdLGQ9XCJcIjtyZXR1cm4gYyYmKGQ9XCIgXCIrbC50YXJnZXQrXCItXCIrYyksYi5nZW5lcmF0ZUNsYXNzKGwudGFyZ2V0LGEpK2R9LGkuY2xhc3NGb2N1cz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jbGFzc0ZvY3VzZWQoYSkrdGhpcy5jbGFzc0RlZm9jdXNlZChhKX0saS5jbGFzc0ZvY3VzZWQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCIgXCIrKHRoaXMuZm9jdXNlZFRhcmdldElkcy5pbmRleE9mKGEuaWQpPj0wP2wuZm9jdXNlZDpcIlwiKX0saS5jbGFzc0RlZm9jdXNlZD1mdW5jdGlvbihhKXtyZXR1cm5cIiBcIisodGhpcy5kZWZvY3VzZWRUYXJnZXRJZHMuaW5kZXhPZihhLmlkKT49MD9sLmRlZm9jdXNlZDpcIlwiKX0saS5jbGFzc0NoYXJ0VGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gbC5jaGFydFRleHQrdGhpcy5jbGFzc1RhcmdldChhLmlkKX0saS5jbGFzc0NoYXJ0TGluZT1mdW5jdGlvbihhKXtyZXR1cm4gbC5jaGFydExpbmUrdGhpcy5jbGFzc1RhcmdldChhLmlkKX0saS5jbGFzc0NoYXJ0QmFyPWZ1bmN0aW9uKGEpe3JldHVybiBsLmNoYXJ0QmFyK3RoaXMuY2xhc3NUYXJnZXQoYS5pZCl9LGkuY2xhc3NDaGFydEFyYz1mdW5jdGlvbihhKXtyZXR1cm4gbC5jaGFydEFyYyt0aGlzLmNsYXNzVGFyZ2V0KGEuZGF0YS5pZCl9LGkuZ2V0VGFyZ2V0U2VsZWN0b3JTdWZmaXg9ZnVuY3Rpb24oYSl7cmV0dXJuIGF8fDA9PT1hPyhcIi1cIithKS5yZXBsYWNlKC9bXFxzPyFAIyQlXiYqKClfPSssLjw+J1wiOjtcXFtcXF1cXC98fmB7fVxcXFxdL2csXCItXCIpOlwiXCJ9LGkuc2VsZWN0b3JUYXJnZXQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4oYnx8XCJcIikrXCIuXCIrbC50YXJnZXQrdGhpcy5nZXRUYXJnZXRTZWxlY3RvclN1ZmZpeChhKX0saS5zZWxlY3RvclRhcmdldHM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBhPWF8fFtdLGEubGVuZ3RoP2EubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBjLnNlbGVjdG9yVGFyZ2V0KGEsYil9KTpudWxsfSxpLnNlbGVjdG9yTGVnZW5kPWZ1bmN0aW9uKGEpe3JldHVyblwiLlwiK2wubGVnZW5kSXRlbSt0aGlzLmdldFRhcmdldFNlbGVjdG9yU3VmZml4KGEpfSxpLnNlbGVjdG9yTGVnZW5kcz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBhJiZhLmxlbmd0aD9hLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYi5zZWxlY3RvckxlZ2VuZChhKX0pOm51bGx9O3ZhciBtPWkuaXNWYWx1ZT1mdW5jdGlvbihhKXtyZXR1cm4gYXx8MD09PWF9LG49aS5pc0Z1bmN0aW9uPWZ1bmN0aW9uKGEpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGF9LG89aS5pc1N0cmluZz1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgYX0scD1pLmlzVW5kZWZpbmVkPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCI9PXR5cGVvZiBhfSxxPWkuaXNEZWZpbmVkPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBhfSxyPWkuY2VpbDEwPWZ1bmN0aW9uKGEpe3JldHVybiAxMCpNYXRoLmNlaWwoYS8xMCl9LHM9aS5hc0hhbGZQaXhlbD1mdW5jdGlvbihhKXtyZXR1cm4gTWF0aC5jZWlsKGEpKy41fSx0PWkuZGlmZkRvbWFpbj1mdW5jdGlvbihhKXtyZXR1cm4gYVsxXS1hWzBdfSx1PWkuaXNFbXB0eT1mdW5jdGlvbihhKXtyZXR1cm4hYXx8byhhKSYmMD09PWEubGVuZ3RofHxcIm9iamVjdFwiPT10eXBlb2YgYSYmMD09PU9iamVjdC5rZXlzKGEpLmxlbmd0aH0sdj1pLm5vdEVtcHR5PWZ1bmN0aW9uKGEpe3JldHVybiBPYmplY3Qua2V5cyhhKS5sZW5ndGg+MH0sdz1pLmdldE9wdGlvbj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIHEoYVtiXSk/YVtiXTpjfSx4PWkuaGFzVmFsdWU9ZnVuY3Rpb24oYSxiKXt2YXIgYz0hMTtyZXR1cm4gT2JqZWN0LmtleXMoYSkuZm9yRWFjaChmdW5jdGlvbihkKXthW2RdPT09YiYmKGM9ITApfSksY30seT1pLmdldFBhdGhCb3g9ZnVuY3Rpb24oYSl7dmFyIGI9YS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxjPVthLnBhdGhTZWdMaXN0LmdldEl0ZW0oMCksYS5wYXRoU2VnTGlzdC5nZXRJdGVtKDEpXSxkPWNbMF0ueCxlPU1hdGgubWluKGNbMF0ueSxjWzFdLnkpO3JldHVybnt4OmQseTplLHdpZHRoOmIud2lkdGgsaGVpZ2h0OmIuaGVpZ2h0fX07aC5mb2N1cz1mdW5jdGlvbihhKXt2YXIgYixjPXRoaXMuaW50ZXJuYWw7YT1jLm1hcFRvVGFyZ2V0SWRzKGEpLGI9Yy5zdmcuc2VsZWN0QWxsKGMuc2VsZWN0b3JUYXJnZXRzKGEuZmlsdGVyKGMuaXNUYXJnZXRUb1Nob3csYykpKSx0aGlzLnJldmVydCgpLHRoaXMuZGVmb2N1cygpLGIuY2xhc3NlZChsLmZvY3VzZWQsITApLmNsYXNzZWQobC5kZWZvY3VzZWQsITEpLGMuaGFzQXJjVHlwZSgpJiZjLmV4cGFuZEFyYyhhKSxjLnRvZ2dsZUZvY3VzTGVnZW5kKGEsITApLGMuZm9jdXNlZFRhcmdldElkcz1hLGMuZGVmb2N1c2VkVGFyZ2V0SWRzPWMuZGVmb2N1c2VkVGFyZ2V0SWRzLmZpbHRlcihmdW5jdGlvbihiKXtyZXR1cm4gYS5pbmRleE9mKGIpPDB9KX0saC5kZWZvY3VzPWZ1bmN0aW9uKGEpe3ZhciBiLGM9dGhpcy5pbnRlcm5hbDthPWMubWFwVG9UYXJnZXRJZHMoYSksYj1jLnN2Zy5zZWxlY3RBbGwoYy5zZWxlY3RvclRhcmdldHMoYS5maWx0ZXIoYy5pc1RhcmdldFRvU2hvdyxjKSkpLGIuY2xhc3NlZChsLmZvY3VzZWQsITEpLmNsYXNzZWQobC5kZWZvY3VzZWQsITApLGMuaGFzQXJjVHlwZSgpJiZjLnVuZXhwYW5kQXJjKGEpLGMudG9nZ2xlRm9jdXNMZWdlbmQoYSwhMSksYy5mb2N1c2VkVGFyZ2V0SWRzPWMuZm9jdXNlZFRhcmdldElkcy5maWx0ZXIoZnVuY3Rpb24oYil7cmV0dXJuIGEuaW5kZXhPZihiKTwwfSksYy5kZWZvY3VzZWRUYXJnZXRJZHM9YX0saC5yZXZlcnQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz10aGlzLmludGVybmFsO2E9Yy5tYXBUb1RhcmdldElkcyhhKSxiPWMuc3ZnLnNlbGVjdEFsbChjLnNlbGVjdG9yVGFyZ2V0cyhhKSksYi5jbGFzc2VkKGwuZm9jdXNlZCwhMSkuY2xhc3NlZChsLmRlZm9jdXNlZCwhMSksYy5oYXNBcmNUeXBlKCkmJmMudW5leHBhbmRBcmMoYSksYy5jb25maWcubGVnZW5kX3Nob3cmJihjLnNob3dMZWdlbmQoYS5maWx0ZXIoYy5pc0xlZ2VuZFRvU2hvdy5iaW5kKGMpKSksYy5sZWdlbmQuc2VsZWN0QWxsKGMuc2VsZWN0b3JMZWdlbmRzKGEpKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gYy5kMy5zZWxlY3QodGhpcykuY2xhc3NlZChsLmxlZ2VuZEl0ZW1Gb2N1c2VkKX0pLmNsYXNzZWQobC5sZWdlbmRJdGVtRm9jdXNlZCwhMSkpLGMuZm9jdXNlZFRhcmdldElkcz1bXSxjLmRlZm9jdXNlZFRhcmdldElkcz1bXX0saC5zaG93PWZ1bmN0aW9uKGEsYil7dmFyIGMsZD10aGlzLmludGVybmFsO2E9ZC5tYXBUb1RhcmdldElkcyhhKSxiPWJ8fHt9LGQucmVtb3ZlSGlkZGVuVGFyZ2V0SWRzKGEpLGM9ZC5zdmcuc2VsZWN0QWxsKGQuc2VsZWN0b3JUYXJnZXRzKGEpKSxjLnRyYW5zaXRpb24oKS5zdHlsZShcIm9wYWNpdHlcIiwxLFwiaW1wb3J0YW50XCIpLmNhbGwoZC5lbmRhbGwsZnVuY3Rpb24oKXtjLnN0eWxlKFwib3BhY2l0eVwiLG51bGwpLnN0eWxlKFwib3BhY2l0eVwiLDEpfSksYi53aXRoTGVnZW5kJiZkLnNob3dMZWdlbmQoYSksZC5yZWRyYXcoe3dpdGhVcGRhdGVPcmdYRG9tYWluOiEwLHdpdGhVcGRhdGVYRG9tYWluOiEwLHdpdGhMZWdlbmQ6ITB9KX0saC5oaWRlPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD10aGlzLmludGVybmFsO2E9ZC5tYXBUb1RhcmdldElkcyhhKSxiPWJ8fHt9LGQuYWRkSGlkZGVuVGFyZ2V0SWRzKGEpLGM9ZC5zdmcuc2VsZWN0QWxsKGQuc2VsZWN0b3JUYXJnZXRzKGEpKSxjLnRyYW5zaXRpb24oKS5zdHlsZShcIm9wYWNpdHlcIiwwLFwiaW1wb3J0YW50XCIpLmNhbGwoZC5lbmRhbGwsZnVuY3Rpb24oKXtjLnN0eWxlKFwib3BhY2l0eVwiLG51bGwpLnN0eWxlKFwib3BhY2l0eVwiLDApfSksYi53aXRoTGVnZW5kJiZkLmhpZGVMZWdlbmQoYSksZC5yZWRyYXcoe3dpdGhVcGRhdGVPcmdYRG9tYWluOiEwLHdpdGhVcGRhdGVYRG9tYWluOiEwLHdpdGhMZWdlbmQ6ITB9KX0saC50b2dnbGU9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLGQ9dGhpcy5pbnRlcm5hbDtkLm1hcFRvVGFyZ2V0SWRzKGEpLmZvckVhY2goZnVuY3Rpb24oYSl7ZC5pc1RhcmdldFRvU2hvdyhhKT9jLmhpZGUoYSxiKTpjLnNob3coYSxiKX0pfSxoLnpvb209ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbDtyZXR1cm4gYSYmKGIuaXNUaW1lU2VyaWVzKCkmJihhPWEubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBiLnBhcnNlRGF0ZShhKX0pKSxiLmJydXNoLmV4dGVudChhKSxiLnJlZHJhdyh7d2l0aFVwZGF0ZVhEb21haW46ITAsd2l0aFk6Yi5jb25maWcuem9vbV9yZXNjYWxlfSksYi5jb25maWcuem9vbV9vbnpvb20uY2FsbCh0aGlzLGIueC5vcmdEb21haW4oKSkpLGIuYnJ1c2guZXh0ZW50KCl9LGguem9vbS5lbmFibGU9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbDtiLmNvbmZpZy56b29tX2VuYWJsZWQ9YSxiLnVwZGF0ZUFuZFJlZHJhdygpfSxoLnVuem9vbT1mdW5jdGlvbigpe3ZhciBhPXRoaXMuaW50ZXJuYWw7YS5icnVzaC5jbGVhcigpLnVwZGF0ZSgpLGEucmVkcmF3KHt3aXRoVXBkYXRlWERvbWFpbjohMH0pfSxoLmxvYWQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbCxjPWIuY29uZmlnO3JldHVybiBhLnhzJiZiLmFkZFhzKGEueHMpLFwiY2xhc3Nlc1wiaW4gYSYmT2JqZWN0LmtleXMoYS5jbGFzc2VzKS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2MuZGF0YV9jbGFzc2VzW2JdPWEuY2xhc3Nlc1tiXX0pLFwiY2F0ZWdvcmllc1wiaW4gYSYmYi5pc0NhdGVnb3JpemVkKCkmJihjLmF4aXNfeF9jYXRlZ29yaWVzPWEuY2F0ZWdvcmllcyksXCJheGVzXCJpbiBhJiZPYmplY3Qua2V5cyhhLmF4ZXMpLmZvckVhY2goZnVuY3Rpb24oYil7Yy5kYXRhX2F4ZXNbYl09YS5heGVzW2JdfSksXCJjb2xvcnNcImluIGEmJk9iamVjdC5rZXlzKGEuY29sb3JzKS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2MuZGF0YV9jb2xvcnNbYl09YS5jb2xvcnNbYl19KSxcImNhY2hlSWRzXCJpbiBhJiZiLmhhc0NhY2hlcyhhLmNhY2hlSWRzKT92b2lkIGIubG9hZChiLmdldENhY2hlcyhhLmNhY2hlSWRzKSxhLmRvbmUpOnZvaWQoXCJ1bmxvYWRcImluIGE/Yi51bmxvYWQoYi5tYXBUb1RhcmdldElkcyhcImJvb2xlYW5cIj09dHlwZW9mIGEudW5sb2FkJiZhLnVubG9hZD9udWxsOmEudW5sb2FkKSxmdW5jdGlvbigpe2IubG9hZEZyb21BcmdzKGEpfSk6Yi5sb2FkRnJvbUFyZ3MoYSkpfSxoLnVubG9hZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsO2E9YXx8e30sYSBpbnN0YW5jZW9mIEFycmF5P2E9e2lkczphfTpcInN0cmluZ1wiPT10eXBlb2YgYSYmKGE9e2lkczpbYV19KSxiLnVubG9hZChiLm1hcFRvVGFyZ2V0SWRzKGEuaWRzKSxmdW5jdGlvbigpe2IucmVkcmF3KHt3aXRoVXBkYXRlT3JnWERvbWFpbjohMCx3aXRoVXBkYXRlWERvbWFpbjohMCx3aXRoTGVnZW5kOiEwfSksYS5kb25lJiZhLmRvbmUoKX0pfSxoLmZsb3c9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGgsaSxqPXRoaXMuaW50ZXJuYWwsaz1bXSxsPWouZ2V0TWF4RGF0YUNvdW50KCksbj0wLG89MDtpZihhLmpzb24pYz1qLmNvbnZlcnRKc29uVG9EYXRhKGEuanNvbixhLmtleXMpO2Vsc2UgaWYoYS5yb3dzKWM9ai5jb252ZXJ0Um93c1RvRGF0YShhLnJvd3MpO2Vsc2V7aWYoIWEuY29sdW1ucylyZXR1cm47Yz1qLmNvbnZlcnRDb2x1bW5zVG9EYXRhKGEuY29sdW1ucyl9Yj1qLmNvbnZlcnREYXRhVG9UYXJnZXRzKGMsITApLGouZGF0YS50YXJnZXRzLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGMsZCxlPSExO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspaWYoYS5pZD09PWJbY10uaWQpe2ZvcihlPSEwLGEudmFsdWVzW2EudmFsdWVzLmxlbmd0aC0xXSYmKG89YS52YWx1ZXNbYS52YWx1ZXMubGVuZ3RoLTFdLmluZGV4KzEpLG49YltjXS52YWx1ZXMubGVuZ3RoLGQ9MDtuPmQ7ZCsrKWJbY10udmFsdWVzW2RdLmluZGV4PW8rZCxqLmlzVGltZVNlcmllcygpfHwoYltjXS52YWx1ZXNbZF0ueD1vK2QpO2EudmFsdWVzPWEudmFsdWVzLmNvbmNhdChiW2NdLnZhbHVlcyksYi5zcGxpY2UoYywxKTticmVha31lfHxrLnB1c2goYS5pZCl9KSxqLmRhdGEudGFyZ2V0cy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiLGM7Zm9yKGI9MDtiPGsubGVuZ3RoO2IrKylpZihhLmlkPT09a1tiXSlmb3Iobz1hLnZhbHVlc1thLnZhbHVlcy5sZW5ndGgtMV0uaW5kZXgrMSxjPTA7bj5jO2MrKylhLnZhbHVlcy5wdXNoKHtpZDphLmlkLGluZGV4Om8rYyx4OmouaXNUaW1lU2VyaWVzKCk/ai5nZXRPdGhlclRhcmdldFgobytjKTpvK2MsdmFsdWU6bnVsbH0pfSksai5kYXRhLnRhcmdldHMubGVuZ3RoJiZiLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGIsYz1bXTtmb3IoYj1qLmRhdGEudGFyZ2V0c1swXS52YWx1ZXNbMF0uaW5kZXg7bz5iO2IrKyljLnB1c2goe2lkOmEuaWQsaW5kZXg6Yix4OmouaXNUaW1lU2VyaWVzKCk/ai5nZXRPdGhlclRhcmdldFgoYik6Yix2YWx1ZTpudWxsfSk7YS52YWx1ZXMuZm9yRWFjaChmdW5jdGlvbihhKXthLmluZGV4Kz1vLGouaXNUaW1lU2VyaWVzKCl8fChhLngrPW8pfSksYS52YWx1ZXM9Yy5jb25jYXQoYS52YWx1ZXMpfSksai5kYXRhLnRhcmdldHM9ai5kYXRhLnRhcmdldHMuY29uY2F0KGIpLGQ9ai5nZXRNYXhEYXRhQ291bnQoKSxmPWouZGF0YS50YXJnZXRzWzBdLGc9Zi52YWx1ZXNbMF0scShhLnRvKT8obj0wLGk9ai5pc1RpbWVTZXJpZXMoKT9qLnBhcnNlRGF0ZShhLnRvKTphLnRvLGYudmFsdWVzLmZvckVhY2goZnVuY3Rpb24oYSl7YS54PGkmJm4rK30pKTpxKGEubGVuZ3RoKSYmKG49YS5sZW5ndGgpLGw/MT09PWwmJmouaXNUaW1lU2VyaWVzKCkmJihoPShmLnZhbHVlc1tmLnZhbHVlcy5sZW5ndGgtMV0ueC1nLngpLzIsZT1bbmV3IERhdGUoK2cueC1oKSxuZXcgRGF0ZSgrZy54K2gpXSxqLnVwZGF0ZVhEb21haW4obnVsbCwhMCwhMCwhMSxlKSk6KGg9ai5pc1RpbWVTZXJpZXMoKT9mLnZhbHVlcy5sZW5ndGg+MT9mLnZhbHVlc1tmLnZhbHVlcy5sZW5ndGgtMV0ueC1nLng6Zy54LWouZ2V0WERvbWFpbihqLmRhdGEudGFyZ2V0cylbMF06MSxlPVtnLngtaCxnLnhdLGoudXBkYXRlWERvbWFpbihudWxsLCEwLCEwLCExLGUpKSxqLnVwZGF0ZVRhcmdldHMoai5kYXRhLnRhcmdldHMpLGoucmVkcmF3KHtmbG93OntpbmRleDpnLmluZGV4LGxlbmd0aDpuLGR1cmF0aW9uOm0oYS5kdXJhdGlvbik/YS5kdXJhdGlvbjpqLmNvbmZpZy50cmFuc2l0aW9uX2R1cmF0aW9uLGRvbmU6YS5kb25lLG9yZ0RhdGFDb3VudDpsfSx3aXRoTGVnZW5kOiEwLHdpdGhUcmFuc2l0aW9uOmw+MSx3aXRoVHJpbVhEb21haW46ITEsd2l0aFVwZGF0ZVhBeGlzOiEwfSl9LGkuZ2VuZXJhdGVGbG93PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1iLmNvbmZpZyxkPWIuZDM7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGUsZixnLGg9YS50YXJnZXRzLGk9YS5mbG93LGo9YS5kcmF3QmFyLGs9YS5kcmF3TGluZSxtPWEuZHJhd0FyZWEsbj1hLmN4LG89YS5jeSxwPWEueHYscT1hLnhGb3JUZXh0LHI9YS55Rm9yVGV4dCxzPWEuZHVyYXRpb24sdT0xLHY9aS5pbmRleCx3PWkubGVuZ3RoLHg9Yi5nZXRWYWx1ZU9uSW5kZXgoYi5kYXRhLnRhcmdldHNbMF0udmFsdWVzLHYpLHk9Yi5nZXRWYWx1ZU9uSW5kZXgoYi5kYXRhLnRhcmdldHNbMF0udmFsdWVzLHYrdyksej1iLnguZG9tYWluKCksQT1pLmR1cmF0aW9ufHxzLEI9aS5kb25lfHxmdW5jdGlvbigpe30sQz1iLmdlbmVyYXRlV2FpdCgpLEQ9Yi54Z3JpZHx8ZC5zZWxlY3RBbGwoW10pLEU9Yi54Z3JpZExpbmVzfHxkLnNlbGVjdEFsbChbXSksRj1iLm1haW5SZWdpb258fGQuc2VsZWN0QWxsKFtdKSxHPWIubWFpblRleHR8fGQuc2VsZWN0QWxsKFtdKSxIPWIubWFpbkJhcnx8ZC5zZWxlY3RBbGwoW10pLEk9Yi5tYWluTGluZXx8ZC5zZWxlY3RBbGwoW10pLEo9Yi5tYWluQXJlYXx8ZC5zZWxlY3RBbGwoW10pLEs9Yi5tYWluQ2lyY2xlfHxkLnNlbGVjdEFsbChbXSk7Yi5mbG93aW5nPSEwLGIuZGF0YS50YXJnZXRzLmZvckVhY2goZnVuY3Rpb24oYSl7YS52YWx1ZXMuc3BsaWNlKDAsdyl9KSxnPWIudXBkYXRlWERvbWFpbihoLCEwLCEwKSxiLnVwZGF0ZVhHcmlkJiZiLnVwZGF0ZVhHcmlkKCEwKSxpLm9yZ0RhdGFDb3VudD9lPTE9PT1pLm9yZ0RhdGFDb3VudHx8eC54PT09eS54P2IueCh6WzBdKS1iLngoZ1swXSk6Yi5pc1RpbWVTZXJpZXMoKT9iLngoelswXSktYi54KGdbMF0pOmIueCh4LngpLWIueCh5LngpOjEhPT1iLmRhdGEudGFyZ2V0c1swXS52YWx1ZXMubGVuZ3RoP2U9Yi54KHpbMF0pLWIueChnWzBdKTpiLmlzVGltZVNlcmllcygpPyh4PWIuZ2V0VmFsdWVPbkluZGV4KGIuZGF0YS50YXJnZXRzWzBdLnZhbHVlcywwKSx5PWIuZ2V0VmFsdWVPbkluZGV4KGIuZGF0YS50YXJnZXRzWzBdLnZhbHVlcyxiLmRhdGEudGFyZ2V0c1swXS52YWx1ZXMubGVuZ3RoLTEpLGU9Yi54KHgueCktYi54KHkueCkpOmU9dChnKS8yLHU9dCh6KS90KGcpLGY9XCJ0cmFuc2xhdGUoXCIrZStcIiwwKSBzY2FsZShcIit1K1wiLDEpXCIsYi5oaWRlWEdyaWRGb2N1cygpLGIuaGlkZVRvb2x0aXAoKSxkLnRyYW5zaXRpb24oKS5lYXNlKFwibGluZWFyXCIpLmR1cmF0aW9uKEEpLmVhY2goZnVuY3Rpb24oKXtDLmFkZChiLmF4ZXMueC50cmFuc2l0aW9uKCkuY2FsbChiLnhBeGlzKSksQy5hZGQoSC50cmFuc2l0aW9uKCkuYXR0cihcInRyYW5zZm9ybVwiLGYpKSxDLmFkZChJLnRyYW5zaXRpb24oKS5hdHRyKFwidHJhbnNmb3JtXCIsZikpLEMuYWRkKEoudHJhbnNpdGlvbigpLmF0dHIoXCJ0cmFuc2Zvcm1cIixmKSksQy5hZGQoSy50cmFuc2l0aW9uKCkuYXR0cihcInRyYW5zZm9ybVwiLGYpKSxDLmFkZChHLnRyYW5zaXRpb24oKS5hdHRyKFwidHJhbnNmb3JtXCIsZikpLEMuYWRkKEYuZmlsdGVyKGIuaXNSZWdpb25PblgpLnRyYW5zaXRpb24oKS5hdHRyKFwidHJhbnNmb3JtXCIsZikpLEMuYWRkKEQudHJhbnNpdGlvbigpLmF0dHIoXCJ0cmFuc2Zvcm1cIixmKSksQy5hZGQoRS50cmFuc2l0aW9uKCkuYXR0cihcInRyYW5zZm9ybVwiLGYpKVxufSkuY2FsbChDLGZ1bmN0aW9uKCl7dmFyIGEsZD1bXSxlPVtdLGY9W107aWYodyl7Zm9yKGE9MDt3PmE7YSsrKWQucHVzaChcIi5cIitsLnNoYXBlK1wiLVwiKyh2K2EpKSxlLnB1c2goXCIuXCIrbC50ZXh0K1wiLVwiKyh2K2EpKSxmLnB1c2goXCIuXCIrbC5ldmVudFJlY3QrXCItXCIrKHYrYSkpO2Iuc3ZnLnNlbGVjdEFsbChcIi5cIitsLnNoYXBlcykuc2VsZWN0QWxsKGQpLnJlbW92ZSgpLGIuc3ZnLnNlbGVjdEFsbChcIi5cIitsLnRleHRzKS5zZWxlY3RBbGwoZSkucmVtb3ZlKCksYi5zdmcuc2VsZWN0QWxsKFwiLlwiK2wuZXZlbnRSZWN0cykuc2VsZWN0QWxsKGYpLnJlbW92ZSgpLGIuc3ZnLnNlbGVjdChcIi5cIitsLnhncmlkKS5yZW1vdmUoKX1ELmF0dHIoXCJ0cmFuc2Zvcm1cIixudWxsKS5hdHRyKGIueGdyaWRBdHRyKSxFLmF0dHIoXCJ0cmFuc2Zvcm1cIixudWxsKSxFLnNlbGVjdChcImxpbmVcIikuYXR0cihcIngxXCIsYy5heGlzX3JvdGF0ZWQ/MDpwKS5hdHRyKFwieDJcIixjLmF4aXNfcm90YXRlZD9iLndpZHRoOnApLEUuc2VsZWN0KFwidGV4dFwiKS5hdHRyKFwieFwiLGMuYXhpc19yb3RhdGVkP2Iud2lkdGg6MCkuYXR0cihcInlcIixwKSxILmF0dHIoXCJ0cmFuc2Zvcm1cIixudWxsKS5hdHRyKFwiZFwiLGopLEkuYXR0cihcInRyYW5zZm9ybVwiLG51bGwpLmF0dHIoXCJkXCIsayksSi5hdHRyKFwidHJhbnNmb3JtXCIsbnVsbCkuYXR0cihcImRcIixtKSxLLmF0dHIoXCJ0cmFuc2Zvcm1cIixudWxsKS5hdHRyKFwiY3hcIixuKS5hdHRyKFwiY3lcIixvKSxHLmF0dHIoXCJ0cmFuc2Zvcm1cIixudWxsKS5hdHRyKFwieFwiLHEpLmF0dHIoXCJ5XCIscikuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIixiLm9wYWNpdHlGb3JUZXh0LmJpbmQoYikpLEYuYXR0cihcInRyYW5zZm9ybVwiLG51bGwpLEYuc2VsZWN0KFwicmVjdFwiKS5maWx0ZXIoYi5pc1JlZ2lvbk9uWCkuYXR0cihcInhcIixiLnJlZ2lvblguYmluZChiKSkuYXR0cihcIndpZHRoXCIsYi5yZWdpb25XaWR0aC5iaW5kKGIpKSxjLmludGVyYWN0aW9uX2VuYWJsZWQmJmIucmVkcmF3RXZlbnRSZWN0KCksQigpLGIuZmxvd2luZz0hMX0pfX0saC5zZWxlY3RlZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsLGM9Yi5kMztyZXR1cm4gYy5tZXJnZShiLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuc2hhcGVzK2IuZ2V0VGFyZ2V0U2VsZWN0b3JTdWZmaXgoYSkpLnNlbGVjdEFsbChcIi5cIitsLnNoYXBlKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gYy5zZWxlY3QodGhpcykuY2xhc3NlZChsLlNFTEVDVEVEKX0pLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYS5tYXAoZnVuY3Rpb24oYSl7dmFyIGI9YS5fX2RhdGFfXztyZXR1cm4gYi5kYXRhP2IuZGF0YTpifSl9KSl9LGguc2VsZWN0PWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLmludGVybmFsLGU9ZC5kMyxmPWQuY29uZmlnO2YuZGF0YV9zZWxlY3Rpb25fZW5hYmxlZCYmZC5tYWluLnNlbGVjdEFsbChcIi5cIitsLnNoYXBlcykuc2VsZWN0QWxsKFwiLlwiK2wuc2hhcGUpLmVhY2goZnVuY3Rpb24oZyxoKXt2YXIgaT1lLnNlbGVjdCh0aGlzKSxqPWcuZGF0YT9nLmRhdGEuaWQ6Zy5pZCxrPWQuZ2V0VG9nZ2xlKHRoaXMsZykuYmluZChkKSxtPWYuZGF0YV9zZWxlY3Rpb25fZ3JvdXBlZHx8IWF8fGEuaW5kZXhPZihqKT49MCxuPSFifHxiLmluZGV4T2YoaCk+PTAsbz1pLmNsYXNzZWQobC5TRUxFQ1RFRCk7aS5jbGFzc2VkKGwubGluZSl8fGkuY2xhc3NlZChsLmFyZWEpfHwobSYmbj9mLmRhdGFfc2VsZWN0aW9uX2lzc2VsZWN0YWJsZShnKSYmIW8mJmsoITAsaS5jbGFzc2VkKGwuU0VMRUNURUQsITApLGcsaCk6cShjKSYmYyYmbyYmayghMSxpLmNsYXNzZWQobC5TRUxFQ1RFRCwhMSksZyxoKSl9KX0saC51bnNlbGVjdD1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuaW50ZXJuYWwsZD1jLmQzLGU9Yy5jb25maWc7ZS5kYXRhX3NlbGVjdGlvbl9lbmFibGVkJiZjLm1haW4uc2VsZWN0QWxsKFwiLlwiK2wuc2hhcGVzKS5zZWxlY3RBbGwoXCIuXCIrbC5zaGFwZSkuZWFjaChmdW5jdGlvbihmLGcpe3ZhciBoPWQuc2VsZWN0KHRoaXMpLGk9Zi5kYXRhP2YuZGF0YS5pZDpmLmlkLGo9Yy5nZXRUb2dnbGUodGhpcyxmKS5iaW5kKGMpLGs9ZS5kYXRhX3NlbGVjdGlvbl9ncm91cGVkfHwhYXx8YS5pbmRleE9mKGkpPj0wLG09IWJ8fGIuaW5kZXhPZihnKT49MCxuPWguY2xhc3NlZChsLlNFTEVDVEVEKTtoLmNsYXNzZWQobC5saW5lKXx8aC5jbGFzc2VkKGwuYXJlYSl8fGsmJm0mJmUuZGF0YV9zZWxlY3Rpb25faXNzZWxlY3RhYmxlKGYpJiZuJiZqKCExLGguY2xhc3NlZChsLlNFTEVDVEVELCExKSxmLGcpfSl9LGgudHJhbnNmb3JtPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5pbnRlcm5hbCxkPVtcInBpZVwiLFwiZG9udXRcIl0uaW5kZXhPZihhKT49MD97d2l0aFRyYW5zZm9ybTohMH06bnVsbDtjLnRyYW5zZm9ybVRvKGIsYSxkKX0saS50cmFuc2Zvcm1Ubz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcyxlPSFkLmhhc0FyY1R5cGUoKSxmPWN8fHt3aXRoVHJhbnNpdGlvbkZvckF4aXM6ZX07Zi53aXRoVHJhbnNpdGlvbkZvclRyYW5zZm9ybT0hMSxkLnRyYW5zaXRpbmc9ITEsZC5zZXRUYXJnZXRUeXBlKGEsYiksZC51cGRhdGVUYXJnZXRzKGQuZGF0YS50YXJnZXRzKSxkLnVwZGF0ZUFuZFJlZHJhdyhmKX0saC5ncm91cHM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbCxjPWIuY29uZmlnO3JldHVybiBwKGEpP2MuZGF0YV9ncm91cHM6KGMuZGF0YV9ncm91cHM9YSxiLnJlZHJhdygpLGMuZGF0YV9ncm91cHMpfSxoLnhncmlkcz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsLGM9Yi5jb25maWc7cmV0dXJuIGE/KGMuZ3JpZF94X2xpbmVzPWEsYi5yZWRyYXdXaXRob3V0UmVzY2FsZSgpLGMuZ3JpZF94X2xpbmVzKTpjLmdyaWRfeF9saW5lc30saC54Z3JpZHMuYWRkPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaW50ZXJuYWw7cmV0dXJuIHRoaXMueGdyaWRzKGIuY29uZmlnLmdyaWRfeF9saW5lcy5jb25jYXQoYT9hOltdKSl9LGgueGdyaWRzLnJlbW92ZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsO2IucmVtb3ZlR3JpZExpbmVzKGEsITApfSxoLnlncmlkcz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsLGM9Yi5jb25maWc7cmV0dXJuIGE/KGMuZ3JpZF95X2xpbmVzPWEsYi5yZWRyYXdXaXRob3V0UmVzY2FsZSgpLGMuZ3JpZF95X2xpbmVzKTpjLmdyaWRfeV9saW5lc30saC55Z3JpZHMuYWRkPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaW50ZXJuYWw7cmV0dXJuIHRoaXMueWdyaWRzKGIuY29uZmlnLmdyaWRfeV9saW5lcy5jb25jYXQoYT9hOltdKSl9LGgueWdyaWRzLnJlbW92ZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsO2IucmVtb3ZlR3JpZExpbmVzKGEsITEpfSxoLnJlZ2lvbnM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbCxjPWIuY29uZmlnO3JldHVybiBhPyhjLnJlZ2lvbnM9YSxiLnJlZHJhd1dpdGhvdXRSZXNjYWxlKCksYy5yZWdpb25zKTpjLnJlZ2lvbnN9LGgucmVnaW9ucy5hZGQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbCxjPWIuY29uZmlnO3JldHVybiBhPyhjLnJlZ2lvbnM9Yy5yZWdpb25zLmNvbmNhdChhKSxiLnJlZHJhd1dpdGhvdXRSZXNjYWxlKCksYy5yZWdpb25zKTpjLnJlZ2lvbnN9LGgucmVnaW9ucy5yZW1vdmU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpcy5pbnRlcm5hbCxmPWUuY29uZmlnO3JldHVybiBhPWF8fHt9LGI9ZS5nZXRPcHRpb24oYSxcImR1cmF0aW9uXCIsZi50cmFuc2l0aW9uX2R1cmF0aW9uKSxjPWUuZ2V0T3B0aW9uKGEsXCJjbGFzc2VzXCIsW2wucmVnaW9uXSksZD1lLm1haW4uc2VsZWN0KFwiLlwiK2wucmVnaW9ucykuc2VsZWN0QWxsKGMubWFwKGZ1bmN0aW9uKGEpe3JldHVyblwiLlwiK2F9KSksKGI/ZC50cmFuc2l0aW9uKCkuZHVyYXRpb24oYik6ZCkuc3R5bGUoXCJvcGFjaXR5XCIsMCkucmVtb3ZlKCksZi5yZWdpb25zPWYucmVnaW9ucy5maWx0ZXIoZnVuY3Rpb24oYSl7dmFyIGI9ITE7cmV0dXJuIGFbXCJjbGFzc1wiXT8oYVtcImNsYXNzXCJdLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2MuaW5kZXhPZihhKT49MCYmKGI9ITApfSksIWIpOiEwfSksZi5yZWdpb25zfSxoLmRhdGE9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbC5kYXRhLnRhcmdldHM7cmV0dXJuXCJ1bmRlZmluZWRcIj09dHlwZW9mIGE/YjpiLmZpbHRlcihmdW5jdGlvbihiKXtyZXR1cm5bXS5jb25jYXQoYSkuaW5kZXhPZihiLmlkKT49MH0pfSxoLmRhdGEuc2hvd249ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW50ZXJuYWwuZmlsdGVyVGFyZ2V0c1RvU2hvdyh0aGlzLmRhdGEoYSkpfSxoLmRhdGEudmFsdWVzPWZ1bmN0aW9uKGEpe3ZhciBiLGM9bnVsbDtyZXR1cm4gYSYmKGI9dGhpcy5kYXRhKGEpLGM9YlswXT9iWzBdLnZhbHVlcy5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIGEudmFsdWV9KTpudWxsKSxjfSxoLmRhdGEubmFtZXM9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW50ZXJuYWwuY2xlYXJMZWdlbmRJdGVtVGV4dEJveENhY2hlKCksdGhpcy5pbnRlcm5hbC51cGRhdGVEYXRhQXR0cmlidXRlcyhcIm5hbWVzXCIsYSl9LGguZGF0YS5jb2xvcnM9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW50ZXJuYWwudXBkYXRlRGF0YUF0dHJpYnV0ZXMoXCJjb2xvcnNcIixhKX0saC5kYXRhLmF4ZXM9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW50ZXJuYWwudXBkYXRlRGF0YUF0dHJpYnV0ZXMoXCJheGVzXCIsYSl9LGguY2F0ZWdvcnk9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmludGVybmFsLGQ9Yy5jb25maWc7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MSYmKGQuYXhpc194X2NhdGVnb3JpZXNbYV09YixjLnJlZHJhdygpKSxkLmF4aXNfeF9jYXRlZ29yaWVzW2FdfSxoLmNhdGVnb3JpZXM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbCxjPWIuY29uZmlnO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjLmF4aXNfeF9jYXRlZ29yaWVzPWEsYi5yZWRyYXcoKSxjLmF4aXNfeF9jYXRlZ29yaWVzKTpjLmF4aXNfeF9jYXRlZ29yaWVzfSxoLmNvbG9yPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaW50ZXJuYWw7cmV0dXJuIGIuY29sb3IoYSl9LGgueD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsO3JldHVybiBhcmd1bWVudHMubGVuZ3RoJiYoYi51cGRhdGVUYXJnZXRYKGIuZGF0YS50YXJnZXRzLGEpLGIucmVkcmF3KHt3aXRoVXBkYXRlT3JnWERvbWFpbjohMCx3aXRoVXBkYXRlWERvbWFpbjohMH0pKSxiLmRhdGEueHN9LGgueHM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbDtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCYmKGIudXBkYXRlVGFyZ2V0WHMoYi5kYXRhLnRhcmdldHMsYSksYi5yZWRyYXcoe3dpdGhVcGRhdGVPcmdYRG9tYWluOiEwLHdpdGhVcGRhdGVYRG9tYWluOiEwfSkpLGIuZGF0YS54c30saC5heGlzPWZ1bmN0aW9uKCl7fSxoLmF4aXMubGFiZWxzPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaW50ZXJuYWw7YXJndW1lbnRzLmxlbmd0aCYmKE9iamVjdC5rZXlzKGEpLmZvckVhY2goZnVuY3Rpb24oYyl7Yi5heGlzLnNldExhYmVsVGV4dChjLGFbY10pfSksYi5heGlzLnVwZGF0ZUxhYmVscygpKX0saC5heGlzLm1heD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsLGM9Yi5jb25maWc7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KFwib2JqZWN0XCI9PXR5cGVvZiBhPyhtKGEueCkmJihjLmF4aXNfeF9tYXg9YS54KSxtKGEueSkmJihjLmF4aXNfeV9tYXg9YS55KSxtKGEueTIpJiYoYy5heGlzX3kyX21heD1hLnkyKSk6Yy5heGlzX3lfbWF4PWMuYXhpc195Ml9tYXg9YSx2b2lkIGIucmVkcmF3KHt3aXRoVXBkYXRlT3JnWERvbWFpbjohMCx3aXRoVXBkYXRlWERvbWFpbjohMH0pKTp7eDpjLmF4aXNfeF9tYXgseTpjLmF4aXNfeV9tYXgseTI6Yy5heGlzX3kyX21heH19LGguYXhpcy5taW49ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5pbnRlcm5hbCxjPWIuY29uZmlnO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhcIm9iamVjdFwiPT10eXBlb2YgYT8obShhLngpJiYoYy5heGlzX3hfbWluPWEueCksbShhLnkpJiYoYy5heGlzX3lfbWluPWEueSksbShhLnkyKSYmKGMuYXhpc195Ml9taW49YS55MikpOmMuYXhpc195X21pbj1jLmF4aXNfeTJfbWluPWEsdm9pZCBiLnJlZHJhdyh7d2l0aFVwZGF0ZU9yZ1hEb21haW46ITAsd2l0aFVwZGF0ZVhEb21haW46ITB9KSk6e3g6Yy5heGlzX3hfbWluLHk6Yy5heGlzX3lfbWluLHkyOmMuYXhpc195Ml9taW59fSxoLmF4aXMucmFuZ2U9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHEoYS5tYXgpJiZ0aGlzLmF4aXMubWF4KGEubWF4KSx2b2lkKHEoYS5taW4pJiZ0aGlzLmF4aXMubWluKGEubWluKSkpOnttYXg6dGhpcy5heGlzLm1heCgpLG1pbjp0aGlzLmF4aXMubWluKCl9fSxoLmxlZ2VuZD1mdW5jdGlvbigpe30saC5sZWdlbmQuc2hvdz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmludGVybmFsO2Iuc2hvd0xlZ2VuZChiLm1hcFRvVGFyZ2V0SWRzKGEpKSxiLnVwZGF0ZUFuZFJlZHJhdyh7d2l0aExlZ2VuZDohMH0pfSxoLmxlZ2VuZC5oaWRlPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaW50ZXJuYWw7Yi5oaWRlTGVnZW5kKGIubWFwVG9UYXJnZXRJZHMoYSkpLGIudXBkYXRlQW5kUmVkcmF3KHt3aXRoTGVnZW5kOiEwfSl9LGgucmVzaXplPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaW50ZXJuYWwsYz1iLmNvbmZpZztjLnNpemVfd2lkdGg9YT9hLndpZHRoOm51bGwsYy5zaXplX2hlaWdodD1hP2EuaGVpZ2h0Om51bGwsdGhpcy5mbHVzaCgpfSxoLmZsdXNoPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5pbnRlcm5hbDthLnVwZGF0ZUFuZFJlZHJhdyh7d2l0aExlZ2VuZDohMCx3aXRoVHJhbnNpdGlvbjohMSx3aXRoVHJhbnNpdGlvbkZvclRyYW5zZm9ybTohMX0pfSxoLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgYj10aGlzLmludGVybmFsO3JldHVybiBhLmNsZWFySW50ZXJ2YWwoYi5pbnRlcnZhbEZvck9ic2VydmVJbnNlcnRlZCksYS5vbnJlc2l6ZT1udWxsLGIuc2VsZWN0Q2hhcnQuY2xhc3NlZChcImMzXCIsITEpLmh0bWwoXCJcIiksT2JqZWN0LmtleXMoYikuZm9yRWFjaChmdW5jdGlvbihhKXtiW2FdPW51bGx9KSxudWxsfSxoLnRvb2x0aXA9ZnVuY3Rpb24oKXt9LGgudG9vbHRpcC5zaG93PWZ1bmN0aW9uKGEpe3ZhciBiLGMsZD10aGlzLmludGVybmFsO2EubW91c2UmJihjPWEubW91c2UpLGEuZGF0YT9kLmlzTXVsdGlwbGVYKCk/KGM9W2QueChhLmRhdGEueCksZC5nZXRZU2NhbGUoYS5kYXRhLmlkKShhLmRhdGEudmFsdWUpXSxiPW51bGwpOmI9bShhLmRhdGEuaW5kZXgpP2EuZGF0YS5pbmRleDpkLmdldEluZGV4QnlYKGEuZGF0YS54KTpcInVuZGVmaW5lZFwiIT10eXBlb2YgYS54P2I9ZC5nZXRJbmRleEJ5WChhLngpOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBhLmluZGV4JiYoYj1hLmluZGV4KSxkLmRpc3BhdGNoRXZlbnQoXCJtb3VzZW92ZXJcIixiLGMpLGQuZGlzcGF0Y2hFdmVudChcIm1vdXNlbW92ZVwiLGIsYyl9LGgudG9vbHRpcC5oaWRlPWZ1bmN0aW9uKCl7dGhpcy5pbnRlcm5hbC5kaXNwYXRjaEV2ZW50KFwibW91c2VvdXRcIiwwKX07dmFyIHo7aS5pc1NhZmFyaT1mdW5jdGlvbigpe3ZhciBiPWEubmF2aWdhdG9yLnVzZXJBZ2VudDtyZXR1cm4gYi5pbmRleE9mKFwiU2FmYXJpXCIpPj0wJiZiLmluZGV4T2YoXCJDaHJvbWVcIik8MH0saS5pc0Nocm9tZT1mdW5jdGlvbigpe3ZhciBiPWEubmF2aWdhdG9yLnVzZXJBZ2VudDtyZXR1cm4gYi5pbmRleE9mKFwiQ2hyb21lXCIpPj0wfSxGdW5jdGlvbi5wcm90b3R5cGUuYmluZHx8KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGEpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXMpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kIC0gd2hhdCBpcyB0cnlpbmcgdG8gYmUgYm91bmQgaXMgbm90IGNhbGxhYmxlXCIpO3ZhciBiPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxjPXRoaXMsZD1mdW5jdGlvbigpe30sZT1mdW5jdGlvbigpe3JldHVybiBjLmFwcGx5KHRoaXMgaW5zdGFuY2VvZiBkP3RoaXM6YSxiLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKSl9O3JldHVybiBkLnByb3RvdHlwZT10aGlzLnByb3RvdHlwZSxlLnByb3RvdHlwZT1uZXcgZCxlfSksXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcImMzXCIsW1wiZDNcIl0sayk6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9azphLmMzPWt9KHdpbmRvdyk7IiwiLy8gICAgIFVuZGVyc2NvcmUuanMgMS44LjNcbi8vICAgICBodHRwOi8vdW5kZXJzY29yZWpzLm9yZ1xuLy8gICAgIChjKSAyMDA5LTIwMTUgSmVyZW15IEFzaGtlbmFzLCBEb2N1bWVudENsb3VkIGFuZCBJbnZlc3RpZ2F0aXZlIFJlcG9ydGVycyAmIEVkaXRvcnNcbi8vICAgICBVbmRlcnNjb3JlIG1heSBiZSBmcmVlbHkgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtmdW5jdGlvbiB0KHQscixlLHUsaSxvKXtmb3IoO2k+PTAmJm8+aTtpKz1uKXt2YXIgYT11P3VbaV06aTtlPXIoZSx0W2FdLGEsdCl9cmV0dXJuIGV9cmV0dXJuIGZ1bmN0aW9uKHIsZSx1LGkpe2U9YihlLGksNCk7dmFyIG89IWsocikmJm0ua2V5cyhyKSxhPShvfHxyKS5sZW5ndGgsYz1uPjA/MDphLTE7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8MyYmKHU9cltvP29bY106Y10sYys9biksdChyLGUsdSxvLGMsYSl9fWZ1bmN0aW9uIHQobil7cmV0dXJuIGZ1bmN0aW9uKHQscixlKXtyPXgocixlKTtmb3IodmFyIHU9Tyh0KSxpPW4+MD8wOnUtMTtpPj0wJiZ1Pmk7aSs9bilpZihyKHRbaV0saSx0KSlyZXR1cm4gaTtyZXR1cm4tMX19ZnVuY3Rpb24gcihuLHQscil7cmV0dXJuIGZ1bmN0aW9uKGUsdSxpKXt2YXIgbz0wLGE9TyhlKTtpZihcIm51bWJlclwiPT10eXBlb2YgaSluPjA/bz1pPj0wP2k6TWF0aC5tYXgoaSthLG8pOmE9aT49MD9NYXRoLm1pbihpKzEsYSk6aSthKzE7ZWxzZSBpZihyJiZpJiZhKXJldHVybiBpPXIoZSx1KSxlW2ldPT09dT9pOi0xO2lmKHUhPT11KXJldHVybiBpPXQobC5jYWxsKGUsbyxhKSxtLmlzTmFOKSxpPj0wP2krbzotMTtmb3IoaT1uPjA/bzphLTE7aT49MCYmYT5pO2krPW4paWYoZVtpXT09PXUpcmV0dXJuIGk7cmV0dXJuLTF9fWZ1bmN0aW9uIGUobix0KXt2YXIgcj1JLmxlbmd0aCxlPW4uY29uc3RydWN0b3IsdT1tLmlzRnVuY3Rpb24oZSkmJmUucHJvdG90eXBlfHxhLGk9XCJjb25zdHJ1Y3RvclwiO2ZvcihtLmhhcyhuLGkpJiYhbS5jb250YWlucyh0LGkpJiZ0LnB1c2goaSk7ci0tOylpPUlbcl0saSBpbiBuJiZuW2ldIT09dVtpXSYmIW0uY29udGFpbnModCxpKSYmdC5wdXNoKGkpfXZhciB1PXRoaXMsaT11Ll8sbz1BcnJheS5wcm90b3R5cGUsYT1PYmplY3QucHJvdG90eXBlLGM9RnVuY3Rpb24ucHJvdG90eXBlLGY9by5wdXNoLGw9by5zbGljZSxzPWEudG9TdHJpbmcscD1hLmhhc093blByb3BlcnR5LGg9QXJyYXkuaXNBcnJheSx2PU9iamVjdC5rZXlzLGc9Yy5iaW5kLHk9T2JqZWN0LmNyZWF0ZSxkPWZ1bmN0aW9uKCl7fSxtPWZ1bmN0aW9uKG4pe3JldHVybiBuIGluc3RhbmNlb2YgbT9uOnRoaXMgaW5zdGFuY2VvZiBtP3ZvaWQodGhpcy5fd3JhcHBlZD1uKTpuZXcgbShuKX07XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGV4cG9ydHM/KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzJiYoZXhwb3J0cz1tb2R1bGUuZXhwb3J0cz1tKSxleHBvcnRzLl89bSk6dS5fPW0sbS5WRVJTSU9OPVwiMS44LjNcIjt2YXIgYj1mdW5jdGlvbihuLHQscil7aWYodD09PXZvaWQgMClyZXR1cm4gbjtzd2l0Y2gobnVsbD09cj8zOnIpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIG4uY2FsbCh0LHIpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHIsZSl7cmV0dXJuIG4uY2FsbCh0LHIsZSl9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocixlLHUpe3JldHVybiBuLmNhbGwodCxyLGUsdSl9O2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24ocixlLHUsaSl7cmV0dXJuIG4uY2FsbCh0LHIsZSx1LGkpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbi5hcHBseSh0LGFyZ3VtZW50cyl9fSx4PWZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gbnVsbD09bj9tLmlkZW50aXR5Om0uaXNGdW5jdGlvbihuKT9iKG4sdCxyKTptLmlzT2JqZWN0KG4pP20ubWF0Y2hlcihuKTptLnByb3BlcnR5KG4pfTttLml0ZXJhdGVlPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIHgobix0LDEvMCl9O3ZhciBfPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKHIpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg7aWYoMj5lfHxudWxsPT1yKXJldHVybiByO2Zvcih2YXIgdT0xO2U+dTt1KyspZm9yKHZhciBpPWFyZ3VtZW50c1t1XSxvPW4oaSksYT1vLmxlbmd0aCxjPTA7YT5jO2MrKyl7dmFyIGY9b1tjXTt0JiZyW2ZdIT09dm9pZCAwfHwocltmXT1pW2ZdKX1yZXR1cm4gcn19LGo9ZnVuY3Rpb24obil7aWYoIW0uaXNPYmplY3QobikpcmV0dXJue307aWYoeSlyZXR1cm4geShuKTtkLnByb3RvdHlwZT1uO3ZhciB0PW5ldyBkO3JldHVybiBkLnByb3RvdHlwZT1udWxsLHR9LHc9ZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10P3ZvaWQgMDp0W25dfX0sQT1NYXRoLnBvdygyLDUzKS0xLE89dyhcImxlbmd0aFwiKSxrPWZ1bmN0aW9uKG4pe3ZhciB0PU8obik7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQmJnQ+PTAmJkE+PXR9O20uZWFjaD1tLmZvckVhY2g9ZnVuY3Rpb24obix0LHIpe3Q9Yih0LHIpO3ZhciBlLHU7aWYoayhuKSlmb3IoZT0wLHU9bi5sZW5ndGg7dT5lO2UrKyl0KG5bZV0sZSxuKTtlbHNle3ZhciBpPW0ua2V5cyhuKTtmb3IoZT0wLHU9aS5sZW5ndGg7dT5lO2UrKyl0KG5baVtlXV0saVtlXSxuKX1yZXR1cm4gbn0sbS5tYXA9bS5jb2xsZWN0PWZ1bmN0aW9uKG4sdCxyKXt0PXgodCxyKTtmb3IodmFyIGU9IWsobikmJm0ua2V5cyhuKSx1PShlfHxuKS5sZW5ndGgsaT1BcnJheSh1KSxvPTA7dT5vO28rKyl7dmFyIGE9ZT9lW29dOm87aVtvXT10KG5bYV0sYSxuKX1yZXR1cm4gaX0sbS5yZWR1Y2U9bS5mb2xkbD1tLmluamVjdD1uKDEpLG0ucmVkdWNlUmlnaHQ9bS5mb2xkcj1uKC0xKSxtLmZpbmQ9bS5kZXRlY3Q9ZnVuY3Rpb24obix0LHIpe3ZhciBlO3JldHVybiBlPWsobik/bS5maW5kSW5kZXgobix0LHIpOm0uZmluZEtleShuLHQsciksZSE9PXZvaWQgMCYmZSE9PS0xP25bZV06dm9pZCAwfSxtLmZpbHRlcj1tLnNlbGVjdD1mdW5jdGlvbihuLHQscil7dmFyIGU9W107cmV0dXJuIHQ9eCh0LHIpLG0uZWFjaChuLGZ1bmN0aW9uKG4scix1KXt0KG4scix1KSYmZS5wdXNoKG4pfSksZX0sbS5yZWplY3Q9ZnVuY3Rpb24obix0LHIpe3JldHVybiBtLmZpbHRlcihuLG0ubmVnYXRlKHgodCkpLHIpfSxtLmV2ZXJ5PW0uYWxsPWZ1bmN0aW9uKG4sdCxyKXt0PXgodCxyKTtmb3IodmFyIGU9IWsobikmJm0ua2V5cyhuKSx1PShlfHxuKS5sZW5ndGgsaT0wO3U+aTtpKyspe3ZhciBvPWU/ZVtpXTppO2lmKCF0KG5bb10sbyxuKSlyZXR1cm4hMX1yZXR1cm4hMH0sbS5zb21lPW0uYW55PWZ1bmN0aW9uKG4sdCxyKXt0PXgodCxyKTtmb3IodmFyIGU9IWsobikmJm0ua2V5cyhuKSx1PShlfHxuKS5sZW5ndGgsaT0wO3U+aTtpKyspe3ZhciBvPWU/ZVtpXTppO2lmKHQobltvXSxvLG4pKXJldHVybiEwfXJldHVybiExfSxtLmNvbnRhaW5zPW0uaW5jbHVkZXM9bS5pbmNsdWRlPWZ1bmN0aW9uKG4sdCxyLGUpe3JldHVybiBrKG4pfHwobj1tLnZhbHVlcyhuKSksKFwibnVtYmVyXCIhPXR5cGVvZiByfHxlKSYmKHI9MCksbS5pbmRleE9mKG4sdCxyKT49MH0sbS5pbnZva2U9ZnVuY3Rpb24obix0KXt2YXIgcj1sLmNhbGwoYXJndW1lbnRzLDIpLGU9bS5pc0Z1bmN0aW9uKHQpO3JldHVybiBtLm1hcChuLGZ1bmN0aW9uKG4pe3ZhciB1PWU/dDpuW3RdO3JldHVybiBudWxsPT11P3U6dS5hcHBseShuLHIpfSl9LG0ucGx1Y2s9ZnVuY3Rpb24obix0KXtyZXR1cm4gbS5tYXAobixtLnByb3BlcnR5KHQpKX0sbS53aGVyZT1mdW5jdGlvbihuLHQpe3JldHVybiBtLmZpbHRlcihuLG0ubWF0Y2hlcih0KSl9LG0uZmluZFdoZXJlPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIG0uZmluZChuLG0ubWF0Y2hlcih0KSl9LG0ubWF4PWZ1bmN0aW9uKG4sdCxyKXt2YXIgZSx1LGk9LTEvMCxvPS0xLzA7aWYobnVsbD09dCYmbnVsbCE9bil7bj1rKG4pP246bS52YWx1ZXMobik7Zm9yKHZhciBhPTAsYz1uLmxlbmd0aDtjPmE7YSsrKWU9blthXSxlPmkmJihpPWUpfWVsc2UgdD14KHQsciksbS5lYWNoKG4sZnVuY3Rpb24obixyLGUpe3U9dChuLHIsZSksKHU+b3x8dT09PS0xLzAmJmk9PT0tMS8wKSYmKGk9bixvPXUpfSk7cmV0dXJuIGl9LG0ubWluPWZ1bmN0aW9uKG4sdCxyKXt2YXIgZSx1LGk9MS8wLG89MS8wO2lmKG51bGw9PXQmJm51bGwhPW4pe249ayhuKT9uOm0udmFsdWVzKG4pO2Zvcih2YXIgYT0wLGM9bi5sZW5ndGg7Yz5hO2ErKyllPW5bYV0saT5lJiYoaT1lKX1lbHNlIHQ9eCh0LHIpLG0uZWFjaChuLGZ1bmN0aW9uKG4scixlKXt1PXQobixyLGUpLChvPnV8fDEvMD09PXUmJjEvMD09PWkpJiYoaT1uLG89dSl9KTtyZXR1cm4gaX0sbS5zaHVmZmxlPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdCxyPWsobik/bjptLnZhbHVlcyhuKSxlPXIubGVuZ3RoLHU9QXJyYXkoZSksaT0wO2U+aTtpKyspdD1tLnJhbmRvbSgwLGkpLHQhPT1pJiYodVtpXT11W3RdKSx1W3RdPXJbaV07cmV0dXJuIHV9LG0uc2FtcGxlPWZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gbnVsbD09dHx8cj8oayhuKXx8KG49bS52YWx1ZXMobikpLG5bbS5yYW5kb20obi5sZW5ndGgtMSldKTptLnNodWZmbGUobikuc2xpY2UoMCxNYXRoLm1heCgwLHQpKX0sbS5zb3J0Qnk9ZnVuY3Rpb24obix0LHIpe3JldHVybiB0PXgodCxyKSxtLnBsdWNrKG0ubWFwKG4sZnVuY3Rpb24obixyLGUpe3JldHVybnt2YWx1ZTpuLGluZGV4OnIsY3JpdGVyaWE6dChuLHIsZSl9fSkuc29ydChmdW5jdGlvbihuLHQpe3ZhciByPW4uY3JpdGVyaWEsZT10LmNyaXRlcmlhO2lmKHIhPT1lKXtpZihyPmV8fHI9PT12b2lkIDApcmV0dXJuIDE7aWYoZT5yfHxlPT09dm9pZCAwKXJldHVybi0xfXJldHVybiBuLmluZGV4LXQuaW5kZXh9KSxcInZhbHVlXCIpfTt2YXIgRj1mdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24odCxyLGUpe3ZhciB1PXt9O3JldHVybiByPXgocixlKSxtLmVhY2godCxmdW5jdGlvbihlLGkpe3ZhciBvPXIoZSxpLHQpO24odSxlLG8pfSksdX19O20uZ3JvdXBCeT1GKGZ1bmN0aW9uKG4sdCxyKXttLmhhcyhuLHIpP25bcl0ucHVzaCh0KTpuW3JdPVt0XX0pLG0uaW5kZXhCeT1GKGZ1bmN0aW9uKG4sdCxyKXtuW3JdPXR9KSxtLmNvdW50Qnk9RihmdW5jdGlvbihuLHQscil7bS5oYXMobixyKT9uW3JdKys6bltyXT0xfSksbS50b0FycmF5PWZ1bmN0aW9uKG4pe3JldHVybiBuP20uaXNBcnJheShuKT9sLmNhbGwobik6ayhuKT9tLm1hcChuLG0uaWRlbnRpdHkpOm0udmFsdWVzKG4pOltdfSxtLnNpemU9ZnVuY3Rpb24obil7cmV0dXJuIG51bGw9PW4/MDprKG4pP24ubGVuZ3RoOm0ua2V5cyhuKS5sZW5ndGh9LG0ucGFydGl0aW9uPWZ1bmN0aW9uKG4sdCxyKXt0PXgodCxyKTt2YXIgZT1bXSx1PVtdO3JldHVybiBtLmVhY2gobixmdW5jdGlvbihuLHIsaSl7KHQobixyLGkpP2U6dSkucHVzaChuKX0pLFtlLHVdfSxtLmZpcnN0PW0uaGVhZD1tLnRha2U9ZnVuY3Rpb24obix0LHIpe3JldHVybiBudWxsPT1uP3ZvaWQgMDpudWxsPT10fHxyP25bMF06bS5pbml0aWFsKG4sbi5sZW5ndGgtdCl9LG0uaW5pdGlhbD1mdW5jdGlvbihuLHQscil7cmV0dXJuIGwuY2FsbChuLDAsTWF0aC5tYXgoMCxuLmxlbmd0aC0obnVsbD09dHx8cj8xOnQpKSl9LG0ubGFzdD1mdW5jdGlvbihuLHQscil7cmV0dXJuIG51bGw9PW4/dm9pZCAwOm51bGw9PXR8fHI/bltuLmxlbmd0aC0xXTptLnJlc3QobixNYXRoLm1heCgwLG4ubGVuZ3RoLXQpKX0sbS5yZXN0PW0udGFpbD1tLmRyb3A9ZnVuY3Rpb24obix0LHIpe3JldHVybiBsLmNhbGwobixudWxsPT10fHxyPzE6dCl9LG0uY29tcGFjdD1mdW5jdGlvbihuKXtyZXR1cm4gbS5maWx0ZXIobixtLmlkZW50aXR5KX07dmFyIFM9ZnVuY3Rpb24obix0LHIsZSl7Zm9yKHZhciB1PVtdLGk9MCxvPWV8fDAsYT1PKG4pO2E+bztvKyspe3ZhciBjPW5bb107aWYoayhjKSYmKG0uaXNBcnJheShjKXx8bS5pc0FyZ3VtZW50cyhjKSkpe3R8fChjPVMoYyx0LHIpKTt2YXIgZj0wLGw9Yy5sZW5ndGg7Zm9yKHUubGVuZ3RoKz1sO2w+ZjspdVtpKytdPWNbZisrXX1lbHNlIHJ8fCh1W2krK109Yyl9cmV0dXJuIHV9O20uZmxhdHRlbj1mdW5jdGlvbihuLHQpe3JldHVybiBTKG4sdCwhMSl9LG0ud2l0aG91dD1mdW5jdGlvbihuKXtyZXR1cm4gbS5kaWZmZXJlbmNlKG4sbC5jYWxsKGFyZ3VtZW50cywxKSl9LG0udW5pcT1tLnVuaXF1ZT1mdW5jdGlvbihuLHQscixlKXttLmlzQm9vbGVhbih0KXx8KGU9cixyPXQsdD0hMSksbnVsbCE9ciYmKHI9eChyLGUpKTtmb3IodmFyIHU9W10saT1bXSxvPTAsYT1PKG4pO2E+bztvKyspe3ZhciBjPW5bb10sZj1yP3IoYyxvLG4pOmM7dD8obyYmaT09PWZ8fHUucHVzaChjKSxpPWYpOnI/bS5jb250YWlucyhpLGYpfHwoaS5wdXNoKGYpLHUucHVzaChjKSk6bS5jb250YWlucyh1LGMpfHx1LnB1c2goYyl9cmV0dXJuIHV9LG0udW5pb249ZnVuY3Rpb24oKXtyZXR1cm4gbS51bmlxKFMoYXJndW1lbnRzLCEwLCEwKSl9LG0uaW50ZXJzZWN0aW9uPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD1bXSxyPWFyZ3VtZW50cy5sZW5ndGgsZT0wLHU9TyhuKTt1PmU7ZSsrKXt2YXIgaT1uW2VdO2lmKCFtLmNvbnRhaW5zKHQsaSkpe2Zvcih2YXIgbz0xO3I+byYmbS5jb250YWlucyhhcmd1bWVudHNbb10saSk7bysrKTtvPT09ciYmdC5wdXNoKGkpfX1yZXR1cm4gdH0sbS5kaWZmZXJlbmNlPWZ1bmN0aW9uKG4pe3ZhciB0PVMoYXJndW1lbnRzLCEwLCEwLDEpO3JldHVybiBtLmZpbHRlcihuLGZ1bmN0aW9uKG4pe3JldHVybiFtLmNvbnRhaW5zKHQsbil9KX0sbS56aXA9ZnVuY3Rpb24oKXtyZXR1cm4gbS51bnppcChhcmd1bWVudHMpfSxtLnVuemlwPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD1uJiZtLm1heChuLE8pLmxlbmd0aHx8MCxyPUFycmF5KHQpLGU9MDt0PmU7ZSsrKXJbZV09bS5wbHVjayhuLGUpO3JldHVybiByfSxtLm9iamVjdD1mdW5jdGlvbihuLHQpe2Zvcih2YXIgcj17fSxlPTAsdT1PKG4pO3U+ZTtlKyspdD9yW25bZV1dPXRbZV06cltuW2VdWzBdXT1uW2VdWzFdO3JldHVybiByfSxtLmZpbmRJbmRleD10KDEpLG0uZmluZExhc3RJbmRleD10KC0xKSxtLnNvcnRlZEluZGV4PWZ1bmN0aW9uKG4sdCxyLGUpe3I9eChyLGUsMSk7Zm9yKHZhciB1PXIodCksaT0wLG89TyhuKTtvPmk7KXt2YXIgYT1NYXRoLmZsb29yKChpK28pLzIpO3IoblthXSk8dT9pPWErMTpvPWF9cmV0dXJuIGl9LG0uaW5kZXhPZj1yKDEsbS5maW5kSW5kZXgsbS5zb3J0ZWRJbmRleCksbS5sYXN0SW5kZXhPZj1yKC0xLG0uZmluZExhc3RJbmRleCksbS5yYW5nZT1mdW5jdGlvbihuLHQscil7bnVsbD09dCYmKHQ9bnx8MCxuPTApLHI9cnx8MTtmb3IodmFyIGU9TWF0aC5tYXgoTWF0aC5jZWlsKCh0LW4pL3IpLDApLHU9QXJyYXkoZSksaT0wO2U+aTtpKyssbis9cil1W2ldPW47cmV0dXJuIHV9O3ZhciBFPWZ1bmN0aW9uKG4sdCxyLGUsdSl7aWYoIShlIGluc3RhbmNlb2YgdCkpcmV0dXJuIG4uYXBwbHkocix1KTt2YXIgaT1qKG4ucHJvdG90eXBlKSxvPW4uYXBwbHkoaSx1KTtyZXR1cm4gbS5pc09iamVjdChvKT9vOml9O20uYmluZD1mdW5jdGlvbihuLHQpe2lmKGcmJm4uYmluZD09PWcpcmV0dXJuIGcuYXBwbHkobixsLmNhbGwoYXJndW1lbnRzLDEpKTtpZighbS5pc0Z1bmN0aW9uKG4pKXRocm93IG5ldyBUeXBlRXJyb3IoXCJCaW5kIG11c3QgYmUgY2FsbGVkIG9uIGEgZnVuY3Rpb25cIik7dmFyIHI9bC5jYWxsKGFyZ3VtZW50cywyKSxlPWZ1bmN0aW9uKCl7cmV0dXJuIEUobixlLHQsdGhpcyxyLmNvbmNhdChsLmNhbGwoYXJndW1lbnRzKSkpfTtyZXR1cm4gZX0sbS5wYXJ0aWFsPWZ1bmN0aW9uKG4pe3ZhciB0PWwuY2FsbChhcmd1bWVudHMsMSkscj1mdW5jdGlvbigpe2Zvcih2YXIgZT0wLHU9dC5sZW5ndGgsaT1BcnJheSh1KSxvPTA7dT5vO28rKylpW29dPXRbb109PT1tP2FyZ3VtZW50c1tlKytdOnRbb107Zm9yKDtlPGFyZ3VtZW50cy5sZW5ndGg7KWkucHVzaChhcmd1bWVudHNbZSsrXSk7cmV0dXJuIEUobixyLHRoaXMsdGhpcyxpKX07cmV0dXJuIHJ9LG0uYmluZEFsbD1mdW5jdGlvbihuKXt2YXIgdCxyLGU9YXJndW1lbnRzLmxlbmd0aDtpZigxPj1lKXRocm93IG5ldyBFcnJvcihcImJpbmRBbGwgbXVzdCBiZSBwYXNzZWQgZnVuY3Rpb24gbmFtZXNcIik7Zm9yKHQ9MTtlPnQ7dCsrKXI9YXJndW1lbnRzW3RdLG5bcl09bS5iaW5kKG5bcl0sbik7cmV0dXJuIG59LG0ubWVtb2l6ZT1mdW5jdGlvbihuLHQpe3ZhciByPWZ1bmN0aW9uKGUpe3ZhciB1PXIuY2FjaGUsaT1cIlwiKyh0P3QuYXBwbHkodGhpcyxhcmd1bWVudHMpOmUpO3JldHVybiBtLmhhcyh1LGkpfHwodVtpXT1uLmFwcGx5KHRoaXMsYXJndW1lbnRzKSksdVtpXX07cmV0dXJuIHIuY2FjaGU9e30scn0sbS5kZWxheT1mdW5jdGlvbihuLHQpe3ZhciByPWwuY2FsbChhcmd1bWVudHMsMik7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gbi5hcHBseShudWxsLHIpfSx0KX0sbS5kZWZlcj1tLnBhcnRpYWwobS5kZWxheSxtLDEpLG0udGhyb3R0bGU9ZnVuY3Rpb24obix0LHIpe3ZhciBlLHUsaSxvPW51bGwsYT0wO3J8fChyPXt9KTt2YXIgYz1mdW5jdGlvbigpe2E9ci5sZWFkaW5nPT09ITE/MDptLm5vdygpLG89bnVsbCxpPW4uYXBwbHkoZSx1KSxvfHwoZT11PW51bGwpfTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZj1tLm5vdygpO2F8fHIubGVhZGluZyE9PSExfHwoYT1mKTt2YXIgbD10LShmLWEpO3JldHVybiBlPXRoaXMsdT1hcmd1bWVudHMsMD49bHx8bD50PyhvJiYoY2xlYXJUaW1lb3V0KG8pLG89bnVsbCksYT1mLGk9bi5hcHBseShlLHUpLG98fChlPXU9bnVsbCkpOm98fHIudHJhaWxpbmc9PT0hMXx8KG89c2V0VGltZW91dChjLGwpKSxpfX0sbS5kZWJvdW5jZT1mdW5jdGlvbihuLHQscil7dmFyIGUsdSxpLG8sYSxjPWZ1bmN0aW9uKCl7dmFyIGY9bS5ub3coKS1vO3Q+ZiYmZj49MD9lPXNldFRpbWVvdXQoYyx0LWYpOihlPW51bGwscnx8KGE9bi5hcHBseShpLHUpLGV8fChpPXU9bnVsbCkpKX07cmV0dXJuIGZ1bmN0aW9uKCl7aT10aGlzLHU9YXJndW1lbnRzLG89bS5ub3coKTt2YXIgZj1yJiYhZTtyZXR1cm4gZXx8KGU9c2V0VGltZW91dChjLHQpKSxmJiYoYT1uLmFwcGx5KGksdSksaT11PW51bGwpLGF9fSxtLndyYXA9ZnVuY3Rpb24obix0KXtyZXR1cm4gbS5wYXJ0aWFsKHQsbil9LG0ubmVnYXRlPWZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbigpe3JldHVybiFuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LG0uY29tcG9zZT1mdW5jdGlvbigpe3ZhciBuPWFyZ3VtZW50cyx0PW4ubGVuZ3RoLTE7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciByPXQsZT1uW3RdLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyLS07KWU9bltyXS5jYWxsKHRoaXMsZSk7cmV0dXJuIGV9fSxtLmFmdGVyPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuLS1uPDE/dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk6dm9pZCAwfX0sbS5iZWZvcmU9ZnVuY3Rpb24obix0KXt2YXIgcjtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4tLW4+MCYmKHI9dC5hcHBseSh0aGlzLGFyZ3VtZW50cykpLDE+PW4mJih0PW51bGwpLHJ9fSxtLm9uY2U9bS5wYXJ0aWFsKG0uYmVmb3JlLDIpO3ZhciBNPSF7dG9TdHJpbmc6bnVsbH0ucHJvcGVydHlJc0VudW1lcmFibGUoXCJ0b1N0cmluZ1wiKSxJPVtcInZhbHVlT2ZcIixcImlzUHJvdG90eXBlT2ZcIixcInRvU3RyaW5nXCIsXCJwcm9wZXJ0eUlzRW51bWVyYWJsZVwiLFwiaGFzT3duUHJvcGVydHlcIixcInRvTG9jYWxlU3RyaW5nXCJdO20ua2V5cz1mdW5jdGlvbihuKXtpZighbS5pc09iamVjdChuKSlyZXR1cm5bXTtpZih2KXJldHVybiB2KG4pO3ZhciB0PVtdO2Zvcih2YXIgciBpbiBuKW0uaGFzKG4scikmJnQucHVzaChyKTtyZXR1cm4gTSYmZShuLHQpLHR9LG0uYWxsS2V5cz1mdW5jdGlvbihuKXtpZighbS5pc09iamVjdChuKSlyZXR1cm5bXTt2YXIgdD1bXTtmb3IodmFyIHIgaW4gbil0LnB1c2gocik7cmV0dXJuIE0mJmUobix0KSx0fSxtLnZhbHVlcz1mdW5jdGlvbihuKXtmb3IodmFyIHQ9bS5rZXlzKG4pLHI9dC5sZW5ndGgsZT1BcnJheShyKSx1PTA7cj51O3UrKyllW3VdPW5bdFt1XV07cmV0dXJuIGV9LG0ubWFwT2JqZWN0PWZ1bmN0aW9uKG4sdCxyKXt0PXgodCxyKTtmb3IodmFyIGUsdT1tLmtleXMobiksaT11Lmxlbmd0aCxvPXt9LGE9MDtpPmE7YSsrKWU9dVthXSxvW2VdPXQobltlXSxlLG4pO3JldHVybiBvfSxtLnBhaXJzPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD1tLmtleXMobikscj10Lmxlbmd0aCxlPUFycmF5KHIpLHU9MDtyPnU7dSsrKWVbdV09W3RbdV0sblt0W3VdXV07cmV0dXJuIGV9LG0uaW52ZXJ0PWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD17fSxyPW0ua2V5cyhuKSxlPTAsdT1yLmxlbmd0aDt1PmU7ZSsrKXRbbltyW2VdXV09cltlXTtyZXR1cm4gdH0sbS5mdW5jdGlvbnM9bS5tZXRob2RzPWZ1bmN0aW9uKG4pe3ZhciB0PVtdO2Zvcih2YXIgciBpbiBuKW0uaXNGdW5jdGlvbihuW3JdKSYmdC5wdXNoKHIpO3JldHVybiB0LnNvcnQoKX0sbS5leHRlbmQ9XyhtLmFsbEtleXMpLG0uZXh0ZW5kT3duPW0uYXNzaWduPV8obS5rZXlzKSxtLmZpbmRLZXk9ZnVuY3Rpb24obix0LHIpe3Q9eCh0LHIpO2Zvcih2YXIgZSx1PW0ua2V5cyhuKSxpPTAsbz11Lmxlbmd0aDtvPmk7aSsrKWlmKGU9dVtpXSx0KG5bZV0sZSxuKSlyZXR1cm4gZX0sbS5waWNrPWZ1bmN0aW9uKG4sdCxyKXt2YXIgZSx1LGk9e30sbz1uO2lmKG51bGw9PW8pcmV0dXJuIGk7bS5pc0Z1bmN0aW9uKHQpPyh1PW0uYWxsS2V5cyhvKSxlPWIodCxyKSk6KHU9Uyhhcmd1bWVudHMsITEsITEsMSksZT1mdW5jdGlvbihuLHQscil7cmV0dXJuIHQgaW4gcn0sbz1PYmplY3QobykpO2Zvcih2YXIgYT0wLGM9dS5sZW5ndGg7Yz5hO2ErKyl7dmFyIGY9dVthXSxsPW9bZl07ZShsLGYsbykmJihpW2ZdPWwpfXJldHVybiBpfSxtLm9taXQ9ZnVuY3Rpb24obix0LHIpe2lmKG0uaXNGdW5jdGlvbih0KSl0PW0ubmVnYXRlKHQpO2Vsc2V7dmFyIGU9bS5tYXAoUyhhcmd1bWVudHMsITEsITEsMSksU3RyaW5nKTt0PWZ1bmN0aW9uKG4sdCl7cmV0dXJuIW0uY29udGFpbnMoZSx0KX19cmV0dXJuIG0ucGljayhuLHQscil9LG0uZGVmYXVsdHM9XyhtLmFsbEtleXMsITApLG0uY3JlYXRlPWZ1bmN0aW9uKG4sdCl7dmFyIHI9aihuKTtyZXR1cm4gdCYmbS5leHRlbmRPd24ocix0KSxyfSxtLmNsb25lPWZ1bmN0aW9uKG4pe3JldHVybiBtLmlzT2JqZWN0KG4pP20uaXNBcnJheShuKT9uLnNsaWNlKCk6bS5leHRlbmQoe30sbik6bn0sbS50YXA9ZnVuY3Rpb24obix0KXtyZXR1cm4gdChuKSxufSxtLmlzTWF0Y2g9ZnVuY3Rpb24obix0KXt2YXIgcj1tLmtleXModCksZT1yLmxlbmd0aDtpZihudWxsPT1uKXJldHVybiFlO2Zvcih2YXIgdT1PYmplY3QobiksaT0wO2U+aTtpKyspe3ZhciBvPXJbaV07aWYodFtvXSE9PXVbb118fCEobyBpbiB1KSlyZXR1cm4hMX1yZXR1cm4hMH07dmFyIE49ZnVuY3Rpb24obix0LHIsZSl7aWYobj09PXQpcmV0dXJuIDAhPT1ufHwxL249PT0xL3Q7aWYobnVsbD09bnx8bnVsbD09dClyZXR1cm4gbj09PXQ7biBpbnN0YW5jZW9mIG0mJihuPW4uX3dyYXBwZWQpLHQgaW5zdGFuY2VvZiBtJiYodD10Ll93cmFwcGVkKTt2YXIgdT1zLmNhbGwobik7aWYodSE9PXMuY2FsbCh0KSlyZXR1cm4hMTtzd2l0Y2godSl7Y2FzZVwiW29iamVjdCBSZWdFeHBdXCI6Y2FzZVwiW29iamVjdCBTdHJpbmddXCI6cmV0dXJuXCJcIituPT1cIlwiK3Q7Y2FzZVwiW29iamVjdCBOdW1iZXJdXCI6cmV0dXJuK24hPT0rbj8rdCE9PSt0OjA9PT0rbj8xLytuPT09MS90OituPT09K3Q7Y2FzZVwiW29iamVjdCBEYXRlXVwiOmNhc2VcIltvYmplY3QgQm9vbGVhbl1cIjpyZXR1cm4rbj09PSt0fXZhciBpPVwiW29iamVjdCBBcnJheV1cIj09PXU7aWYoIWkpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiBufHxcIm9iamVjdFwiIT10eXBlb2YgdClyZXR1cm4hMTt2YXIgbz1uLmNvbnN0cnVjdG9yLGE9dC5jb25zdHJ1Y3RvcjtpZihvIT09YSYmIShtLmlzRnVuY3Rpb24obykmJm8gaW5zdGFuY2VvZiBvJiZtLmlzRnVuY3Rpb24oYSkmJmEgaW5zdGFuY2VvZiBhKSYmXCJjb25zdHJ1Y3RvclwiaW4gbiYmXCJjb25zdHJ1Y3RvclwiaW4gdClyZXR1cm4hMX1yPXJ8fFtdLGU9ZXx8W107Zm9yKHZhciBjPXIubGVuZ3RoO2MtLTspaWYocltjXT09PW4pcmV0dXJuIGVbY109PT10O2lmKHIucHVzaChuKSxlLnB1c2godCksaSl7aWYoYz1uLmxlbmd0aCxjIT09dC5sZW5ndGgpcmV0dXJuITE7Zm9yKDtjLS07KWlmKCFOKG5bY10sdFtjXSxyLGUpKXJldHVybiExfWVsc2V7dmFyIGYsbD1tLmtleXMobik7aWYoYz1sLmxlbmd0aCxtLmtleXModCkubGVuZ3RoIT09YylyZXR1cm4hMTtmb3IoO2MtLTspaWYoZj1sW2NdLCFtLmhhcyh0LGYpfHwhTihuW2ZdLHRbZl0scixlKSlyZXR1cm4hMX1yZXR1cm4gci5wb3AoKSxlLnBvcCgpLCEwfTttLmlzRXF1YWw9ZnVuY3Rpb24obix0KXtyZXR1cm4gTihuLHQpfSxtLmlzRW1wdHk9ZnVuY3Rpb24obil7cmV0dXJuIG51bGw9PW4/ITA6ayhuKSYmKG0uaXNBcnJheShuKXx8bS5pc1N0cmluZyhuKXx8bS5pc0FyZ3VtZW50cyhuKSk/MD09PW4ubGVuZ3RoOjA9PT1tLmtleXMobikubGVuZ3RofSxtLmlzRWxlbWVudD1mdW5jdGlvbihuKXtyZXR1cm4hKCFufHwxIT09bi5ub2RlVHlwZSl9LG0uaXNBcnJheT1ofHxmdW5jdGlvbihuKXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1zLmNhbGwobil9LG0uaXNPYmplY3Q9ZnVuY3Rpb24obil7dmFyIHQ9dHlwZW9mIG47cmV0dXJuXCJmdW5jdGlvblwiPT09dHx8XCJvYmplY3RcIj09PXQmJiEhbn0sbS5lYWNoKFtcIkFyZ3VtZW50c1wiLFwiRnVuY3Rpb25cIixcIlN0cmluZ1wiLFwiTnVtYmVyXCIsXCJEYXRlXCIsXCJSZWdFeHBcIixcIkVycm9yXCJdLGZ1bmN0aW9uKG4pe21bXCJpc1wiK25dPWZ1bmN0aW9uKHQpe3JldHVybiBzLmNhbGwodCk9PT1cIltvYmplY3QgXCIrbitcIl1cIn19KSxtLmlzQXJndW1lbnRzKGFyZ3VtZW50cyl8fChtLmlzQXJndW1lbnRzPWZ1bmN0aW9uKG4pe3JldHVybiBtLmhhcyhuLFwiY2FsbGVlXCIpfSksXCJmdW5jdGlvblwiIT10eXBlb2YvLi8mJlwib2JqZWN0XCIhPXR5cGVvZiBJbnQ4QXJyYXkmJihtLmlzRnVuY3Rpb249ZnVuY3Rpb24obil7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbnx8ITF9KSxtLmlzRmluaXRlPWZ1bmN0aW9uKG4pe3JldHVybiBpc0Zpbml0ZShuKSYmIWlzTmFOKHBhcnNlRmxvYXQobikpfSxtLmlzTmFOPWZ1bmN0aW9uKG4pe3JldHVybiBtLmlzTnVtYmVyKG4pJiZuIT09K259LG0uaXNCb29sZWFuPWZ1bmN0aW9uKG4pe3JldHVybiBuPT09ITB8fG49PT0hMXx8XCJbb2JqZWN0IEJvb2xlYW5dXCI9PT1zLmNhbGwobil9LG0uaXNOdWxsPWZ1bmN0aW9uKG4pe3JldHVybiBudWxsPT09bn0sbS5pc1VuZGVmaW5lZD1mdW5jdGlvbihuKXtyZXR1cm4gbj09PXZvaWQgMH0sbS5oYXM9ZnVuY3Rpb24obix0KXtyZXR1cm4gbnVsbCE9biYmcC5jYWxsKG4sdCl9LG0ubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiB1Ll89aSx0aGlzfSxtLmlkZW50aXR5PWZ1bmN0aW9uKG4pe3JldHVybiBufSxtLmNvbnN0YW50PWZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBufX0sbS5ub29wPWZ1bmN0aW9uKCl7fSxtLnByb3BlcnR5PXcsbS5wcm9wZXJ0eU9mPWZ1bmN0aW9uKG4pe3JldHVybiBudWxsPT1uP2Z1bmN0aW9uKCl7fTpmdW5jdGlvbih0KXtyZXR1cm4gblt0XX19LG0ubWF0Y2hlcj1tLm1hdGNoZXM9ZnVuY3Rpb24obil7cmV0dXJuIG49bS5leHRlbmRPd24oe30sbiksZnVuY3Rpb24odCl7cmV0dXJuIG0uaXNNYXRjaCh0LG4pfX0sbS50aW1lcz1mdW5jdGlvbihuLHQscil7dmFyIGU9QXJyYXkoTWF0aC5tYXgoMCxuKSk7dD1iKHQsciwxKTtmb3IodmFyIHU9MDtuPnU7dSsrKWVbdV09dCh1KTtyZXR1cm4gZX0sbS5yYW5kb209ZnVuY3Rpb24obix0KXtyZXR1cm4gbnVsbD09dCYmKHQ9bixuPTApLG4rTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKih0LW4rMSkpfSxtLm5vdz1EYXRlLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKX07dmFyIEI9e1wiJlwiOlwiJmFtcDtcIixcIjxcIjpcIiZsdDtcIixcIj5cIjpcIiZndDtcIiwnXCInOlwiJnF1b3Q7XCIsXCInXCI6XCImI3gyNztcIixcImBcIjpcIiYjeDYwO1wifSxUPW0uaW52ZXJ0KEIpLFI9ZnVuY3Rpb24obil7dmFyIHQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19LHI9XCIoPzpcIittLmtleXMobikuam9pbihcInxcIikrXCIpXCIsZT1SZWdFeHAociksdT1SZWdFeHAocixcImdcIik7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBuPW51bGw9PW4/XCJcIjpcIlwiK24sZS50ZXN0KG4pP24ucmVwbGFjZSh1LHQpOm59fTttLmVzY2FwZT1SKEIpLG0udW5lc2NhcGU9UihUKSxtLnJlc3VsdD1mdW5jdGlvbihuLHQscil7dmFyIGU9bnVsbD09bj92b2lkIDA6blt0XTtyZXR1cm4gZT09PXZvaWQgMCYmKGU9ciksbS5pc0Z1bmN0aW9uKGUpP2UuY2FsbChuKTplfTt2YXIgcT0wO20udW5pcXVlSWQ9ZnVuY3Rpb24obil7dmFyIHQ9KytxK1wiXCI7cmV0dXJuIG4/bit0OnR9LG0udGVtcGxhdGVTZXR0aW5ncz17ZXZhbHVhdGU6LzwlKFtcXHNcXFNdKz8pJT4vZyxpbnRlcnBvbGF0ZTovPCU9KFtcXHNcXFNdKz8pJT4vZyxlc2NhcGU6LzwlLShbXFxzXFxTXSs/KSU+L2d9O3ZhciBLPS8oLileLyx6PXtcIidcIjpcIidcIixcIlxcXFxcIjpcIlxcXFxcIixcIlxcclwiOlwiclwiLFwiXFxuXCI6XCJuXCIsXCJcXHUyMDI4XCI6XCJ1MjAyOFwiLFwiXFx1MjAyOVwiOlwidTIwMjlcIn0sRD0vXFxcXHwnfFxccnxcXG58XFx1MjAyOHxcXHUyMDI5L2csTD1mdW5jdGlvbihuKXtyZXR1cm5cIlxcXFxcIit6W25dfTttLnRlbXBsYXRlPWZ1bmN0aW9uKG4sdCxyKXshdCYmciYmKHQ9ciksdD1tLmRlZmF1bHRzKHt9LHQsbS50ZW1wbGF0ZVNldHRpbmdzKTt2YXIgZT1SZWdFeHAoWyh0LmVzY2FwZXx8Sykuc291cmNlLCh0LmludGVycG9sYXRlfHxLKS5zb3VyY2UsKHQuZXZhbHVhdGV8fEspLnNvdXJjZV0uam9pbihcInxcIikrXCJ8JFwiLFwiZ1wiKSx1PTAsaT1cIl9fcCs9J1wiO24ucmVwbGFjZShlLGZ1bmN0aW9uKHQscixlLG8sYSl7cmV0dXJuIGkrPW4uc2xpY2UodSxhKS5yZXBsYWNlKEQsTCksdT1hK3QubGVuZ3RoLHI/aSs9XCInK1xcbigoX190PShcIityK1wiKSk9PW51bGw/Jyc6Xy5lc2NhcGUoX190KSkrXFxuJ1wiOmU/aSs9XCInK1xcbigoX190PShcIitlK1wiKSk9PW51bGw/Jyc6X190KStcXG4nXCI6byYmKGkrPVwiJztcXG5cIitvK1wiXFxuX19wKz0nXCIpLHR9KSxpKz1cIic7XFxuXCIsdC52YXJpYWJsZXx8KGk9XCJ3aXRoKG9ianx8e30pe1xcblwiK2krXCJ9XFxuXCIpLGk9XCJ2YXIgX190LF9fcD0nJyxfX2o9QXJyYXkucHJvdG90eXBlLmpvaW4sXCIrXCJwcmludD1mdW5jdGlvbigpe19fcCs9X19qLmNhbGwoYXJndW1lbnRzLCcnKTt9O1xcblwiK2krXCJyZXR1cm4gX19wO1xcblwiO3RyeXt2YXIgbz1uZXcgRnVuY3Rpb24odC52YXJpYWJsZXx8XCJvYmpcIixcIl9cIixpKX1jYXRjaChhKXt0aHJvdyBhLnNvdXJjZT1pLGF9dmFyIGM9ZnVuY3Rpb24obil7cmV0dXJuIG8uY2FsbCh0aGlzLG4sbSl9LGY9dC52YXJpYWJsZXx8XCJvYmpcIjtyZXR1cm4gYy5zb3VyY2U9XCJmdW5jdGlvbihcIitmK1wiKXtcXG5cIitpK1wifVwiLGN9LG0uY2hhaW49ZnVuY3Rpb24obil7dmFyIHQ9bShuKTtyZXR1cm4gdC5fY2hhaW49ITAsdH07dmFyIFA9ZnVuY3Rpb24obix0KXtyZXR1cm4gbi5fY2hhaW4/bSh0KS5jaGFpbigpOnR9O20ubWl4aW49ZnVuY3Rpb24obil7bS5lYWNoKG0uZnVuY3Rpb25zKG4pLGZ1bmN0aW9uKHQpe3ZhciByPW1bdF09blt0XTttLnByb3RvdHlwZVt0XT1mdW5jdGlvbigpe3ZhciBuPVt0aGlzLl93cmFwcGVkXTtyZXR1cm4gZi5hcHBseShuLGFyZ3VtZW50cyksUCh0aGlzLHIuYXBwbHkobSxuKSl9fSl9LG0ubWl4aW4obSksbS5lYWNoKFtcInBvcFwiLFwicHVzaFwiLFwicmV2ZXJzZVwiLFwic2hpZnRcIixcInNvcnRcIixcInNwbGljZVwiLFwidW5zaGlmdFwiXSxmdW5jdGlvbihuKXt2YXIgdD1vW25dO20ucHJvdG90eXBlW25dPWZ1bmN0aW9uKCl7dmFyIHI9dGhpcy5fd3JhcHBlZDtyZXR1cm4gdC5hcHBseShyLGFyZ3VtZW50cyksXCJzaGlmdFwiIT09biYmXCJzcGxpY2VcIiE9PW58fDAhPT1yLmxlbmd0aHx8ZGVsZXRlIHJbMF0sUCh0aGlzLHIpfX0pLG0uZWFjaChbXCJjb25jYXRcIixcImpvaW5cIixcInNsaWNlXCJdLGZ1bmN0aW9uKG4pe3ZhciB0PW9bbl07bS5wcm90b3R5cGVbbl09ZnVuY3Rpb24oKXtyZXR1cm4gUCh0aGlzLHQuYXBwbHkodGhpcy5fd3JhcHBlZCxhcmd1bWVudHMpKX19KSxtLnByb3RvdHlwZS52YWx1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl93cmFwcGVkfSxtLnByb3RvdHlwZS52YWx1ZU9mPW0ucHJvdG90eXBlLnRvSlNPTj1tLnByb3RvdHlwZS52YWx1ZSxtLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiXCIrdGhpcy5fd3JhcHBlZH0sXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kJiZkZWZpbmUoXCJ1bmRlcnNjb3JlXCIsW10sZnVuY3Rpb24oKXtyZXR1cm4gbX0pfSkuY2FsbCh0aGlzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVuZGVyc2NvcmUtbWluLm1hcCIsIi8vIG51bWVyYWwuanNcbi8vIHZlcnNpb24gOiAxLjQuNVxuLy8gYXV0aG9yIDogQWRhbSBEcmFwZXJcbi8vIGxpY2Vuc2UgOiBNSVRcbi8vIGh0dHA6Ly9hZGFtd2RyYXBlci5naXRodWIuY29tL051bWVyYWwtanMvXG4oZnVuY3Rpb24oKXtmdW5jdGlvbiBvKGUpe3RoaXMuX249ZX1mdW5jdGlvbiB1KGUsdCxuKXt2YXIgcj1NYXRoLnBvdygxMCx0KSxpO2k9KE1hdGgucm91bmQoZSpyKS9yKS50b0ZpeGVkKHQpO2lmKG4pe3ZhciBzPW5ldyBSZWdFeHAoXCIwezEsXCIrbitcIn0kXCIpO2k9aS5yZXBsYWNlKHMsXCJcIil9cmV0dXJuIGl9ZnVuY3Rpb24gYShlLHQpe3ZhciBuO3QuaW5kZXhPZihcIiRcIik+LTE/bj1sKGUsdCk6dC5pbmRleE9mKFwiJVwiKT4tMT9uPWMoZSx0KTp0LmluZGV4T2YoXCI6XCIpPi0xP249aChlLHQpOm49ZChlLHQpO3JldHVybiBufWZ1bmN0aW9uIGYoZSx0KXtpZih0LmluZGV4T2YoXCI6XCIpPi0xKWUuX249cCh0KTtlbHNlIGlmKHQ9PT1pKWUuX249MDtlbHNle3ZhciBzPXQ7bltyXS5kZWxpbWl0ZXJzLmRlY2ltYWwhPT1cIi5cIiYmKHQ9dC5yZXBsYWNlKC9cXC4vZyxcIlwiKS5yZXBsYWNlKG5bcl0uZGVsaW1pdGVycy5kZWNpbWFsLFwiLlwiKSk7dmFyIG89bmV3IFJlZ0V4cChuW3JdLmFiYnJldmlhdGlvbnMudGhvdXNhbmQrXCIoPzpcXFxcKXwoXFxcXFwiK25bcl0uY3VycmVuY3kuc3ltYm9sK1wiKT8oPzpcXFxcKSk/KT8kXCIpLHU9bmV3IFJlZ0V4cChuW3JdLmFiYnJldmlhdGlvbnMubWlsbGlvbitcIig/OlxcXFwpfChcXFxcXCIrbltyXS5jdXJyZW5jeS5zeW1ib2wrXCIpPyg/OlxcXFwpKT8pPyRcIiksYT1uZXcgUmVnRXhwKG5bcl0uYWJicmV2aWF0aW9ucy5iaWxsaW9uK1wiKD86XFxcXCl8KFxcXFxcIituW3JdLmN1cnJlbmN5LnN5bWJvbCtcIik/KD86XFxcXCkpPyk/JFwiKSxmPW5ldyBSZWdFeHAobltyXS5hYmJyZXZpYXRpb25zLnRyaWxsaW9uK1wiKD86XFxcXCl8KFxcXFxcIituW3JdLmN1cnJlbmN5LnN5bWJvbCtcIik/KD86XFxcXCkpPyk/JFwiKSxsPVtcIktCXCIsXCJNQlwiLFwiR0JcIixcIlRCXCIsXCJQQlwiLFwiRUJcIixcIlpCXCIsXCJZQlwiXSxjPSExO2Zvcih2YXIgaD0wO2g8PWwubGVuZ3RoO2grKyl7Yz10LmluZGV4T2YobFtoXSk+LTE/TWF0aC5wb3coMTAyNCxoKzEpOiExO2lmKGMpYnJlYWt9ZS5fbj0oYz9jOjEpKihzLm1hdGNoKG8pP01hdGgucG93KDEwLDMpOjEpKihzLm1hdGNoKHUpP01hdGgucG93KDEwLDYpOjEpKihzLm1hdGNoKGEpP01hdGgucG93KDEwLDkpOjEpKihzLm1hdGNoKGYpP01hdGgucG93KDEwLDEyKToxKSoodC5pbmRleE9mKFwiJVwiKT4tMT8uMDE6MSkqTnVtYmVyKCh0LmluZGV4T2YoXCIoXCIpPi0xP1wiLVwiOlwiXCIpK3QucmVwbGFjZSgvW14wLTlcXC4nLV0rL2csXCJcIikpO2UuX249Yz9NYXRoLmNlaWwoZS5fbik6ZS5fbn1yZXR1cm4gZS5fbn1mdW5jdGlvbiBsKGUsdCl7dmFyIGk9dC5pbmRleE9mKFwiJFwiKTw9MT8hMDohMSxzPVwiXCI7aWYodC5pbmRleE9mKFwiICRcIik+LTEpe3M9XCIgXCI7dD10LnJlcGxhY2UoXCIgJFwiLFwiXCIpfWVsc2UgaWYodC5pbmRleE9mKFwiJCBcIik+LTEpe3M9XCIgXCI7dD10LnJlcGxhY2UoXCIkIFwiLFwiXCIpfWVsc2UgdD10LnJlcGxhY2UoXCIkXCIsXCJcIik7dmFyIG89YShlLHQpO2lmKGkpaWYoby5pbmRleE9mKFwiKFwiKT4tMXx8by5pbmRleE9mKFwiLVwiKT4tMSl7bz1vLnNwbGl0KFwiXCIpO28uc3BsaWNlKDEsMCxuW3JdLmN1cnJlbmN5LnN5bWJvbCtzKTtvPW8uam9pbihcIlwiKX1lbHNlIG89bltyXS5jdXJyZW5jeS5zeW1ib2wrcytvO2Vsc2UgaWYoby5pbmRleE9mKFwiKVwiKT4tMSl7bz1vLnNwbGl0KFwiXCIpO28uc3BsaWNlKC0xLDAscytuW3JdLmN1cnJlbmN5LnN5bWJvbCk7bz1vLmpvaW4oXCJcIil9ZWxzZSBvPW8rcytuW3JdLmN1cnJlbmN5LnN5bWJvbDtyZXR1cm4gb31mdW5jdGlvbiBjKGUsdCl7dmFyIG49XCJcIjtpZih0LmluZGV4T2YoXCIgJVwiKT4tMSl7bj1cIiBcIjt0PXQucmVwbGFjZShcIiAlXCIsXCJcIil9ZWxzZSB0PXQucmVwbGFjZShcIiVcIixcIlwiKTtlLl9uPWUuX24qMTAwO3ZhciByPWEoZSx0KTtpZihyLmluZGV4T2YoXCIpXCIpPi0xKXtyPXIuc3BsaXQoXCJcIik7ci5zcGxpY2UoLTEsMCxuK1wiJVwiKTtyPXIuam9pbihcIlwiKX1lbHNlIHI9cituK1wiJVwiO3JldHVybiByfWZ1bmN0aW9uIGgoZSx0KXt2YXIgbj1NYXRoLmZsb29yKGUuX24vNjAvNjApLHI9TWF0aC5mbG9vcigoZS5fbi1uKjYwKjYwKS82MCksaT1NYXRoLnJvdW5kKGUuX24tbio2MCo2MC1yKjYwKTtyZXR1cm4gbitcIjpcIisocjwxMD9cIjBcIityOnIpK1wiOlwiKyhpPDEwP1wiMFwiK2k6aSl9ZnVuY3Rpb24gcChlKXt2YXIgdD1lLnNwbGl0KFwiOlwiKSxuPTA7aWYodC5sZW5ndGg9PT0zKXtuKz1OdW1iZXIodFswXSkqNjAqNjA7bis9TnVtYmVyKHRbMV0pKjYwO24rPU51bWJlcih0WzJdKX1lbHNlIGlmKHQubGVuZ2h0PT09Mil7bis9TnVtYmVyKHRbMF0pKjYwO24rPU51bWJlcih0WzFdKX1yZXR1cm4gTnVtYmVyKG4pfWZ1bmN0aW9uIGQoZSx0KXt2YXIgcz0hMSxvPSExLGE9XCJcIixmPVwiXCIsbD1cIlwiLGM9TWF0aC5hYnMoZS5fbik7aWYoZS5fbj09PTAmJmkhPT1udWxsKXJldHVybiBpO2lmKHQuaW5kZXhPZihcIihcIik+LTEpe3M9ITA7dD10LnNsaWNlKDEsLTEpfWlmKHQuaW5kZXhPZihcImFcIik+LTEpe2lmKHQuaW5kZXhPZihcIiBhXCIpPi0xKXthPVwiIFwiO3Q9dC5yZXBsYWNlKFwiIGFcIixcIlwiKX1lbHNlIHQ9dC5yZXBsYWNlKFwiYVwiLFwiXCIpO2lmKGM+PU1hdGgucG93KDEwLDEyKSl7YSs9bltyXS5hYmJyZXZpYXRpb25zLnRpbGxpb247ZS5fbj1lLl9uL01hdGgucG93KDEwLDEyKX1lbHNlIGlmKGM8TWF0aC5wb3coMTAsMTIpJiZjPj1NYXRoLnBvdygxMCw5KSl7YSs9bltyXS5hYmJyZXZpYXRpb25zLmJpbGxpb247ZS5fbj1lLl9uL01hdGgucG93KDEwLDkpfWVsc2UgaWYoYzxNYXRoLnBvdygxMCw5KSYmYz49TWF0aC5wb3coMTAsNikpe2ErPW5bcl0uYWJicmV2aWF0aW9ucy5taWxsaW9uO2UuX249ZS5fbi9NYXRoLnBvdygxMCw2KX1lbHNlIGlmKGM8TWF0aC5wb3coMTAsNikmJmM+PU1hdGgucG93KDEwLDMpKXthKz1uW3JdLmFiYnJldmlhdGlvbnMudGhvdXNhbmQ7ZS5fbj1lLl9uL01hdGgucG93KDEwLDMpfX1pZih0LmluZGV4T2YoXCJiXCIpPi0xKXtpZih0LmluZGV4T2YoXCIgYlwiKT4tMSl7Zj1cIiBcIjt0PXQucmVwbGFjZShcIiBiXCIsXCJcIil9ZWxzZSB0PXQucmVwbGFjZShcImJcIixcIlwiKTt2YXIgaD1bXCJCXCIsXCJLQlwiLFwiTUJcIixcIkdCXCIsXCJUQlwiLFwiUEJcIixcIkVCXCIsXCJaQlwiLFwiWUJcIl0scCxkO2Zvcih2YXIgdj0wO3Y8PWgubGVuZ3RoO3YrKyl7cD1NYXRoLnBvdygxMDI0LHYpO2Q9TWF0aC5wb3coMTAyNCx2KzEpO2lmKGUuX24+PXAmJmUuX248ZCl7Zis9aFt2XTtwPjAmJihlLl9uPWUuX24vcCk7YnJlYWt9fX1pZih0LmluZGV4T2YoXCJvXCIpPi0xKXtpZih0LmluZGV4T2YoXCIgb1wiKT4tMSl7bD1cIiBcIjt0PXQucmVwbGFjZShcIiBvXCIsXCJcIil9ZWxzZSB0PXQucmVwbGFjZShcIm9cIixcIlwiKTtsKz1uW3JdLm9yZGluYWwoZS5fbil9aWYodC5pbmRleE9mKFwiWy5dXCIpPi0xKXtvPSEwO3Q9dC5yZXBsYWNlKFwiWy5dXCIsXCIuXCIpfXZhciBtPWUuX24udG9TdHJpbmcoKS5zcGxpdChcIi5cIilbMF0sZz10LnNwbGl0KFwiLlwiKVsxXSx5PXQuaW5kZXhPZihcIixcIiksYj1cIlwiLHc9ITE7aWYoZyl7aWYoZy5pbmRleE9mKFwiW1wiKT4tMSl7Zz1nLnJlcGxhY2UoXCJdXCIsXCJcIik7Zz1nLnNwbGl0KFwiW1wiKTtiPXUoZS5fbixnWzBdLmxlbmd0aCtnWzFdLmxlbmd0aCxnWzFdLmxlbmd0aCl9ZWxzZSBiPXUoZS5fbixnLmxlbmd0aCk7bT1iLnNwbGl0KFwiLlwiKVswXTtiLnNwbGl0KFwiLlwiKVsxXS5sZW5ndGg/Yj1uW3JdLmRlbGltaXRlcnMuZGVjaW1hbCtiLnNwbGl0KFwiLlwiKVsxXTpiPVwiXCI7byYmTnVtYmVyKGIpPT09MCYmKGI9XCJcIil9ZWxzZSBtPXUoZS5fbixudWxsKTtpZihtLmluZGV4T2YoXCItXCIpPi0xKXttPW0uc2xpY2UoMSk7dz0hMH15Pi0xJiYobT1tLnRvU3RyaW5nKCkucmVwbGFjZSgvKFxcZCkoPz0oXFxkezN9KSsoPyFcXGQpKS9nLFwiJDFcIituW3JdLmRlbGltaXRlcnMudGhvdXNhbmRzKSk7dC5pbmRleE9mKFwiLlwiKT09PTAmJihtPVwiXCIpO3JldHVybihzJiZ3P1wiKFwiOlwiXCIpKyghcyYmdz9cIi1cIjpcIlwiKSttK2IrKGw/bDpcIlwiKSsoYT9hOlwiXCIpKyhmP2Y6XCJcIikrKHMmJnc/XCIpXCI6XCJcIil9ZnVuY3Rpb24gdihlLHQpe25bZV09dH12YXIgZSx0PVwiMS40LjVcIixuPXt9LHI9XCJlblwiLGk9bnVsbCxzPXR5cGVvZiBtb2R1bGUhPVwidW5kZWZpbmVkXCImJm1vZHVsZS5leHBvcnRzO2U9ZnVuY3Rpb24odCl7ZS5pc051bWVyYWwodCk/dD10LnZhbHVlKCk6TnVtYmVyKHQpfHwodD0wKTtyZXR1cm4gbmV3IG8oTnVtYmVyKHQpKX07ZS52ZXJzaW9uPXQ7ZS5pc051bWVyYWw9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBvfTtlLmxhbmd1YWdlPWZ1bmN0aW9uKHQsaSl7aWYoIXQpcmV0dXJuIHI7dCYmIWkmJihyPXQpOyhpfHwhblt0XSkmJnYodCxpKTtyZXR1cm4gZX07ZS5sYW5ndWFnZShcImVuXCIse2RlbGltaXRlcnM6e3Rob3VzYW5kczpcIixcIixkZWNpbWFsOlwiLlwifSxhYmJyZXZpYXRpb25zOnt0aG91c2FuZDpcImtcIixtaWxsaW9uOlwibVwiLGJpbGxpb246XCJiXCIsdHJpbGxpb246XCJ0XCJ9LG9yZGluYWw6ZnVuY3Rpb24oZSl7dmFyIHQ9ZSUxMDtyZXR1cm5+fihlJTEwMC8xMCk9PT0xP1widGhcIjp0PT09MT9cInN0XCI6dD09PTI/XCJuZFwiOnQ9PT0zP1wicmRcIjpcInRoXCJ9LGN1cnJlbmN5OntzeW1ib2w6XCIkXCJ9fSk7ZS56ZXJvRm9ybWF0PWZ1bmN0aW9uKGUpe3R5cGVvZiBlPT1cInN0cmluZ1wiP2k9ZTppPW51bGx9O2UuZm49by5wcm90b3R5cGU9e2Nsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcyl9LGZvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm4gYSh0aGlzLHQ/dDplLmRlZmF1bHRGb3JtYXQpfSx1bmZvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm4gZih0aGlzLHQ/dDplLmRlZmF1bHRGb3JtYXQpfSx2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9ufSx2YWx1ZU9mOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX259LHNldDpmdW5jdGlvbihlKXt0aGlzLl9uPU51bWJlcihlKTtyZXR1cm4gdGhpc30sYWRkOmZ1bmN0aW9uKGUpe3RoaXMuX249dGhpcy5fbitOdW1iZXIoZSk7cmV0dXJuIHRoaXN9LHN1YnRyYWN0OmZ1bmN0aW9uKGUpe3RoaXMuX249dGhpcy5fbi1OdW1iZXIoZSk7cmV0dXJuIHRoaXN9LG11bHRpcGx5OmZ1bmN0aW9uKGUpe3RoaXMuX249dGhpcy5fbipOdW1iZXIoZSk7cmV0dXJuIHRoaXN9LGRpdmlkZTpmdW5jdGlvbihlKXt0aGlzLl9uPXRoaXMuX24vTnVtYmVyKGUpO3JldHVybiB0aGlzfSxkaWZmZXJlbmNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX24tTnVtYmVyKGUpO3Q8MCYmKHQ9LXQpO3JldHVybiB0fX07cyYmKG1vZHVsZS5leHBvcnRzPWUpO3R5cGVvZiBlbmRlcj09XCJ1bmRlZmluZWRcIiYmKHRoaXMubnVtZXJhbD1lKTt0eXBlb2YgZGVmaW5lPT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQmJmRlZmluZShbXSxmdW5jdGlvbigpe3JldHVybiBlfSl9KS5jYWxsKHRoaXMpOyIsIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKX12YXIgZj1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxmLGYuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbi8vIEJyb3dzZXIgUmVxdWVzdFxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuLy8gVU1EIEhFQURFUiBTVEFSVCBcbihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkge1xuICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgLy8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLlxuICAgICAgICBkZWZpbmUoW10sIGZhY3RvcnkpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIC8vIE5vZGUuIERvZXMgbm90IHdvcmsgd2l0aCBzdHJpY3QgQ29tbW9uSlMsIGJ1dFxuICAgICAgICAvLyBvbmx5IENvbW1vbkpTLWxpa2UgZW52aXJvbWVudHMgdGhhdCBzdXBwb3J0IG1vZHVsZS5leHBvcnRzLFxuICAgICAgICAvLyBsaWtlIE5vZGUuXG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEJyb3dzZXIgZ2xvYmFscyAocm9vdCBpcyB3aW5kb3cpXG4gICAgICAgIHJvb3QucmV0dXJuRXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgfVxufSh0aGlzLCBmdW5jdGlvbiAoKSB7XG4vLyBVTUQgSEVBREVSIEVORFxuXG52YXIgWEhSID0gWE1MSHR0cFJlcXVlc3RcbmlmICghWEhSKSB0aHJvdyBuZXcgRXJyb3IoJ21pc3NpbmcgWE1MSHR0cFJlcXVlc3QnKVxucmVxdWVzdC5sb2cgPSB7XG4gICd0cmFjZSc6IG5vb3AsICdkZWJ1Zyc6IG5vb3AsICdpbmZvJzogbm9vcCwgJ3dhcm4nOiBub29wLCAnZXJyb3InOiBub29wXG59XG5cbnZhciBERUZBVUxUX1RJTUVPVVQgPSAzICogNjAgKiAxMDAwIC8vIDMgbWludXRlc1xuXG4vL1xuLy8gcmVxdWVzdFxuLy9cblxuZnVuY3Rpb24gcmVxdWVzdChvcHRpb25zLCBjYWxsYmFjaykge1xuICAvLyBUaGUgZW50cnktcG9pbnQgdG8gdGhlIEFQSTogcHJlcCB0aGUgb3B0aW9ucyBvYmplY3QgYW5kIHBhc3MgdGhlIHJlYWwgd29yayB0byBydW5feGhyLlxuICBpZih0eXBlb2YgY2FsbGJhY2sgIT09ICdmdW5jdGlvbicpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdCYWQgY2FsbGJhY2sgZ2l2ZW46ICcgKyBjYWxsYmFjaylcblxuICBpZighb3B0aW9ucylcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG9wdGlvbnMgZ2l2ZW4nKVxuXG4gIHZhciBvcHRpb25zX29uUmVzcG9uc2UgPSBvcHRpb25zLm9uUmVzcG9uc2U7IC8vIFNhdmUgdGhpcyBmb3IgbGF0ZXIuXG5cbiAgaWYodHlwZW9mIG9wdGlvbnMgPT09ICdzdHJpbmcnKVxuICAgIG9wdGlvbnMgPSB7J3VyaSc6b3B0aW9uc307XG4gIGVsc2VcbiAgICBvcHRpb25zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvcHRpb25zKSk7IC8vIFVzZSBhIGR1cGxpY2F0ZSBmb3IgbXV0YXRpbmcuXG5cbiAgb3B0aW9ucy5vblJlc3BvbnNlID0gb3B0aW9uc19vblJlc3BvbnNlIC8vIEFuZCBwdXQgaXQgYmFjay5cblxuICBpZiAob3B0aW9ucy52ZXJib3NlKSByZXF1ZXN0LmxvZyA9IGdldExvZ2dlcigpO1xuXG4gIGlmKG9wdGlvbnMudXJsKSB7XG4gICAgb3B0aW9ucy51cmkgPSBvcHRpb25zLnVybDtcbiAgICBkZWxldGUgb3B0aW9ucy51cmw7XG4gIH1cblxuICBpZighb3B0aW9ucy51cmkgJiYgb3B0aW9ucy51cmkgIT09IFwiXCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwib3B0aW9ucy51cmkgaXMgYSByZXF1aXJlZCBhcmd1bWVudFwiKTtcblxuICBpZih0eXBlb2Ygb3B0aW9ucy51cmkgIT0gXCJzdHJpbmdcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJvcHRpb25zLnVyaSBtdXN0IGJlIGEgc3RyaW5nXCIpO1xuXG4gIHZhciB1bnN1cHBvcnRlZF9vcHRpb25zID0gWydwcm94eScsICdfcmVkaXJlY3RzRm9sbG93ZWQnLCAnbWF4UmVkaXJlY3RzJywgJ2ZvbGxvd1JlZGlyZWN0J11cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB1bnN1cHBvcnRlZF9vcHRpb25zLmxlbmd0aDsgaSsrKVxuICAgIGlmKG9wdGlvbnNbIHVuc3VwcG9ydGVkX29wdGlvbnNbaV0gXSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIm9wdGlvbnMuXCIgKyB1bnN1cHBvcnRlZF9vcHRpb25zW2ldICsgXCIgaXMgbm90IHN1cHBvcnRlZFwiKVxuXG4gIG9wdGlvbnMuY2FsbGJhY2sgPSBjYWxsYmFja1xuICBvcHRpb25zLm1ldGhvZCA9IG9wdGlvbnMubWV0aG9kIHx8ICdHRVQnO1xuICBvcHRpb25zLmhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnMgfHwge307XG4gIG9wdGlvbnMuYm9keSAgICA9IG9wdGlvbnMuYm9keSB8fCBudWxsXG4gIG9wdGlvbnMudGltZW91dCA9IG9wdGlvbnMudGltZW91dCB8fCByZXF1ZXN0LkRFRkFVTFRfVElNRU9VVFxuXG4gIGlmKG9wdGlvbnMuaGVhZGVycy5ob3N0KVxuICAgIHRocm93IG5ldyBFcnJvcihcIk9wdGlvbnMuaGVhZGVycy5ob3N0IGlzIG5vdCBzdXBwb3J0ZWRcIik7XG5cbiAgaWYob3B0aW9ucy5qc29uKSB7XG4gICAgb3B0aW9ucy5oZWFkZXJzLmFjY2VwdCA9IG9wdGlvbnMuaGVhZGVycy5hY2NlcHQgfHwgJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgaWYob3B0aW9ucy5tZXRob2QgIT09ICdHRVQnKVxuICAgICAgb3B0aW9ucy5oZWFkZXJzWydjb250ZW50LXR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJ1xuXG4gICAgaWYodHlwZW9mIG9wdGlvbnMuanNvbiAhPT0gJ2Jvb2xlYW4nKVxuICAgICAgb3B0aW9ucy5ib2R5ID0gSlNPTi5zdHJpbmdpZnkob3B0aW9ucy5qc29uKVxuICAgIGVsc2UgaWYodHlwZW9mIG9wdGlvbnMuYm9keSAhPT0gJ3N0cmluZycpXG4gICAgICBvcHRpb25zLmJvZHkgPSBKU09OLnN0cmluZ2lmeShvcHRpb25zLmJvZHkpXG4gIH1cbiAgXG4gIC8vQkVHSU4gUVMgSGFja1xuICB2YXIgc2VyaWFsaXplID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgdmFyIHN0ciA9IFtdO1xuICAgIGZvcih2YXIgcCBpbiBvYmopXG4gICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KHApKSB7XG4gICAgICAgIHN0ci5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChwKSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KG9ialtwXSkpO1xuICAgICAgfVxuICAgIHJldHVybiBzdHIuam9pbihcIiZcIik7XG4gIH1cbiAgXG4gIGlmKG9wdGlvbnMucXMpe1xuICAgIHZhciBxcyA9ICh0eXBlb2Ygb3B0aW9ucy5xcyA9PSAnc3RyaW5nJyk/IG9wdGlvbnMucXMgOiBzZXJpYWxpemUob3B0aW9ucy5xcyk7XG4gICAgaWYob3B0aW9ucy51cmkuaW5kZXhPZignPycpICE9PSAtMSl7IC8vbm8gZ2V0IHBhcmFtc1xuICAgICAgICBvcHRpb25zLnVyaSA9IG9wdGlvbnMudXJpKycmJytxcztcbiAgICB9ZWxzZXsgLy9leGlzdGluZyBnZXQgcGFyYW1zXG4gICAgICAgIG9wdGlvbnMudXJpID0gb3B0aW9ucy51cmkrJz8nK3FzO1xuICAgIH1cbiAgfVxuICAvL0VORCBRUyBIYWNrXG4gIFxuICAvL0JFR0lOIEZPUk0gSGFja1xuICB2YXIgbXVsdGlwYXJ0ID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgLy90b2RvOiBzdXBwb3J0IGZpbGUgdHlwZSAodXNlZnVsPylcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgcmVzdWx0LmJvdW5kcnkgPSAnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScrTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjEwMDAwMDAwMDApO1xuICAgIHZhciBsaW5lcyA9IFtdO1xuICAgIGZvcih2YXIgcCBpbiBvYmope1xuICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KHApKSB7XG4gICAgICAgICAgICBsaW5lcy5wdXNoKFxuICAgICAgICAgICAgICAgICctLScrcmVzdWx0LmJvdW5kcnkrXCJcXG5cIitcbiAgICAgICAgICAgICAgICAnQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJytwKydcIicrXCJcXG5cIitcbiAgICAgICAgICAgICAgICBcIlxcblwiK1xuICAgICAgICAgICAgICAgIG9ialtwXStcIlxcblwiXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxpbmVzLnB1c2goICctLScrcmVzdWx0LmJvdW5kcnkrJy0tJyApO1xuICAgIHJlc3VsdC5ib2R5ID0gbGluZXMuam9pbignJyk7XG4gICAgcmVzdWx0Lmxlbmd0aCA9IHJlc3VsdC5ib2R5Lmxlbmd0aDtcbiAgICByZXN1bHQudHlwZSA9ICdtdWx0aXBhcnQvZm9ybS1kYXRhOyBib3VuZGFyeT0nK3Jlc3VsdC5ib3VuZHJ5O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgXG4gIGlmKG9wdGlvbnMuZm9ybSl7XG4gICAgaWYodHlwZW9mIG9wdGlvbnMuZm9ybSA9PSAnc3RyaW5nJykgdGhyb3coJ2Zvcm0gbmFtZSB1bnN1cHBvcnRlZCcpO1xuICAgIGlmKG9wdGlvbnMubWV0aG9kID09PSAnUE9TVCcpe1xuICAgICAgICB2YXIgZW5jb2RpbmcgPSAob3B0aW9ucy5lbmNvZGluZyB8fCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJykudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgb3B0aW9ucy5oZWFkZXJzWydjb250ZW50LXR5cGUnXSA9IGVuY29kaW5nO1xuICAgICAgICBzd2l0Y2goZW5jb2Rpbmcpe1xuICAgICAgICAgICAgY2FzZSAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJzpcbiAgICAgICAgICAgICAgICBvcHRpb25zLmJvZHkgPSBzZXJpYWxpemUob3B0aW9ucy5mb3JtKS5yZXBsYWNlKC8lMjAvZywgXCIrXCIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbXVsdGlwYXJ0L2Zvcm0tZGF0YSc6XG4gICAgICAgICAgICAgICAgdmFyIG11bHRpID0gbXVsdGlwYXJ0KG9wdGlvbnMuZm9ybSk7XG4gICAgICAgICAgICAgICAgLy9vcHRpb25zLmhlYWRlcnNbJ2NvbnRlbnQtbGVuZ3RoJ10gPSBtdWx0aS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5ib2R5ID0gbXVsdGkuYm9keTtcbiAgICAgICAgICAgICAgICBvcHRpb25zLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddID0gbXVsdGkudHlwZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQgOiB0aHJvdyBuZXcgRXJyb3IoJ3Vuc3VwcG9ydGVkIGVuY29kaW5nOicrZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgfVxuICB9XG4gIC8vRU5EIEZPUk0gSGFja1xuXG4gIC8vIElmIG9uUmVzcG9uc2UgaXMgYm9vbGVhbiB0cnVlLCBjYWxsIGJhY2sgaW1tZWRpYXRlbHkgd2hlbiB0aGUgcmVzcG9uc2UgaXMga25vd24sXG4gIC8vIG5vdCB3aGVuIHRoZSBmdWxsIHJlcXVlc3QgaXMgY29tcGxldGUuXG4gIG9wdGlvbnMub25SZXNwb25zZSA9IG9wdGlvbnMub25SZXNwb25zZSB8fCBub29wXG4gIGlmKG9wdGlvbnMub25SZXNwb25zZSA9PT0gdHJ1ZSkge1xuICAgIG9wdGlvbnMub25SZXNwb25zZSA9IGNhbGxiYWNrXG4gICAgb3B0aW9ucy5jYWxsYmFjayA9IG5vb3BcbiAgfVxuXG4gIC8vIFhYWCBCcm93c2VycyBkbyBub3QgbGlrZSB0aGlzLlxuICAvL2lmKG9wdGlvbnMuYm9keSlcbiAgLy8gIG9wdGlvbnMuaGVhZGVyc1snY29udGVudC1sZW5ndGgnXSA9IG9wdGlvbnMuYm9keS5sZW5ndGg7XG5cbiAgLy8gSFRUUCBiYXNpYyBhdXRoZW50aWNhdGlvblxuICBpZighb3B0aW9ucy5oZWFkZXJzLmF1dGhvcml6YXRpb24gJiYgb3B0aW9ucy5hdXRoKVxuICAgIG9wdGlvbnMuaGVhZGVycy5hdXRob3JpemF0aW9uID0gJ0Jhc2ljICcgKyBiNjRfZW5jKG9wdGlvbnMuYXV0aC51c2VybmFtZSArICc6JyArIG9wdGlvbnMuYXV0aC5wYXNzd29yZCk7XG5cbiAgcmV0dXJuIHJ1bl94aHIob3B0aW9ucylcbn1cblxudmFyIHJlcV9zZXEgPSAwXG5mdW5jdGlvbiBydW5feGhyKG9wdGlvbnMpIHtcbiAgdmFyIHhociA9IG5ldyBYSFJcbiAgICAsIHRpbWVkX291dCA9IGZhbHNlXG4gICAgLCBpc19jb3JzID0gaXNfY3Jvc3NEb21haW4ob3B0aW9ucy51cmkpXG4gICAgLCBzdXBwb3J0c19jb3JzID0gKCd3aXRoQ3JlZGVudGlhbHMnIGluIHhocilcblxuICByZXFfc2VxICs9IDFcbiAgeGhyLnNlcV9pZCA9IHJlcV9zZXFcbiAgeGhyLmlkID0gcmVxX3NlcSArICc6ICcgKyBvcHRpb25zLm1ldGhvZCArICcgJyArIG9wdGlvbnMudXJpXG4gIHhoci5faWQgPSB4aHIuaWQgLy8gSSBrbm93IEkgd2lsbCB0eXBlIFwiX2lkXCIgZnJvbSBoYWJpdCBhbGwgdGhlIHRpbWUuXG5cbiAgaWYoaXNfY29ycyAmJiAhc3VwcG9ydHNfY29ycykge1xuICAgIHZhciBjb3JzX2VyciA9IG5ldyBFcnJvcignQnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGNyb3NzLW9yaWdpbiByZXF1ZXN0OiAnICsgb3B0aW9ucy51cmkpXG4gICAgY29yc19lcnIuY29ycyA9ICd1bnN1cHBvcnRlZCdcbiAgICByZXR1cm4gb3B0aW9ucy5jYWxsYmFjayhjb3JzX2VyciwgeGhyKVxuICB9XG5cbiAgeGhyLnRpbWVvdXRUaW1lciA9IHNldFRpbWVvdXQodG9vX2xhdGUsIG9wdGlvbnMudGltZW91dClcbiAgZnVuY3Rpb24gdG9vX2xhdGUoKSB7XG4gICAgdGltZWRfb3V0ID0gdHJ1ZVxuICAgIHZhciBlciA9IG5ldyBFcnJvcignRVRJTUVET1VUJylcbiAgICBlci5jb2RlID0gJ0VUSU1FRE9VVCdcbiAgICBlci5kdXJhdGlvbiA9IG9wdGlvbnMudGltZW91dFxuXG4gICAgcmVxdWVzdC5sb2cuZXJyb3IoJ1RpbWVvdXQnLCB7ICdpZCc6eGhyLl9pZCwgJ21pbGxpc2Vjb25kcyc6b3B0aW9ucy50aW1lb3V0IH0pXG4gICAgcmV0dXJuIG9wdGlvbnMuY2FsbGJhY2soZXIsIHhocilcbiAgfVxuXG4gIC8vIFNvbWUgc3RhdGVzIGNhbiBiZSBza2lwcGVkIG92ZXIsIHNvIHJlbWVtYmVyIHdoYXQgaXMgc3RpbGwgaW5jb21wbGV0ZS5cbiAgdmFyIGRpZCA9IHsncmVzcG9uc2UnOmZhbHNlLCAnbG9hZGluZyc6ZmFsc2UsICdlbmQnOmZhbHNlfVxuXG4gIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBvbl9zdGF0ZV9jaGFuZ2VcbiAgeGhyLm9wZW4ob3B0aW9ucy5tZXRob2QsIG9wdGlvbnMudXJpLCB0cnVlKSAvLyBhc3luY2hyb25vdXNcbiAgaWYoaXNfY29ycylcbiAgICB4aHIud2l0aENyZWRlbnRpYWxzID0gISEgb3B0aW9ucy53aXRoQ3JlZGVudGlhbHNcbiAgeGhyLnNlbmQob3B0aW9ucy5ib2R5KVxuICByZXR1cm4geGhyXG5cbiAgZnVuY3Rpb24gb25fc3RhdGVfY2hhbmdlKGV2ZW50KSB7XG4gICAgaWYodGltZWRfb3V0KVxuICAgICAgcmV0dXJuIHJlcXVlc3QubG9nLmRlYnVnKCdJZ25vcmluZyB0aW1lZCBvdXQgc3RhdGUgY2hhbmdlJywgeydzdGF0ZSc6eGhyLnJlYWR5U3RhdGUsICdpZCc6eGhyLmlkfSlcblxuICAgIHJlcXVlc3QubG9nLmRlYnVnKCdTdGF0ZSBjaGFuZ2UnLCB7J3N0YXRlJzp4aHIucmVhZHlTdGF0ZSwgJ2lkJzp4aHIuaWQsICd0aW1lZF9vdXQnOnRpbWVkX291dH0pXG5cbiAgICBpZih4aHIucmVhZHlTdGF0ZSA9PT0gWEhSLk9QRU5FRCkge1xuICAgICAgcmVxdWVzdC5sb2cuZGVidWcoJ1JlcXVlc3Qgc3RhcnRlZCcsIHsnaWQnOnhoci5pZH0pXG4gICAgICBmb3IgKHZhciBrZXkgaW4gb3B0aW9ucy5oZWFkZXJzKVxuICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihrZXksIG9wdGlvbnMuaGVhZGVyc1trZXldKVxuICAgIH1cblxuICAgIGVsc2UgaWYoeGhyLnJlYWR5U3RhdGUgPT09IFhIUi5IRUFERVJTX1JFQ0VJVkVEKVxuICAgICAgb25fcmVzcG9uc2UoKVxuXG4gICAgZWxzZSBpZih4aHIucmVhZHlTdGF0ZSA9PT0gWEhSLkxPQURJTkcpIHtcbiAgICAgIG9uX3Jlc3BvbnNlKClcbiAgICAgIG9uX2xvYWRpbmcoKVxuICAgIH1cblxuICAgIGVsc2UgaWYoeGhyLnJlYWR5U3RhdGUgPT09IFhIUi5ET05FKSB7XG4gICAgICBvbl9yZXNwb25zZSgpXG4gICAgICBvbl9sb2FkaW5nKClcbiAgICAgIG9uX2VuZCgpXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25fcmVzcG9uc2UoKSB7XG4gICAgaWYoZGlkLnJlc3BvbnNlKVxuICAgICAgcmV0dXJuXG5cbiAgICBkaWQucmVzcG9uc2UgPSB0cnVlXG4gICAgcmVxdWVzdC5sb2cuZGVidWcoJ0dvdCByZXNwb25zZScsIHsnaWQnOnhoci5pZCwgJ3N0YXR1cyc6eGhyLnN0YXR1c30pXG4gICAgY2xlYXJUaW1lb3V0KHhoci50aW1lb3V0VGltZXIpXG4gICAgeGhyLnN0YXR1c0NvZGUgPSB4aHIuc3RhdHVzIC8vIE5vZGUgcmVxdWVzdCBjb21wYXRpYmlsaXR5XG5cbiAgICAvLyBEZXRlY3QgZmFpbGVkIENPUlMgcmVxdWVzdHMuXG4gICAgaWYoaXNfY29ycyAmJiB4aHIuc3RhdHVzQ29kZSA9PSAwKSB7XG4gICAgICB2YXIgY29yc19lcnIgPSBuZXcgRXJyb3IoJ0NPUlMgcmVxdWVzdCByZWplY3RlZDogJyArIG9wdGlvbnMudXJpKVxuICAgICAgY29yc19lcnIuY29ycyA9ICdyZWplY3RlZCdcblxuICAgICAgLy8gRG8gbm90IHByb2Nlc3MgdGhpcyByZXF1ZXN0IGZ1cnRoZXIuXG4gICAgICBkaWQubG9hZGluZyA9IHRydWVcbiAgICAgIGRpZC5lbmQgPSB0cnVlXG5cbiAgICAgIHJldHVybiBvcHRpb25zLmNhbGxiYWNrKGNvcnNfZXJyLCB4aHIpXG4gICAgfVxuXG4gICAgb3B0aW9ucy5vblJlc3BvbnNlKG51bGwsIHhocilcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uX2xvYWRpbmcoKSB7XG4gICAgaWYoZGlkLmxvYWRpbmcpXG4gICAgICByZXR1cm5cblxuICAgIGRpZC5sb2FkaW5nID0gdHJ1ZVxuICAgIHJlcXVlc3QubG9nLmRlYnVnKCdSZXNwb25zZSBib2R5IGxvYWRpbmcnLCB7J2lkJzp4aHIuaWR9KVxuICAgIC8vIFRPRE86IE1heWJlIHNpbXVsYXRlIFwiZGF0YVwiIGV2ZW50cyBieSB3YXRjaGluZyB4aHIucmVzcG9uc2VUZXh0XG4gIH1cblxuICBmdW5jdGlvbiBvbl9lbmQoKSB7XG4gICAgaWYoZGlkLmVuZClcbiAgICAgIHJldHVyblxuXG4gICAgZGlkLmVuZCA9IHRydWVcbiAgICByZXF1ZXN0LmxvZy5kZWJ1ZygnUmVxdWVzdCBkb25lJywgeydpZCc6eGhyLmlkfSlcblxuICAgIHhoci5ib2R5ID0geGhyLnJlc3BvbnNlVGV4dFxuICAgIGlmKG9wdGlvbnMuanNvbikge1xuICAgICAgdHJ5ICAgICAgICB7IHhoci5ib2R5ID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KSB9XG4gICAgICBjYXRjaCAoZXIpIHsgcmV0dXJuIG9wdGlvbnMuY2FsbGJhY2soZXIsIHhocikgICAgICAgIH1cbiAgICB9XG5cbiAgICBvcHRpb25zLmNhbGxiYWNrKG51bGwsIHhociwgeGhyLmJvZHkpXG4gIH1cblxufSAvLyByZXF1ZXN0XG5cbnJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gZmFsc2U7XG5yZXF1ZXN0LkRFRkFVTFRfVElNRU9VVCA9IERFRkFVTFRfVElNRU9VVDtcblxuLy9cbi8vIGRlZmF1bHRzXG4vL1xuXG5yZXF1ZXN0LmRlZmF1bHRzID0gZnVuY3Rpb24ob3B0aW9ucywgcmVxdWVzdGVyKSB7XG4gIHZhciBkZWYgPSBmdW5jdGlvbiAobWV0aG9kKSB7XG4gICAgdmFyIGQgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgICAgaWYodHlwZW9mIHBhcmFtcyA9PT0gJ3N0cmluZycpXG4gICAgICAgIHBhcmFtcyA9IHsndXJpJzogcGFyYW1zfTtcbiAgICAgIGVsc2Uge1xuICAgICAgICBwYXJhbXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHBhcmFtcykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaSBpbiBvcHRpb25zKSB7XG4gICAgICAgIGlmIChwYXJhbXNbaV0gPT09IHVuZGVmaW5lZCkgcGFyYW1zW2ldID0gb3B0aW9uc1tpXVxuICAgICAgfVxuICAgICAgcmV0dXJuIG1ldGhvZChwYXJhbXMsIGNhbGxiYWNrKVxuICAgIH1cbiAgICByZXR1cm4gZFxuICB9XG4gIHZhciBkZSA9IGRlZihyZXF1ZXN0KVxuICBkZS5nZXQgPSBkZWYocmVxdWVzdC5nZXQpXG4gIGRlLnBvc3QgPSBkZWYocmVxdWVzdC5wb3N0KVxuICBkZS5wdXQgPSBkZWYocmVxdWVzdC5wdXQpXG4gIGRlLmhlYWQgPSBkZWYocmVxdWVzdC5oZWFkKVxuICByZXR1cm4gZGVcbn1cblxuLy9cbi8vIEhUVFAgbWV0aG9kIHNob3J0Y3V0c1xuLy9cblxudmFyIHNob3J0Y3V0cyA9IFsgJ2dldCcsICdwdXQnLCAncG9zdCcsICdoZWFkJyBdO1xuc2hvcnRjdXRzLmZvckVhY2goZnVuY3Rpb24oc2hvcnRjdXQpIHtcbiAgdmFyIG1ldGhvZCA9IHNob3J0Y3V0LnRvVXBwZXJDYXNlKCk7XG4gIHZhciBmdW5jICAgPSBzaG9ydGN1dC50b0xvd2VyQ2FzZSgpO1xuXG4gIHJlcXVlc3RbZnVuY10gPSBmdW5jdGlvbihvcHRzKSB7XG4gICAgaWYodHlwZW9mIG9wdHMgPT09ICdzdHJpbmcnKVxuICAgICAgb3B0cyA9IHsnbWV0aG9kJzptZXRob2QsICd1cmknOm9wdHN9O1xuICAgIGVsc2Uge1xuICAgICAgb3B0cyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob3B0cykpO1xuICAgICAgb3B0cy5tZXRob2QgPSBtZXRob2Q7XG4gICAgfVxuXG4gICAgdmFyIGFyZ3MgPSBbb3B0c10uY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcmd1bWVudHMsIFsxXSkpO1xuICAgIHJldHVybiByZXF1ZXN0LmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG59KVxuXG4vL1xuLy8gQ291Y2hEQiBzaG9ydGN1dFxuLy9cblxucmVxdWVzdC5jb3VjaCA9IGZ1bmN0aW9uKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGlmKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJylcbiAgICBvcHRpb25zID0geyd1cmknOm9wdGlvbnN9XG5cbiAgLy8gSnVzdCB1c2UgdGhlIHJlcXVlc3QgQVBJIHRvIGRvIEpTT04uXG4gIG9wdGlvbnMuanNvbiA9IHRydWVcbiAgaWYob3B0aW9ucy5ib2R5KVxuICAgIG9wdGlvbnMuanNvbiA9IG9wdGlvbnMuYm9keVxuICBkZWxldGUgb3B0aW9ucy5ib2R5XG5cbiAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBub29wXG5cbiAgdmFyIHhociA9IHJlcXVlc3Qob3B0aW9ucywgY291Y2hfaGFuZGxlcilcbiAgcmV0dXJuIHhoclxuXG4gIGZ1bmN0aW9uIGNvdWNoX2hhbmRsZXIoZXIsIHJlc3AsIGJvZHkpIHtcbiAgICBpZihlcilcbiAgICAgIHJldHVybiBjYWxsYmFjayhlciwgcmVzcCwgYm9keSlcblxuICAgIGlmKChyZXNwLnN0YXR1c0NvZGUgPCAyMDAgfHwgcmVzcC5zdGF0dXNDb2RlID4gMjk5KSAmJiBib2R5LmVycm9yKSB7XG4gICAgICAvLyBUaGUgYm9keSBpcyBhIENvdWNoIEpTT04gb2JqZWN0IGluZGljYXRpbmcgdGhlIGVycm9yLlxuICAgICAgZXIgPSBuZXcgRXJyb3IoJ0NvdWNoREIgZXJyb3I6ICcgKyAoYm9keS5lcnJvci5yZWFzb24gfHwgYm9keS5lcnJvci5lcnJvcikpXG4gICAgICBmb3IgKHZhciBrZXkgaW4gYm9keSlcbiAgICAgICAgZXJba2V5XSA9IGJvZHlba2V5XVxuICAgICAgcmV0dXJuIGNhbGxiYWNrKGVyLCByZXNwLCBib2R5KTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2FsbGJhY2soZXIsIHJlc3AsIGJvZHkpO1xuICB9XG59XG5cbi8vXG4vLyBVdGlsaXR5XG4vL1xuXG5mdW5jdGlvbiBub29wKCkge31cblxuZnVuY3Rpb24gZ2V0TG9nZ2VyKCkge1xuICB2YXIgbG9nZ2VyID0ge31cbiAgICAsIGxldmVscyA9IFsndHJhY2UnLCAnZGVidWcnLCAnaW5mbycsICd3YXJuJywgJ2Vycm9yJ11cbiAgICAsIGxldmVsLCBpXG5cbiAgZm9yKGkgPSAwOyBpIDwgbGV2ZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV2ZWwgPSBsZXZlbHNbaV1cblxuICAgIGxvZ2dlcltsZXZlbF0gPSBub29wXG4gICAgaWYodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIGNvbnNvbGUgJiYgY29uc29sZVtsZXZlbF0pXG4gICAgICBsb2dnZXJbbGV2ZWxdID0gZm9ybWF0dGVkKGNvbnNvbGUsIGxldmVsKVxuICB9XG5cbiAgcmV0dXJuIGxvZ2dlclxufVxuXG5mdW5jdGlvbiBmb3JtYXR0ZWQob2JqLCBtZXRob2QpIHtcbiAgcmV0dXJuIGZvcm1hdHRlZF9sb2dnZXJcblxuICBmdW5jdGlvbiBmb3JtYXR0ZWRfbG9nZ2VyKHN0ciwgY29udGV4dCkge1xuICAgIGlmKHR5cGVvZiBjb250ZXh0ID09PSAnb2JqZWN0JylcbiAgICAgIHN0ciArPSAnICcgKyBKU09OLnN0cmluZ2lmeShjb250ZXh0KVxuXG4gICAgcmV0dXJuIG9ialttZXRob2RdLmNhbGwob2JqLCBzdHIpXG4gIH1cbn1cblxuLy8gUmV0dXJuIHdoZXRoZXIgYSBVUkwgaXMgYSBjcm9zcy1kb21haW4gcmVxdWVzdC5cbmZ1bmN0aW9uIGlzX2Nyb3NzRG9tYWluKHVybCkge1xuICB2YXIgcnVybCA9IC9eKFtcXHdcXCtcXC5cXC1dKzopKD86XFwvXFwvKFteXFwvPyM6XSopKD86OihcXGQrKSk/KT8vXG5cbiAgLy8galF1ZXJ5ICM4MTM4LCBJRSBtYXkgdGhyb3cgYW4gZXhjZXB0aW9uIHdoZW4gYWNjZXNzaW5nXG4gIC8vIGEgZmllbGQgZnJvbSB3aW5kb3cubG9jYXRpb24gaWYgZG9jdW1lbnQuZG9tYWluIGhhcyBiZWVuIHNldFxuICB2YXIgYWpheExvY2F0aW9uXG4gIHRyeSB7IGFqYXhMb2NhdGlvbiA9IGxvY2F0aW9uLmhyZWYgfVxuICBjYXRjaCAoZSkge1xuICAgIC8vIFVzZSB0aGUgaHJlZiBhdHRyaWJ1dGUgb2YgYW4gQSBlbGVtZW50IHNpbmNlIElFIHdpbGwgbW9kaWZ5IGl0IGdpdmVuIGRvY3VtZW50LmxvY2F0aW9uXG4gICAgYWpheExvY2F0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcbiAgICBhamF4TG9jYXRpb24uaHJlZiA9IFwiXCI7XG4gICAgYWpheExvY2F0aW9uID0gYWpheExvY2F0aW9uLmhyZWY7XG4gIH1cblxuICB2YXIgYWpheExvY1BhcnRzID0gcnVybC5leGVjKGFqYXhMb2NhdGlvbi50b0xvd2VyQ2FzZSgpKSB8fCBbXVxuICAgICwgcGFydHMgPSBydXJsLmV4ZWModXJsLnRvTG93ZXJDYXNlKCkgKVxuXG4gIHZhciByZXN1bHQgPSAhIShcbiAgICBwYXJ0cyAmJlxuICAgICggIHBhcnRzWzFdICE9IGFqYXhMb2NQYXJ0c1sxXVxuICAgIHx8IHBhcnRzWzJdICE9IGFqYXhMb2NQYXJ0c1syXVxuICAgIHx8IChwYXJ0c1szXSB8fCAocGFydHNbMV0gPT09IFwiaHR0cDpcIiA/IDgwIDogNDQzKSkgIT0gKGFqYXhMb2NQYXJ0c1szXSB8fCAoYWpheExvY1BhcnRzWzFdID09PSBcImh0dHA6XCIgPyA4MCA6IDQ0MykpXG4gICAgKVxuICApXG5cbiAgLy9jb25zb2xlLmRlYnVnKCdpc19jcm9zc0RvbWFpbignK3VybCsnKSAtPiAnICsgcmVzdWx0KVxuICByZXR1cm4gcmVzdWx0XG59XG5cbi8vIE1JVCBMaWNlbnNlIGZyb20gaHR0cDovL3BocGpzLm9yZy9mdW5jdGlvbnMvYmFzZTY0X2VuY29kZTozNThcbmZ1bmN0aW9uIGI2NF9lbmMgKGRhdGEpIHtcbiAgICAvLyBFbmNvZGVzIHN0cmluZyB1c2luZyBNSU1FIGJhc2U2NCBhbGdvcml0aG1cbiAgICB2YXIgYjY0ID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPVwiO1xuICAgIHZhciBvMSwgbzIsIG8zLCBoMSwgaDIsIGgzLCBoNCwgYml0cywgaSA9IDAsIGFjID0gMCwgZW5jPVwiXCIsIHRtcF9hcnIgPSBbXTtcblxuICAgIGlmICghZGF0YSkge1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG5cbiAgICAvLyBhc3N1bWUgdXRmOCBkYXRhXG4gICAgLy8gZGF0YSA9IHRoaXMudXRmOF9lbmNvZGUoZGF0YSsnJyk7XG5cbiAgICBkbyB7IC8vIHBhY2sgdGhyZWUgb2N0ZXRzIGludG8gZm91ciBoZXhldHNcbiAgICAgICAgbzEgPSBkYXRhLmNoYXJDb2RlQXQoaSsrKTtcbiAgICAgICAgbzIgPSBkYXRhLmNoYXJDb2RlQXQoaSsrKTtcbiAgICAgICAgbzMgPSBkYXRhLmNoYXJDb2RlQXQoaSsrKTtcblxuICAgICAgICBiaXRzID0gbzE8PDE2IHwgbzI8PDggfCBvMztcblxuICAgICAgICBoMSA9IGJpdHM+PjE4ICYgMHgzZjtcbiAgICAgICAgaDIgPSBiaXRzPj4xMiAmIDB4M2Y7XG4gICAgICAgIGgzID0gYml0cz4+NiAmIDB4M2Y7XG4gICAgICAgIGg0ID0gYml0cyAmIDB4M2Y7XG5cbiAgICAgICAgLy8gdXNlIGhleGV0cyB0byBpbmRleCBpbnRvIGI2NCwgYW5kIGFwcGVuZCByZXN1bHQgdG8gZW5jb2RlZCBzdHJpbmdcbiAgICAgICAgdG1wX2FyclthYysrXSA9IGI2NC5jaGFyQXQoaDEpICsgYjY0LmNoYXJBdChoMikgKyBiNjQuY2hhckF0KGgzKSArIGI2NC5jaGFyQXQoaDQpO1xuICAgIH0gd2hpbGUgKGkgPCBkYXRhLmxlbmd0aCk7XG5cbiAgICBlbmMgPSB0bXBfYXJyLmpvaW4oJycpO1xuXG4gICAgc3dpdGNoIChkYXRhLmxlbmd0aCAlIDMpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgZW5jID0gZW5jLnNsaWNlKDAsIC0yKSArICc9PSc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICBlbmMgPSBlbmMuc2xpY2UoMCwgLTEpICsgJz0nO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gZW5jO1xufVxuICAgIHJldHVybiByZXF1ZXN0O1xuLy9VTUQgRk9PVEVSIFNUQVJUXG59KSk7XG4vL1VNRCBGT09URVIgRU5EXG5cbn0se31dLDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5cbnZhciByZXF1ZXN0ID0gcmVxdWlyZSgnYnJvd3Nlci1yZXF1ZXN0Jyk7XG5cbnZhciBwb3BpbHkgPSB3aW5kb3cucG9waWx5IHx8IHt9O1xuXG52YXIgX2Vycm9yID0gZnVuY3Rpb24obXNnLCBlcnJvcikge1xuICByZXR1cm4ge21zZzogbXNnLCBlcnJvcjogZXJyb3J9O1xufTtcbiAgXG52YXIgX3JlcXVlc3QgPSBmdW5jdGlvbihtZXRob2QsIHBhdGgsIGRhdGEsIGNhbGxiYWNrKSB7XG4gIHZhciBERUZBVUxUX1VSTCA9ICdodHRwczovL3BvcGlseS5jb20nO1xuICB2YXIgREVGQVVMVF9CQVNFX1BBVEggPSAnL2FwaSc7XG5cbiAgdmFyIGFwaVVybCA9IHBvcGlseS5hcGkuYXBpVXJsO1xuICBpZighcG9waWx5LmFwaS5hcGlVcmwpIHtcbiAgICBhcGlVcmwgPSBERUZBVUxUX1VSTDtcbiAgfSBcbiAgYXBpVXJsID0gYXBpVXJsICsgREVGQVVMVF9CQVNFX1BBVEg7XG5cbiAgdmFyIHBhcmFtcyA9IHtcbiAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICBoZWFkZXJzOiB7IFxuICAgICAgJ0F1dGhvcml6YXRpb24nOiAnVG9rZW4gJyArIHBvcGlseS5hcGkudG9rZW4sXG4gICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIH0sXG4gICAgdXJsOiBhcGlVcmwgKyBwYXRoLy8gKyAnP2Zvcm1hdD1hcGknXG4gIH07XG4gICAgICBcbiAgaWYoJ3FzJyBpbiBkYXRhKSB7XG4gICAgcGFyYW1zWydxcyddID0gZGF0YVsncXMnXTtcbiAgICBwYXJhbXNbJ2pzb24nXSA9IHRydWU7XG4gIH1cbiAgaWYoJ2pzb24nIGluIGRhdGEpIHtcbiAgICBwYXJhbXNbJ2JvZHknXSA9IGRhdGFbJ2pzb24nXTtcbiAgICBwYXJhbXNbJ2pzb24nXSA9IHRydWU7XG4gIH1cbiAgaWYoJ2Zvcm0nIGluIGRhdGEpIHtcbiAgICBwYXJhbXNbJ2Zvcm1EYXRhJ10gPSBkYXRhWydmb3JtJ107XG4gIH1cbiAgXG4gIHJlcXVlc3QocGFyYW1zLCBmdW5jdGlvbihlcnIsIGh0dHBSZXNwb25zZSwgYm9keSkge1xuICAgIGlmKGVycilcbiAgICAgIHJldHVybiBjYWxsYmFjayhfZXJyb3IoJ1JlcXVlc3QgZXJyb3InLCBlcnIpKTtcbiAgICAgIFxuICAgIGlmKGh0dHBSZXNwb25zZS5zdGF0dXNDb2RlID09PSA0MDEpXG4gICAgICByZXR1cm4gY2FsbGJhY2soX2Vycm9yKCdJbnZhbGlkIEFQSSB0b2tlbicpKTtcblxuICAgIGlmKGh0dHBSZXNwb25zZS5zdGF0dXNDb2RlID09PSA0MDApXG4gICAgICByZXR1cm4gY2FsbGJhY2soX2Vycm9yKCdCYWQgcmVxdWVzdCcsIGJvZHkpKTtcbiAgICAgIFxuICAgIHRyeSB7XG4gICAgICB2YXIgcmVzcG9uc2UgPSBib2R5O1xuICAgICAgaWYodHlwZW9mIGJvZHkgPT09ICdzdHJpbmcnKVxuICAgICAgICByZXNwb25zZSA9IEpTT04ucGFyc2UoYm9keSk7XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soX2Vycm9yKCdFcnJvcjogJytlLCBlKSApXG4gICAgfVxuXG4gICAgY2FsbGJhY2sobnVsbCwgcmVzcG9uc2UpO1xuXG4gIH0pO1xufTtcblxudmFyIHBhY2tGaWx0ZXJzID0gZnVuY3Rpb24oZmlsdGVycykge1xuICB2YXIgcGFja2VkU3RyID0gJyc7XG4gIGZpbHRlcnMuZm9yRWFjaChmdW5jdGlvbihmLCBpKSB7XG4gICAgdmFyIG9wID0gJ2VxJ1xuICAgIGlmKCdvcCcgaW4gZilcbiAgICAgIG9wID0gZlsnb3AnXVxuICAgIFxuICAgIHZhciBmaWx0ZXJTdHIgPSAnJztcbiAgICBpZihpID4gMClcbiAgICAgIGZpbHRlclN0ciArPSAnX18nO1xuXG4gICAgdmFyIHZhbFN0ciA9ICcnO1xuICAgIGlmKGYuaGFzT3duUHJvcGVydHkoJ3ZhbHVlcycpKSB7XG4gICAgICB2YWxTdHIgPSBmWyd2YWx1ZXMnXS5qb2luKCcsJyk7XG4gICAgfVxuICAgIGZpbHRlclN0ciArPSBmWydjb2x1bW4nXSArICchJyArIG9wICsgJyEnICsgKCB2YWxTdHIgKTtcbiAgICBwYWNrZWRTdHIgKz0gZmlsdGVyU3RyXG4gIH0pO1xuICByZXR1cm4gcGFja2VkU3RyO1xufVxuXG52YXIgYXNzaWduQ3VzdG9taXphdGlvbnMgPSBmdW5jdGlvbihkYXRhRGljdCwgaW5zaWdodERhdGEpIHtcbiAgW1xuICAgICd0aXRsZScsXG4gICAgJ3hfbGFiZWwnLFxuICAgICd5X2xhYmVsJyxcbiAgICAnel9sYWJlbCcsXG4gICAgJ2NhdGVnb3J5X29yZGVyJyxcbiAgICAndGltZV9pbnRlcnZhbCcsXG4gICAgJ3JlZnJlc2hfcmF0ZScsXG4gICAgJ3N3YXAnXG4gIF0uZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICBpZihrZXkgaW4gaW5zaWdodERhdGEpXG4gICAgICBkYXRhRGljdFtrZXldID0gaW5zaWdodERhdGFba2V5XTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGFEaWN0O1xufTsgICAgICAgIFxuICAgICAgICBcbnBvcGlseS5hcGkgPSB7XG4gIGFkZFNvdXJjZTogZnVuY3Rpb24oc291cmNlRGF0YSwgY2IpIHtcbiAgICBcbiAgICB2YXIgZGF0YSA9IHt9O1xuICAgIFsnY29sdW1ucycsICd0aXRsZScsICdkZXNjcmlwdGlvbiddLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICBpZihrZXkgaW4gc291cmNlRGF0YSlcbiAgICAgICAgZGF0YVtrZXldID0gc291cmNlRGF0YVtrZXldO1xuICAgIH0pXG5cbiAgICBpZigndXJsJyBpbiBzb3VyY2VEYXRhKSB7XG4gICAgICBkYXRhWyd1cmwnXSA9IHNvdXJjZURhdGFbJ3VybCddXG4gICAgICBfcmVxdWVzdCgnUE9TVCcsICcvc291cmNlcy8nLCB7anNvbjogZGF0YX0sIGNiKTtcbiAgICB9XG5cbiAgICBlbHNlIGlmKCdjb25uZWN0aW9uX3N0cmluZycgaW4gc291cmNlRGF0YSApIHtcbiAgICAgIGRhdGFbJ2Nvbm5lY3Rpb25fc3RyaW5nJ10gPSBzb3VyY2VEYXRhWydjb25uZWN0aW9uX3N0cmluZyddXG4gICAgICBkYXRhWydxdWVyeSddID0gc291cmNlRGF0YVsncXVlcnknXVxuICAgICAgX3JlcXVlc3QoJ1BPU1QnLCAnL3NvdXJjZXMvJywge2pzb246IGRhdGF9LCBjYik7XG4gICAgfVxuICAgIFxuICAgIGVsc2VcbiAgICAgIGNiKCd1cmwgb3IgY29ubmVjdGlvbl9zdHJpbmcgaXMgcmVxdWlyZWQnKTtcbiAgfSxcblxuXG4gIGdldFNvdXJjZXM6IGZ1bmN0aW9uKGNiKSB7XG4gICAgX3JlcXVlc3QoJ0dFVCcsICcvc291cmNlcy8nLCB7fSwgY2IpO1xuICB9LFxuXG5cbiAgZ2V0U291cmNlOiBmdW5jdGlvbihzb3VyY2VJZCwgY2IpIHtcbiAgICBfcmVxdWVzdCgnR0VUJywgJy9zb3VyY2VzLycrc291cmNlSWQrJy8nLCB7fSwgY2IpO1xuICB9LFxuXG5cbiAgZ2V0SW5zaWdodHM6IGZ1bmN0aW9uKHNvdXJjZUlkLCBwYXJhbXMsIGNiKSB7XG4gICAgcGFyYW1zID0gcGFyYW1zIHx8IHt9O1xuICAgIHZhciBwYXlsb2FkID0geydzb3VyY2UnOiBzb3VyY2VJZH07XG5cbiAgICBbJ2NvbHVtbnMnLCAnaW5zaWdodF90eXBlcycsICdpbnNpZ2h0X2FjdGlvbnMnXS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgICAgaWYoa2V5IGluIHBhcmFtcylcbiAgICAgICAgcGF5bG9hZFtrZXldID0gcGFyYW1zW2tleV0uam9pbignLCcpXG4gICAgfSk7XG5cbiAgICBpZignZmlsdGVycycgaW4gcGFyYW1zKVxuICAgICAgcGF5bG9hZFsnZmlsdGVycyddID0gcGFja0ZpbHRlcnMocGFyYW1zWydmaWx0ZXJzJ10pXG5cbiAgICBpZignZnVsbCcgaW4gcGFyYW1zKVxuICAgICAgcGF5bG9hZFsnZnVsbCddID0gcGFyYW1zWydmdWxsJ11cblxuICAgIGlmKCdzaW5nbGUnIGluIHBhcmFtcykge1xuICAgICAgcGF5bG9hZFsnc2luZ2xlJ10gPSBwYXJhbXNbJ3NpbmdsZSddO1xuICAgICAgcGF5bG9hZCA9IGFzc2lnbkN1c3RvbWl6YXRpb25zKHBheWxvYWQsIHBhcmFtcyk7XG4gICAgfVxuXG4gICAgX3JlcXVlc3QoJ0dFVCcsICcvaW5zaWdodHMvJywge3FzOiBwYXlsb2FkfSwgY2IpO1xuICB9LFxuXG5cbiAgZ2V0SW5zaWdodDogZnVuY3Rpb24oaW5zaWdodElkLCBwYXJhbXMsIGNiKSB7XG4gICAgdmFyIHBheWxvYWQgPSB7fTtcbiAgICBpZignZmlsdGVycycgaW4gcGFyYW1zKVxuICAgICAgcGF5bG9hZFsnZmlsdGVycyddID0gcGFja0ZpbHRlcnMocGFyYW1zWydmaWx0ZXJzJ10pO1xuXG4gICAgWydmdWxsJywgJ2hlaWdodCcsICd3aWR0aCddLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICBpZihrZXkgaW4gcGFyYW1zKVxuICAgICAgICBwYXlsb2FkW2tleV0gPSBwYXJhbXNba2V5XTtcbiAgICB9KTtcblxuICAgIHBheWxvYWQgPSBhc3NpZ25DdXN0b21pemF0aW9ucyhwYXlsb2FkLCBwYXJhbXMpO1xuICAgIFxuICAgIF9yZXF1ZXN0KCdHRVQnLCAnL2luc2lnaHRzLycgKyBpbnNpZ2h0SWQgKyAnLycsIHtxczogcGF5bG9hZH0sIGNiKTtcbiAgfSxcblxuXG4gIGN1c3RvbWl6ZUluc2lnaHQ6IGZ1bmN0aW9uKGluc2lnaHRJZCwgcGFyYW1zLCBpbnNpZ2h0RGF0YSwgY2IpIHtcbiAgICB2YXIgZGF0YSA9IGFzc2lnbkN1c3RvbWl6YXRpb25zKHt9LCBpbnNpZ2h0RGF0YSk7XG4gICAgaWYoJ2ZpbHRlcnMnIGluIHBhcmFtcylcbiAgICAgIGRhdGFbJ2ZpbHRlcnMnXSA9IHBhY2tGaWx0ZXJzKHBhcmFtc1snZmlsdGVycyddKVxuXG4gICAgX3JlcXVlc3QoJ1BVVCcsICcvaW5zaWdodHMvJyArIGluc2lnaHRJZCArICcvJywge2pzb246IGRhdGF9LCBjYik7XG4gIH0sXG5cbiAgc2V0VG9rZW46IGZ1bmN0aW9uKHRva2VuKSB7XG4gICAgdGhpcy50b2tlbiA9IHRva2VuO1xuICB9LFxuXG4gIHNldFVSTDogZnVuY3Rpb24oYXBpVXJsKSB7XG4gICAgdGhpcy5hcGlVcmwgPSBhcGlVcmw7XG4gIH1cbn1cblxud2luZG93LnBvcGlseSA9IHBvcGlseTtcbm1vZHVsZS5leHBvcnRzID0gcG9waWx5O1xuXG59LHtcImJyb3dzZXItcmVxdWVzdFwiOjF9XX0se30sWzJdKVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpOTJZWEl2ZDNkM0wzQnZjR2xzZVM5d2IzQnBiSGt0YW5NdmJtOWtaVjl0YjJSMWJHVnpMMmQxYkhBdFluSnZkM05sY21sbWVTOXViMlJsWDIxdlpIVnNaWE12WW5KdmQzTmxjaTF3WVdOckwxOXdjbVZzZFdSbExtcHpJaXdpTDNaaGNpOTNkM2N2Y0c5d2FXeDVMM0J2Y0dsc2VTMXFjeTl1YjJSbFgyMXZaSFZzWlhNdlluSnZkM05sY2kxeVpYRjFaWE4wTDJsdVpHVjRMbXB6SWl3aUwzWmhjaTkzZDNjdmNHOXdhV3g1TDNCdmNHbHNlUzFxY3k5emNtTXZabUZyWlY4NE1EaGtaRGRpT0M1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHRCUTBGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVNNVpVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRWlMQ0ptYVd4bElqb2laMlZ1WlhKaGRHVmtMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlobWRXNWpkR2x2YmlCbEtIUXNiaXh5S1h0bWRXNWpkR2x2YmlCektHOHNkU2w3YVdZb0lXNWJiMTBwZTJsbUtDRjBXMjlkS1h0MllYSWdZVDEwZVhCbGIyWWdjbVZ4ZFdseVpUMDlYQ0ptZFc1amRHbHZibHdpSmlaeVpYRjFhWEpsTzJsbUtDRjFKaVpoS1hKbGRIVnliaUJoS0c4c0lUQXBPMmxtS0drcGNtVjBkWEp1SUdrb2J5d2hNQ2s3ZEdoeWIzY2dibVYzSUVWeWNtOXlLRndpUTJGdWJtOTBJR1pwYm1RZ2JXOWtkV3hsSUNkY0lpdHZLMXdpSjF3aUtYMTJZWElnWmoxdVcyOWRQWHRsZUhCdmNuUnpPbnQ5ZlR0MFcyOWRXekJkTG1OaGJHd29aaTVsZUhCdmNuUnpMR1oxYm1OMGFXOXVLR1VwZTNaaGNpQnVQWFJiYjExYk1WMWJaVjA3Y21WMGRYSnVJSE1vYmo5dU9tVXBmU3htTEdZdVpYaHdiM0owY3l4bExIUXNiaXh5S1gxeVpYUjFjbTRnYmx0dlhTNWxlSEJ2Y25SemZYWmhjaUJwUFhSNWNHVnZaaUJ5WlhGMWFYSmxQVDFjSW1aMWJtTjBhVzl1WENJbUpuSmxjWFZwY21VN1ptOXlLSFpoY2lCdlBUQTdienh5TG14bGJtZDBhRHR2S3lzcGN5aHlXMjlkS1R0eVpYUjFjbTRnYzMwcElpd2lMeThnUW5KdmQzTmxjaUJTWlhGMVpYTjBYRzR2TDF4dUx5OGdUR2xqWlc1elpXUWdkVzVrWlhJZ2RHaGxJRUZ3WVdOb1pTQk1hV05sYm5ObExDQldaWEp6YVc5dUlESXVNQ0FvZEdobElGd2lUR2xqWlc1elpWd2lLVHRjYmk4dklIbHZkU0J0WVhrZ2JtOTBJSFZ6WlNCMGFHbHpJR1pwYkdVZ1pYaGpaWEIwSUdsdUlHTnZiWEJzYVdGdVkyVWdkMmwwYUNCMGFHVWdUR2xqWlc1elpTNWNiaTh2SUZsdmRTQnRZWGtnYjJKMFlXbHVJR0VnWTI5d2VTQnZaaUIwYUdVZ1RHbGpaVzV6WlNCaGRGeHVMeTljYmk4dklDQWdJQ0JvZEhSd09pOHZkM2QzTG1Gd1lXTm9aUzV2Y21jdmJHbGpaVzV6WlhNdlRFbERSVTVUUlMweUxqQmNiaTh2WEc0dkx5QlZibXhsYzNNZ2NtVnhkV2x5WldRZ1lua2dZWEJ3YkdsallXSnNaU0JzWVhjZ2IzSWdZV2R5WldWa0lIUnZJR2x1SUhkeWFYUnBibWNzSUhOdlpuUjNZWEpsWEc0dkx5QmthWE4wY21saWRYUmxaQ0IxYm1SbGNpQjBhR1VnVEdsalpXNXpaU0JwY3lCa2FYTjBjbWxpZFhSbFpDQnZiaUJoYmlCY0lrRlRJRWxUWENJZ1FrRlRTVk1zWEc0dkx5QlhTVlJJVDFWVUlGZEJVbEpCVGxSSlJWTWdUMUlnUTA5T1JFbFVTVTlPVXlCUFJpQkJUbGtnUzBsT1JDd2daV2wwYUdWeUlHVjRjSEpsYzNNZ2IzSWdhVzF3YkdsbFpDNWNiaTh2SUZObFpTQjBhR1VnVEdsalpXNXpaU0JtYjNJZ2RHaGxJSE53WldOcFptbGpJR3hoYm1kMVlXZGxJR2R2ZG1WeWJtbHVaeUJ3WlhKdGFYTnphVzl1Y3lCaGJtUmNiaTh2SUd4cGJXbDBZWFJwYjI1eklIVnVaR1Z5SUhSb1pTQk1hV05sYm5ObExseHVYRzR2THlCVlRVUWdTRVZCUkVWU0lGTlVRVkpVSUZ4dUtHWjFibU4wYVc5dUlDaHliMjkwTENCbVlXTjBiM0o1S1NCN1hHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCa1pXWnBibVVnUFQwOUlDZG1kVzVqZEdsdmJpY2dKaVlnWkdWbWFXNWxMbUZ0WkNrZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJCVFVRdUlGSmxaMmx6ZEdWeUlHRnpJR0Z1SUdGdWIyNTViVzkxY3lCdGIyUjFiR1V1WEc0Z0lDQWdJQ0FnSUdSbFptbHVaU2hiWFN3Z1ptRmpkRzl5ZVNrN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNoMGVYQmxiMllnWlhod2IzSjBjeUE5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lDQWdMeThnVG05a1pTNGdSRzlsY3lCdWIzUWdkMjl5YXlCM2FYUm9JSE4wY21samRDQkRiMjF0YjI1S1V5d2dZblYwWEc0Z0lDQWdJQ0FnSUM4dklHOXViSGtnUTI5dGJXOXVTbE10YkdsclpTQmxiblpwY205dFpXNTBjeUIwYUdGMElITjFjSEJ2Y25RZ2JXOWtkV3hsTG1WNGNHOXlkSE1zWEc0Z0lDQWdJQ0FnSUM4dklHeHBhMlVnVG05a1pTNWNiaUFnSUNBZ0lDQWdiVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1ZV04wYjNKNUtDazdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0x5OGdRbkp2ZDNObGNpQm5iRzlpWVd4eklDaHliMjkwSUdseklIZHBibVJ2ZHlsY2JpQWdJQ0FnSUNBZ2NtOXZkQzV5WlhSMWNtNUZlSEJ2Y25SeklEMGdabUZqZEc5eWVTZ3BPMXh1SUNCOVhHNTlLSFJvYVhNc0lHWjFibU4wYVc5dUlDZ3BJSHRjYmk4dklGVk5SQ0JJUlVGRVJWSWdSVTVFWEc1Y2JuWmhjaUJZU0ZJZ1BTQllUVXhJZEhSd1VtVnhkV1Z6ZEZ4dWFXWWdLQ0ZZU0ZJcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnbmJXbHpjMmx1WnlCWVRVeElkSFJ3VW1WeGRXVnpkQ2NwWEc1eVpYRjFaWE4wTG14dlp5QTlJSHRjYmlBZ0ozUnlZV05sSnpvZ2JtOXZjQ3dnSjJSbFluVm5Kem9nYm05dmNDd2dKMmx1Wm04bk9pQnViMjl3TENBbmQyRnliaWM2SUc1dmIzQXNJQ2RsY25KdmNpYzZJRzV2YjNCY2JuMWNibHh1ZG1GeUlFUkZSa0ZWVEZSZlZFbE5SVTlWVkNBOUlETWdLaUEyTUNBcUlERXdNREFnTHk4Z015QnRhVzUxZEdWelhHNWNiaTh2WEc0dkx5QnlaWEYxWlhOMFhHNHZMMXh1WEc1bWRXNWpkR2x2YmlCeVpYRjFaWE4wS0c5d2RHbHZibk1zSUdOaGJHeGlZV05yS1NCN1hHNGdJQzh2SUZSb1pTQmxiblJ5ZVMxd2IybHVkQ0IwYnlCMGFHVWdRVkJKT2lCd2NtVndJSFJvWlNCdmNIUnBiMjV6SUc5aWFtVmpkQ0JoYm1RZ2NHRnpjeUIwYUdVZ2NtVmhiQ0IzYjNKcklIUnZJSEoxYmw5NGFISXVYRzRnSUdsbUtIUjVjR1Z2WmlCallXeHNZbUZqYXlBaFBUMGdKMloxYm1OMGFXOXVKeWxjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0owSmhaQ0JqWVd4c1ltRmpheUJuYVhabGJqb2dKeUFySUdOaGJHeGlZV05yS1Z4dVhHNGdJR2xtS0NGdmNIUnBiMjV6S1Z4dUlDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ25UbThnYjNCMGFXOXVjeUJuYVhabGJpY3BYRzVjYmlBZ2RtRnlJRzl3ZEdsdmJuTmZiMjVTWlhOd2IyNXpaU0E5SUc5d2RHbHZibk11YjI1U1pYTndiMjV6WlRzZ0x5OGdVMkYyWlNCMGFHbHpJR1p2Y2lCc1lYUmxjaTVjYmx4dUlDQnBaaWgwZVhCbGIyWWdiM0IwYVc5dWN5QTlQVDBnSjNOMGNtbHVaeWNwWEc0Z0lDQWdiM0IwYVc5dWN5QTlJSHNuZFhKcEp6cHZjSFJwYjI1emZUdGNiaUFnWld4elpWeHVJQ0FnSUc5d2RHbHZibk1nUFNCS1UwOU9MbkJoY25ObEtFcFRUMDR1YzNSeWFXNW5hV1o1S0c5d2RHbHZibk1wS1RzZ0x5OGdWWE5sSUdFZ1pIVndiR2xqWVhSbElHWnZjaUJ0ZFhSaGRHbHVaeTVjYmx4dUlDQnZjSFJwYjI1ekxtOXVVbVZ6Y0c5dWMyVWdQU0J2Y0hScGIyNXpYMjl1VW1WemNHOXVjMlVnTHk4Z1FXNWtJSEIxZENCcGRDQmlZV05yTGx4dVhHNGdJR2xtSUNodmNIUnBiMjV6TG5abGNtSnZjMlVwSUhKbGNYVmxjM1F1Ykc5bklEMGdaMlYwVEc5bloyVnlLQ2s3WEc1Y2JpQWdhV1lvYjNCMGFXOXVjeTUxY213cElIdGNiaUFnSUNCdmNIUnBiMjV6TG5WeWFTQTlJRzl3ZEdsdmJuTXVkWEpzTzF4dUlDQWdJR1JsYkdWMFpTQnZjSFJwYjI1ekxuVnliRHRjYmlBZ2ZWeHVYRzRnSUdsbUtDRnZjSFJwYjI1ekxuVnlhU0FtSmlCdmNIUnBiMjV6TG5WeWFTQWhQVDBnWENKY0lpbGNiaUFnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvWENKdmNIUnBiMjV6TG5WeWFTQnBjeUJoSUhKbGNYVnBjbVZrSUdGeVozVnRaVzUwWENJcE8xeHVYRzRnSUdsbUtIUjVjR1Z2WmlCdmNIUnBiMjV6TG5WeWFTQWhQU0JjSW5OMGNtbHVaMXdpS1Z4dUlDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGNJbTl3ZEdsdmJuTXVkWEpwSUcxMWMzUWdZbVVnWVNCemRISnBibWRjSWlrN1hHNWNiaUFnZG1GeUlIVnVjM1Z3Y0c5eWRHVmtYMjl3ZEdsdmJuTWdQU0JiSjNCeWIzaDVKeXdnSjE5eVpXUnBjbVZqZEhOR2IyeHNiM2RsWkNjc0lDZHRZWGhTWldScGNtVmpkSE1uTENBblptOXNiRzkzVW1Wa2FYSmxZM1FuWFZ4dUlDQm1iM0lnS0haaGNpQnBJRDBnTURzZ2FTQThJSFZ1YzNWd2NHOXlkR1ZrWDI5d2RHbHZibk11YkdWdVozUm9PeUJwS3lzcFhHNGdJQ0FnYVdZb2IzQjBhVzl1YzFzZ2RXNXpkWEJ3YjNKMFpXUmZiM0IwYVc5dWMxdHBYU0JkS1Z4dUlDQWdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLRndpYjNCMGFXOXVjeTVjSWlBcklIVnVjM1Z3Y0c5eWRHVmtYMjl3ZEdsdmJuTmJhVjBnS3lCY0lpQnBjeUJ1YjNRZ2MzVndjRzl5ZEdWa1hDSXBYRzVjYmlBZ2IzQjBhVzl1Y3k1allXeHNZbUZqYXlBOUlHTmhiR3hpWVdOclhHNGdJRzl3ZEdsdmJuTXViV1YwYUc5a0lEMGdiM0IwYVc5dWN5NXRaWFJvYjJRZ2ZId2dKMGRGVkNjN1hHNGdJRzl3ZEdsdmJuTXVhR1ZoWkdWeWN5QTlJRzl3ZEdsdmJuTXVhR1ZoWkdWeWN5QjhmQ0I3ZlR0Y2JpQWdiM0IwYVc5dWN5NWliMlI1SUNBZ0lEMGdiM0IwYVc5dWN5NWliMlI1SUh4OElHNTFiR3hjYmlBZ2IzQjBhVzl1Y3k1MGFXMWxiM1YwSUQwZ2IzQjBhVzl1Y3k1MGFXMWxiM1YwSUh4OElISmxjWFZsYzNRdVJFVkdRVlZNVkY5VVNVMUZUMVZVWEc1Y2JpQWdhV1lvYjNCMGFXOXVjeTVvWldGa1pYSnpMbWh2YzNRcFhHNGdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLRndpVDNCMGFXOXVjeTVvWldGa1pYSnpMbWh2YzNRZ2FYTWdibTkwSUhOMWNIQnZjblJsWkZ3aUtUdGNibHh1SUNCcFppaHZjSFJwYjI1ekxtcHpiMjRwSUh0Y2JpQWdJQ0J2Y0hScGIyNXpMbWhsWVdSbGNuTXVZV05qWlhCMElEMGdiM0IwYVc5dWN5NW9aV0ZrWlhKekxtRmpZMlZ3ZENCOGZDQW5ZWEJ3YkdsallYUnBiMjR2YW5OdmJpZGNiaUFnSUNCcFppaHZjSFJwYjI1ekxtMWxkR2h2WkNBaFBUMGdKMGRGVkNjcFhHNGdJQ0FnSUNCdmNIUnBiMjV6TG1obFlXUmxjbk5iSjJOdmJuUmxiblF0ZEhsd1pTZGRJRDBnSjJGd2NHeHBZMkYwYVc5dUwycHpiMjRuWEc1Y2JpQWdJQ0JwWmloMGVYQmxiMllnYjNCMGFXOXVjeTVxYzI5dUlDRTlQU0FuWW05dmJHVmhiaWNwWEc0Z0lDQWdJQ0J2Y0hScGIyNXpMbUp2WkhrZ1BTQktVMDlPTG5OMGNtbHVaMmxtZVNodmNIUnBiMjV6TG1wemIyNHBYRzRnSUNBZ1pXeHpaU0JwWmloMGVYQmxiMllnYjNCMGFXOXVjeTVpYjJSNUlDRTlQU0FuYzNSeWFXNW5KeWxjYmlBZ0lDQWdJRzl3ZEdsdmJuTXVZbTlrZVNBOUlFcFRUMDR1YzNSeWFXNW5hV1o1S0c5d2RHbHZibk11WW05a2VTbGNiaUFnZlZ4dUlDQmNiaUFnTHk5Q1JVZEpUaUJSVXlCSVlXTnJYRzRnSUhaaGNpQnpaWEpwWVd4cGVtVWdQU0JtZFc1amRHbHZiaWh2WW1vcElIdGNiaUFnSUNCMllYSWdjM1J5SUQwZ1cxMDdYRzRnSUNBZ1ptOXlLSFpoY2lCd0lHbHVJRzlpYWlsY2JpQWdJQ0FnSUdsbUlDaHZZbW91YUdGelQzZHVVSEp2Y0dWeWRIa29jQ2twSUh0Y2JpQWdJQ0FnSUNBZ2MzUnlMbkIxYzJnb1pXNWpiMlJsVlZKSlEyOXRjRzl1Wlc1MEtIQXBJQ3NnWENJOVhDSWdLeUJsYm1OdlpHVlZVa2xEYjIxd2IyNWxiblFvYjJKcVczQmRLU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlITjBjaTVxYjJsdUtGd2lKbHdpS1R0Y2JpQWdmVnh1SUNCY2JpQWdhV1lvYjNCMGFXOXVjeTV4Y3lsN1hHNGdJQ0FnZG1GeUlIRnpJRDBnS0hSNWNHVnZaaUJ2Y0hScGIyNXpMbkZ6SUQwOUlDZHpkSEpwYm1jbktUOGdiM0IwYVc5dWN5NXhjeUE2SUhObGNtbGhiR2w2WlNodmNIUnBiMjV6TG5GektUdGNiaUFnSUNCcFppaHZjSFJwYjI1ekxuVnlhUzVwYm1SbGVFOW1LQ2MvSnlrZ0lUMDlJQzB4S1hzZ0x5OXVieUJuWlhRZ2NHRnlZVzF6WEc0Z0lDQWdJQ0FnSUc5d2RHbHZibk11ZFhKcElEMGdiM0IwYVc5dWN5NTFjbWtySnlZbkszRnpPMXh1SUNBZ0lIMWxiSE5sZXlBdkwyVjRhWE4wYVc1bklHZGxkQ0J3WVhKaGJYTmNiaUFnSUNBZ0lDQWdiM0IwYVc5dWN5NTFjbWtnUFNCdmNIUnBiMjV6TG5WeWFTc25QeWNyY1hNN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM4dlJVNUVJRkZUSUVoaFkydGNiaUFnWEc0Z0lDOHZRa1ZIU1U0Z1JrOVNUU0JJWVdOclhHNGdJSFpoY2lCdGRXeDBhWEJoY25RZ1BTQm1kVzVqZEdsdmJpaHZZbW9wSUh0Y2JpQWdJQ0F2TDNSdlpHODZJSE4xY0hCdmNuUWdabWxzWlNCMGVYQmxJQ2gxYzJWbWRXdy9LVnh1SUNBZ0lIWmhjaUJ5WlhOMWJIUWdQU0I3ZlR0Y2JpQWdJQ0J5WlhOMWJIUXVZbTkxYm1SeWVTQTlJQ2N0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdEp5dE5ZWFJvTG1ac2IyOXlLRTFoZEdndWNtRnVaRzl0S0NrcU1UQXdNREF3TURBd01DazdYRzRnSUNBZ2RtRnlJR3hwYm1WeklEMGdXMTA3WEc0Z0lDQWdabTl5S0haaGNpQndJR2x1SUc5aWFpbDdYRzRnSUNBZ0lDQWdJR2xtSUNodlltb3VhR0Z6VDNkdVVISnZjR1Z5ZEhrb2NDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeHBibVZ6TG5CMWMyZ29YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKeTB0Snl0eVpYTjFiSFF1WW05MWJtUnllU3RjSWx4Y2Jsd2lLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2REYjI1MFpXNTBMVVJwYzNCdmMybDBhVzl1T2lCbWIzSnRMV1JoZEdFN0lHNWhiV1U5WENJbkszQXJKMXdpSnl0Y0lseGNibHdpSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVhGeHVYQ0lyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVczQmRLMXdpWEZ4dVhDSmNiaUFnSUNBZ0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnYkdsdVpYTXVjSFZ6YUNnZ0p5MHRKeXR5WlhOMWJIUXVZbTkxYm1SeWVTc25MUzBuSUNrN1hHNGdJQ0FnY21WemRXeDBMbUp2WkhrZ1BTQnNhVzVsY3k1cWIybHVLQ2NuS1R0Y2JpQWdJQ0J5WlhOMWJIUXViR1Z1WjNSb0lEMGdjbVZ6ZFd4MExtSnZaSGt1YkdWdVozUm9PMXh1SUNBZ0lISmxjM1ZzZEM1MGVYQmxJRDBnSjIxMWJIUnBjR0Z5ZEM5bWIzSnRMV1JoZEdFN0lHSnZkVzVrWVhKNVBTY3JjbVZ6ZFd4MExtSnZkVzVrY25rN1hHNGdJQ0FnY21WMGRYSnVJSEpsYzNWc2REdGNiaUFnZlZ4dUlDQmNiaUFnYVdZb2IzQjBhVzl1Y3k1bWIzSnRLWHRjYmlBZ0lDQnBaaWgwZVhCbGIyWWdiM0IwYVc5dWN5NW1iM0p0SUQwOUlDZHpkSEpwYm1jbktTQjBhSEp2ZHlnblptOXliU0J1WVcxbElIVnVjM1Z3Y0c5eWRHVmtKeWs3WEc0Z0lDQWdhV1lvYjNCMGFXOXVjeTV0WlhSb2IyUWdQVDA5SUNkUVQxTlVKeWw3WEc0Z0lDQWdJQ0FnSUhaaGNpQmxibU52WkdsdVp5QTlJQ2h2Y0hScGIyNXpMbVZ1WTI5a2FXNW5JSHg4SUNkaGNIQnNhV05oZEdsdmJpOTRMWGQzZHkxbWIzSnRMWFZ5YkdWdVkyOWtaV1FuS1M1MGIweHZkMlZ5UTJGelpTZ3BPMXh1SUNBZ0lDQWdJQ0J2Y0hScGIyNXpMbWhsWVdSbGNuTmJKMk52Ym5SbGJuUXRkSGx3WlNkZElEMGdaVzVqYjJScGJtYzdYRzRnSUNBZ0lDQWdJSE4zYVhSamFDaGxibU52WkdsdVp5bDdYRzRnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ2RoY0hCc2FXTmhkR2x2Ymk5NExYZDNkeTFtYjNKdExYVnliR1Z1WTI5a1pXUW5PbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl3ZEdsdmJuTXVZbTlrZVNBOUlITmxjbWxoYkdsNlpTaHZjSFJwYjI1ekxtWnZjbTBwTG5KbGNHeGhZMlVvTHlVeU1DOW5MQ0JjSWl0Y0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDZHRkV3gwYVhCaGNuUXZabTl5YlMxa1lYUmhKenBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JYVnNkR2tnUFNCdGRXeDBhWEJoY25Rb2IzQjBhVzl1Y3k1bWIzSnRLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2TDI5d2RHbHZibk11YUdWaFpHVnljMXNuWTI5dWRHVnVkQzFzWlc1bmRHZ25YU0E5SUcxMWJIUnBMbXhsYm1kMGFEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZjSFJwYjI1ekxtSnZaSGtnUFNCdGRXeDBhUzVpYjJSNU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NdWFHVmhaR1Z5YzFzblkyOXVkR1Z1ZEMxMGVYQmxKMTBnUFNCdGRXeDBhUzUwZVhCbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2RDQTZJSFJvY205M0lHNWxkeUJGY25KdmNpZ25kVzV6ZFhCd2IzSjBaV1FnWlc1amIyUnBibWM2Snl0bGJtTnZaR2x1WnlrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmlBZ0x5OUZUa1FnUms5U1RTQklZV05yWEc1Y2JpQWdMeThnU1dZZ2IyNVNaWE53YjI1elpTQnBjeUJpYjI5c1pXRnVJSFJ5ZFdVc0lHTmhiR3dnWW1GamF5QnBiVzFsWkdsaGRHVnNlU0IzYUdWdUlIUm9aU0J5WlhOd2IyNXpaU0JwY3lCcmJtOTNiaXhjYmlBZ0x5OGdibTkwSUhkb1pXNGdkR2hsSUdaMWJHd2djbVZ4ZFdWemRDQnBjeUJqYjIxd2JHVjBaUzVjYmlBZ2IzQjBhVzl1Y3k1dmJsSmxjM0J2Ym5ObElEMGdiM0IwYVc5dWN5NXZibEpsYzNCdmJuTmxJSHg4SUc1dmIzQmNiaUFnYVdZb2IzQjBhVzl1Y3k1dmJsSmxjM0J2Ym5ObElEMDlQU0IwY25WbEtTQjdYRzRnSUNBZ2IzQjBhVzl1Y3k1dmJsSmxjM0J2Ym5ObElEMGdZMkZzYkdKaFkydGNiaUFnSUNCdmNIUnBiMjV6TG1OaGJHeGlZV05ySUQwZ2JtOXZjRnh1SUNCOVhHNWNiaUFnTHk4Z1dGaFlJRUp5YjNkelpYSnpJR1J2SUc1dmRDQnNhV3RsSUhSb2FYTXVYRzRnSUM4dmFXWW9iM0IwYVc5dWN5NWliMlI1S1Z4dUlDQXZMeUFnYjNCMGFXOXVjeTVvWldGa1pYSnpXeWRqYjI1MFpXNTBMV3hsYm1kMGFDZGRJRDBnYjNCMGFXOXVjeTVpYjJSNUxteGxibWQwYUR0Y2JseHVJQ0F2THlCSVZGUlFJR0poYzJsaklHRjFkR2hsYm5ScFkyRjBhVzl1WEc0Z0lHbG1LQ0Z2Y0hScGIyNXpMbWhsWVdSbGNuTXVZWFYwYUc5eWFYcGhkR2x2YmlBbUppQnZjSFJwYjI1ekxtRjFkR2dwWEc0Z0lDQWdiM0IwYVc5dWN5NW9aV0ZrWlhKekxtRjFkR2h2Y21sNllYUnBiMjRnUFNBblFtRnphV01nSnlBcklHSTJORjlsYm1Nb2IzQjBhVzl1Y3k1aGRYUm9MblZ6WlhKdVlXMWxJQ3NnSnpvbklDc2diM0IwYVc5dWN5NWhkWFJvTG5CaGMzTjNiM0prS1R0Y2JseHVJQ0J5WlhSMWNtNGdjblZ1WDNob2NpaHZjSFJwYjI1ektWeHVmVnh1WEc1MllYSWdjbVZ4WDNObGNTQTlJREJjYm1aMWJtTjBhVzl1SUhKMWJsOTRhSElvYjNCMGFXOXVjeWtnZTF4dUlDQjJZWElnZUdoeUlEMGdibVYzSUZoSVVseHVJQ0FnSUN3Z2RHbHRaV1JmYjNWMElEMGdabUZzYzJWY2JpQWdJQ0FzSUdselgyTnZjbk1nUFNCcGMxOWpjbTl6YzBSdmJXRnBiaWh2Y0hScGIyNXpMblZ5YVNsY2JpQWdJQ0FzSUhOMWNIQnZjblJ6WDJOdmNuTWdQU0FvSjNkcGRHaERjbVZrWlc1MGFXRnNjeWNnYVc0Z2VHaHlLVnh1WEc0Z0lISmxjVjl6WlhFZ0t6MGdNVnh1SUNCNGFISXVjMlZ4WDJsa0lEMGdjbVZ4WDNObGNWeHVJQ0I0YUhJdWFXUWdQU0J5WlhGZmMyVnhJQ3NnSnpvZ0p5QXJJRzl3ZEdsdmJuTXViV1YwYUc5a0lDc2dKeUFuSUNzZ2IzQjBhVzl1Y3k1MWNtbGNiaUFnZUdoeUxsOXBaQ0E5SUhob2NpNXBaQ0F2THlCSklHdHViM2NnU1NCM2FXeHNJSFI1Y0dVZ1hDSmZhV1JjSWlCbWNtOXRJR2hoWW1sMElHRnNiQ0IwYUdVZ2RHbHRaUzVjYmx4dUlDQnBaaWhwYzE5amIzSnpJQ1ltSUNGemRYQndiM0owYzE5amIzSnpLU0I3WEc0Z0lDQWdkbUZ5SUdOdmNuTmZaWEp5SUQwZ2JtVjNJRVZ5Y205eUtDZENjbTkzYzJWeUlHUnZaWE1nYm05MElITjFjSEJ2Y25RZ1kzSnZjM010YjNKcFoybHVJSEpsY1hWbGMzUTZJQ2NnS3lCdmNIUnBiMjV6TG5WeWFTbGNiaUFnSUNCamIzSnpYMlZ5Y2k1amIzSnpJRDBnSjNWdWMzVndjRzl5ZEdWa0oxeHVJQ0FnSUhKbGRIVnliaUJ2Y0hScGIyNXpMbU5oYkd4aVlXTnJLR052Y25OZlpYSnlMQ0I0YUhJcFhHNGdJSDFjYmx4dUlDQjRhSEl1ZEdsdFpXOTFkRlJwYldWeUlEMGdjMlYwVkdsdFpXOTFkQ2gwYjI5ZmJHRjBaU3dnYjNCMGFXOXVjeTUwYVcxbGIzVjBLVnh1SUNCbWRXNWpkR2x2YmlCMGIyOWZiR0YwWlNncElIdGNiaUFnSUNCMGFXMWxaRjl2ZFhRZ1BTQjBjblZsWEc0Z0lDQWdkbUZ5SUdWeUlEMGdibVYzSUVWeWNtOXlLQ2RGVkVsTlJVUlBWVlFuS1Z4dUlDQWdJR1Z5TG1OdlpHVWdQU0FuUlZSSlRVVkVUMVZVSjF4dUlDQWdJR1Z5TG1SMWNtRjBhVzl1SUQwZ2IzQjBhVzl1Y3k1MGFXMWxiM1YwWEc1Y2JpQWdJQ0J5WlhGMVpYTjBMbXh2Wnk1bGNuSnZjaWduVkdsdFpXOTFkQ2NzSUhzZ0oybGtKenA0YUhJdVgybGtMQ0FuYldsc2JHbHpaV052Ym1Sekp6cHZjSFJwYjI1ekxuUnBiV1Z2ZFhRZ2ZTbGNiaUFnSUNCeVpYUjFjbTRnYjNCMGFXOXVjeTVqWVd4c1ltRmpheWhsY2l3Z2VHaHlLVnh1SUNCOVhHNWNiaUFnTHk4Z1UyOXRaU0J6ZEdGMFpYTWdZMkZ1SUdKbElITnJhWEJ3WldRZ2IzWmxjaXdnYzI4Z2NtVnRaVzFpWlhJZ2QyaGhkQ0JwY3lCemRHbHNiQ0JwYm1OdmJYQnNaWFJsTGx4dUlDQjJZWElnWkdsa0lEMGdleWR5WlhOd2IyNXpaU2M2Wm1Gc2MyVXNJQ2RzYjJGa2FXNW5KenBtWVd4elpTd2dKMlZ1WkNjNlptRnNjMlY5WEc1Y2JpQWdlR2h5TG05dWNtVmhaSGx6ZEdGMFpXTm9ZVzVuWlNBOUlHOXVYM04wWVhSbFgyTm9ZVzVuWlZ4dUlDQjRhSEl1YjNCbGJpaHZjSFJwYjI1ekxtMWxkR2h2WkN3Z2IzQjBhVzl1Y3k1MWNta3NJSFJ5ZFdVcElDOHZJR0Z6ZVc1amFISnZibTkxYzF4dUlDQnBaaWhwYzE5amIzSnpLVnh1SUNBZ0lIaG9jaTUzYVhSb1EzSmxaR1Z1ZEdsaGJITWdQU0FoSVNCdmNIUnBiMjV6TG5kcGRHaERjbVZrWlc1MGFXRnNjMXh1SUNCNGFISXVjMlZ1WkNodmNIUnBiMjV6TG1KdlpIa3BYRzRnSUhKbGRIVnliaUI0YUhKY2JseHVJQ0JtZFc1amRHbHZiaUJ2Ymw5emRHRjBaVjlqYUdGdVoyVW9aWFpsYm5RcElIdGNiaUFnSUNCcFppaDBhVzFsWkY5dmRYUXBYRzRnSUNBZ0lDQnlaWFIxY200Z2NtVnhkV1Z6ZEM1c2IyY3VaR1ZpZFdjb0owbG5ibTl5YVc1bklIUnBiV1ZrSUc5MWRDQnpkR0YwWlNCamFHRnVaMlVuTENCN0ozTjBZWFJsSnpwNGFISXVjbVZoWkhsVGRHRjBaU3dnSjJsa0p6cDRhSEl1YVdSOUtWeHVYRzRnSUNBZ2NtVnhkV1Z6ZEM1c2IyY3VaR1ZpZFdjb0oxTjBZWFJsSUdOb1lXNW5aU2NzSUhzbmMzUmhkR1VuT25ob2NpNXlaV0ZrZVZOMFlYUmxMQ0FuYVdRbk9uaG9jaTVwWkN3Z0ozUnBiV1ZrWDI5MWRDYzZkR2x0WldSZmIzVjBmU2xjYmx4dUlDQWdJR2xtS0hob2NpNXlaV0ZrZVZOMFlYUmxJRDA5UFNCWVNGSXVUMUJGVGtWRUtTQjdYRzRnSUNBZ0lDQnlaWEYxWlhOMExteHZaeTVrWldKMVp5Z25VbVZ4ZFdWemRDQnpkR0Z5ZEdWa0p5d2dleWRwWkNjNmVHaHlMbWxrZlNsY2JpQWdJQ0FnSUdadmNpQW9kbUZ5SUd0bGVTQnBiaUJ2Y0hScGIyNXpMbWhsWVdSbGNuTXBYRzRnSUNBZ0lDQWdJSGhvY2k1elpYUlNaWEYxWlhOMFNHVmhaR1Z5S0d0bGVTd2diM0IwYVc5dWN5NW9aV0ZrWlhKelcydGxlVjBwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdaV3h6WlNCcFppaDRhSEl1Y21WaFpIbFRkR0YwWlNBOVBUMGdXRWhTTGtoRlFVUkZVbE5mVWtWRFJVbFdSVVFwWEc0Z0lDQWdJQ0J2Ymw5eVpYTndiMjV6WlNncFhHNWNiaUFnSUNCbGJITmxJR2xtS0hob2NpNXlaV0ZrZVZOMFlYUmxJRDA5UFNCWVNGSXVURTlCUkVsT1J5a2dlMXh1SUNBZ0lDQWdiMjVmY21WemNHOXVjMlVvS1Z4dUlDQWdJQ0FnYjI1ZmJHOWhaR2x1WnlncFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWld4elpTQnBaaWg0YUhJdWNtVmhaSGxUZEdGMFpTQTlQVDBnV0VoU0xrUlBUa1VwSUh0Y2JpQWdJQ0FnSUc5dVgzSmxjM0J2Ym5ObEtDbGNiaUFnSUNBZ0lHOXVYMnh2WVdScGJtY29LVnh1SUNBZ0lDQWdiMjVmWlc1a0tDbGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQm1kVzVqZEdsdmJpQnZibDl5WlhOd2IyNXpaU2dwSUh0Y2JpQWdJQ0JwWmloa2FXUXVjbVZ6Y0c5dWMyVXBYRzRnSUNBZ0lDQnlaWFIxY201Y2JseHVJQ0FnSUdScFpDNXlaWE53YjI1elpTQTlJSFJ5ZFdWY2JpQWdJQ0J5WlhGMVpYTjBMbXh2Wnk1a1pXSjFaeWduUjI5MElISmxjM0J2Ym5ObEp5d2dleWRwWkNjNmVHaHlMbWxrTENBbmMzUmhkSFZ6SnpwNGFISXVjM1JoZEhWemZTbGNiaUFnSUNCamJHVmhjbFJwYldWdmRYUW9lR2h5TG5ScGJXVnZkWFJVYVcxbGNpbGNiaUFnSUNCNGFISXVjM1JoZEhWelEyOWtaU0E5SUhob2NpNXpkR0YwZFhNZ0x5OGdUbTlrWlNCeVpYRjFaWE4wSUdOdmJYQmhkR2xpYVd4cGRIbGNibHh1SUNBZ0lDOHZJRVJsZEdWamRDQm1ZV2xzWldRZ1EwOVNVeUJ5WlhGMVpYTjBjeTVjYmlBZ0lDQnBaaWhwYzE5amIzSnpJQ1ltSUhob2NpNXpkR0YwZFhORGIyUmxJRDA5SURBcElIdGNiaUFnSUNBZ0lIWmhjaUJqYjNKelgyVnljaUE5SUc1bGR5QkZjbkp2Y2lnblEwOVNVeUJ5WlhGMVpYTjBJSEpsYW1WamRHVmtPaUFuSUNzZ2IzQjBhVzl1Y3k1MWNta3BYRzRnSUNBZ0lDQmpiM0p6WDJWeWNpNWpiM0p6SUQwZ0ozSmxhbVZqZEdWa0oxeHVYRzRnSUNBZ0lDQXZMeUJFYnlCdWIzUWdjSEp2WTJWemN5QjBhR2x6SUhKbGNYVmxjM1FnWm5WeWRHaGxjaTVjYmlBZ0lDQWdJR1JwWkM1c2IyRmthVzVuSUQwZ2RISjFaVnh1SUNBZ0lDQWdaR2xrTG1WdVpDQTlJSFJ5ZFdWY2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUc5d2RHbHZibk11WTJGc2JHSmhZMnNvWTI5eWMxOWxjbklzSUhob2NpbGNiaUFnSUNCOVhHNWNiaUFnSUNCdmNIUnBiMjV6TG05dVVtVnpjRzl1YzJVb2JuVnNiQ3dnZUdoeUtWeHVJQ0I5WEc1Y2JpQWdablZ1WTNScGIyNGdiMjVmYkc5aFpHbHVaeWdwSUh0Y2JpQWdJQ0JwWmloa2FXUXViRzloWkdsdVp5bGNiaUFnSUNBZ0lISmxkSFZ5Ymx4dVhHNGdJQ0FnWkdsa0xteHZZV1JwYm1jZ1BTQjBjblZsWEc0Z0lDQWdjbVZ4ZFdWemRDNXNiMmN1WkdWaWRXY29KMUpsYzNCdmJuTmxJR0p2WkhrZ2JHOWhaR2x1Wnljc0lIc25hV1FuT25ob2NpNXBaSDBwWEc0Z0lDQWdMeThnVkU5RVR6b2dUV0Y1WW1VZ2MybHRkV3hoZEdVZ1hDSmtZWFJoWENJZ1pYWmxiblJ6SUdKNUlIZGhkR05vYVc1bklIaG9jaTV5WlhOd2IyNXpaVlJsZUhSY2JpQWdmVnh1WEc0Z0lHWjFibU4wYVc5dUlHOXVYMlZ1WkNncElIdGNiaUFnSUNCcFppaGthV1F1Wlc1a0tWeHVJQ0FnSUNBZ2NtVjBkWEp1WEc1Y2JpQWdJQ0JrYVdRdVpXNWtJRDBnZEhKMVpWeHVJQ0FnSUhKbGNYVmxjM1F1Ykc5bkxtUmxZblZuS0NkU1pYRjFaWE4wSUdSdmJtVW5MQ0I3SjJsa0p6cDRhSEl1YVdSOUtWeHVYRzRnSUNBZ2VHaHlMbUp2WkhrZ1BTQjRhSEl1Y21WemNHOXVjMlZVWlhoMFhHNGdJQ0FnYVdZb2IzQjBhVzl1Y3k1cWMyOXVLU0I3WEc0Z0lDQWdJQ0IwY25rZ0lDQWdJQ0FnSUhzZ2VHaHlMbUp2WkhrZ1BTQktVMDlPTG5CaGNuTmxLSGhvY2k1eVpYTndiMjV6WlZSbGVIUXBJSDFjYmlBZ0lDQWdJR05oZEdOb0lDaGxjaWtnZXlCeVpYUjFjbTRnYjNCMGFXOXVjeTVqWVd4c1ltRmpheWhsY2l3Z2VHaHlLU0FnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHOXdkR2x2Ym5NdVkyRnNiR0poWTJzb2JuVnNiQ3dnZUdoeUxDQjRhSEl1WW05a2VTbGNiaUFnZlZ4dVhHNTlJQzh2SUhKbGNYVmxjM1JjYmx4dWNtVnhkV1Z6ZEM1M2FYUm9RM0psWkdWdWRHbGhiSE1nUFNCbVlXeHpaVHRjYm5KbGNYVmxjM1F1UkVWR1FWVk1WRjlVU1UxRlQxVlVJRDBnUkVWR1FWVk1WRjlVU1UxRlQxVlVPMXh1WEc0dkwxeHVMeThnWkdWbVlYVnNkSE5jYmk4dlhHNWNibkpsY1hWbGMzUXVaR1ZtWVhWc2RITWdQU0JtZFc1amRHbHZiaWh2Y0hScGIyNXpMQ0J5WlhGMVpYTjBaWElwSUh0Y2JpQWdkbUZ5SUdSbFppQTlJR1oxYm1OMGFXOXVJQ2h0WlhSb2IyUXBJSHRjYmlBZ0lDQjJZWElnWkNBOUlHWjFibU4wYVc5dUlDaHdZWEpoYlhNc0lHTmhiR3hpWVdOcktTQjdYRzRnSUNBZ0lDQnBaaWgwZVhCbGIyWWdjR0Z5WVcxeklEMDlQU0FuYzNSeWFXNW5KeWxjYmlBZ0lDQWdJQ0FnY0dGeVlXMXpJRDBnZXlkMWNta25PaUJ3WVhKaGJYTjlPMXh1SUNBZ0lDQWdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lIQmhjbUZ0Y3lBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb2NHRnlZVzF6S1NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCbWIzSWdLSFpoY2lCcElHbHVJRzl3ZEdsdmJuTXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIQmhjbUZ0YzF0cFhTQTlQVDBnZFc1a1pXWnBibVZrS1NCd1lYSmhiWE5iYVYwZ1BTQnZjSFJwYjI1elcybGRYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnlaWFIxY200Z2JXVjBhRzlrS0hCaGNtRnRjeXdnWTJGc2JHSmhZMnNwWEc0Z0lDQWdmVnh1SUNBZ0lISmxkSFZ5YmlCa1hHNGdJSDFjYmlBZ2RtRnlJR1JsSUQwZ1pHVm1LSEpsY1hWbGMzUXBYRzRnSUdSbExtZGxkQ0E5SUdSbFppaHlaWEYxWlhOMExtZGxkQ2xjYmlBZ1pHVXVjRzl6ZENBOUlHUmxaaWh5WlhGMVpYTjBMbkJ2YzNRcFhHNGdJR1JsTG5CMWRDQTlJR1JsWmloeVpYRjFaWE4wTG5CMWRDbGNiaUFnWkdVdWFHVmhaQ0E5SUdSbFppaHlaWEYxWlhOMExtaGxZV1FwWEc0Z0lISmxkSFZ5YmlCa1pWeHVmVnh1WEc0dkwxeHVMeThnU0ZSVVVDQnRaWFJvYjJRZ2MyaHZjblJqZFhSelhHNHZMMXh1WEc1MllYSWdjMmh2Y25SamRYUnpJRDBnV3lBbloyVjBKeXdnSjNCMWRDY3NJQ2R3YjNOMEp5d2dKMmhsWVdRbklGMDdYRzV6YUc5eWRHTjFkSE11Wm05eVJXRmphQ2htZFc1amRHbHZiaWh6YUc5eWRHTjFkQ2tnZTF4dUlDQjJZWElnYldWMGFHOWtJRDBnYzJodmNuUmpkWFF1ZEc5VmNIQmxja05oYzJVb0tUdGNiaUFnZG1GeUlHWjFibU1nSUNBOUlITm9iM0owWTNWMExuUnZURzkzWlhKRFlYTmxLQ2s3WEc1Y2JpQWdjbVZ4ZFdWemRGdG1kVzVqWFNBOUlHWjFibU4wYVc5dUtHOXdkSE1wSUh0Y2JpQWdJQ0JwWmloMGVYQmxiMllnYjNCMGN5QTlQVDBnSjNOMGNtbHVaeWNwWEc0Z0lDQWdJQ0J2Y0hSeklEMGdleWR0WlhSb2IyUW5PbTFsZEdodlpDd2dKM1Z5YVNjNmIzQjBjMzA3WEc0Z0lDQWdaV3h6WlNCN1hHNGdJQ0FnSUNCdmNIUnpJRDBnU2xOUFRpNXdZWEp6WlNoS1UwOU9Mbk4wY21sdVoybG1lU2h2Y0hSektTazdYRzRnSUNBZ0lDQnZjSFJ6TG0xbGRHaHZaQ0E5SUcxbGRHaHZaRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQjJZWElnWVhKbmN5QTlJRnR2Y0hSelhTNWpiMjVqWVhRb1FYSnlZWGt1Y0hKdmRHOTBlWEJsTG5Oc2FXTmxMbUZ3Y0d4NUtHRnlaM1Z0Wlc1MGN5d2dXekZkS1NrN1hHNGdJQ0FnY21WMGRYSnVJSEpsY1hWbGMzUXVZWEJ3Ykhrb2RHaHBjeXdnWVhKbmN5azdYRzRnSUgxY2JuMHBYRzVjYmk4dlhHNHZMeUJEYjNWamFFUkNJSE5vYjNKMFkzVjBYRzR2TDF4dVhHNXlaWEYxWlhOMExtTnZkV05vSUQwZ1puVnVZM1JwYjI0b2IzQjBhVzl1Y3l3Z1kyRnNiR0poWTJzcElIdGNiaUFnYVdZb2RIbHdaVzltSUc5d2RHbHZibk1nUFQwOUlDZHpkSEpwYm1jbktWeHVJQ0FnSUc5d2RHbHZibk1nUFNCN0ozVnlhU2M2YjNCMGFXOXVjMzFjYmx4dUlDQXZMeUJLZFhOMElIVnpaU0IwYUdVZ2NtVnhkV1Z6ZENCQlVFa2dkRzhnWkc4Z1NsTlBUaTVjYmlBZ2IzQjBhVzl1Y3k1cWMyOXVJRDBnZEhKMVpWeHVJQ0JwWmlodmNIUnBiMjV6TG1KdlpIa3BYRzRnSUNBZ2IzQjBhVzl1Y3k1cWMyOXVJRDBnYjNCMGFXOXVjeTVpYjJSNVhHNGdJR1JsYkdWMFpTQnZjSFJwYjI1ekxtSnZaSGxjYmx4dUlDQmpZV3hzWW1GamF5QTlJR05oYkd4aVlXTnJJSHg4SUc1dmIzQmNibHh1SUNCMllYSWdlR2h5SUQwZ2NtVnhkV1Z6ZENodmNIUnBiMjV6TENCamIzVmphRjlvWVc1a2JHVnlLVnh1SUNCeVpYUjFjbTRnZUdoeVhHNWNiaUFnWm5WdVkzUnBiMjRnWTI5MVkyaGZhR0Z1Wkd4bGNpaGxjaXdnY21WemNDd2dZbTlrZVNrZ2UxeHVJQ0FnSUdsbUtHVnlLVnh1SUNBZ0lDQWdjbVYwZFhKdUlHTmhiR3hpWVdOcktHVnlMQ0J5WlhOd0xDQmliMlI1S1Z4dVhHNGdJQ0FnYVdZb0tISmxjM0F1YzNSaGRIVnpRMjlrWlNBOElESXdNQ0I4ZkNCeVpYTndMbk4wWVhSMWMwTnZaR1VnUGlBeU9Ua3BJQ1ltSUdKdlpIa3VaWEp5YjNJcElIdGNiaUFnSUNBZ0lDOHZJRlJvWlNCaWIyUjVJR2x6SUdFZ1EyOTFZMmdnU2xOUFRpQnZZbXBsWTNRZ2FXNWthV05oZEdsdVp5QjBhR1VnWlhKeWIzSXVYRzRnSUNBZ0lDQmxjaUE5SUc1bGR5QkZjbkp2Y2lnblEyOTFZMmhFUWlCbGNuSnZjam9nSnlBcklDaGliMlI1TG1WeWNtOXlMbkpsWVhOdmJpQjhmQ0JpYjJSNUxtVnljbTl5TG1WeWNtOXlLU2xjYmlBZ0lDQWdJR1p2Y2lBb2RtRnlJR3RsZVNCcGJpQmliMlI1S1Z4dUlDQWdJQ0FnSUNCbGNsdHJaWGxkSUQwZ1ltOWtlVnRyWlhsZFhHNGdJQ0FnSUNCeVpYUjFjbTRnWTJGc2JHSmhZMnNvWlhJc0lISmxjM0FzSUdKdlpIa3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCallXeHNZbUZqYXlobGNpd2djbVZ6Y0N3Z1ltOWtlU2s3WEc0Z0lIMWNibjFjYmx4dUx5OWNiaTh2SUZWMGFXeHBkSGxjYmk4dlhHNWNibVoxYm1OMGFXOXVJRzV2YjNBb0tTQjdmVnh1WEc1bWRXNWpkR2x2YmlCblpYUk1iMmRuWlhJb0tTQjdYRzRnSUhaaGNpQnNiMmRuWlhJZ1BTQjdmVnh1SUNBZ0lDd2diR1YyWld4eklEMGdXeWQwY21GalpTY3NJQ2RrWldKMVp5Y3NJQ2RwYm1adkp5d2dKM2RoY200bkxDQW5aWEp5YjNJblhWeHVJQ0FnSUN3Z2JHVjJaV3dzSUdsY2JseHVJQ0JtYjNJb2FTQTlJREE3SUdrZ1BDQnNaWFpsYkhNdWJHVnVaM1JvT3lCcEt5c3BJSHRjYmlBZ0lDQnNaWFpsYkNBOUlHeGxkbVZzYzF0cFhWeHVYRzRnSUNBZ2JHOW5aMlZ5VzJ4bGRtVnNYU0E5SUc1dmIzQmNiaUFnSUNCcFppaDBlWEJsYjJZZ1kyOXVjMjlzWlNBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnSmlZZ1kyOXVjMjlzWlNBbUppQmpiMjV6YjJ4bFcyeGxkbVZzWFNsY2JpQWdJQ0FnSUd4dloyZGxjbHRzWlhabGJGMGdQU0JtYjNKdFlYUjBaV1FvWTI5dWMyOXNaU3dnYkdWMlpXd3BYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdiRzluWjJWeVhHNTlYRzVjYm1aMWJtTjBhVzl1SUdadmNtMWhkSFJsWkNodlltb3NJRzFsZEdodlpDa2dlMXh1SUNCeVpYUjFjbTRnWm05eWJXRjBkR1ZrWDJ4dloyZGxjbHh1WEc0Z0lHWjFibU4wYVc5dUlHWnZjbTFoZEhSbFpGOXNiMmRuWlhJb2MzUnlMQ0JqYjI1MFpYaDBLU0I3WEc0Z0lDQWdhV1lvZEhsd1pXOW1JR052Ym5SbGVIUWdQVDA5SUNkdlltcGxZM1FuS1Z4dUlDQWdJQ0FnYzNSeUlDczlJQ2NnSnlBcklFcFRUMDR1YzNSeWFXNW5hV1o1S0dOdmJuUmxlSFFwWEc1Y2JpQWdJQ0J5WlhSMWNtNGdiMkpxVzIxbGRHaHZaRjB1WTJGc2JDaHZZbW9zSUhOMGNpbGNiaUFnZlZ4dWZWeHVYRzR2THlCU1pYUjFjbTRnZDJobGRHaGxjaUJoSUZWU1RDQnBjeUJoSUdOeWIzTnpMV1J2YldGcGJpQnlaWEYxWlhOMExseHVablZ1WTNScGIyNGdhWE5mWTNKdmMzTkViMjFoYVc0b2RYSnNLU0I3WEc0Z0lIWmhjaUJ5ZFhKc0lEMGdMMTRvVzF4Y2QxeGNLMXhjTGx4Y0xWMHJPaWtvUHpwY1hDOWNYQzhvVzE1Y1hDOC9JenBkS2lrb1B6bzZLRnhjWkNzcEtUOHBQeTljYmx4dUlDQXZMeUJxVVhWbGNua2dJemd4TXpnc0lFbEZJRzFoZVNCMGFISnZkeUJoYmlCbGVHTmxjSFJwYjI0Z2QyaGxiaUJoWTJObGMzTnBibWRjYmlBZ0x5OGdZU0JtYVdWc1pDQm1jbTl0SUhkcGJtUnZkeTVzYjJOaGRHbHZiaUJwWmlCa2IyTjFiV1Z1ZEM1a2IyMWhhVzRnYUdGeklHSmxaVzRnYzJWMFhHNGdJSFpoY2lCaGFtRjRURzlqWVhScGIyNWNiaUFnZEhKNUlIc2dZV3BoZUV4dlkyRjBhVzl1SUQwZ2JHOWpZWFJwYjI0dWFISmxaaUI5WEc0Z0lHTmhkR05vSUNobEtTQjdYRzRnSUNBZ0x5OGdWWE5sSUhSb1pTQm9jbVZtSUdGMGRISnBZblYwWlNCdlppQmhiaUJCSUdWc1pXMWxiblFnYzJsdVkyVWdTVVVnZDJsc2JDQnRiMlJwWm5rZ2FYUWdaMmwyWlc0Z1pHOWpkVzFsYm5RdWJHOWpZWFJwYjI1Y2JpQWdJQ0JoYW1GNFRHOWpZWFJwYjI0Z1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NCY0ltRmNJaUFwTzF4dUlDQWdJR0ZxWVhoTWIyTmhkR2x2Ymk1b2NtVm1JRDBnWENKY0lqdGNiaUFnSUNCaGFtRjRURzlqWVhScGIyNGdQU0JoYW1GNFRHOWpZWFJwYjI0dWFISmxaanRjYmlBZ2ZWeHVYRzRnSUhaaGNpQmhhbUY0VEc5alVHRnlkSE1nUFNCeWRYSnNMbVY0WldNb1lXcGhlRXh2WTJGMGFXOXVMblJ2VEc5M1pYSkRZWE5sS0NrcElIeDhJRnRkWEc0Z0lDQWdMQ0J3WVhKMGN5QTlJSEoxY213dVpYaGxZeWgxY213dWRHOU1iM2RsY2tOaGMyVW9LU0FwWEc1Y2JpQWdkbUZ5SUhKbGMzVnNkQ0E5SUNFaEtGeHVJQ0FnSUhCaGNuUnpJQ1ltWEc0Z0lDQWdLQ0FnY0dGeWRITmJNVjBnSVQwZ1lXcGhlRXh2WTFCaGNuUnpXekZkWEc0Z0lDQWdmSHdnY0dGeWRITmJNbDBnSVQwZ1lXcGhlRXh2WTFCaGNuUnpXekpkWEc0Z0lDQWdmSHdnS0hCaGNuUnpXek5kSUh4OElDaHdZWEowYzFzeFhTQTlQVDBnWENKb2RIUndPbHdpSUQ4Z09EQWdPaUEwTkRNcEtTQWhQU0FvWVdwaGVFeHZZMUJoY25Seld6TmRJSHg4SUNoaGFtRjRURzlqVUdGeWRITmJNVjBnUFQwOUlGd2lhSFIwY0RwY0lpQS9JRGd3SURvZ05EUXpLU2xjYmlBZ0lDQXBYRzRnSUNsY2JseHVJQ0F2TDJOdmJuTnZiR1V1WkdWaWRXY29KMmx6WDJOeWIzTnpSRzl0WVdsdUtDY3JkWEpzS3ljcElDMCtJQ2NnS3lCeVpYTjFiSFFwWEc0Z0lISmxkSFZ5YmlCeVpYTjFiSFJjYm4xY2JseHVMeThnVFVsVUlFeHBZMlZ1YzJVZ1puSnZiU0JvZEhSd09pOHZjR2h3YW5NdWIzSm5MMloxYm1OMGFXOXVjeTlpWVhObE5qUmZaVzVqYjJSbE9qTTFPRnh1Wm5WdVkzUnBiMjRnWWpZMFgyVnVZeUFvWkdGMFlTa2dlMXh1SUNBZ0lDOHZJRVZ1WTI5a1pYTWdjM1J5YVc1bklIVnphVzVuSUUxSlRVVWdZbUZ6WlRZMElHRnNaMjl5YVhSb2JWeHVJQ0FnSUhaaGNpQmlOalFnUFNCY0lrRkNRMFJGUmtkSVNVcExURTFPVDFCUlVsTlVWVlpYV0ZsYVlXSmpaR1ZtWjJocGFtdHNiVzV2Y0hGeWMzUjFkbmQ0ZVhvd01USXpORFUyTnpnNUt5ODlYQ0k3WEc0Z0lDQWdkbUZ5SUc4eExDQnZNaXdnYnpNc0lHZ3hMQ0JvTWl3Z2FETXNJR2cwTENCaWFYUnpMQ0JwSUQwZ01Dd2dZV01nUFNBd0xDQmxibU05WENKY0lpd2dkRzF3WDJGeWNpQTlJRnRkTzF4dVhHNGdJQ0FnYVdZZ0tDRmtZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1lYUmhPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJR0Z6YzNWdFpTQjFkR1k0SUdSaGRHRmNiaUFnSUNBdkx5QmtZWFJoSUQwZ2RHaHBjeTUxZEdZNFgyVnVZMjlrWlNoa1lYUmhLeWNuS1R0Y2JseHVJQ0FnSUdSdklIc2dMeThnY0dGamF5QjBhSEpsWlNCdlkzUmxkSE1nYVc1MGJ5Qm1iM1Z5SUdobGVHVjBjMXh1SUNBZ0lDQWdJQ0J2TVNBOUlHUmhkR0V1WTJoaGNrTnZaR1ZCZENocEt5c3BPMXh1SUNBZ0lDQWdJQ0J2TWlBOUlHUmhkR0V1WTJoaGNrTnZaR1ZCZENocEt5c3BPMXh1SUNBZ0lDQWdJQ0J2TXlBOUlHUmhkR0V1WTJoaGNrTnZaR1ZCZENocEt5c3BPMXh1WEc0Z0lDQWdJQ0FnSUdKcGRITWdQU0J2TVR3OE1UWWdmQ0J2TWp3OE9DQjhJRzh6TzF4dVhHNGdJQ0FnSUNBZ0lHZ3hJRDBnWW1sMGN6NCtNVGdnSmlBd2VETm1PMXh1SUNBZ0lDQWdJQ0JvTWlBOUlHSnBkSE0rUGpFeUlDWWdNSGd6Wmp0Y2JpQWdJQ0FnSUNBZ2FETWdQU0JpYVhSelBqNDJJQ1lnTUhnelpqdGNiaUFnSUNBZ0lDQWdhRFFnUFNCaWFYUnpJQ1lnTUhnelpqdGNibHh1SUNBZ0lDQWdJQ0F2THlCMWMyVWdhR1Y0WlhSeklIUnZJR2x1WkdWNElHbHVkRzhnWWpZMExDQmhibVFnWVhCd1pXNWtJSEpsYzNWc2RDQjBieUJsYm1OdlpHVmtJSE4wY21sdVoxeHVJQ0FnSUNBZ0lDQjBiWEJmWVhKeVcyRmpLeXRkSUQwZ1lqWTBMbU5vWVhKQmRDaG9NU2tnS3lCaU5qUXVZMmhoY2tGMEtHZ3lLU0FySUdJMk5DNWphR0Z5UVhRb2FETXBJQ3NnWWpZMExtTm9ZWEpCZENob05DazdYRzRnSUNBZ2ZTQjNhR2xzWlNBb2FTQThJR1JoZEdFdWJHVnVaM1JvS1R0Y2JseHVJQ0FnSUdWdVl5QTlJSFJ0Y0Y5aGNuSXVhbTlwYmlnbkp5azdYRzVjYmlBZ0lDQnpkMmwwWTJnZ0tHUmhkR0V1YkdWdVozUm9JQ1VnTXlrZ2UxeHVJQ0FnSUNBZ0lDQmpZWE5sSURFNlhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYm1NZ1BTQmxibU11YzJ4cFkyVW9NQ3dnTFRJcElDc2dKejA5Snp0Y2JpQWdJQ0FnSUNBZ1luSmxZV3M3WEc0Z0lDQWdJQ0FnSUdOaGMyVWdNanBjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnVZeUE5SUdWdVl5NXpiR2xqWlNnd0xDQXRNU2tnS3lBblBTYzdYRzRnSUNBZ0lDQWdJR0p5WldGck8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJsYm1NN1hHNTlYRzRnSUNBZ2NtVjBkWEp1SUhKbGNYVmxjM1E3WEc0dkwxVk5SQ0JHVDA5VVJWSWdVMVJCVWxSY2JuMHBLVHRjYmk4dlZVMUVJRVpQVDFSRlVpQkZUa1JjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dVhHNTJZWElnY21WeGRXVnpkQ0E5SUhKbGNYVnBjbVVvSjJKeWIzZHpaWEl0Y21WeGRXVnpkQ2NwTzF4dVhHNTJZWElnY0c5d2FXeDVJRDBnZDJsdVpHOTNMbkJ2Y0dsc2VTQjhmQ0I3ZlR0Y2JseHVkbUZ5SUY5bGNuSnZjaUE5SUdaMWJtTjBhVzl1S0cxelp5d2daWEp5YjNJcElIdGNiaUFnY21WMGRYSnVJSHR0YzJjNklHMXpaeXdnWlhKeWIzSTZJR1Z5Y205eWZUdGNibjA3WEc0Z0lGeHVkbUZ5SUY5eVpYRjFaWE4wSUQwZ1puVnVZM1JwYjI0b2JXVjBhRzlrTENCd1lYUm9MQ0JrWVhSaExDQmpZV3hzWW1GamF5a2dlMXh1SUNCMllYSWdSRVZHUVZWTVZGOVZVa3dnUFNBbmFIUjBjSE02THk5d2IzQnBiSGt1WTI5dEp6dGNiaUFnZG1GeUlFUkZSa0ZWVEZSZlFrRlRSVjlRUVZSSUlEMGdKeTloY0drbk8xeHVYRzRnSUhaaGNpQmhjR2xWY213Z1BTQndiM0JwYkhrdVlYQnBMbUZ3YVZWeWJEdGNiaUFnYVdZb0lYQnZjR2xzZVM1aGNHa3VZWEJwVlhKc0tTQjdYRzRnSUNBZ1lYQnBWWEpzSUQwZ1JFVkdRVlZNVkY5VlVrdzdYRzRnSUgwZ1hHNGdJR0Z3YVZWeWJDQTlJR0Z3YVZWeWJDQXJJRVJGUmtGVlRGUmZRa0ZUUlY5UVFWUklPMXh1WEc0Z0lIWmhjaUJ3WVhKaGJYTWdQU0I3WEc0Z0lDQWdiV1YwYUc5a09pQnRaWFJvYjJRc1hHNGdJQ0FnYUdWaFpHVnljem9nZXlCY2JpQWdJQ0FnSUNkQmRYUm9iM0pwZW1GMGFXOXVKem9nSjFSdmEyVnVJQ2NnS3lCd2IzQnBiSGt1WVhCcExuUnZhMlZ1TEZ4dUlDQWdJQ0FnSjBGalkyVndkQ2M2SUNkaGNIQnNhV05oZEdsdmJpOXFjMjl1Snl4Y2JpQWdJQ0I5TEZ4dUlDQWdJSFZ5YkRvZ1lYQnBWWEpzSUNzZ2NHRjBhQzh2SUNzZ0p6OW1iM0p0WVhROVlYQnBKMXh1SUNCOU8xeHVJQ0FnSUNBZ1hHNGdJR2xtS0NkeGN5Y2dhVzRnWkdGMFlTa2dlMXh1SUNBZ0lIQmhjbUZ0YzFzbmNYTW5YU0E5SUdSaGRHRmJKM0Z6SjEwN1hHNGdJQ0FnY0dGeVlXMXpXeWRxYzI5dUoxMGdQU0IwY25WbE8xeHVJQ0I5WEc0Z0lHbG1LQ2RxYzI5dUp5QnBiaUJrWVhSaEtTQjdYRzRnSUNBZ2NHRnlZVzF6V3lkaWIyUjVKMTBnUFNCa1lYUmhXeWRxYzI5dUoxMDdYRzRnSUNBZ2NHRnlZVzF6V3lkcWMyOXVKMTBnUFNCMGNuVmxPMXh1SUNCOVhHNGdJR2xtS0NkbWIzSnRKeUJwYmlCa1lYUmhLU0I3WEc0Z0lDQWdjR0Z5WVcxeld5ZG1iM0p0UkdGMFlTZGRJRDBnWkdGMFlWc25abTl5YlNkZE8xeHVJQ0I5WEc0Z0lGeHVJQ0J5WlhGMVpYTjBLSEJoY21GdGN5d2dablZ1WTNScGIyNG9aWEp5TENCb2RIUndVbVZ6Y0c5dWMyVXNJR0p2WkhrcElIdGNiaUFnSUNCcFppaGxjbklwWEc0Z0lDQWdJQ0J5WlhSMWNtNGdZMkZzYkdKaFkyc29YMlZ5Y205eUtDZFNaWEYxWlhOMElHVnljbTl5Snl3Z1pYSnlLU2s3WEc0Z0lDQWdJQ0JjYmlBZ0lDQnBaaWhvZEhSd1VtVnpjRzl1YzJVdWMzUmhkSFZ6UTI5a1pTQTlQVDBnTkRBeEtWeHVJQ0FnSUNBZ2NtVjBkWEp1SUdOaGJHeGlZV05yS0Y5bGNuSnZjaWduU1c1MllXeHBaQ0JCVUVrZ2RHOXJaVzRuS1NrN1hHNWNiaUFnSUNCcFppaG9kSFJ3VW1WemNHOXVjMlV1YzNSaGRIVnpRMjlrWlNBOVBUMGdOREF3S1Z4dUlDQWdJQ0FnY21WMGRYSnVJR05oYkd4aVlXTnJLRjlsY25KdmNpZ25RbUZrSUhKbGNYVmxjM1FuTENCaWIyUjVLU2s3WEc0Z0lDQWdJQ0JjYmlBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnZG1GeUlISmxjM0J2Ym5ObElEMGdZbTlrZVR0Y2JpQWdJQ0FnSUdsbUtIUjVjR1Z2WmlCaWIyUjVJRDA5UFNBbmMzUnlhVzVuSnlsY2JpQWdJQ0FnSUNBZ2NtVnpjRzl1YzJVZ1BTQktVMDlPTG5CaGNuTmxLR0p2WkhrcE8xeHVJQ0FnSUgwZ1kyRjBZMmdvWlNrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUdOaGJHeGlZV05yS0Y5bGNuSnZjaWduUlhKeWIzSTZJQ2NyWlN3Z1pTa2dLVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTmhiR3hpWVdOcktHNTFiR3dzSUhKbGMzQnZibk5sS1R0Y2JseHVJQ0I5S1R0Y2JuMDdYRzVjYm5aaGNpQndZV05yUm1sc2RHVnljeUE5SUdaMWJtTjBhVzl1S0dacGJIUmxjbk1wSUh0Y2JpQWdkbUZ5SUhCaFkydGxaRk4wY2lBOUlDY25PMXh1SUNCbWFXeDBaWEp6TG1admNrVmhZMmdvWm5WdVkzUnBiMjRvWml3Z2FTa2dlMXh1SUNBZ0lIWmhjaUJ2Y0NBOUlDZGxjU2RjYmlBZ0lDQnBaaWduYjNBbklHbHVJR1lwWEc0Z0lDQWdJQ0J2Y0NBOUlHWmJKMjl3SjExY2JpQWdJQ0JjYmlBZ0lDQjJZWElnWm1sc2RHVnlVM1J5SUQwZ0p5YzdYRzRnSUNBZ2FXWW9hU0ErSURBcFhHNGdJQ0FnSUNCbWFXeDBaWEpUZEhJZ0t6MGdKMTlmSnp0Y2JseHVJQ0FnSUhaaGNpQjJZV3hUZEhJZ1BTQW5KenRjYmlBZ0lDQnBaaWhtTG1oaGMwOTNibEJ5YjNCbGNuUjVLQ2QyWVd4MVpYTW5LU2tnZTF4dUlDQWdJQ0FnZG1Gc1UzUnlJRDBnWmxzbmRtRnNkV1Z6SjEwdWFtOXBiaWduTENjcE8xeHVJQ0FnSUgxY2JpQWdJQ0JtYVd4MFpYSlRkSElnS3owZ1psc25ZMjlzZFcxdUoxMGdLeUFuSVNjZ0t5QnZjQ0FySUNjaEp5QXJJQ2dnZG1Gc1UzUnlJQ2s3WEc0Z0lDQWdjR0ZqYTJWa1UzUnlJQ3M5SUdacGJIUmxjbE4wY2x4dUlDQjlLVHRjYmlBZ2NtVjBkWEp1SUhCaFkydGxaRk4wY2p0Y2JuMWNibHh1ZG1GeUlHRnpjMmxuYmtOMWMzUnZiV2w2WVhScGIyNXpJRDBnWm5WdVkzUnBiMjRvWkdGMFlVUnBZM1FzSUdsdWMybG5hSFJFWVhSaEtTQjdYRzRnSUZ0Y2JpQWdJQ0FuZEdsMGJHVW5MRnh1SUNBZ0lDZDRYMnhoWW1Wc0p5eGNiaUFnSUNBbmVWOXNZV0psYkNjc1hHNGdJQ0FnSjNwZmJHRmlaV3duTEZ4dUlDQWdJQ2RqWVhSbFoyOXllVjl2Y21SbGNpY3NYRzRnSUNBZ0ozUnBiV1ZmYVc1MFpYSjJZV3duTEZ4dUlDQWdJQ2R5WldaeVpYTm9YM0poZEdVbkxGeHVJQ0FnSUNkemQyRndKMXh1SUNCZExtWnZja1ZoWTJnb1puVnVZM1JwYjI0b2EyVjVLU0I3WEc0Z0lDQWdhV1lvYTJWNUlHbHVJR2x1YzJsbmFIUkVZWFJoS1Z4dUlDQWdJQ0FnWkdGMFlVUnBZM1JiYTJWNVhTQTlJR2x1YzJsbmFIUkVZWFJoVzJ0bGVWMDdYRzRnSUgwcE8xeHVYRzRnSUhKbGRIVnliaUJrWVhSaFJHbGpkRHRjYm4wN0lDQWdJQ0FnSUNCY2JpQWdJQ0FnSUNBZ1hHNXdiM0JwYkhrdVlYQnBJRDBnZTF4dUlDQmhaR1JUYjNWeVkyVTZJR1oxYm1OMGFXOXVLSE52ZFhKalpVUmhkR0VzSUdOaUtTQjdYRzRnSUNBZ1hHNGdJQ0FnZG1GeUlHUmhkR0VnUFNCN2ZUdGNiaUFnSUNCYkoyTnZiSFZ0Ym5NbkxDQW5kR2wwYkdVbkxDQW5aR1Z6WTNKcGNIUnBiMjRuWFM1bWIzSkZZV05vS0daMWJtTjBhVzl1S0d0bGVTa2dlMXh1SUNBZ0lDQWdhV1lvYTJWNUlHbHVJSE52ZFhKalpVUmhkR0VwWEc0Z0lDQWdJQ0FnSUdSaGRHRmJhMlY1WFNBOUlITnZkWEpqWlVSaGRHRmJhMlY1WFR0Y2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnYVdZb0ozVnliQ2NnYVc0Z2MyOTFjbU5sUkdGMFlTa2dlMXh1SUNBZ0lDQWdaR0YwWVZzbmRYSnNKMTBnUFNCemIzVnlZMlZFWVhSaFd5ZDFjbXduWFZ4dUlDQWdJQ0FnWDNKbGNYVmxjM1FvSjFCUFUxUW5MQ0FuTDNOdmRYSmpaWE12Snl3Z2UycHpiMjQ2SUdSaGRHRjlMQ0JqWWlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWld4elpTQnBaaWduWTI5dWJtVmpkR2x2Ymw5emRISnBibWNuSUdsdUlITnZkWEpqWlVSaGRHRWdLU0I3WEc0Z0lDQWdJQ0JrWVhSaFd5ZGpiMjV1WldOMGFXOXVYM04wY21sdVp5ZGRJRDBnYzI5MWNtTmxSR0YwWVZzblkyOXVibVZqZEdsdmJsOXpkSEpwYm1jblhWeHVJQ0FnSUNBZ1pHRjBZVnNuY1hWbGNua25YU0E5SUhOdmRYSmpaVVJoZEdGYkozRjFaWEo1SjExY2JpQWdJQ0FnSUY5eVpYRjFaWE4wS0NkUVQxTlVKeXdnSnk5emIzVnlZMlZ6THljc0lIdHFjMjl1T2lCa1lYUmhmU3dnWTJJcE8xeHVJQ0FnSUgxY2JpQWdJQ0JjYmlBZ0lDQmxiSE5sWEc0Z0lDQWdJQ0JqWWlnbmRYSnNJRzl5SUdOdmJtNWxZM1JwYjI1ZmMzUnlhVzVuSUdseklISmxjWFZwY21Wa0p5azdYRzRnSUgwc1hHNWNibHh1SUNCblpYUlRiM1Z5WTJWek9pQm1kVzVqZEdsdmJpaGpZaWtnZTF4dUlDQWdJRjl5WlhGMVpYTjBLQ2RIUlZRbkxDQW5MM052ZFhKalpYTXZKeXdnZTMwc0lHTmlLVHRjYmlBZ2ZTeGNibHh1WEc0Z0lHZGxkRk52ZFhKalpUb2dablZ1WTNScGIyNG9jMjkxY21ObFNXUXNJR05pS1NCN1hHNGdJQ0FnWDNKbGNYVmxjM1FvSjBkRlZDY3NJQ2N2YzI5MWNtTmxjeThuSzNOdmRYSmpaVWxrS3ljdkp5d2dlMzBzSUdOaUtUdGNiaUFnZlN4Y2JseHVYRzRnSUdkbGRFbHVjMmxuYUhSek9pQm1kVzVqZEdsdmJpaHpiM1Z5WTJWSlpDd2djR0Z5WVcxekxDQmpZaWtnZTF4dUlDQWdJSEJoY21GdGN5QTlJSEJoY21GdGN5QjhmQ0I3ZlR0Y2JpQWdJQ0IyWVhJZ2NHRjViRzloWkNBOUlIc25jMjkxY21ObEp6b2djMjkxY21ObFNXUjlPMXh1WEc0Z0lDQWdXeWRqYjJ4MWJXNXpKeXdnSjJsdWMybG5hSFJmZEhsd1pYTW5MQ0FuYVc1emFXZG9kRjloWTNScGIyNXpKMTB1Wm05eVJXRmphQ2htZFc1amRHbHZiaWhyWlhrcElIdGNiaUFnSUNBZ0lHbG1LR3RsZVNCcGJpQndZWEpoYlhNcFhHNGdJQ0FnSUNBZ0lIQmhlV3h2WVdSYmEyVjVYU0E5SUhCaGNtRnRjMXRyWlhsZExtcHZhVzRvSnl3bktWeHVJQ0FnSUgwcE8xeHVYRzRnSUNBZ2FXWW9KMlpwYkhSbGNuTW5JR2x1SUhCaGNtRnRjeWxjYmlBZ0lDQWdJSEJoZVd4dllXUmJKMlpwYkhSbGNuTW5YU0E5SUhCaFkydEdhV3gwWlhKektIQmhjbUZ0YzFzblptbHNkR1Z5Y3lkZEtWeHVYRzRnSUNBZ2FXWW9KMloxYkd3bklHbHVJSEJoY21GdGN5bGNiaUFnSUNBZ0lIQmhlV3h2WVdSYkoyWjFiR3duWFNBOUlIQmhjbUZ0YzFzblpuVnNiQ2RkWEc1Y2JpQWdJQ0JwWmlnbmMybHVaMnhsSnlCcGJpQndZWEpoYlhNcElIdGNiaUFnSUNBZ0lIQmhlV3h2WVdSYkozTnBibWRzWlNkZElEMGdjR0Z5WVcxeld5ZHphVzVuYkdVblhUdGNiaUFnSUNBZ0lIQmhlV3h2WVdRZ1BTQmhjM05wWjI1RGRYTjBiMjFwZW1GMGFXOXVjeWh3WVhsc2IyRmtMQ0J3WVhKaGJYTXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lGOXlaWEYxWlhOMEtDZEhSVlFuTENBbkwybHVjMmxuYUhSekx5Y3NJSHR4Y3pvZ2NHRjViRzloWkgwc0lHTmlLVHRjYmlBZ2ZTeGNibHh1WEc0Z0lHZGxkRWx1YzJsbmFIUTZJR1oxYm1OMGFXOXVLR2x1YzJsbmFIUkpaQ3dnY0dGeVlXMXpMQ0JqWWlrZ2UxeHVJQ0FnSUhaaGNpQndZWGxzYjJGa0lEMGdlMzA3WEc0Z0lDQWdhV1lvSjJacGJIUmxjbk1uSUdsdUlIQmhjbUZ0Y3lsY2JpQWdJQ0FnSUhCaGVXeHZZV1JiSjJacGJIUmxjbk1uWFNBOUlIQmhZMnRHYVd4MFpYSnpLSEJoY21GdGMxc25abWxzZEdWeWN5ZGRLVHRjYmx4dUlDQWdJRnNuWm5Wc2JDY3NJQ2RvWldsbmFIUW5MQ0FuZDJsa2RHZ25YUzVtYjNKRllXTm9LR1oxYm1OMGFXOXVLR3RsZVNrZ2UxeHVJQ0FnSUNBZ2FXWW9hMlY1SUdsdUlIQmhjbUZ0Y3lsY2JpQWdJQ0FnSUNBZ2NHRjViRzloWkZ0clpYbGRJRDBnY0dGeVlXMXpXMnRsZVYwN1hHNGdJQ0FnZlNrN1hHNWNiaUFnSUNCd1lYbHNiMkZrSUQwZ1lYTnphV2R1UTNWemRHOXRhWHBoZEdsdmJuTW9jR0Y1Ykc5aFpDd2djR0Z5WVcxektUdGNiaUFnSUNCY2JpQWdJQ0JmY21WeGRXVnpkQ2duUjBWVUp5d2dKeTlwYm5OcFoyaDBjeThuSUNzZ2FXNXphV2RvZEVsa0lDc2dKeThuTENCN2NYTTZJSEJoZVd4dllXUjlMQ0JqWWlrN1hHNGdJSDBzWEc1Y2JseHVJQ0JqZFhOMGIyMXBlbVZKYm5OcFoyaDBPaUJtZFc1amRHbHZiaWhwYm5OcFoyaDBTV1FzSUhCaGNtRnRjeXdnYVc1emFXZG9kRVJoZEdFc0lHTmlLU0I3WEc0Z0lDQWdkbUZ5SUdSaGRHRWdQU0JoYzNOcFoyNURkWE4wYjIxcGVtRjBhVzl1Y3loN2ZTd2dhVzV6YVdkb2RFUmhkR0VwTzF4dUlDQWdJR2xtS0NkbWFXeDBaWEp6SnlCcGJpQndZWEpoYlhNcFhHNGdJQ0FnSUNCa1lYUmhXeWRtYVd4MFpYSnpKMTBnUFNCd1lXTnJSbWxzZEdWeWN5aHdZWEpoYlhOYkoyWnBiSFJsY25NblhTbGNibHh1SUNBZ0lGOXlaWEYxWlhOMEtDZFFWVlFuTENBbkwybHVjMmxuYUhSekx5Y2dLeUJwYm5OcFoyaDBTV1FnS3lBbkx5Y3NJSHRxYzI5dU9pQmtZWFJoZlN3Z1kySXBPMXh1SUNCOUxGeHVYRzRnSUhObGRGUnZhMlZ1T2lCbWRXNWpkR2x2YmloMGIydGxiaWtnZTF4dUlDQWdJSFJvYVhNdWRHOXJaVzRnUFNCMGIydGxianRjYmlBZ2ZTeGNibHh1SUNCelpYUlZVa3c2SUdaMWJtTjBhVzl1S0dGd2FWVnliQ2tnZTF4dUlDQWdJSFJvYVhNdVlYQnBWWEpzSUQwZ1lYQnBWWEpzTzF4dUlDQjlYRzU5WEc1Y2JuZHBibVJ2ZHk1d2IzQnBiSGtnUFNCd2IzQnBiSGs3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUhCdmNHbHNlVHRjYmlKZGZRPT1cbiIsIid1c2Ugc3RyaWN0JztcbiAgICBcbihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIHBvcGlseSA9IHdpbmRvdy5wb3BpbHkgfHwge307XG4gIHBvcGlseS5jaGFydCA9IHt9O1xuICBwb3BpbHkuY2hhcnQuY2hhcnRUeXBlcyA9IHt9O1xuICBwb3BpbHkuY2hhcnQuYmFzZUNoYXJ0ID0ge1xuICAgIGRlZmF1bHRzOiB7XG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgICBzdHlsZTogJ2RldGFpbCcsXG4gICAgICAgICAgcm90YXRlZDogZmFsc2UsXG4gICAgICAgICAgcmVkcmF3T25SZXNpemU6IHRydWUsXG4gICAgICAgICAgY29sb3JzOiBbXG4gICAgICAgICAgICAnIzU0Qzg4QScsICcjQkJENDQyJywgJyM4NUM0RUQnLCAnI0ZGQzU5QycsICcjNEZCMjdBJywgJyM3NDE2OTknLCAnI0ZGNzM2NCcsXG4gICAgICAgICAgICAnI0YxQzQwRicsICcjREM4MzQ1JywgJyNFNzRDM0MnLCAnIzA5NkMzNCcsICcjNEQxNTY3JywgJyM5ODQ2MEMnLCAnI0RBRjE2QicsXG4gICAgICAgICAgICAnI0Y5RDU0MycsICcjOTQ3NzAwJywgJyMxODg4NDknLCAnI0NDM0E3RicsICcjQTAxNTA3JywgJyNGOUQ1NDMnLCAnI0RCNUM5OCcsXG4gICAgICAgICAgICAnIzM0OTlEQicsICcjRkY5ODhFJywgJyMzMTlENjAnLCAnI0JDOTgwNScsICcjRTlGOTk4JywgJyM2MjhFMEInLCAnIzFFNEM3QycsXG4gICAgICAgICAgICAnIzdFQ0VBMScsICcjNEY3OEEzJywgJyNDMDE0NjUnLCAnI0YxQzQwRicsICcjMEY4NUQxJywgJyM5QTUxQjcnLCAnIzdEQTBDNCcsXG4gICAgICAgICAgICAnI0JCN0ZEMicsICcjMzQ2MThGJywgJyM5NDc3MDAnLCAnI0ZGRTI2QycsICcjOTIwOTRBJywgJyNCRjYzMjInLCAnIzU4QURFMycsXG4gICAgICAgICAgICAnIzlGQjkyMScsICcjMDY2NUEyJywgJyM4MzMzQTInLCAnIzBGMzg2MycsICcjQkM5ODA1JywgJyNGRkUyNkMnLCAnI0U5ODlCNicsXG4gICAgICAgICAgICAnI0M5MjkxOCcsICcjRkFBOTZGJ1xuICAgICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBiYXJCdWJibGVDdXRvZmY6IDMwLFxuICAgICAgY2hhcnRQYWRkaW5nOiBmdW5jdGlvbigpIHsgcmV0dXJuIHtyaWdodDogMCwgdG9wOiAwIH07IH1cbiAgICB9LFxuICAgIHJlc2l6ZTogZnVuY3Rpb24oY2hhcnRPYmosIHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgIGNvbnNvbGUubG9nKDEpO1xuICAgICAgY2hhcnRPYmoucmVzaXplKHdpZHRoLCBoZWlnaHQpO1xuICAgIH0sXG4gICAgY2xlYW5EYXRhOiBmdW5jdGlvbihyYXdEYXRhKSB7XG4gICAgICB2YXIgeFZhbHVlcyA9IHJhd0RhdGEuY2hhcnREYXRhLngudmFsdWVzO1xuICAgICAgdmFyIHlWYWx1ZXMgPSByYXdEYXRhLmNoYXJ0RGF0YS55LnZhbHVlcztcbiAgICAgIHZhciB6VmFsdWVzID0gW107XG4gICAgICB2YXIgejJWYWx1ZXMgPSBbXTtcblxuICAgICAgaWYocmF3RGF0YS5jaGFydERhdGEueikge1xuICAgICAgICB2YXIgelZhbHVlcyA9IHJhd0RhdGEuY2hhcnREYXRhLnoudmFsdWVzO1xuICAgICAgfVxuXG4gICAgICBpZihyYXdEYXRhLmNoYXJ0RGF0YS56Mikge1xuICAgICAgICB2YXIgejJWYWx1ZXMgPSByYXdEYXRhLmNoYXJ0RGF0YS56Mi52YWx1ZXM7XG4gICAgICB9XG5cbiAgICAgIHZhciBjbGVhblZhbHVlcyA9IHBvcGlseS5jaGFydC5jaGFydERhdGEuY2xlYW5EYXRhKHhWYWx1ZXMseVZhbHVlcyx6VmFsdWVzLHoyVmFsdWVzKTtcblxuICAgICAgcmV0dXJuIGNsZWFuVmFsdWVzO1xuICAgIH1cbiAgfTtcblxuICBwb3BpbHkuY2hhcnQuZ2V0Q2hhcnRGb3JUeXBlID0gZnVuY3Rpb24oYW5hbHlzaXNUeXBlLCBjaGFydFR5cGUpIHtcbiAgICBpZihfLmlzVW5kZWZpbmVkKHBvcGlseS5jaGFydC5jaGFydE1hcCkpIHtcbiAgICAgIF9idWlsZENoYXJ0TWFwKCk7XG4gICAgfVxuXG4gICAgdmFyIHRvQ29tcGxleCA9IHtcbiAgICAgICdiYXInOiBbJ2JhclN0YWNrZWQnLCAnYmFyR3JvdXBlZCddLFxuICAgICAgJ3NjYXR0ZXJwbG90JzogWydzY2F0dGVycGxvdENhdGVnb3J5J10sXG4gICAgICAnbGluZSc6IFsnbXVsdGlMaW5lJ11cbiAgICB9XG5cbiAgICBpZihhbmFseXNpc1R5cGUgaW4gcG9waWx5LmNoYXJ0LmNoYXJ0TWFwKSB7XG4gICAgICAgIGlmKCFfLmlzVW5kZWZpbmVkKGNoYXJ0VHlwZSkpIHtcbiAgICAgICAgICAgIGlmKF8ocG9waWx5LmNoYXJ0LmNoYXJ0TWFwW2FuYWx5c2lzVHlwZV0uYWxsb3dlZCkuY29udGFpbnMoY2hhcnRUeXBlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjaGFydFR5cGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmKHBvcGlseS5jaGFydC5jaGFydE1hcFthbmFseXNpc1R5cGVdLmRlZmF1bHRDaGFydCA9PT0gY2hhcnRUeXBlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjaGFydFR5cGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmKHRvQ29tcGxleC5oYXNPd25Qcm9wZXJ0eShjaGFydFR5cGUpKSB7XG4gICAgICAgICAgICAgIHZhciB0b1JldHVybjtcbiAgICAgICAgICAgICAgXy5lYWNoKHRvQ29tcGxleFtjaGFydFR5cGVdLCBmdW5jdGlvbihjb21wbGV4Q2hhcnRUeXBlKSB7XG4gICAgICAgICAgICAgICAgaWYoXyhwb3BpbHkuY2hhcnQuY2hhcnRNYXBbYW5hbHlzaXNUeXBlXS5hbGxvd2VkKS5jb250YWlucyhjb21wbGV4Q2hhcnRUeXBlKSkge1xuICAgICAgICAgICAgICAgICAgdG9SZXR1cm4gPSBjb21wbGV4Q2hhcnRUeXBlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmKHBvcGlseS5jaGFydC5jaGFydE1hcFthbmFseXNpc1R5cGVdLmRlZmF1bHRDaGFydCA9PT0gY29tcGxleENoYXJ0VHlwZSkge1xuICAgICAgICAgICAgICAgICAgdG9SZXR1cm4gPSBjb21wbGV4Q2hhcnRUeXBlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBpZighXy5pc1VuZGVmaW5lZCh0b1JldHVybikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9SZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGNoYXJ0VHlwZSArICcgbm90IHBvc3NpYmxlIGZvciAnICsgYW5hbHlzaXNUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoY2hhcnRUeXBlICsgJyBub3QgcG9zc2libGUgZm9yICcgKyBhbmFseXNpc1R5cGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwb3BpbHkuY2hhcnQuY2hhcnRNYXBbYW5hbHlzaXNUeXBlXS5kZWZhdWx0Q2hhcnQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdObyBjaGFydCBmb3IgJyArIGFuYWx5c2lzVHlwZSk7XG4gICAgfVxuICB9O1xuXG4gIHBvcGlseS5jaGFydC5jcmVhdGUgPSBmdW5jdGlvbihhcGlSZXNwb25zZSkge1xuICBcbiAgICB2YXIgZHMgPSBwb3BpbHkuZGF0YXNldChhcGlSZXNwb25zZS5jb2x1bW5zKTtcbiAgICByZXR1cm4ge1xuICAgICAgZGF0YXNldCA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZHM7XG4gICAgICB9LFxuICAgICAgXG4gICAgICBkcmF3OiBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgdmFyIGNhbGN1bGF0aW9uID0gYXBpUmVzcG9uc2UuY2FsY3VsYXRpb247XG4gICAgICAgIHZhciBheGlzQXNzaWdubWVudHMgPSBwb3BpbHkuY2hhcnQuYW5hbHl6ZS5hc3NpZ25Ub0F4aXMoZHMuZ2V0Q29sdW1ucygpLCBvcHRpb25zKTtcbiAgICAgICAgdmFyIGFuYWx5c2lzVHlwZSA9IHBvcGlseS5jaGFydC5hbmFseXplLmRldGVybWluZVR5cGUoZHMuZ2V0Q29sdW1ucygpLCBheGlzQXNzaWdubWVudHMsIGNhbGN1bGF0aW9uKTtcbiAgICAgICAgdmFyIGZvcm1hdHRlZERhdGEgPSBwb3BpbHkuY2hhcnQudXRpbHMuZm9ybWF0RGF0YXNldChhcGlSZXNwb25zZSwgYXhpc0Fzc2lnbm1lbnRzLCBhbmFseXNpc1R5cGUpO1xuICAgICAgICBcbiAgICAgICAgdmFyIGxhYmVscyA9IHBvcGlseS5jaGFydC5nZW5lcmF0ZUxhYmVscyhjYWxjdWxhdGlvbiwgYXhpc0Fzc2lnbm1lbnRzLCBvcHRpb25zLnRyYW5zZm9ybWF0aW9ucyB8fCBbXSk7XG5cbiAgICAgICAgdmFyIGNoYXJ0VHlwZSA9IHBvcGlseS5jaGFydC5nZXRDaGFydEZvclR5cGUoYW5hbHlzaXNUeXBlLCBvcHRpb25zLmNoYXJ0VHlwZSk7XG4gICAgICAgIHZhciBjaGFydENsYXNzID0gcG9waWx5LmNoYXJ0LmNoYXJ0VHlwZXNbY2hhcnRUeXBlXTtcbiAgICAgICAgdmFyIGV4dHJhQ3NzID0gJyc7XG4gICAgICAgIFxuICAgICAgICAvL29wdGlvbnMgPSBfLmV4dGVuZChjaGFydENsYXNzLmRlZmF1bHRzLm9wdGlvbnMsIG9wdGlvbnMpO1xuXG4gICAgICAgIF8uZWFjaChfLmtleXMocG9waWx5LmNoYXJ0LmJhc2VDaGFydC5kZWZhdWx0cy5vcHRpb25zKSwgZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgaWYoIW9wdGlvbnNba2V5XSkge1xuICAgICAgICAgICAgb3B0aW9uc1trZXldID0gcG9waWx5LmNoYXJ0LmJhc2VDaGFydC5kZWZhdWx0cy5vcHRpb25zW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgb3B0aW9ucy51bmlxdWVDbGFzc05hbWUgPSBfLnVuaXF1ZUlkKCdwb3BpbHktaWQtJyk7XG5cbiAgICAgICAgaWYodHlwZW9mIGVsZW1lbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3BpbHktYm94Jyk7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChvcHRpb25zLnVuaXF1ZUNsYXNzTmFtZSk7XG4gICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIGlmKG9wdGlvbnMudGl0bGUpIHtcbiAgICAgICAgICB2YXIgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICB0aXRsZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncG9waWx5LXRpdGxlJyk7XG4gICAgICAgICAgdGl0bGVFbGVtZW50LmlubmVySFRNTCA9IGxhYmVscy50aXRsZTtcbiAgICAgICAgICBlbGVtZW50LmFwcGVuZENoaWxkKHRpdGxlRWxlbWVudCk7XG4gICAgICAgICAgXG4gICAgICAgICAgdmFyIHRpdGxlQ3NzID0gJyc7XG4gICAgICAgICAgaWYob3B0aW9ucy50aXRsZUZvbnRTaXplKVxuICAgICAgICAgICAgdGl0bGVDc3MgKz0gJ2ZvbnQtc2l6ZTogJytvcHRpb25zLnRpdGxlRm9udFNpemUrJzsnO1xuICAgICAgICAgIGlmKG9wdGlvbnMudGl0bGVGb250RmFtaWx5KVxuICAgICAgICAgICAgdGl0bGVDc3MgKz0gJ2ZvbnQtZmFtaWx5OiAnK29wdGlvbnMudGl0bGVGb250RmFtaWx5Kyc7JztcbiAgICAgICAgICBpZihvcHRpb25zLnRpdGxlRm9udENvbG9yKVxuICAgICAgICAgICAgdGl0bGVDc3MgKz0gJ2NvbG9yOiAnK29wdGlvbnMudGl0bGVGb250Q29sb3IrJzsnO1xuICAgICAgICAgIGlmKHRpdGxlQ3NzKVxuICAgICAgICAgICAgZXh0cmFDc3MgPSAnLicrb3B0aW9ucy51bmlxdWVDbGFzc05hbWUrICcgLnBvcGlseS10aXRsZSB7Jyt0aXRsZUNzcysnfSc7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmKGV4dHJhQ3NzKSB7XG4gICAgICAgICAgdmFyIHN0eWxlID0gcG9waWx5LmNoYXJ0LnV0aWxzLmNyZWF0ZVN0eWxlRWxlbWVudChleHRyYUNzcyk7XG4gICAgICAgICAgZWxlbWVudC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gICAgICAgIH1cbiAgXG4gICAgICAgIHZhciBjaGFydEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBjaGFydEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncG9waWx5LWNoYXJ0Jyk7XG4gICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoY2hhcnRFbGVtZW50KTtcbiAgICAgICAgXG4gICAgICAgIHZhciBjaGFydCA9IGNoYXJ0Q2xhc3MucmVuZGVyKGNoYXJ0RWxlbWVudCwgb3B0aW9ucywgZm9ybWF0dGVkRGF0YSk7XG4gICAgICAgIHJldHVybiBjaGFydDtcbiAgICAgIH0sXG4gICAgICBcbiAgICB9XG4gIFxuICB9IFxuXG4gIHBvcGlseS5jaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBhcGlSZXNwb25zZSwgb3B0aW9ucykge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBcbiAgICBpZihvcHRpb25zLmZpbHRlcnMgJiYgIW9wdGlvbnMudHJhbnNmb3JtYXRpb25zKSB7XG4gICAgICBjb25zb2xlLmxvZygnZmlsdGVycyBwcm9wcnR0eSBpcyBkZXByZWNhdGVkLCBwbGVhc2UgcmVuYW1lIGl0IHRvIHRyYW5zZm9ybWF0aW9ucycpXG4gICAgICBvcHRpb25zLnRyYW5zZm9ybWF0aW9ucyA9IG9wdGlvbnMuZmlsdGVycztcbiAgICB9ICAgICAgXG4gICAgdmFyIGNoYXJ0ID0gcG9waWx5LmNoYXJ0LmNyZWF0ZShhcGlSZXNwb25zZSk7XG4gICAgXG4gICAgaWYob3B0aW9ucy50cmFuc2Zvcm1hdGlvbnMpIHtcbiAgICAgIHZhciBkcyA9IGNoYXJ0LmRhdGFzZXQoKTtcbiAgICAgIHBvcGlseS5jaGFydC5hcHBseVRyYW5zZm9ybWF0aW9ucyhkcywgb3B0aW9ucy50cmFuc2Zvcm1hdGlvbnMpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gY2hhcnQuZHJhdyhlbGVtZW50LCBvcHRpb25zKTtcbiAgICBcbiAgfTtcblxuICBwb3BpbHkuY2hhcnQubG9hZGluZ01lc3NhZ2UgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgaWYodHlwZW9mIGVsZW1lbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpO1xuICAgIH1cblxuICAgIHZhciB0ZXh0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGV4dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncG9waWx5LWxvYWRpbmcnKTtcbiAgICB0ZXh0RWxlbWVudC5pbm5lckhUTUwgPSAnV2XigJlyZSBkb2luZyBzb21lIGNhbGN1bGF0aW9ucyB0byBtYWtlIHRoaXMgY2hhcnQgcG9zc2libGUuIE9uZSBtb21lbnQuLi4nO1xuICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgZWxlbWVudC5hcHBlbmRDaGlsZCh0ZXh0RWxlbWVudCk7XG4gIH07XG5cbiAgdmFyIGdldFRoZW4gPSBmdW5jdGlvbihtZXRob2QsIHNsdWcsIHNlcnZlck9wdGlvbnMsIHBvbGwsIGVsZW1lbnQsIGNhbGxiYWNrKSB7XG4gICAgICBwb3BpbHkuYXBpW21ldGhvZF0oc2x1Zywgc2VydmVyT3B0aW9ucywgZnVuY3Rpb24oZXJyLCBhcGlSZXNwb25zZSkge1xuICAgICAgICBpZihhcGlSZXNwb25zZS5oYXNPd25Qcm9wZXJ0eSgnaW5zaWdodCcpICYmIGFwaVJlc3BvbnNlLmluc2lnaHQgPT09ICdub3QgZm91bmQnKSB7XG4gICAgICAgICAgaWYocG9sbCAmJiBhcGlSZXNwb25zZS5oYXNPd25Qcm9wZXJ0eSgnc291cmNlX3N0YXR1cycpICYmIGFwaVJlc3BvbnNlLnNvdXJjZV9zdGF0dXMgIT09ICdmaW5pc2hlZCcpIHtcbiAgICAgICAgICAgIC8vIGFkZCB3YWl0aW5nIHRleHQgdG8gZWxlbWVudFxuICAgICAgICAgICAgcG9waWx5LmNoYXJ0LmxvYWRpbmdNZXNzYWdlKGVsZW1lbnQpO1xuXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICBnZXRUaGVuKG1ldGhvZCwgc2x1Zywgc2VydmVyT3B0aW9ucywgcG9sbCwgZWxlbWVudCwgY2FsbGJhY2spO1xuICAgICAgICAgICAgfSwxMDAwKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ05vIGluc2lnaHQgZm91bmQgZm9yIHBhcmFtcyAnICsgSlNPTi5zdHJpbmdpZnkoc2VydmVyT3B0aW9ucykpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBjYWxsYmFjayhlcnIsIGFwaVJlc3BvbnNlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH07XG5cbiAgcG9waWx5LmNoYXJ0LmdldEFuZFJlbmRlciA9IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB2YXIgY2hhcnRPcHRpb25zID0ge307XG4gICAgdmFyIHNlcnZlck9wdGlvbnMgPSB7fTtcblxuICAgIHZhciBhdmFpbGFibGVDaGFydE9wdGlvbnMgPSB7XG4gICAgICAnY2hhcnRUeXBlJzogJ2NoYXJ0VHlwZScsXG4gICAgICAnY29sb3JzJzogJ2NvbG9ycycsXG4gICAgICAndHJhbnNmb3JtYXRpb25zJzogJ3RyYW5zZm9ybWF0aW9ucycsXG4gICAgICAnZmlsdGVycyc6ICd0cmFuc2Zvcm1hdGlvbnMnLFxuICAgICAgJ3hMYWJlbCc6ICd4TGFiZWwnLFxuICAgICAgJ3lMYWJlbCc6ICd5TGFiZWwnLFxuICAgICAgJ3hDb2x1bW4nOiAneENvbHVtbicsXG4gICAgICAnZ3JvdXBCeUNvbHVtbic6ICdncm91cEJ5Q29sdW1uJyxcbiAgICAgICdoZWlnaHQnOiAnaGVpZ2h0JyxcbiAgICAgICd3aWR0aCc6ICd3aWR0aCcsXG4gICAgICAncm90YXRlZCc6ICdyb3RhdGVkJyxcbiAgICAgICd0aXRsZSc6ICd0aXRsZScsXG4gICAgICAneE9yZGVyJzogJ29yZGVyJyxcbiAgICAgICdiYXJTaXplJzogJ2JhclNpemUnLFxuICAgICAgJ2xpbmVTaXplJzogJ2xpbmVTaXplJyxcbiAgICAgICdwb2ludFNpemUnOiAncG9pbnRTaXplJyxcbiAgICAgICd0aXRsZUZvbnRGYW1pbHknOiAndGl0bGVGb250RmFtaWx5JyxcbiAgICAgICd0aXRsZUZvbnRTaXplJzogJ3RpdGxlRm9udFNpemUnLFxuICAgICAgJ3RpdGxlRm9udENvbG9yJzogJ3RpdGxlRm9udENvbG9yJyxcbiAgICAgICd4R3JpZCc6ICd4R3JpZCcsXG4gICAgICAneUdyaWQnOiAneUdyaWQnLFxuICAgICAgJ3RpbWVJbnRlcnZhbCc6ICdpbnRlcnZhbCcsXG4gICAgICAndGltZV9pbnRlcnZhbCc6ICdpbnRlcnZhbCcsXG4gICAgfTtcblxuICAgIHZhciBhdmFpbGFibGVTZXJ2ZXJPcHRpb25zID0ge1xuICAgICAgJ2NvbHVtbnMnOiAnY29sdW1ucycsXG4gICAgICAnY2FsY3VsYXRpb24nOiAnaW5zaWdodF9hY3Rpb25zJyxcbiAgICAgICd0aW1lSW50ZXJ2YWwnOiAndGltZV9pbnRlcnZhbCcsXG4gICAgICAndGltZV9pbnRlcnZhbCc6ICd0aW1lX2ludGVydmFsJyxcbiAgICAgICdpbnNpZ2h0X2FjdGlvbic6ICdpbnNpZ2h0X2FjdGlvbnMnLFxuICAgICAgJ2FuYWx5c2lzVHlwZSc6ICdpbnNpZ2h0X3R5cGVzJ1xuICAgIH07XG5cbiAgICBfLmVhY2goXy5rZXlzKGF2YWlsYWJsZUNoYXJ0T3B0aW9ucyksIGZ1bmN0aW9uKG9wdGlvbikge1xuICAgICAgaWYob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShvcHRpb24pKSB7XG4gICAgICAgIGNoYXJ0T3B0aW9uc1thdmFpbGFibGVDaGFydE9wdGlvbnNbb3B0aW9uXV0gPSBvcHRpb25zW29wdGlvbl07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfLmVhY2goXy5rZXlzKGF2YWlsYWJsZVNlcnZlck9wdGlvbnMpLCBmdW5jdGlvbihvcHRpb24pIHtcbiAgICAgIGlmKG9wdGlvbnMuaGFzT3duUHJvcGVydHkob3B0aW9uKSkge1xuICAgICAgICBpZihbJ2NhbGN1bGF0aW9uJywgJ2luc2lnaHRfYWN0aW9uJywgJ2FuYWx5c2lzVHlwZSddLmluZGV4T2Yob3B0aW9uKSE9PS0xKVxuICAgICAgICAgIHNlcnZlck9wdGlvbnNbYXZhaWxhYmxlU2VydmVyT3B0aW9uc1tvcHRpb25dXSA9IFtvcHRpb25zW29wdGlvbl1dO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgc2VydmVyT3B0aW9uc1thdmFpbGFibGVTZXJ2ZXJPcHRpb25zW29wdGlvbl1dID0gb3B0aW9uc1tvcHRpb25dO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgc2VydmVyT3B0aW9ucy5mdWxsID0gdHJ1ZTtcbiAgICB2YXIgc2x1ZywgbWV0aG9kO1xuXG4gICAgaWYob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnaW5zaWdodCcpKSB7XG4gICAgICBzbHVnID0gb3B0aW9ucy5pbnNpZ2h0O1xuICAgICAgbWV0aG9kID0gJ2dldEluc2lnaHQnO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGlmKCFvcHRpb25zLmhhc093blByb3BlcnR5KCdzb3VyY2UnKSkge1xuICAgICAgICBjb25zb2xlLndhcm4oJ0VpdGhlciB0aGUgaW5zaWdodCBvciBzb3VyY2UgcHJvcGVydHkgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgc2VydmVyT3B0aW9ucy5zaW5nbGUgPSB0cnVlO1xuXG4gICAgICBzbHVnID0gb3B0aW9ucy5zb3VyY2U7XG4gICAgICBtZXRob2QgPSAnZ2V0SW5zaWdodHMnO1xuICAgIH1cblxuICAgIGdldFRoZW4obWV0aG9kLCBzbHVnLCBzZXJ2ZXJPcHRpb25zLCBvcHRpb25zLnBvbGwsIGVsZW1lbnQsIGZ1bmN0aW9uKGVyciwgYXBpUmVzcG9uc2UpIHtcbiAgICAgICAgcG9waWx5LmNoYXJ0LnJlbmRlcihlbGVtZW50LCBhcGlSZXNwb25zZSwgY2hhcnRPcHRpb25zKTtcbiAgICB9KTtcbiAgfTtcblxuICBwb3BpbHkuY2hhcnQuYXBwbHlUcmFuc2Zvcm1hdGlvbnMgPSBmdW5jdGlvbihkcywgdHJhbnNmb3JtYXRpb25zKSB7XG4gICAgdHJhbnNmb3JtYXRpb25zLmZvckVhY2goZnVuY3Rpb24odHJhbnNmb3JtYXRpb24pIHtcbiAgICAgIGlmKFsnY291bnQnLCAnY291bnRVbmlxdWUnXS5pbmRleE9mKHRyYW5zZm9ybWF0aW9uLm9wKSAhPT0gLTEpIHtcbiAgICAgICAgcG9waWx5LmNoYXJ0LmFwcGx5R3JvdXBEYXRhKGRzLCB0cmFuc2Zvcm1hdGlvbik7XG4gICAgICB9XG4gICAgICBlbHNlIGlmKCdyZXBsYWNlJyA9PSB0cmFuc2Zvcm1hdGlvbi5vcCkge1xuICAgICAgICBkcy5yZXBsYWNlVmFsdWVzKHRyYW5zZm9ybWF0aW9uLmNvbHVtbiwgdHJhbnNmb3JtYXRpb24ucmVwbGFjZW1lbnRzKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBwb3BpbHkuY2hhcnQuYXBwbHlGaWx0ZXIoZHMsIHRyYW5zZm9ybWF0aW9uKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAvKlxuICAgIGZpbHRlciA9IFt7XG4gICAgICBjb2x1bW46IDxjb2x1bW4tbmFtZT4sXG4gICAgICBvcDogbm9uZXxlcXxub3RlcSxcbiAgICAgIHZhbHVlczogWzxhcnJheS1vZi12YWx1ZXNdPlxuICAgIH0sIC4uIF1cbiAgKi9cbiAgcG9waWx5LmNoYXJ0LmFwcGx5RmlsdGVyID0gZnVuY3Rpb24oZHMsIGZpbHRlcikge1xuICAgIFxuICAgIC8vIEkgdGhpbmsgdGhpcyBjb3VudFVuaXF1ZSBzaG91bGQgbm90IGJlIGhlcmUhXG4gICAgaWYoZmlsdGVyLm9wID09ICdkaXN0aW5jdCcgfHwgZmlsdGVyLm9wID09ICdjb3VudFVuaXF1ZScpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdmaWx0ZXIgY291bnRVbmlxdWUgaXMgZGVwcmVjYXRlZCBwbGVhc2UgZG9udCB1c2UgaXQsIHVzZSBcImdyb3VwRGF0YVwiIGluc3RlYWQhJyk7XG4gICAgICBkcy5jb3VudFVuaXF1ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkcy5maWx0ZXIoZmlsdGVyLmNvbHVtbiwgZmlsdGVyLm9wIHx8ICdlcScsIGZpbHRlci52YWx1ZSB8fCBmaWx0ZXIudmFsdWVzKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGRzO1xuICB9O1xuICBcbiAgLypcbiAgICBncm91cERhdGEgPSB7XG4gICAgICBjb2x1bW46IDxjb2x1bW4tbmFtZS10by1ncm91cC1ieT4sXG4gICAgICBvcDogY291bnR8Y291bnRVbmlxdWUsXG4gICAgICBncm91cEludG86IDxuZXctY29sdW1uLXdpdGgtYWdncmVnYXRlZC12YWx1ZXM+LFxuICAgICAgY3VzdG9tRnVuY3Rpb246IDxvcHRpb25hbC1jdXN0b20tYWdncmVnYXRpb24tZnVuY3Rpb24+XG4gICAgICBjdXN0b21EYXRhVHlwZTogPG9wdGlvbmFsLWN1c3RvbS10eXBlLW9mYWdncmVnYXRpb25zPlxuICAgIH1cbiAgKi9cbiAgcG9waWx5LmNoYXJ0LmFwcGx5R3JvdXBEYXRhID0gZnVuY3Rpb24oZHMsIGdyb3VwRGF0YSkge1xuICAgIFxuICAgIGlmKGdyb3VwRGF0YS5jdXN0b21GdW5jdGlvbikge1xuICAgICAgdmFyIGdyb3VwRnVuYyA9IGN1c3RvbUZ1bmN0aW9uO1xuICAgIH1cbiAgICBlbHNlIGlmKFsnY291bnQnLCAnY291bnRVbmlxdWUnXS5pbmRleE9mKGdyb3VwRGF0YS5vcCkgIT09IC0xKSB7XG4gICAgICB2YXIgZ3JvdXBGdW5jID0gcG9waWx5LmRhdGFzZXRbZ3JvdXBEYXRhLm9wXVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1VucmVjb2duaXplciBncm91cGluZyBhZ3JlZ2F0aW9uIGZ1bmN0aW9uJyk7XG4gICAgICByZXR1cm4gZHM7XG4gICAgfVxuICAgIFxuICAgIGRzLmdyb3VwQnkoZ3JvdXBEYXRhLmNvbHVtbiwgZ3JvdXBGdW5jLCBncm91cERhdGEuY3VzdG9tRGF0YVR5cGUgfHwgZ3JvdXBGdW5jLmRhdGFUeXBlLCBncm91cERhdGEuZ3JvdXBJbnRvIHx8IGdyb3VwRnVuYy5jb2x1bW5MYWJlbCk7XG4gICAgXG4gICAgcmV0dXJuIGRzO1xuICB9O1xuICBcbiAgXG4gIHZhciBfYnVpbGRDaGFydE1hcCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjaGFydE1hcCA9IHt9O1xuXG4gICAgZm9yKHZhciBjaGFydFR5cGUgaW4gcG9waWx5LmNoYXJ0LmNoYXJ0VHlwZXMpIHtcbiAgICAgIHZhciBjaGFydE9iaiA9IHBvcGlseS5jaGFydC5jaGFydFR5cGVzW2NoYXJ0VHlwZV07XG4gICAgICBfLmVhY2goY2hhcnRPYmouZGVmYXVsdEZvciwgZnVuY3Rpb24oYW5hbHlzaXNUeXBlKSB7XG4gICAgICAgIGNoYXJ0TWFwW2FuYWx5c2lzVHlwZV0gPSBjaGFydE1hcFthbmFseXNpc1R5cGVdIHx8IHt9O1xuICAgICAgICBjaGFydE1hcFthbmFseXNpc1R5cGVdLmFsbG93ZWQgPSBjaGFydE1hcFthbmFseXNpc1R5cGVdLmFsbG93ZWQgfHwgW107XG4gICAgICAgIGNoYXJ0TWFwW2FuYWx5c2lzVHlwZV0uZGVmYXVsdENoYXJ0ID0gY2hhcnRUeXBlO1xuICAgICAgICBjaGFydE1hcFthbmFseXNpc1R5cGVdLmFsbG93ZWQucHVzaChjaGFydFR5cGUpO1xuICAgICAgfSk7XG5cbiAgICAgIF8uZWFjaChjaGFydE9iai5hY2NlcHRzLCBmdW5jdGlvbihhbmFseXNpc1R5cGUpIHtcbiAgICAgICAgY2hhcnRNYXBbYW5hbHlzaXNUeXBlXSA9IGNoYXJ0TWFwW2FuYWx5c2lzVHlwZV0gfHwge307XG4gICAgICAgIGNoYXJ0TWFwW2FuYWx5c2lzVHlwZV0uYWxsb3dlZCA9IGNoYXJ0TWFwW2FuYWx5c2lzVHlwZV0uYWxsb3dlZCB8fCBbXTtcbiAgICAgICAgY2hhcnRNYXBbYW5hbHlzaXNUeXBlXS5hbGxvd2VkLnB1c2goY2hhcnRUeXBlKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHBvcGlseS5jaGFydC5jaGFydE1hcCA9IGNoYXJ0TWFwO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGMzQ3VzdG9taXphdGlvbnMoKSB7XG4gICAgYzMuY2hhcnQuaW50ZXJuYWwuZm4ub2xkR2V0SG9yaXpvbnRhbEF4aXNIZWlnaHQgPSBjMy5jaGFydC5pbnRlcm5hbC5mbi5nZXRIb3Jpem9udGFsQXhpc0hlaWdodDtcbiAgICBjMy5jaGFydC5pbnRlcm5hbC5mbi5nZXRIb3Jpem9udGFsQXhpc0hlaWdodCA9IGZ1bmN0aW9uKGF4aXNJZCkge1xuICAgICAgdmFyICQkID0gdGhpcywgY29uZmlnID0gdGhpcy5jb25maWc7XG4gICAgICB2YXIgaCA9ICQkLm9sZEdldEhvcml6b250YWxBeGlzSGVpZ2h0KGF4aXNJZCk7XG4gICAgICBcbiAgICAgIGlmIChheGlzSWQgPT09ICd5JyAmJiBjb25maWcuYXhpc19yb3RhdGVkICYmIGNvbmZpZy5heGlzX3hfdGlja19yb3RhdGUpIHtcbiAgICAgICAgaCA9IDMwICsgJCQuYXhpcy5nZXRNYXhUaWNrV2lkdGgoYXhpc0lkKSAqIE1hdGguY29zKE1hdGguUEkgKiAoOTAgLSBjb25maWcuYXhpc194X3RpY2tfcm90YXRlKSAvIDE4MCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gaDtcbiAgICB9XG4gICAgYzMuY2hhcnQuaW50ZXJuYWwuZm4ub2xkZ2V0QXhpc1dpZHRoQnlBeGlzSWQgPSBjMy5jaGFydC5pbnRlcm5hbC5mbi5nZXRBeGlzV2lkdGhCeUF4aXNJZDtcbiAgICBjMy5jaGFydC5pbnRlcm5hbC5mbi5nZXRBeGlzV2lkdGhCeUF4aXNJZCA9IGZ1bmN0aW9uKGF4aXNJZCkge1xuICAgICAgdmFyICQkID0gdGhpcywgY29uZmlnID0gdGhpcy5jb25maWc7XG4gICAgICByZXR1cm4gJCQub2xkZ2V0QXhpc1dpZHRoQnlBeGlzSWQoYXhpc0lkKS0xNDtcbiAgICB9O1xuICB9XG4gIFxuICBjM0N1c3RvbWl6YXRpb25zKCk7XG5cbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgICAgZGVmaW5lKFwicG9waWx5XCIsIFtdLCBmdW5jdGlvbiAoKSB7IHJldHVybiBjMzsgfSk7XG4gIH0gZWxzZSBpZiAoJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBleHBvcnRzICYmICd1bmRlZmluZWQnICE9PSB0eXBlb2YgbW9kdWxlKSB7XG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IHBvcGlseTtcbiAgfSBlbHNlIHtcbiAgICAgIHdpbmRvdy5wb3BpbHkgPSBwb3BpbHk7XG4gIH1cbiAgICBcbn0pKHdpbmRvdyk7XG4iLCIvKipcbkFuYWx5emUgZGF0YSBmcm9tIHRoZSBQb3BpbHkgQVBJIGFuZCBwcmVwYXJlIGZvciByZW5kZXJpbmdcbiovXG5cbihmdW5jdGlvbih3aW5kb3cpIHtcbiAgICB2YXIgY2F0ZWdvcmljYWxzID0gW1xuICAgICAgICAnY2F0ZWdvcnknLFxuICAgICAgICAnc3RhdGUnLFxuICAgICAgICAnY291bnRyeScsXG4gICAgICAgICd6aXBjb2RlJyxcbiAgICAgICAgJ3Jvd2xhYmVsJ1xuICAgIF07XG5cbiAgICB2YXIgbnVtZXJhbHMgPSBbXG4gICAgICAgICdudW1lcmljJyxcbiAgICAgICAgJ2N1cnJlbmN5J1xuICAgIF07XG5cbiAgICB2YXIgaXNBID0gZnVuY3Rpb24oZGF0YVR5cGUsIGNvbHVtbikge1xuICAgICAgICBpZihfLmlzVW5kZWZpbmVkKGNvbHVtbikpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdHlwZUxpc3QgPSBkYXRhVHlwZSA9PT0gJ251bWJlcicgPyBudW1lcmFscyA6IGNhdGVnb3JpY2FscztcbiAgICAgICAgcmV0dXJuIF8odHlwZUxpc3QpLmNvbnRhaW5zKGNvbHVtbi5kYXRhX3R5cGUpO1xuICAgIH07XG5cbiAgICB2YXIgaXNOdW1lcmljID0gZnVuY3Rpb24oY29sdW1uKSB7XG4gICAgICAgIHJldHVybiBpc0EoJ251bWJlcicsIGNvbHVtbik7XG4gICAgfTtcblxuICAgIHZhciBpc0NhdGVnb3JpY2FsID0gZnVuY3Rpb24oY29sdW1uKSB7XG4gICAgICAgIHJldHVybiBpc0EoJ2NhdGVnb3J5JywgY29sdW1uKTtcbiAgICB9O1xuXG4gICAgdmFyIGhhc1NpbmdsZUVxdWFsaXR5ID0gZnVuY3Rpb24oZmlsdGVycykge1xuICAgICAgICByZXR1cm4gXy5zb21lKGZpbHRlcnMsIGZ1bmN0aW9uKF9maWx0ZXIpIHtcbiAgICAgICAgICAgIHZhciBvcCA9IF9maWx0ZXIub3AgfHwgJ2VxJztcbiAgICAgICAgICAgIGlmKG9wID09PSAnZXEnICYmIF9maWx0ZXIudmFsdWVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgdmFyIGhhc0Rpc3RpbmN0ID0gZnVuY3Rpb24oZmlsdGVycykge1xuICAgICAgICByZXR1cm4gXy5zb21lKGZpbHRlcnMsIGZ1bmN0aW9uKF9maWx0ZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBfZmlsdGVyLm9wID09PSAnZGlzdGluY3QnIHx8IF9maWx0ZXIub3AgPT09ICdjb3VudFVuaXF1ZSc7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2YXIgYXNzaWduVG9BeGlzID0gZnVuY3Rpb24oY29sdW1ucywgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgICAgdmFyIGZpbHRlcnMgPSBvcHRpb25zLmZpbHRlcnM7XG4gICAgICAgIHZhciBheGlzQXNzaWdubWVudHMgPSB7fTtcbiAgICAgICAgdmFyIGZpbHRlclJlZiA9IHt9O1xuXG4gICAgICAgIHZhciBhc3NpZ25lZCA9IFtdO1xuICAgICAgICB2YXIgaXNBc3NpZ25lZCA9IGZ1bmN0aW9uKHByb3ApIHtcbiAgICAgICAgICAgIHJldHVybiBfKGFzc2lnbmVkKS5jb250YWlucyhwcm9wKTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZighXy5pc1VuZGVmaW5lZChmaWx0ZXJzKSkge1xuICAgICAgICAgICAgXy5lYWNoKGZpbHRlcnMsIGZ1bmN0aW9uKGNvbHVtbkZpbHRlcikge1xuICAgICAgICAgICAgICAgIF8uZWFjaChjb2x1bW5zLCBmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoIWZpbHRlclJlZi5oYXNPd25Qcm9wZXJ0eShjb2x1bW4uY29sdW1uX2hlYWRlcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlclJlZltjb2x1bW4uY29sdW1uX2hlYWRlcl0gPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZihjb2x1bW4uY29sdW1uX2hlYWRlciA9PT0gY29sdW1uRmlsdGVyLmNvbHVtbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyUmVmW2NvbHVtbi5jb2x1bW5faGVhZGVyXS5wdXNoKGNvbHVtbkZpbHRlcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGhhc1NpbmdsZU9yRGlzdGluY3QgPSBmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgICAgIGlmKCFmaWx0ZXJSZWYuaGFzT3duUHJvcGVydHkoY29sdW1uLmNvbHVtbl9oZWFkZXIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZihoYXNEaXN0aW5jdChmaWx0ZXJSZWZbY29sdW1uLmNvbHVtbl9oZWFkZXJdKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZihoYXNTaW5nbGVFcXVhbGl0eShmaWx0ZXJSZWZbY29sdW1uLmNvbHVtbl9oZWFkZXJdKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH07XG5cbiAgICAgICAgXG4gICAgICAgIC8vIEFsbG93IGZvciB1c2VyIHRvIHNldCB4LHouIEluIG9yZGVyIGZvciB0aGlzIHRvIGJlIHBvc3NpYmxlXG4gICAgICAgIC8vIHdlIG5lZWQgdG8gZW5zdXJlIHRoYXQgdGhlc2UgYXJlIHRoZSBmaXJzdCBjb2x1bW5zIHdlIGNoZWNrLlxuICAgICAgICB2YXIgdXNlQ29sdW1ucyA9IFtdLFxuICAgICAgICAgICAgeENvbHVtbixcbiAgICAgICAgICAgIHpDb2x1bW47XG5cbiAgICAgICAgaWYob3B0aW9ucy54Q29sdW1uKSB7XG4gICAgICAgICAgICB4Q29sdW1uID0gXy5maW5kKGNvbHVtbnMsIGZ1bmN0aW9uKGNvbHVtbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb2x1bW4uY29sdW1uX2hlYWRlciA9PT0gb3B0aW9ucy54Q29sdW1uO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZih4Q29sdW1uKSB7XG4gICAgICAgICAgICAgICAgdXNlQ29sdW1ucy5wdXNoKHhDb2x1bW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmKG9wdGlvbnMuZ3JvdXBCeUNvbHVtbikge1xuICAgICAgICAgICAgekNvbHVtbiA9IF8uZmluZChjb2x1bW5zLCBmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sdW1uLmNvbHVtbl9oZWFkZXIgPT09IG9wdGlvbnMuZ3JvdXBCeUNvbHVtbjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYoekNvbHVtbikge1xuICAgICAgICAgICAgICAgIHVzZUNvbHVtbnMucHVzaCh6Q29sdW1uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciB1c2VkSGVhZGVycyA9IF8ucGx1Y2sodXNlQ29sdW1ucywgJ2NvbHVtbl9oZWFkZXInKTtcbiAgICAgICAgXy5lYWNoKGNvbHVtbnMsIGZ1bmN0aW9uKGNvbHVtbikge1xuICAgICAgICAgICAgaWYoIV8odXNlZEhlYWRlcnMpLmNvbnRhaW5zKGNvbHVtbi5jb2x1bW5faGVhZGVyKSkge1xuICAgICAgICAgICAgICAgIHVzZUNvbHVtbnMucHVzaChjb2x1bW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZih1c2VDb2x1bW5zLmxlbmd0aCA8IGNvbHVtbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB1c2VDb2x1bW5zID0gY29sdW1ucztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE5vdyB0aGF0IHdlIGhhdmUgYSBkZWZpbml0ZSBjb2x1bW4gb3JkZXIsIHdlIGNhbiBpbnNwZWN0XG4gICAgICAgIC8vIHRoZSBjb2x1bW5zLiBcbiAgICAgICAgdmFyIGNvbHVtbiwgZGF0YVR5cGU7XG4gICAgICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IHVzZUNvbHVtbnMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICBjb2x1bW4gPSB1c2VDb2x1bW5zW2luZGV4XTtcbiAgICAgICAgICAgIGRhdGFUeXBlID0gY29sdW1uLmRhdGFfdHlwZTtcblxuICAgICAgICAgICAgLy8gQ2hlY2sgdXNlciBvcHRpb25zXG4gICAgICAgICAgICBpZihvcHRpb25zLnhDb2x1bW4gJiYgY29sdW1uLmNvbHVtbl9oZWFkZXIgPT09IG9wdGlvbnMueENvbHVtbikge1xuICAgICAgICAgICAgICAgIGF4aXNBc3NpZ25tZW50cy54ID0gY29sdW1uO1xuICAgICAgICAgICAgICAgIGFzc2lnbmVkLnB1c2goJ3gnKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYob3B0aW9ucy5ncm91cEJ5Q29sdW1uICYmIGNvbHVtbi5jb2x1bW5faGVhZGVyID09PSBvcHRpb25zLmdyb3VwQnlDb2x1bW4pIHtcbiAgICAgICAgICAgICAgICBheGlzQXNzaWdubWVudHMueiA9IGNvbHVtbjtcbiAgICAgICAgICAgICAgICBhc3NpZ25lZC5wdXNoKCd6Jyk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGNoZWNrIGZpbHRlcnNcbiAgICAgICAgICAgIGlmKGZpbHRlclJlZi5oYXNPd25Qcm9wZXJ0eShjb2x1bW4uY29sdW1uX2hlYWRlcikgJiYgZmlsdGVyUmVmW2NvbHVtbi5jb2x1bW5faGVhZGVyXS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgY29sdW1uIGhhcyBmaWx0ZXIgd2hlcmUgYW5kIDEgdmFsdWUsIGl0IGlzIHpcblxuICAgICAgICAgICAgICAgIGlmKGhhc1NpbmdsZUVxdWFsaXR5KGZpbHRlclJlZltjb2x1bW4uY29sdW1uX2hlYWRlcl0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmKGlzQXNzaWduZWQoJ3onKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnoyID0gY29sdW1uO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXNzaWduZWQucHVzaCgnejInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnogPSBjb2x1bW47XG4gICAgICAgICAgICAgICAgICAgICAgICBhc3NpZ25lZC5wdXNoKCd6Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIGNvbHVtbiBoYXMgZmlsdGVyIGRpc3RpbmN0L2NvdW50VW5pcXVlXG4gICAgICAgICAgICAgICAgZWxzZSBpZihoYXNEaXN0aW5jdChmaWx0ZXJSZWZbY29sdW1uLmNvbHVtbl9oZWFkZXJdKSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiB3ZSBhbHJlYWR5IGFzc2lnbmVkIHoyLCB0aGVuIGl0IGlzIHpcbiAgICAgICAgICAgICAgICAgICAgaWYoaXNBc3NpZ25lZCgneCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBheGlzQXNzaWdubWVudHMueiA9IGNvbHVtbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzc2lnbmVkLnB1c2goJ3onKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnggPSBjb2x1bW47XG4gICAgICAgICAgICAgICAgICAgICAgICBhc3NpZ25lZC5wdXNoKCd4Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsgXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gZ2VvXG4gICAgICAgICAgICBpZihkYXRhVHlwZSA9PT0gJ2Nvb3JkaW5hdGUnKSB7XG4gICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnggPSBjb2x1bW47XG4gICAgICAgICAgICAgICAgYXNzaWduZWQucHVzaCgneCcpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiBjb2x1bW4gaXMgbnVtZXJpY1xuICAgICAgICAgICAgaWYoaXNOdW1lcmljKGNvbHVtbikpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiB3ZSBhbHJlYWR5IGhhdmUgYSB5XG4gICAgICAgICAgICAgICAgaWYoaXNBc3NpZ25lZCgneScpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZXJlIGFyZSB0aHJlZSBjb2x1bW5zIGl0IGlzIHkyXG4gICAgICAgICAgICAgICAgICAgIGlmKGNvbHVtbnMubGVuZ3RoID4gMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnkyID0gY29sdW1uO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXNzaWduZWQucHVzaCgneTInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHR3byBjb2x1bW5zIGl0IGlzIHhcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBheGlzQXNzaWdubWVudHMueCA9IGNvbHVtbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzc2lnbmVkLnB1c2goJ3gnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGVsc2UgaXQgaXMgeVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBheGlzQXNzaWdubWVudHMueSA9IGNvbHVtbjtcbiAgICAgICAgICAgICAgICAgICAgYXNzaWduZWQucHVzaCgneScpO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGVsc2UgaWYoZGF0YVR5cGUgPT09ICdkYXRldGltZScgJiYgIWhhc1NpbmdsZU9yRGlzdGluY3QoY29sdW1uKSkge1xuICAgICAgICAgICAgICAgIGF4aXNBc3NpZ25tZW50cy54ID0gY29sdW1uO1xuICAgICAgICAgICAgICAgIGFzc2lnbmVkLnB1c2goJ3gnKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgY29sdW1uIGlzIGNhdGVnb3J5XG4gICAgICAgICAgICBlbHNlIGlmKGlzQ2F0ZWdvcmljYWwoY29sdW1uKSkge1xuICAgICAgICAgICAgICAgIC8vIGlmIHdlIGFscmVhZHkgaGF2ZSB4XG4gICAgICAgICAgICAgICAgaWYoaXNBc3NpZ25lZCgneCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHdlIGFscmVhZHkgaGF2ZSB6XG4gICAgICAgICAgICAgICAgICAgIGlmKGlzQXNzaWduZWQoJ3onKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnoyID0gY29sdW1uO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXNzaWduZWQucHVzaCgnejInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnogPSBjb2x1bW47XG4gICAgICAgICAgICAgICAgICAgICAgICBhc3NpZ25lZC5wdXNoKCd6Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnggPSBjb2x1bW47XG4gICAgICAgICAgICAgICAgICAgIGFzc2lnbmVkLnB1c2goJ3gnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBheGlzQXNzaWdubWVudHM7XG4gICAgfTtcblxuICAgIHZhciBkZXRlcm1pbmVUeXBlID0gZnVuY3Rpb24oY29sdW1ucywgYXhpc0Fzc2lnbm1lbnRzLCBjYWxjdWxhdGlvbikge1xuICAgICAgICAvL2NvbnNvbGUubG9nKGF4aXNBc3NpZ25tZW50cyk7XG5cbiAgICAgICAgdmFyIHR5cGVzID0ge1xuICAgICAgICAgICAgY291bnRCeUNhdGVnb3J5OiAnY291bnRfYnlfY2F0ZWdvcnknLFxuICAgICAgICAgICAgYXZlcmFnZUJ5Q2F0ZWdvcnk6ICdhdmVyYWdlX2J5X2NhdGVnb3J5JyxcbiAgICAgICAgICAgIHN1bUJ5Q2F0ZWdvcnk6ICdzdW1fYnlfY2F0ZWdvcnknLFxuICAgICAgICAgICAgZ2VvUG9pbnRzOiAnZ2VvX3BvaW50cycsXG4gICAgICAgICAgICBnZW9Qb2ludHNDYXRlZ29yeTogJ2dlb19wb2ludHNfY2F0ZWdvcnknLFxuICAgICAgICAgICAgZ2VvUG9pbnRzQW1vdW50OiAnZ2VvX3BvaW50c19hbW91bnQnLFxuICAgICAgICAgICAgZ2VvUG9pbnRzQ2F0ZWdvcnlBbW91bnQ6ICdnZW9fcG9pbnRzX2NhdGVnb3J5X2Ftb3VudCcsXG4gICAgICAgICAgICBzY2F0dGVycGxvdDogJ3NjYXR0ZXJwbG90JyxcbiAgICAgICAgICAgIHNjYXR0ZXJwbG90QnlDYXRlZ29yeTogJ3NjYXR0ZXJwbG90X2J5X2NhdGVnb3J5JyxcbiAgICAgICAgICAgIGNvdW50UGVyQ2F0ZWdvcnlCeURhdGV0aW1lOiAnY291bnRfcGVyX2NhdGVnb3J5X2J5X2RhdGV0aW1lJyxcbiAgICAgICAgICAgIHJhdGlvUGVyQ2F0ZWdvcnk6ICdyYXRpb19wZXJfY2F0ZWdvcnknLFxuICAgICAgICAgICAgY291bnRCeVN0YXRlOiAnY291bnRfYnlfc3RhdGUnLFxuICAgICAgICAgICAgY291bnRCeUNvdW50cnk6ICdjb3VudF9ieV9jb3VudHJ5J1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBkZWZhdWx0VHlwZSA9IChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmKGNhbGN1bGF0aW9uPT09J2NvbXBhcmlzb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdzY2F0dGVycGxvdCc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciB0eXBlU3RyID0gY2FsY3VsYXRpb247XG4gICAgICAgICAgICB2YXIgc29ydGVkQ29sdW1ucyA9IF8oY29sdW1ucykuc29ydEJ5KCdkYXRhX3R5cGUnKTtcblxuICAgICAgICAgICAgXy5lYWNoKHNvcnRlZENvbHVtbnMsIGZ1bmN0aW9uKGNvbHVtbikge1xuICAgICAgICAgICAgICAgIGlmKCFpc051bWVyaWMoY29sdW1uKSkge1xuICAgICAgICAgICAgICAgICAgICB0eXBlU3RyICs9ICdfYnlfJyArIGNvbHVtbi5kYXRhX3R5cGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiB0eXBlU3RyO1xuICAgICAgICB9KSgpO1xuXG4gICAgICAgIC8vIGdlb19wb2ludHNcbiAgICAgICAgaWYoYXhpc0Fzc2lnbm1lbnRzLnguZGF0YV90eXBlID09PSAnY29vcmRpbmF0ZScpIHtcbiAgICAgICAgICAgIGlmKGF4aXNBc3NpZ25tZW50cy5oYXNPd25Qcm9wZXJ0eSgneicpKSB7XG4gICAgICAgICAgICAgICAgaWYoYXhpc0Fzc2lnbm1lbnRzLnoudmFsdWVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBpZihheGlzQXNzaWdubWVudHMuaGFzT3duUHJvcGVydHkoJ3knKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVzLmdlb1BvaW50c0Ftb3VudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZXMuZ2VvUG9pbnRzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZihheGlzQXNzaWdubWVudHMuaGFzT3duUHJvcGVydHkoJ3knKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZXMuZ2VvUG9pbnRzQ2F0ZWdvcnlBbW91bnQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVzLmdlb1BvaW50c0NhdGVnb3J5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZihheGlzQXNzaWdubWVudHMuaGFzT3duUHJvcGVydHkoJ3knKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlcy5nZW9Qb2ludHNBbW91bnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0eXBlcy5nZW9Qb2ludHM7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzY2F0dGVycGxvdFxuICAgICAgICBpZihpc051bWVyaWMoYXhpc0Fzc2lnbm1lbnRzLngpICYmXG4gICAgICAgICAgICBheGlzQXNzaWdubWVudHMuaGFzT3duUHJvcGVydHkoJ3knKSAmJiBcbiAgICAgICAgICAgIGlzTnVtZXJpYyhheGlzQXNzaWdubWVudHMueSkpIHtcblxuICAgICAgICAgICAgaWYoY29sdW1ucy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZXMuc2NhdHRlcnBsb3RCeUNhdGVnb3J5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHR5cGVzLnNjYXR0ZXJwbG90O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY291bnRfYnlfY2F0ZWdvcnlcbiAgICAgICAgaWYoY29sdW1ucy5sZW5ndGggPT09IDIgJiYgXG4gICAgICAgICAgICBpc0NhdGVnb3JpY2FsKGF4aXNBc3NpZ25tZW50cy54KSA9PT0gJ2NhdGVnb3J5JyAmJiBcbiAgICAgICAgICAgIGlzTnVtZXJpYyhheGlzQXNzaWdubWVudHMueSkpIHtcblxuICAgICAgICAgICAgcmV0dXJuIHR5cGVzW2NhbGN1bGF0aW9uICsgJ0J5Q2F0ZWdvcnknXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKGNvbHVtbnMubGVuZ3RoID09PSAzICYmXG4gICAgICAgICAgICBheGlzQXNzaWdubWVudHMuaGFzT3duUHJvcGVydHkoJ3onKSAmJlxuICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLnoudmFsdWVzLmxlbmd0aCA9PT0gMSkge1xuXG4gICAgICAgICAgICBpZihheGlzQXNzaWdubWVudHMueC5kYXRhX3R5cGUgPT09ICdkYXRldGltZScpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZXNbY2FsY3VsYXRpb24gKyAnUGVyQ2F0ZWdvcnlCeURhdGV0aW1lJ107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0eXBlc1tjYWxjdWxhdGlvbiArICdCeUNhdGVnb3J5J107XG4gICAgICAgIH1cblxuICAgICAgICBpZihjYWxjdWxhdGlvbiA9PT0gJ2dlbycpIHtcbiAgICAgICAgICAgIGlmKGF4aXNBc3NpZ25tZW50cy54LmRhdGFfdHlwZSA9PT0gJ3N0YXRlJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlcy5jb3VudEJ5U3RhdGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmKGF4aXNBc3NpZ25tZW50cy54X2RhdGFfdHlwZSA9PT0gJ2NvdW50cnknKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVzLmNvdW50QnlDb3VudHJ5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmF0aW9fcGVyX2NhdGVnb3J5XG4gICAgICAgIGlmKGNvbHVtbnMubGVuZ3RoID09PSAyICYmXG4gICAgICAgICAgICBjYWxjdWxhdGlvbiA9PT0gJ3JhdGlvJyAmJlxuICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLngudmFsdWVzLmxlbmd0aCA9PT0gMSAmJlxuICAgICAgICAgICAgYXhpc0Fzc2lnbm1lbnRzLmhhc093blByb3BlcnR5KCd5JykgJiZcbiAgICAgICAgICAgIGF4aXNBc3NpZ25tZW50cy55LnZhbHVlcy5sZW5ndGggPT09IDEpIHtcblxuICAgICAgICAgICAgcmV0dXJuIHR5cGVzLnJhdGlvUGVyQ2F0ZWdvcnk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZGVmYXVsdFR5cGU7XG4gICAgfTtcblxuICAgIHdpbmRvdy5wb3BpbHkuY2hhcnQuYW5hbHl6ZSA9IHtcbiAgICAgICAgYXNzaWduVG9BeGlzOiBhc3NpZ25Ub0F4aXMsXG4gICAgICAgIGRldGVybWluZVR5cGU6IGRldGVybWluZVR5cGVcbiAgICB9XG59KSh3aW5kb3cpOyIsIihmdW5jdGlvbih3aW5kb3cpIHtcblxuICB2YXIgYzNpZnkgPSBmdW5jdGlvbih4VmFsdWVzLHlWYWx1ZXMselZhbHVlcykge1xuICAgICAgdmFyIGdyb3VwaW5ncyA9IFtdO1xuICAgICAgdmFyIGNvbHVtbnMgPSBbXTtcbiAgICAgIHZhciB4eXogPSBfLnppcCh4VmFsdWVzLHpWYWx1ZXMseVZhbHVlcyk7XG5cbiAgICAgIC8vY29uc29sZS5sb2coeVZhbHVlcyk7XG5cbiAgICAgIF8uZWFjaChfLnVuaXEoeFZhbHVlcyksZnVuY3Rpb24oeCkge1xuICAgICAgICAgIF8uZWFjaChfLnVuaXEoelZhbHVlcyksZnVuY3Rpb24oeikge1xuICAgICAgICAgICAgICBncm91cGluZ3MucHVzaChbeCx6LDBdKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgfSk7XG5cbiAgICAgIF8uZWFjaCh4eXosZnVuY3Rpb24oX3h5eikge1xuICAgICAgICAgIF8uZWFjaChncm91cGluZ3MsIGZ1bmN0aW9uKHBhaXIpIHtcbiAgICAgICAgICAgICAgaWYoX3h5elswXSA9PT0gcGFpclswXSAmJiBfeHl6WzFdID09PSBwYWlyWzFdKSB7XG4gICAgICAgICAgICAgICAgICBwYWlyWzJdID0gX3h5elsyXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciBjYXRlZ29yaWVzID0gXy51bmlxKF8ubWFwKGdyb3VwaW5ncywgZnVuY3Rpb24oZ3JvdXApIHsgcmV0dXJuIGdyb3VwWzBdOyB9KSk7XG4gICAgICB2YXIgdmFsdWVQYWlycyA9IF8ubWFwKGdyb3VwaW5ncywgZnVuY3Rpb24oZ3JvdXApIHsgcmV0dXJuIFtncm91cFsxXSxncm91cFsyXV0gfSk7XG4gICAgICB2YXIgbGFiZWxzID0gXy51bmlxKF8ubWFwKGdyb3VwaW5ncywgZnVuY3Rpb24oZ3JvdXApIHsgcmV0dXJuIGdyb3VwWzFdIH0pKTtcbiAgICAgIHZhciB2YWx1ZXM7XG4gICAgICBfLmVhY2gobGFiZWxzLCBmdW5jdGlvbihsYWJlbCkge1xuICAgICAgICAgIHZhbHVlcyA9IF8ubWFwKF8uZmlsdGVyKHZhbHVlUGFpcnMsIGZ1bmN0aW9uKHZwKSB7XG4gICAgICAgICAgICAgIHJldHVybiB2cFswXSA9PSBsYWJlbH0pLGZ1bmN0aW9uKHZwKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdnBbMV07IH0pO1xuICAgICAgICAgIGNvbHVtbnMucHVzaChbbGFiZWxdLmNvbmNhdCh2YWx1ZXMpKTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICAgIGNhdGVnb3JpZXM6IGNhdGVnb3JpZXMsXG4gICAgICAgICAgY29sdW1uczogY29sdW1ucyxcbiAgICAgICAgICBncm91cHM6IGxhYmVsc1xuICAgICAgfVxuICB9O1xuXG4gIHZhciBjM2lmeU11bHRpID0gZnVuY3Rpb24oeFZhbHVlcyx5VmFsdWVzLHpWYWx1ZXMsejJWYWx1ZXMpIHtcbiAgICB2YXIgemlwcGVkID0gXy56aXAoeFZhbHVlcyx5VmFsdWVzLHpWYWx1ZXMsejJWYWx1ZXMpO1xuICAgIHZhciBzZXAgPSAnX19fJztcbiAgICB2YXIgbmFtZXMgPSB7fTtcblxuICAgIHZhciBjb2x1bW5NYXAgPSB7fTtcbiAgICBfLmVhY2goemlwcGVkLCBmdW5jdGlvbihncm91cCkge1xuICAgICAgdmFyIHggPSBncm91cFswXTtcbiAgICAgIHZhciB5ID0gZ3JvdXBbMV07XG4gICAgICB2YXIgeiA9IGdyb3VwWzJdO1xuICAgICAgdmFyIHoyID0gZ3JvdXBbM107XG4gICAgICB2YXIgenoyID0geiArIHNlcCArIHoyO1xuXG4gICAgICBuYW1lc1t6ejJdID0gejtcblxuICAgICAgaWYoIWNvbHVtbk1hcFt6ejJdKSB7XG4gICAgICAgIGNvbHVtbk1hcFt6ejJdID0ge307XG4gICAgICB9XG4gICAgICBjb2x1bW5NYXBbenoyXVt4XSA9IHk7XG4gICAgfSk7XG5cbiAgICB2YXIgZ3JvdXBzID0gW107XG4gICAgdmFyIG9yZGVyZWRHcm91cHMgPSBbXTtcbiAgICBfLmVhY2goXy51bmlxKHoyVmFsdWVzKSwgZnVuY3Rpb24oejIpIHtcbiAgICAgIG9yZGVyZWRHcm91cHMucHVzaCh6Mik7XG4gICAgICB2YXIgZ3JvdXAgPSBbXTtcbiAgICAgIF8uZWFjaChfLnVuaXEoelZhbHVlcyksIGZ1bmN0aW9uKHopIHtcbiAgICAgICAgZ3JvdXAucHVzaCh6ICsgc2VwICsgejIpO1xuICAgICAgfSk7XG4gICAgICBncm91cHMucHVzaChncm91cCk7XG4gICAgfSk7XG5cbiAgICB2YXIgeExhYmVscyA9IF8udW5pcXVlKHhWYWx1ZXMpO1xuICAgIHZhciB4TGFiZWxzRGlzcGxheSA9IF8ubWFwKHhMYWJlbHMsIGZ1bmN0aW9uKHhWYWx1ZSkge1xuICAgICAgcmV0dXJuIHhWYWx1ZSArICcgKCcgKyBvcmRlcmVkR3JvdXBzLmpvaW4oJywnKSArICcpJztcbiAgICB9KTtcblxuICAgIHZhciBjb2x1bW5zID0gW107XG5cbiAgICBmb3IodmFyIGNvbHVtbiBpbiBjb2x1bW5NYXApIHtcbiAgICAgIHZhciBjb2wgPSBbY29sdW1uXTtcbiAgICAgIF8uZWFjaCh4TGFiZWxzLCBmdW5jdGlvbih4KSB7XG4gICAgICAgIGNvbC5wdXNoKHBhcnNlRmxvYXQoY29sdW1uTWFwW2NvbHVtbl1beF0gfHwgMCkpO1xuICAgICAgfSk7XG4gICAgICBjb2x1bW5zLnB1c2goY29sKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2F0ZWdvcmllczogeExhYmVsc0Rpc3BsYXksXG4gICAgICAgIGNvbHVtbnM6IGNvbHVtbnMsXG4gICAgICAgIGdyb3VwczogZ3JvdXBzLFxuICAgICAgICBuYW1lczogbmFtZXNcbiAgICB9XG4gIH07XG5cbiAgdmFyIG5hbiA9IC05OTk5OTtcbiAgdmFyIGNsZWFuRGF0YSA9IGZ1bmN0aW9uKHhWYWx1ZXMseVZhbHVlcyx6VmFsdWVzLHoyVmFsdWVzKSB7XG4gICAgICB4VmFsdWVzID0geFZhbHVlcyB8fCBbXTtcbiAgICAgIHlWYWx1ZXMgPSB5VmFsdWVzIHx8IFtdO1xuICAgICAgelZhbHVlcyA9IHpWYWx1ZXMgfHwgW107XG4gICAgICB6MlZhbHVlcyA9IHoyVmFsdWVzIHx8IFtdO1xuXG5cbiAgICAgIHZhciB0dXBsZXMgPSBfLnppcCh4VmFsdWVzLHlWYWx1ZXMselZhbHVlcyx6MlZhbHVlcyk7XG5cbiAgICAgIC8vIFJlbW92ZSBuYW5cbiAgICAgIHZhciBjbGVhbmVkID0gXy5yZWplY3QodHVwbGVzLCBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgaWYgKHRbMV0gPT09IG5hbiB8fCB0WzBdID09PSBuYW4pIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0pO1xuXG5cbiAgICAgIHJldHVybiBfLnVuemlwKGNsZWFuZWQpO1xuXG4gIH07XG5cbiAgdmFyIG5hblRvWmVybyA9IGZ1bmN0aW9uKG51bSkge1xuICAgICAgaWYobnVtID09PSBuYW4gfHwgbnVtID09PSAnbmFuJykge1xuICAgICAgICAgIHJldHVybiAwO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bTtcbiAgfTtcbiAgdmFyIGNsZWFuTmFuVG9aZXJvID0gZnVuY3Rpb24odmFsdWVzKSB7XG4gICAgICB2YWx1ZXMgPSBfLm1hcCh2YWx1ZXMsIGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICByZXR1cm4gbmFuVG9aZXJvKHYpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gdmFsdWVzO1xuICB9O1xuXG4gIHZhciBkYXlMaXN0ID0gWydzdW5kYXknLCdtb25kYXknLCd0dWVzZGF5Jywnd2VkbmVzZGF5JywndGh1cnNkYXknLCdmcmlkYXknLCdzYXR1cmRheSddO1xuICB2YXIgZGF5TGlzdEFiYnIgPSBbJ3N1bicsJ21vbicsJ3R1ZScsJ3dlZCcsJ3RodScsJ2ZyaScsJ3NhdCddO1xuICB2YXIgbW9udGhMaXN0ID0gWydqYW51YXJ5JywnZmVicnVhcnknLCdtYXJjaCcsJ2FwcmlsJywnbWF5JywnanVuZScsJ2p1bHknLCdhdWd1c3QnLCdzZXB0ZW1iZXInLCdvY3RvYmVyJywnbm92ZW1iZXInLCdkZWNlbWJlciddO1xuICB2YXIgbW9udGhMaXN0QWJiciA9IFsnamFuJywnZmViJywnbWFyJywnYXByJywnbWF5JywnanVuJywnanVsJywnYXVnJywnc2VwJywnc2VwdCcsJ29jdCcsJ25vdicsJ2RlYyddO1xuXG4gIHZhciBjYXRlZ29yeVR5cGUgPSBmdW5jdGlvbih2YWx1ZXMpIHtcbiAgICAgIGlmKF8uZXZlcnkodmFsdWVzLCBmdW5jdGlvbih2KSB7IHJldHVybiBfKGRheUxpc3QpLmNvbnRhaW5zKHYudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKSB9KSkge1xuICAgICAgICAgIHJldHVybiAnZGF5JztcbiAgICAgIH1cblxuICAgICAgaWYoXy5ldmVyeSh2YWx1ZXMsIGZ1bmN0aW9uKHYpIHsgcmV0dXJuIF8oZGF5TGlzdEFiYnIpLmNvbnRhaW5zKHYudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKSB9KSkge1xuICAgICAgICAgIHJldHVybiAnZGF5QWJicic7XG4gICAgICB9XG5cbiAgICAgIGlmKF8uZXZlcnkodmFsdWVzLCBmdW5jdGlvbih2KSB7IHJldHVybiBfKG1vbnRoTGlzdCkuY29udGFpbnModi50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpIH0pKSB7XG4gICAgICAgICAgcmV0dXJuICdtb250aCc7XG4gICAgICB9XG5cbiAgICAgIGlmKF8uZXZlcnkodmFsdWVzLCBmdW5jdGlvbih2KSB7IHJldHVybiBfKG1vbnRoTGlzdEFiYnIpLmNvbnRhaW5zKHYudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKSB9KSkge1xuICAgICAgICAgIHJldHVybiAnbW9udGhBYmJyJztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgc29ydERhdGEgPSBmdW5jdGlvbih4WWFsdWVzLHlWYWx1ZXMselZhbHVlcyxsaW1pdCxvcmRlcix6MlZhbHVlcykge1xuICAgICAgdmFyIHR1cGxlcyA9IF8uemlwKHhZYWx1ZXMseVZhbHVlcyx6VmFsdWVzLHoyVmFsdWVzKTtcbiAgICAgICAgICBcbiAgICAgIGlmKF8uZXZlcnkoeFlhbHVlcywgZnVuY3Rpb24oeCkgeyByZXR1cm4gIWlzTmFOKHgpOyB9KSkge1xuICAgICAgICAgIHZhciBzb3J0ZWQgPSBfLnNvcnRCeSh0dXBsZXMsIGZ1bmN0aW9uKHQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KHRbMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsgXG4gICAgICB9XG4gICAgICBlbHNlIGlmKF8uZXZlcnkoeFlhbHVlcywgZnVuY3Rpb24oeCkgeyByZXR1cm4gIWlzTmFOKHgudG9TdHJpbmcoKS5jaGFyQXQoMCkpOyB9KSkge1xuICAgICAgICAgIHZhciBzb3J0ZWQgPSBfLnNvcnRCeSh0dXBsZXMsIGZ1bmN0aW9uKHQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pOyBcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICAgIHZhciBjVHlwZSA9IGNhdGVnb3J5VHlwZSh4WWFsdWVzKTtcbiAgICAgICAgICBpZihjVHlwZSkge1xuICAgICAgICAgICAgICB2YXIgY29tcGFyZUxpc3QgPSBkYXlMaXN0O1xuICAgICAgICAgICAgICBpZihjVHlwZSA9PSAnZGF5QWJicicpIHtcbiAgICAgICAgICAgICAgICAgIGNvbXBhcmVMaXN0ID0gZGF5TGlzdEFiYnI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgZWxzZSBpZihjVHlwZSA9PSAnbW9udGgnKSB7XG4gICAgICAgICAgICAgICAgICBjb21wYXJlTGlzdCA9IG1vbnRoTGlzdDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBlbHNlIGlmKGNUeXBlID09ICdtb250aEFiYnInKSB7XG4gICAgICAgICAgICAgICAgICBjb21wYXJlTGlzdCA9IG1vbnRoTGlzdEFiYnI7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAvLyBTb3J0IGFzYyBieSB5XG4gICAgICAgICAgICAgIHZhciBzb3J0ZWQgPSBfLnNvcnRCeSh0dXBsZXMsIGZ1bmN0aW9uKHQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb21wYXJlTGlzdC5pbmRleE9mKHRbMF0udG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsgXG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgIC8vIFNvcnQgYXNjIGJ5IHlcbiAgICAgICAgICAgICAgdmFyIHNvcnRlZCA9IF8uc29ydEJ5KHR1cGxlcywgZnVuY3Rpb24odCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRbMV0gKiAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOyBcbiAgICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmKGxpbWl0ICYmIF8uc2l6ZShzb3J0ZWQpPmxpbWl0ICkge1xuICAgICAgICAgIHZhciBpPTA7XG4gICAgICAgICAgdmFyIG50aCA9IE1hdGguZmxvb3IoXy5zaXplKHNvcnRlZCkgLyBsaW1pdCk7XG4gICAgICAgICAgc29ydGVkID0gXy5maWx0ZXIoc29ydGVkLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gaSAlIG50aCA9PSAwO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYob3JkZXI9PSdhc2MnIHx8IG9yZGVyPT0nZGVzYycpIHtcbiAgICAgICAgICB2YXIgZGVzY011bHRpcGx5ID0gKG9yZGVyPT0nZGVzYyc/LTE6MSlcbiAgICAgICAgICBzb3J0ZWQgPSBfLnNvcnRCeShzb3J0ZWQsIGZ1bmN0aW9uKHQpe1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0WzFdICogZGVzY011bHRpcGx5O1xuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgfSBcbiAgICAgIGVsc2UgaWYob3JkZXI9PSdhLXonIHx8IG9yZGVyPT0nei1hJykge1xuICAgICAgICAgIGlmKF8uZXZlcnkoeFlhbHVlcywgZnVuY3Rpb24oeCkgeyByZXR1cm4gIWlzTmFOKHgpOyB9KSkge1xuICAgICAgICAgICAgICBzb3J0ZWQgPSBfLnNvcnRCeShzb3J0ZWQsIGZ1bmN0aW9uKHQpe1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludCh0WzBdKTtcbiAgICAgICAgICAgICAgICAgIH0pOyBcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgIHNvcnRlZCA9IF8uc29ydEJ5KHNvcnRlZCwgZnVuY3Rpb24odCl7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRbMF07XG4gICAgICAgICAgICAgICAgICB9KTsgXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmKG9yZGVyPT0nei1hJylcbiAgICAgICAgICAgICAgc29ydGVkID0gc29ydGVkLnJldmVyc2UoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBfLnVuemlwKHNvcnRlZCk7XG4gIH07XG5cbiAgdmFyIGNoZWNrSXNEYXRlU3RyID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgaWYgKCFpc05hTigobmV3IERhdGUoc3RyKS5nZXRUaW1lKCkpKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcblxuICB3aW5kb3cucG9waWx5LmNoYXJ0LmNoYXJ0RGF0YSA9IHsgICAgICAgIFxuICAgICAgc29ydERhdGE6IHNvcnREYXRhLFxuICAgICAgY2xlYW5EYXRhOiBjbGVhbkRhdGEsXG4gICAgICBjbGVhbk5hblRvWmVybzogY2xlYW5OYW5Ub1plcm8sXG4gICAgICBjM2lmeTogYzNpZnksXG4gICAgICBjM2lmeU11bHRpOiBjM2lmeU11bHRpLFxuICAgICAgY2hlY2tJc0RhdGVTdHI6IGNoZWNrSXNEYXRlU3RyXG4gIH1cblxufSkod2luZG93KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuKGZ1bmN0aW9uKHdpbmRvdykge1xuXG5cbiAgd2luZG93LnBvcGlseS5kYXRhc2V0ID0gZnVuY3Rpb24oY29sdW1ucywgb3B0aW9ucykge1xuXG4gICAgdmFyIGxhYmVscywgZGF0YVR5cGVzLCB0YWJsZSwgY29sdW1uc0NhY2hlO1xuICAgIFxuICAgIHZhciBpbml0aWFsaXplID0gZnVuY3Rpb24oY29sdW1ucykge1xuICAgICAgbGFiZWxzID0gW107XG4gICAgICBkYXRhVHlwZXMgPSBbXTtcbiAgICAgIGNvbHVtbnNDYWNoZSA9IG51bGw7XG4gICAgICB0YWJsZSA9IHppcChjb2x1bW5zKTtcbiAgICB9XG4gICAgXG4gICAgdmFyIHppcCA9IGZ1bmN0aW9uKGNvbHVtbnMpIHtcbiAgICAgIHZhciBkYXRhID0gW107XG4gICAgICBcbiAgICAgIF8uZWFjaChjb2x1bW5zLCBmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgbGFiZWxzLnB1c2goY29sdW1uLmNvbHVtbl9oZWFkZXIpO1xuICAgICAgICBkYXRhVHlwZXMucHVzaChjb2x1bW4uZGF0YV90eXBlKTtcbiAgICAgICAgZGF0YS5wdXNoKGNvbHVtbi52YWx1ZXMpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gXy56aXAuYXBwbHkobnVsbCwgZGF0YSk7XG4gICAgfTtcbiAgICBcbiAgICB2YXIgdW56aXAgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgY29sdW1ucyA9IFtdO1xuICAgICAgXy51bnppcChkYXRhKS5mb3JFYWNoKGZ1bmN0aW9uKGMsIGkpIHtcbiAgICAgICAgY29sdW1ucy5wdXNoKHtcbiAgICAgICAgICBjb2x1bW5faGVhZGVyOmxhYmVsc1tpXSxcbiAgICAgICAgICB2YWx1ZXM6YyxcbiAgICAgICAgICBkYXRhX3R5cGU6ZGF0YVR5cGVzW2ldXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gY29sdW1ucztcbiAgICB9XG5cbiAgICB2YXIgY29sdW1uSWR4ID0gZnVuY3Rpb24oY29sdW1uKSB7XG4gICAgICB2YXIgaWR4ID0gbGFiZWxzLmluZGV4T2YoY29sdW1uKTtcbiAgICAgIGlmKGlkeCA9PSAtMSlcbiAgICAgICAgdGhyb3cgRXJyb3IoJ2NvbHVtbiAnK2NvbHVtbisnIG5vdCBmb3VuZCBpbiBkYXRhc2V0Jyk7XG4gICAgICByZXR1cm4gaWR4O1xuICAgIH07XG4gICAgXG4gICAgdmFyIGRhdGFMaXN0ZW5lcnMgPSBbXVxuICAgIHZhciBkYXRhQ2hhbmdlZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgY29sdW1uc0NhY2hlID0gbnVsbDtcbiAgICAgIGRhdGFMaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbihsaXN0bmVyKSB7XG4gICAgICAgIGxpc3RuZXIoKTtcbiAgICAgIH0pXG4gICAgfVxuICAgIFxuICAgIGluaXRpYWxpemUoY29sdW1ucyk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICBcbiAgICAgIG9yZGVyQnk6IGZ1bmN0aW9uKGNvbHVtbikge1xuICAgICAgICB2YXIgaWR4ID0gY29sdW1uSWR4KGNvbHVtbik7XG4gICAgICAgIHRhYmxlID0gXy5zb3J0QnkodGFibGUsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICByZXR1cm4gZVtpZHhdO1xuICAgICAgICB9KTtcbiAgICAgICAgZGF0YUNoYW5nZWQoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9LFxuICAgICAgXG4gICAgICByZXZlcnNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGFibGUgPSB0YWJsZS5yZXZlcnNlKCk7XG4gICAgICAgIGRhdGFDaGFuZ2VkKCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSxcbiAgICAgIFxuICAgICAgZmlsdGVyOiBmdW5jdGlvbihjb2x1bW4sIG9wLCB2YWx1ZSkge1xuICAgICAgICBpZihfLmlzVW5kZWZpbmVkKHZhbHVlKSkge1xuICAgICAgICAgIHZhbHVlID0gb3A7XG4gICAgICAgICAgb3AgPSAnZXEnO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpZHggPSBjb2x1bW5JZHgoY29sdW1uKTtcbiAgICAgICAgXG4gICAgICAgIGlmKG9wID09ICdlcScpXG4gICAgICAgICAgdmFyIHRlc3RGdW5jID0gZnVuY3Rpb24oZSkge3JldHVybiB2YWx1ZS5pbmRleE9mKGVbaWR4XSkhPT0tMX1cbiAgICAgICAgZWxzZSBpZihvcCA9PSAnbm90ZXEnKVxuICAgICAgICAgIHZhciB0ZXN0RnVuYyA9IGZ1bmN0aW9uKGUpIHtyZXR1cm4gdmFsdWUuaW5kZXhPZihlW2lkeF0pPT09LTF9XG4gICAgICAgIGVsc2UgaWYob3AgPT0gJ2d0JylcbiAgICAgICAgICB2YXIgdGVzdEZ1bmMgPSBmdW5jdGlvbihlKSB7cmV0dXJuIGVbaWR4XSA+IHZhbHVlfVxuICAgICAgICBlbHNlIGlmKG9wID09ICdndGUnKVxuICAgICAgICAgIHZhciB0ZXN0RnVuYyA9IGZ1bmN0aW9uKGUpIHtyZXR1cm4gZVtpZHhdID49IHZhbHVlfVxuICAgICAgICBlbHNlIGlmKG9wID09ICdsdCcpXG4gICAgICAgICAgdmFyIHRlc3RGdW5jID0gZnVuY3Rpb24oZSkgeyByZXR1cm4gZVtpZHhdIDwgdmFsdWV9XG4gICAgICAgIGVsc2UgaWYob3AgPT0gJ2x0ZScpXG4gICAgICAgICAgdmFyIHRlc3RGdW5jID0gZnVuY3Rpb24oZSkge3JldHVybiBlW2lkeF0gPD0gdmFsdWV9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VucmVjb2duaXplZCBmaWx0ZXIgb3B0aW9uOiAnK29wKTtcbiAgICAgICAgICByZXR1cm4gdGhpczsgXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRhYmxlID0gXy5maWx0ZXIodGFibGUsIHRlc3RGdW5jKTtcbiAgICAgICAgZGF0YUNoYW5nZWQoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9LFxuICAgICAgXG4gICAgICBsaW1pdCA6IGZ1bmN0aW9uKG1heCkge1xuICAgICAgICBpZihtYXggJiYgXy5zaXplKHRhYmxlKT5tYXggKSB7XG4gICAgICAgICAgdmFyIGk9MDtcbiAgICAgICAgICB2YXIgbnRoID0gTWF0aC5mbG9vcihfLnNpemUoc29ydGVkKSAvIGxpbWl0KTtcbiAgICAgICAgICB0YWJsZSA9IF8uZmlsdGVyKHRhYmxlLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIHJldHVybiBpICUgbnRoID09IDA7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZGF0YUNoYW5nZWQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sXG4gICAgICBcbiAgICAgIGdyb3VwQnk6IGZ1bmN0aW9uKGNvbHVtbiwgZ3JvdXBpbmdGdW5jdGlvbiwgZ3JvdXBwZWREYXRhVHlwZSwgZ3JvdXBwZWRDb2x1bW5IZWFkZXIgKSB7XG4gICAgICAgIHZhciBpZHggPSBjb2x1bW5JZHgoY29sdW1uKTtcbiAgICAgICAgZ3JvdXBpbmdGdW5jdGlvbiA9IGdyb3VwaW5nRnVuY3Rpb24gfHwgZnVuY3Rpb24oZSkge3JldHVybiBlO307XG4gICAgICAgIGdyb3VwcGVkQ29sdW1uSGVhZGVyID0gZ3JvdXBwZWRDb2x1bW5IZWFkZXIgfHwgJ2dyb3VwcGVkJztcbiAgICAgICAgZ3JvdXBwZWREYXRhVHlwZSA9IGdyb3VwcGVkRGF0YVR5cGUgfHwgJ251bWVyaWMnO1xuXG4gICAgICAgIHZhciBncm91cHBlZCA9IF8uZ3JvdXBCeSh0YWJsZSwgZnVuY3Rpb24oZSl7IFxuICAgICAgICAgIHJldHVybiBlW2lkeF07IFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIHZhciBrZXlzQ29sdW1uID0geyBcbiAgICAgICAgICBjb2x1bW5faGVhZGVyOiBsYWJlbHNbaWR4XSxcbiAgICAgICAgICBkYXRhX3R5cGU6IGRhdGFUeXBlc1tpZHhdLFxuICAgICAgICAgIHZhbHVlczogT2JqZWN0LmtleXMoZ3JvdXBwZWQpXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICB2YXIgdmFsdWVzID0gW11cbiAgICAgICAgXy5tYXAoa2V5c0NvbHVtbi52YWx1ZXMsIGZ1bmN0aW9uKGspIHtcbiAgICAgICAgICB2YWx1ZXMucHVzaChncm91cGluZ0Z1bmN0aW9uKGdyb3VwcGVkW2tdKSk7IFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIHZhciBncm91cHBlZENvbHVtbiA9IHtcbiAgICAgICAgICBjb2x1bW5faGVhZGVyOiBncm91cHBlZENvbHVtbkhlYWRlcixcbiAgICAgICAgICBkYXRhX3R5cGU6IGdyb3VwcGVkRGF0YVR5cGUsXG4gICAgICAgICAgdmFsdWVzOiB2YWx1ZXNcbiAgICAgICAgfVxuICAgICAgICBpbml0aWFsaXplKFtrZXlzQ29sdW1uLCBncm91cHBlZENvbHVtbl0pO1xuICAgICAgICBkYXRhQ2hhbmdlZCgpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sXG5cbiAgICAgIGNvdW50VW5pcXVlOiBmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgdmFyIGlkeCA9IGNvbHVtbklkeChjb2x1bW4pO1xuICAgICAgICB2YXIgY29sdW1uID0gdGhpcy5nZXRDb2x1bW5zKClbaWR4XTtcbiAgICAgICAgdmFyIGNvdW50cyA9IF8uY291bnRCeShjb2x1bW4udmFsdWVzLCBmdW5jdGlvbih2YWwpIHsgcmV0dXJuIHZhbDsgfSk7XG4gICAgICAgIHZhciBuZXdDb2x1bW5zID0gW107XG5cbiAgICAgICAgdmFyIHZhbENvbHVtbiA9IHtcbiAgICAgICAgICBjb2x1bW5faGVhZGVyOiBjb2x1bW4uY29sdW1uX2hlYWRlcixcbiAgICAgICAgICBkYXRhX3R5cGU6IGNvbHVtbi5kYXRhX3R5cGUsXG4gICAgICAgICAgdmFsdWVzOiBfKGNvdW50cykua2V5cygpXG4gICAgICAgIH07XG4gICAgICAgIHZhciBjb3VudENvbHVtbiA9IHtcbiAgICAgICAgICBjb2x1bW5faGVhZGVyOiAnY291bnRfMCcsXG4gICAgICAgICAgZGF0YV90eXBlOiAnbnVtZXJpYycsXG4gICAgICAgICAgdmFsdWVzOiBfKGNvdW50cykudmFsdWVzKClcbiAgICAgICAgfTtcbiAgICAgICAgaW5pdGlhbGl6ZShbdmFsQ29sdW1uLGNvdW50Q29sdW1uXSk7XG4gICAgICAgIGRhdGFDaGFuZ2VkKCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSxcbiAgICAgIFxuICAgICAgcmVwbGFjZVZhbHVlczogZnVuY3Rpb24oY29sdW1uLCByZXBsYWNlbWVudHMpIHtcbiAgICAgICAgdmFyIGlkeCA9IGNvbHVtbklkeChjb2x1bW4pO1xuICAgICAgICBcbiAgICAgICAgXy5tYXAodGFibGUsIGZ1bmN0aW9uKHJvdykge1xuICAgICAgICAgIGlmKHJvd1tpZHhdIGluIHJlcGxhY2VtZW50cylcbiAgICAgICAgICAgIHJvd1tpZHhdID0gcmVwbGFjZW1lbnRzW3Jvd1tpZHhdXTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBkYXRhQ2hhbmdlZCgpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sXG4gICAgICBcbiAgICAgIGdldENvbHVtbnM6IGZ1bmN0aW9uKGNiKSB7XG4gICAgICAgIGlmKCFjb2x1bW5zQ2FjaGUpXG4gICAgICAgICAgY29sdW1uc0NhY2hlID0gdW56aXAodGFibGUpO1xuICAgICAgICBcbiAgICAgICAgaWYoY2IpIHtcbiAgICAgICAgICBjYihjb2x1bW5zQ2FjaGUpO1xuICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICByZXR1cm4gY29sdW1uc0NhY2hlO1xuICAgICAgfSxcbiAgICAgIFxuICAgICAgZ2V0Q29sdW1uOiBmdW5jdGlvbihjb2x1bW4sIGNiKSB7XG4gICAgICAgIHZhciBjb2x1bW5zID0gdGhpcy5nZXRDb2x1bW5zKCk7XG4gICAgICAgIHZhciBjb2x1bW4gPSBfLmZpbmQoY29sdW1ucywgZnVuY3Rpb24oYykgeyByZXR1cm4gYy5jb2x1bW5faGVhZGVyID09PSBjb2x1bW4gfSk7XG4gICAgICAgIGlmKGNiKSB7XG4gICAgICAgICAgY2IoY29sdW1uKTtcbiAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgICAgcmV0dXJuIGNvbHVtbjtcbiAgICAgIH0sXG4gICAgICBcbiAgICAgIG9uQ2hhbmdlOiBmdW5jdGlvbihjYikge1xuICAgICAgICBkYXRhTGlzdGVuZXJzLnB1c2goY2IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBcbiAgcG9waWx5LmRhdGFzZXQuY291bnQgPSBmdW5jdGlvbihhcnIpIHtcbiAgICByZXR1cm4gYXJyLmxlbmd0aDtcbiAgfVxuICBwb3BpbHkuZGF0YXNldC5jb3VudC5kYXRhVHlwZSA9ICdudW1lcmljJztcbiAgcG9waWx5LmRhdGFzZXQuY291bnQuY29sdW1uTGFiZWwgPSAnQ291bnQnO1xuICBcbiAgcG9waWx5LmRhdGFzZXQuY291bnRVbmlxdWUgPSBmdW5jdGlvbihhcnIpIHtcbiAgICByZXR1cm4gXy51bmlxKGFycikubGVuZ3RoO1xuICB9XG4gIHBvcGlseS5kYXRhc2V0LmNvdW50VW5pcXVlLmRhdGFUeXBlID0gJ251bWVyaWMnO1xuICBwb3BpbHkuZGF0YXNldC5jb3VudFVuaXF1ZS5jb2x1bW5MYWJlbCA9ICdDb3VudCB1bmlxdWUnO1xuXG59KSh3aW5kb3cpO1xuIiwiKGZ1bmN0aW9uKHdpbmRvdykge1xuICAgIHZhciBuYW4gPSAtOTk5OTk7XG5cbiAgICB2YXIgZGF5c0RpZmYgPSBmdW5jdGlvbihkYXRlU3RyaW5ncykge1xuICAgICAgICB2YXIgZGF0ZXMgPSBfLm1hcChkYXRlU3RyaW5ncyxmdW5jdGlvbihkKSB7IHJldHVybiBuZXcgRGF0ZShkKTsgfSk7XG4gICAgICAgIHZhciBtaW5EYXRlID0gXy5taW4oZGF0ZXMpO1xuICAgICAgICB2YXIgbWF4RGF0ZSA9IF8ubWF4KGRhdGVzKTtcbiAgICAgICAgdmFyIGRhdGVEaWZmID0gbWF4RGF0ZSAtIG1pbkRhdGU7XG4gICAgICAgIHZhciBkYXlzRGlmZiA9IGRhdGVEaWZmIC8gMTAwMCAvIDYwIC8gNjAgLyAyNDtcblxuICAgICAgICByZXR1cm4gZGF5c0RpZmY7XG4gICAgfTtcblxuICAgIHZhciBmb3JtYXROdW1iZXJzID0gZnVuY3Rpb24obnVtYmVyTGlzdCkge1xuICAgICAgICB2YXIgZm9ybWF0dGVkID0gXy5tYXAobnVtYmVyTGlzdCwgZnVuY3Rpb24obnVtKSB7XG4gICAgICAgICAgICBudW0gPSBwYXJzZUZsb2F0KG51bSk7XG5cbiAgICAgICAgICAgIGlmKG51bSAhPT0gXCJuYW5cIiAmJiBfLmlzTnVtYmVyKG51bSkgJiYgIV8uaXNOYU4obnVtKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudW1lcmFsKG51bSkuZm9ybWF0KCcwWy4wMF0nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAnMC4wMCc7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZm9ybWF0dGVkO1xuICAgIH07XG5cbiAgICB2YXIgdG9OdW1iZXIgPSBmdW5jdGlvbihzdHJMaXN0KSB7XG4gICAgICAgIHJldHVybiBfLm1hcChzdHJMaXN0LCBmdW5jdGlvbih2YWwpIHsgXG4gICAgICAgICAgICAgIGlmKHZhbC50b1N0cmluZygpLmluZGV4T2YoJy4nKSA+IDApIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHZhbCk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsLDEwKSBcbiAgICAgICAgICB9KTtcbiAgICB9O1xuXG5cbiAgICBmdW5jdGlvbiBmb3JtYXRGcm9tRGF5RGlmZihkYXlEaWZmKSB7XG4gICAgICAgIGlmKGRheURpZmYgPiAxMDAwKVxuICAgICAgICAgICAgcmV0dXJuICclWSc7XG4gICAgICAgIGlmKGRheURpZmYgPiA5MClcbiAgICAgICAgICAgIHJldHVybiAnJVkgJUInO1xuICAgICAgICBpZihkYXlEaWZmID4gMylcbiAgICAgICAgICAgIHJldHVybiAnJVktJW0tJWQnO1xuICAgICAgICByZXR1cm4gJyVZLSVtLSVkICVIOiVNOiVTJztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmb3JtYXRGcm9tSW5zcGVjdGlvbih4VmFsdWVzKSB7XG4gICAgICAgIHZhciB0aW1lcyA9IF8ubWFwKHhWYWx1ZXMsIGZ1bmN0aW9uKHhWYWx1ZSkgeyByZXR1cm4geFZhbHVlLnNwbGl0KCcgJylbMV0gfSk7XG4gICAgICAgIGlmKF8uZXZlcnkodGltZXMsIGZ1bmN0aW9uKHRpbWUpIHsgcmV0dXJuIHRpbWUgPT0gJzAwOjAwOjAwJyB9KSkge1xuICAgICAgICAgICAgcmV0dXJuICclWS0lbS0lZCc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICclWS0lbS0lZCAlSDolTTolUyc7XG4gICAgfVxuICAgICAgICBcbiAgICBmdW5jdGlvbiBmb3JtYXRGcm9tSW50ZXJ2YWwoaW50ZXJ2YWwpIHtcbiAgICAgICAgaWYoaW50ZXJ2YWwgPT0gJ3llYXInKVxuICAgICAgICAgICAgcmV0dXJuICclWSc7XG4gICAgICAgIGlmKGludGVydmFsID09ICdtb250aCcpXG4gICAgICAgICAgICByZXR1cm4gJyVZICVCJztcbiAgICAgICAgaWYoaW50ZXJ2YWwgPT0gJ3dlZWsnKVxuICAgICAgICAgICAgcmV0dXJuICclWS0lbS0lZCc7XG4gICAgICAgIGlmKGludGVydmFsID09ICdkYXknKVxuICAgICAgICAgICAgcmV0dXJuICAnJVktJW0tJWQnO1xuICAgICAgICByZXR1cm4gJyVZLSVtLSVkICVIOiVNOiVTJztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzdGVwSW50ZXJ2YWwoaW50ZXJ2YWwpIHtcbiAgICAgICAgaWYoaW50ZXJ2YWw9PSclWScpIHJldHVybiBmdW5jdGlvbihkLCBzdGVwKSB7ZC5zZXRGdWxsWWVhcihkLmdldEZ1bGxZZWFyKCkrc3RlcCk7IHJldHVybiBkO307XG4gICAgICAgIGlmKGludGVydmFsPT0nJVkgJUInKSByZXR1cm4gZnVuY3Rpb24oZCwgc3RlcCkge2Quc2V0TW9udGgoZC5nZXRNb250aCgpK3N0ZXApOyByZXR1cm4gZDt9O1xuICAgICAgICBpZihpbnRlcnZhbD09JyVZLSVtLSVkJykgcmV0dXJuIGZ1bmN0aW9uKGQsIHN0ZXApIHtkLnNldERhdGUoZC5nZXREYXRlKCkrc3RlcCk7IHJldHVybiBkO307XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0aWNrRm9ybWF0VmFsdWVzKGNhdGVnb3JpZXMsIHRpY2tGb3JtYXRTdHIsIGRhdGVGb3JtYXQpIHtcbiAgICAgICAgdmFyIHN0ZXBGdW5jID0gc3RlcEludGVydmFsKHRpY2tGb3JtYXRTdHIpO1xuICAgICAgICBpZighc3RlcEZ1bmMpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIFxuICAgICAgICB2YXIgZGF0ZXMgPSBfLm1hcChjYXRlZ29yaWVzLCBmdW5jdGlvbihkKSB7IHJldHVybiBuZXcgRGF0ZShkKTsgfSk7XG4gICAgICAgIHZhciBtaW5EYXRlID0gXy5taW4oZGF0ZXMpO1xuICAgICAgICB2YXIgbWF4RGF0ZSA9IF8ubWF4KGRhdGVzKTtcbiAgICAgICAgdmFyIGRhdGVEaWZmID0gbWF4RGF0ZSAtIG1pbkRhdGU7XG4gICAgICAgIHZhciBtYXhTdGVwcyA9IDEwO1xuXG4gICAgICAgIHZhciBzdGVwRElmZiA9IHN0ZXBGdW5jKG5ldyBEYXRlKDE5ODApLCAxKSAtIG5ldyBEYXRlKDE5ODApO1xuICAgICAgICB2YXIgc3RlcCA9IDE7XG4gICAgICAgIHZhciBzdGVwcyA9IGRhdGVEaWZmL3N0ZXBESWZmO1xuICAgICAgICBpZihzdGVwcyA+IG1heFN0ZXBzKVxuICAgICAgICAgICAgc3RlcCA9IE1hdGguZmxvb3Ioc3RlcHMvbWF4U3RlcHMpO1xuICAgICAgICBcbiAgICAgICAgdmFyIHZhbHVlcyA9IFtdO1xuICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKG1pbkRhdGUuZ2V0VGltZSgpKTtcbiAgICAgICAgZm9yKDsgZGF0ZTw9bWF4RGF0ZTsgZGF0ZSA9IHN0ZXBGdW5jKGRhdGUsIHN0ZXApKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaChkYXRlRm9ybWF0KGRhdGUpKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgfVxuXG4gICAgLy8gQ3JlZGl0OiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9tYXRoZXdieXJuZS8xMjgwMjg2XG4gICAgZnVuY3Rpb24gc2x1Z2lmeSh0ZXh0KSB7XG4gICAgICByZXR1cm4gdGV4dC50b1N0cmluZygpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgLnJlcGxhY2UoL1xccysvZywgJy0nKSAgICAgICAgICAgLy8gUmVwbGFjZSBzcGFjZXMgd2l0aCAtXG4gICAgICAgIC5yZXBsYWNlKC9bXlxcd1xcLV0rL2csICcnKSAgICAgICAvLyBSZW1vdmUgYWxsIG5vbi13b3JkIGNoYXJzXG4gICAgICAgIC5yZXBsYWNlKC9cXC1cXC0rL2csICctJykgICAgICAgICAvLyBSZXBsYWNlIG11bHRpcGxlIC0gd2l0aCBzaW5nbGUgLVxuICAgICAgICAucmVwbGFjZSgvXi0rLywgJycpICAgICAgICAgICAgIC8vIFRyaW0gLSBmcm9tIHN0YXJ0IG9mIHRleHRcbiAgICAgICAgLnJlcGxhY2UoLy0rJC8sICcnKTsgICAgICAgICAgICAvLyBUcmltIC0gZnJvbSBlbmQgb2YgdGV4dFxuICAgIH1cblxuICAgIHBvcGlseS5jaGFydC5mb3JtYXQgPSB7XG4gICAgICAgIGZvcm1hdE51bWJlcnM6IGZvcm1hdE51bWJlcnMsXG4gICAgICAgIHRvTnVtYmVyOiB0b051bWJlcixcbiAgICAgICAgZGF5c0RpZmY6IGRheXNEaWZmLFxuICAgICAgICBmb3JtYXRGcm9tRGF5RGlmZjogZm9ybWF0RnJvbURheURpZmYsXG4gICAgICAgIGZvcm1hdEZyb21JbnRlcnZhbDogZm9ybWF0RnJvbUludGVydmFsLFxuICAgICAgICBmb3JtYXRGcm9tSW5zcGVjdGlvbjogZm9ybWF0RnJvbUluc3BlY3Rpb24sXG4gICAgICAgIHRpY2tGb3JtYXRWYWx1ZXM6IHRpY2tGb3JtYXRWYWx1ZXMsXG4gICAgICAgIHNsdWdpZnk6IHNsdWdpZnlcbiAgICB9XG59KSh3aW5kb3cpOyIsIihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIGNoYXJ0U2l6ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgIHZhciB3aWR0aCA9IE1hdGgubWluKHdpbmRvdy5pbm5lcldpZHRoLCAxMDUyKTsgLy8gMTA1MiBjb250YWluZXIgbWF4LXdpZHRoXG4gICAgICB2YXIgbXFUZXN0ID0gd2luZG93Lm1hdGNoTWVkaWEoIFwiKG1pbi13aWR0aDogNDhlbSlcIiApO1xuICAgICAgaWYobXFUZXN0KSB7XG4gICAgICAgICAgaGVpZ2h0ID0gaGVpZ2h0IC0gNDYwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBoZWlnaHQgPSBoZWlnaHQgLSAxNTA7XG4gICAgICB9XG4gICAgICBpZiAoaGVpZ2h0ID4gd2lkdGgpXG4gICAgICAgICAgaGVpZ2h0ID0gd2lkdGg7XG4gICAgICBlbHNlIGlmKGhlaWdodCA8IDQzMClcbiAgICAgICAgICBoZWlnaHQgPSA0MzA7XG4gICAgICByZXR1cm4geydoZWlnaHQnOiBoZWlnaHR9O1xuICB9O1xuXG4gIHZhciB1cGRhdGVDaGFydCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGNoYXJ0LCBjaGFydERhdGEsIGNoYXJ0UGFkZGluZywgcm90YXRlZCkge1xuICAgICAgcmV0dXJuIGNoYXJ0O1xuICAgICAgLy8geCBheGlzIGxhYmVsIGhlaWdodFxuICAgICAgdmFyIHhMYWJlbCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmMzLWF4aXMteC1sYWJlbCcpO1xuICAgICAgdmFyIHhMYWJlbEhlaWdodCA9IE1hdGguY2VpbCh4TGFiZWwuZ2V0QkJveCgpLmhlaWdodCk7XG4gICAgICAvLyB4IGF4aXMgbGFiZWxzIGJveCBzaXplc1xuICAgICAgdmFyIHhMYWJlbHNCb3ggPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jMy1heGlzLmMzLWF4aXMteCcpO1xuICAgICAgdmFyIHhMYWJlbHNCb3hIZWlnaHQgPSBNYXRoLmNlaWwoeExhYmVsc0JveC5nZXRCQm94KCkuaGVpZ2h0KTtcbiAgICAgIHZhciB4TGFiZWxzQm94V2lkdGggPSBNYXRoLmNlaWwoeExhYmVsc0JveC5nZXRCQm94KCkud2lkdGgpO1xuICAgICAgLy8geSBheGlzIGxhYmVscyBib3ggc2l6ZXNcbiAgICAgIHZhciB5TGFiZWxzQm94ID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuYzMtYXhpcy5jMy1heGlzLXknKTtcbiAgICAgIHZhciB5TGFiZWxzQm94SGVpZ2h0ID0gTWF0aC5jZWlsKHlMYWJlbHNCb3guZ2V0QkJveCgpLmhlaWdodCk7XG4gICAgICB2YXIgeUxhYmVsc0JveFdpZHRoID0gTWF0aC5jZWlsKHlMYWJlbHNCb3guZ2V0QkJveCgpLndpZHRoKTtcbiAgICAgIC8vIG1haW4gY2hhcnQgc2l6ZXNcbiAgICAgIHZhciBjaGFydEJveCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmMzLXpvb20tcmVjdCcpO1xuICAgICAgdmFyIGNoYXJ0Qm94SGVpZ2h0ID0gTWF0aC5jZWlsKGNoYXJ0Qm94LmdldEJCb3goKS5oZWlnaHQpO1xuICAgICAgdmFyIGNoYXJ0Qm94V2lkdGggPSBNYXRoLmNlaWwoY2hhcnRCb3guZ2V0QkJveCgpLndpZHRoKTtcbiAgICAgIC8vIG1haW4gc3ZnIHNpemVzXG4gICAgICB2YXIgY2hhcnRBcmVhID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdzdmcnKTtcbiAgICAgIGlmKCFjaGFydEFyZWEpXG4gICAgICAgICAgdmFyIGNoYXJ0QXJlYSA9IGVsZW1lbnQucXVlcnlTZWxlY3Rvcignc3ZnJyk7XG4gICAgICBcbiAgICAgIHZhciBjaGFydEFyZWFXaWR0aCA9IGNoYXJ0QXJlYS5jbGllbnRXaWR0aCB8fCBjaGFydEFyZWEucGFyZW50Tm9kZS5jbGllbnRXaWR0aDtcbiAgICAgIHZhciBjaGFydEFyZWFIZWlnaHQgPSBjaGFydEFyZWEuY2xpZW50SGVpZ2h0IHx8IGNoYXJ0QXJlYS5wYXJlbnROb2RlLmNsaWVudEhlaWdodDs7XG5cbiAgICAgIGNoYXJ0UGFkZGluZy5ib3R0b20gPSB4TGFiZWxIZWlnaHQ7ICAgIFxuICAgICAgXG4gICAgICBpZiAoIWNoYXJ0LmludGVybmFsLmNvbmZpZy5heGlzX3JvdGF0ZWQpIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgIC8vIGNoZWNrIHdoZXRoZXIgcGFkZGluZyBib3R0b20gaXMgbmVlZGVkXG4gICAgICAgICAgLy8gYWRkIHBhZGRpbmcgYm90dG9tIGlmIG5lZWRlZFxuICAgICAgICAgIGlmIChjaGFydEJveEhlaWdodCArIHhMYWJlbHNCb3hIZWlnaHQgKyBjaGFydFBhZGRpbmcudG9wID4gY2hhcnRBcmVhSGVpZ2h0KSB7XG4gICAgICAgICAgICAgIHZhciBwYWRkaW5nQm90dG9tID0gTWF0aC5hYnMoY2hhcnRBcmVhSGVpZ2h0IC0gKGNoYXJ0Qm94SGVpZ2h0ICsgeExhYmVsc0JveEhlaWdodCArIGNoYXJ0UGFkZGluZy50b3ApKTtcbiAgICAgICAgICAgICAgY2hhcnRQYWRkaW5nLmJvdHRvbSA9IHBhZGRpbmdCb3R0b20gKyB4TGFiZWxIZWlnaHQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIGNoZWNrIHdoZXRoZXIgcGFkZGluZyByaWdodCBpcyBuZWVkZWRcbiAgICAgICAgICAvLyBhZGQgcGFkZGluZyByaWdodCBpZiBuZWVkZWRcbiAgICAgICAgICBpZiAoeExhYmVsc0JveFdpZHRoID4gY2hhcnRCb3hXaWR0aCkge1xuICAgICAgICAgICAgICB2YXIgcGFkZGluZ1JpZ2h0ID0gTWF0aC5hYnMoY2hhcnRCb3hXaWR0aCAtIHhMYWJlbHNCb3hXaWR0aCk7XG4gICAgICAgICAgICAgIGNoYXJ0UGFkZGluZy5yaWdodCA9IHBhZGRpbmdSaWdodDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gY2hlY2sgd2hldGhlciBwYWRkaW5nIGxlZnQgaXMgbmVlZGVkXG4gICAgICAgICAgLy8gYWRkIHBhZGRpbmcgbGVmdCBpZiBuZWVkZWRcbiAgICAgICAgICBpZiAoY2hhcnRCb3hXaWR0aCArIHlMYWJlbHNCb3hXaWR0aCA+IGNoYXJ0QXJlYVdpZHRoKSB7XG4gICAgICAgICAgICAgIHZhciBwYWRkaW5nTGVmdCA9IE1hdGguYWJzKGNoYXJ0QXJlYVdpZHRoIC0gKGNoYXJ0Qm94V2lkdGggKyB5TGFiZWxzQm94V2lkdGgpKTtcbiAgICAgICAgICAgICAgY2hhcnRQYWRkaW5nLmxlZnQgPSBwYWRkaW5nTGVmdDtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2hhcnRQYWRkaW5nLmxlZnQgPSA1MDA7XG4gICAgICAgICAgY2hhcnQgPSBjaGFydC5kZXN0cm95KCk7XG4gICAgICAgICAgY2hhcnQgPSBjMy5nZW5lcmF0ZShjaGFydERhdGEpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIG1vdmUgeCBheGlzIGxhYmVsIG9uIHRoZSBib3R0b20gb2YgdGhlIHggYXhpcyBsYWJlbHMgYm94ICAgICAgICBcbiAgICAgICAgICB2YXIgZHlBdHRyID0geExhYmVsLmdldEF0dHJpYnV0ZSgnZHknKTsgICAgICAgICAgIFxuICAgICAgICAgIHZhciBkeUF0dHJWYWx1ZSA9IGR5QXR0ci5zbGljZSgwLC0yKTsgICAgICAgIFxuICAgICAgICAgIGZ1bmN0aW9uIGVtVG9QeChlbVZhbHVlKSB7XG4gICAgICAgICAgICAgIHZhciBlbVNpemUgPSBwYXJzZUZsb2F0KGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaHRtbCcpKS5nZXRQcm9wZXJ0eVZhbHVlKCdmb250LXNpemUnKSk7XG4gICAgICAgICAgICAgIHJldHVybiAoZW1TaXplICogZW1WYWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciB4TGFiZWxUb3AgPSBOdW1iZXIoZW1Ub1B4KGR5QXR0clZhbHVlKSk7ICAgICAgICBcbiAgICAgICAgICB2YXIgeExhYmVsVHJhbnNmb3JtID0geExhYmVsc0JveEhlaWdodCAtIHhMYWJlbFRvcCAtIDQ7ICAgIFxuICAgICAgICAgIGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmMzLWF4aXMteC1sYWJlbCcpLnNldEF0dHJpYnV0ZSgneScsIHhMYWJlbFRyYW5zZm9ybSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgICAvLyBjaGVjayB3aGV0aGVyIHBhZGRpbmcgbGVmdCBpcyBuZWVkZWRcbiAgICAgICAgICAvLyBhZGQgcGFkZGluZyBsZWZ0IGlmIG5lZWRlZFxuICAgICAgICAgIGlmIChjaGFydEJveFdpZHRoICsgeExhYmVsc0JveFdpZHRoID4gY2hhcnRBcmVhV2lkdGgpIHtcbiAgICAgICAgICAgICAgdmFyIHBhZGRpbmdMZWZ0ID0gTWF0aC5hYnMoY2hhcnRBcmVhV2lkdGggLSAoY2hhcnRCb3hXaWR0aCArIHhMYWJlbHNCb3hXaWR0aCkpO1xuICAgICAgICAgICAgICBjaGFydFBhZGRpbmcubGVmdCA9IHBhZGRpbmdMZWZ0O1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBjaGVjayB3aGV0aGVyIHBhZGRpbmcgYm90dG9tIGlzIG5lZWRlZFxuICAgICAgICAgIC8vIGFkZCBwYWRkaW5nIGJvdHRvbSBpZiBuZWVkZWRcbiAgICAgICAgICBpZiAoeExhYmVsc0JveEhlaWdodCA+IGNoYXJ0Qm94SGVpZ2h0KSB7XG4gICAgICAgICAgICAgIHZhciBwYWRkaW5nQm90dG9tID0gTWF0aC5hYnMoY2hhcnRCb3hIZWlnaHQgLSB4TGFiZWxzQm94SGVpZ2h0KTsgICBcbiAgICAgICAgICAgICAgY2hhcnRQYWRkaW5nLmJvdHRvbSA9IHBhZGRpbmdCb3R0b207XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIGNoZWNrIHdoZXRoZXIgcGFkZGluZyByaWdodCBpcyBuZWVkZWRcbiAgICAgICAgICAvLyBhZGQgcGFkZGluZyByaWdodCBpZiBuZWVkZWRcbiAgICAgICAgICBpZiAoeUxhYmVsc0JveFdpZHRoID4gY2hhcnRCb3hXaWR0aCkge1xuICAgICAgICAgICAgICB2YXIgcGFkZGluZ1JpZ2h0ID0gTWF0aC5hYnMoY2hhcnRCb3hXaWR0aCAtIHlMYWJlbHNCb3hXaWR0aCk7XG4gICAgICAgICAgICAgIGNoYXJ0UGFkZGluZy5yaWdodCA9IHBhZGRpbmdSaWdodDtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2hhcnQuZGVzdHJveSgpO1xuICAgICAgICAgIGNoYXJ0ID0gYzMuZ2VuZXJhdGUoY2hhcnREYXRhKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjaGFydDtcbiAgfTsgICAgXG5cbiAgdmFyIGZvcm1hdERhdGFzZXQgPSBmdW5jdGlvbihhcGlSZXNwb25zZSwgYXhpc0Fzc2lnbm1lbnRzLCBhbmFseXNpc1R5cGUpIHtcbiAgICAgIHZhciBuZXdEYXRhID0gXy5leHRlbmQoe30sIGFwaVJlc3BvbnNlKTtcbiAgICAgIHZhciBwb3NzaWJsZUF4aXMgPSBbJ3gnLCd5JywneicsJ3oyJywneTInXTtcblxuICAgICAgbmV3RGF0YS5jaGFydERhdGEgPSB7fVxuICAgICAgbmV3RGF0YS5hbmFseXNpc1R5cGUgPSBhbmFseXNpc1R5cGU7XG5cbiAgICAgIF8uZWFjaChwb3NzaWJsZUF4aXMsIGZ1bmN0aW9uKGF4aXMpIHtcbiAgICAgICAgaWYoYXhpc0Fzc2lnbm1lbnRzLmhhc093blByb3BlcnR5KGF4aXMpKSB7XG4gICAgICAgICAgbmV3RGF0YS5jaGFydERhdGFbYXhpc10gPSB7XG4gICAgICAgICAgICB2YWx1ZXM6IGF4aXNBc3NpZ25tZW50c1theGlzXS52YWx1ZXMsXG4gICAgICAgICAgICBsYWJlbDogYXhpc0Fzc2lnbm1lbnRzW2F4aXNdLmNvbHVtbl9oZWFkZXJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZihhcGlSZXNwb25zZS5pbnNpZ2h0X21ldGFkYXRhKSB7XG4gICAgICAgIG5ld0RhdGEuY2hhcnREYXRhLm1ldGFkYXRhID0gYXBpUmVzcG9uc2UuaW5zaWdodF9tZXRhZGF0YTtcbiAgICAgIH1cblxuICAgICAgaWYobmV3RGF0YS5hbmFseXNpc1R5cGUuaW5kZXhPZignZ2VvJykgPiAtMSkge1xuICAgICAgICBuZXdEYXRhLmNoYXJ0RGF0YS54LnZhbHVlcyA9IF8ubWFwKG5ld0RhdGEuY2hhcnREYXRhLngudmFsdWVzLCBKU09OLnBhcnNlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ld0RhdGE7XG4gIH07XG4gIFxuICB2YXIgY3JlYXRlU3R5bGVFbGVtZW50ID0gZnVuY3Rpb24oY3NzKSB7XG4gICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICBzdHlsZS50eXBlID0gJ3RleHQvY3NzJztcbiAgICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0eWxlO1xuICB9XG4gIFxuICB2YXIgaW5pdGlhbEFuaW1hdGlvbiA9IGZ1bmN0aW9uKGNoYXJ0RGF0YSwgb3B0aW9ucykge1xuICAgIHZhciBlbmRpbmdWYWx1ZXMgPSBjaGFydERhdGEuZGF0YS5jb2x1bW5zO1xuICAgIGlmKCFvcHRpb25zLnNraXBBbmltYXRpb24pIHtcbiAgICAgIGNoYXJ0RGF0YS5kYXRhLmNvbHVtbnMgPSBbXTtcbiAgICAgIGVuZGluZ1ZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGMpIHtcbiAgICAgICAgaWYoY2hhcnREYXRhLmRhdGEueHMpXG4gICAgICAgICAgY2hhcnREYXRhLmRhdGEuY29sdW1ucy5wdXNoKFtjWzBdXSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBjaGFydERhdGEuZGF0YS5jb2x1bW5zLnB1c2goYy5zbGljZSgwKS5maWxsKDAsIDEpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhcnQ6IGZ1bmN0aW9uKGNoYXJ0LCBjYikge1xuICAgICAgICBpZighb3B0aW9ucy5za2lwQW5pbWF0aW9uKSB7XG4gICAgICAgICAgY2IgPSBjYiB8fCBmdW5jdGlvbigpIHt9O1xuICAgICAgICAgIGNoYXJ0LmxvYWQoe1xuICAgICAgICAgICAgY29sdW1uczogZW5kaW5nVmFsdWVzLFxuICAgICAgICAgICAgZG9uZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoY2IsIDM1MCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB3aW5kb3cucG9waWx5LmNoYXJ0LnV0aWxzID0ge1xuICAgIGNoYXJ0U2l6ZTogY2hhcnRTaXplLFxuICAgIHVwZGF0ZUNoYXJ0OiB1cGRhdGVDaGFydCxcbiAgICBmb3JtYXREYXRhc2V0OiBmb3JtYXREYXRhc2V0LFxuICAgIGNyZWF0ZVN0eWxlRWxlbWVudDogY3JlYXRlU3R5bGVFbGVtZW50LFxuICAgIGluaXRpYWxBbmltYXRpb246IGluaXRpYWxBbmltYXRpb24gfTtcbn0pKHdpbmRvdyk7XG4iLCIoZnVuY3Rpb24od2luZG93KSB7XG5cbiAgLy8gQXZlcmFnZSBudW1iZXIgMSBvZiBDYXRlZ29yeSAxIFxuICBcbiAgXG4gIHZhciBqb2luV2l0aE9yID0gZnVuY3Rpb24oYXJyKSB7XG4gICAgaWYoYXJyLmxlbmd0aCA8IDIpXG4gICAgICByZXR1cm4gYXJyLmpvaW4oJycpO1xuICAgIGVsc2VcbiAgICAgIHJldHVybiBbYXJyLnNsaWNlKDAsIC0xKS5qb2luKCcsICcpLCBhcnIuc2xpY2UoLTEpWzBdXS5qb2luKCcgb3IgJyk7XG4gIH1cbiAgICBcbiAgd2luZG93LnBvcGlseS5jaGFydC5nZW5lcmF0ZUxhYmVscyA9IGZ1bmN0aW9uKGNhbGN1bGF0aW9uLCBheGlzQXNzaWdubWVudHMsIHRyYW5zZm9ybWF0aW9ucykge1xuICAgICAgICBcbiAgXG4gICAgdmFyIGNvbHVtbkxhYmVsID0gZnVuY3Rpb24oY29sdW1uLCBkZXNjcmlwdGlvbikge1xuICAgICAgaWYoISgnY29sdW1uX2hlYWRlcicgaW4gY29sdW1uKSlcbiAgICAgICAgY29uc29sZS5sb2coY29sdW1uKTtcbiAgICAgIHZhciBsYWJlbCA9ICc8c3BhbiBjbGFzcz1cInBvcGlseS10aXRsZS12YXJpYWJsZVwiID4nKyBjb2x1bW4uY29sdW1uX2hlYWRlciArICc8L3NwYW4+JztcbiAgICAgIHZhciBwcmVmaXhlcyA9IFtdLFxuICAgICAgICBzdWZpeGVzID0gW107XG4gICAgICBkZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uIHx8ICcnO1xuICAgICAgKHRyYW5zZm9ybWF0aW9ucyB8fCBbXSkuZm9yRWFjaChmdW5jdGlvbih0KSB7XG4gICAgICAgIGlmKHQuY29sdW1uPT1jb2x1bW4uY29sdW1uX2hlYWRlcikge1xuICAgICAgICAgIGlmKHQub3AgPT0gJ2VxJylcbiAgICAgICAgICAgIHN1Zml4ZXMucHVzaCgnZXF1YWwgJysgam9pbldpdGhPcih0LnZhbHVlcykpO1xuICAgICAgICAgIGVsc2UgaWYodC5vcCA9PSAnbm90ZXEnKVxuICAgICAgICAgICAgc3VmaXhlcy5wdXNoKCdub3QgZXF1YWwgJysgam9pbldpdGhPcih0LnZhbHVlcykpO1xuICAgICAgICAgIGVsc2UgaWYodC5vcCA9PSAnZ3QnKVxuICAgICAgICAgICAgcHJlZml4ZXMucHVzaCgnZ3JlYXRlciB0aGFuICcrIHQudmFsdWUpO1xuICAgICAgICAgIGVsc2UgaWYodC5vcCA9PSAnZ3RlJylcbiAgICAgICAgICAgIHByZWZpeGVzLnB1c2goJ2dyZWF0ZXIgdGhhbiBvciBlcXVhbCAnKyB0LnZhbHVlKTtcbiAgICAgICAgICBlbHNlIGlmKHQub3AgPT0gJ2x0JylcbiAgICAgICAgICAgIHByZWZpeGVzLnB1c2goJ2xvd2VyIHRoYW4gJysgdC52YWx1ZSk7XG4gICAgICAgICAgZWxzZSBpZih0Lm9wID09ICdsdGUnKVxuICAgICAgICAgICAgcHJlZml4ZXMucHVzaCgnbG93ZXIgdGhhbiBvciBlcXVhbCAnKyB0LnZhbHVlKTtcbiAgICAgICAgICBlbHNlIGlmKHQub3AgPT0gJ2NvdW50VW5pcXVlJylcbiAgICAgICAgICAgIHByZWZpeGVzLnB1c2goJ251bWJlciBvZiB1bmlxdWUnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBpZihwcmVmaXhlcy5sZW5ndGggJiYgIWRlc2NyaXB0aW9uKVxuICAgICAgICBkZXNjcmlwdGlvbiA9ICd2YWx1ZXMgb2YnXG4gICAgICBcbiAgICAgIHJldHVybiBwcmVmaXhlcy5qb2luKCcgYW5kICcpICsnICcrIGRlc2NyaXB0aW9uICsgJyAnKyBsYWJlbCArJyAnKyBzdWZpeGVzLmpvaW4oJyBhbmQgJyk7XG4gICAgfVxuICBcbiAgXG4gICAgaWYoY2FsY3VsYXRpb24gPT0gJ2NvdW50Jykge1xuICAgICAgaWYoYXhpc0Fzc2lnbm1lbnRzLnopIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLnosICdOdW1iZXIgb2YgZWFjaCcpICsgJyBncm91cGVkIGJ5ICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueClcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdGl0bGU6IGNvbHVtbkxhYmVsKGF4aXNBc3NpZ25tZW50cy54LCAnTnVtYmVyIG9mIGVhY2gnKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYoY2FsY3VsYXRpb24gPT0gJ3N1bScgKSB7XG4gICAgICBpZihheGlzQXNzaWdubWVudHMueikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRpdGxlOiBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueiwgJ1RvdGFsIG9mJykgKyAnIGJ5ICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueCkgKyAnIGdyb3VwZWQgYnkgJyArIGNvbHVtbkxhYmVsKGF4aXNBc3NpZ25tZW50cy54KVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYoYXhpc0Fzc2lnbm1lbnRzLnkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLnksICdUb3RhbCBvZicpICsgJyBncm91cGVkIGJ5ICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLngsICdUb3RhbCBvZicpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZihjYWxjdWxhdGlvbiA9PSAnYXZlcmFnZScpIHtcbiAgICAgIGlmKGF4aXNBc3NpZ25tZW50cy56KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdGl0bGU6IGNvbHVtbkxhYmVsKGF4aXNBc3NpZ25tZW50cy56LCAnQXZlcmFnZSBvZicpICsgJyBieSAnICsgY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLngpICsgJyBncm91cGVkIGJ5ICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmKGF4aXNBc3NpZ25tZW50cy55KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdGl0bGU6IGNvbHVtbkxhYmVsKGF4aXNBc3NpZ25tZW50cy55LCAnQXZlcmFnZSBvZicpICsgJyBncm91cGVkIGJ5ICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueClcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdGl0bGU6IGNvbHVtbkxhYmVsKGF4aXNBc3NpZ25tZW50cy54LCAnQXZlcmFnZSBvZicpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZihjYWxjdWxhdGlvbiA9PSAncmF0aW8nKSB7XG4gICAgICBpZihheGlzQXNzaWdubWVudHMueSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRpdGxlOiBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueCwgJ1JhdGlvIG9mIHJlY29yZHMgZm9yIGVhY2gnKSArICcgJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLngsICdSYXRpbyBvZiBlYWNoJylcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmKGNhbGN1bGF0aW9uID09ICdjb21wYXJpc29uJykge1xuICAgICAgaWYoYXhpc0Fzc2lnbm1lbnRzLnopIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogJycgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueikgKyAnIGNvbXBhcmVkIHRvICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueCkgKyAnIGJ5ICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogJycgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueSkgKyAnIGNvbXBhcmVkIHRvICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmKGNhbGN1bGF0aW9uID09ICd0b3AnKSB7XG4gICAgICAvLyBUb3AgdW5pcXVlX3Jvd19sYWJlbF8xIFJhbmtlZCBieSBudW1iZXJfM1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdGl0bGU6ICcnICsgY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLngsICdUb3AnKSArICcgUmFua2VkIGJ5ICcgKyBjb2x1bW5MYWJlbChheGlzQXNzaWdubWVudHMueSlcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZihjYWxjdWxhdGlvbiA9PSAnZ2VvJykge1xuICAgICAgaWYoYXhpc0Fzc2lnbm1lbnRzLnopIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLngsICdOdW1iZXIgb2YnKSArICcgZm9yIEVhY2ggTG9jYXRpb24gZ3JvdXBlZCBieSAnICsgY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLnopXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGVsc2UgaWYoYXhpc0Fzc2lnbm1lbnRzLnkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aXRsZTogY29sdW1uTGFiZWwoYXhpc0Fzc2lnbm1lbnRzLnksICdOdW1iZXIgb2YnKSArICcgZm9yIEVhY2ggTG9jYXRpb24nXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRpdGxlOiAnUm93bGFiZWwgZm9yIEVhY2ggTG9jYXRpb24nXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHRpdGxlOiAnbm8gdGl0bGUgZm9yICcrY2FsY3VsYXRpb25cbiAgICB9XG4gICAgXG4gIH1cblxufSkod2luZG93KTtcbiIsIihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIHBvcGlseUNoYXJ0ID0gd2luZG93LnBvcGlseS5jaGFydDtcbiAgXG4gIHZhciBiYXIgPSBfLmNsb25lKHBvcGlseUNoYXJ0LmJhc2VDaGFydCk7XG4gIGJhci5kZWZhdWx0Rm9yID0gW1xuICBdO1xuICBiYXIuYWNjZXB0cyA9IFtcbiAgICAnY291bnRfYnlfZGF0ZXRpbWUnLFxuICAgICdyYXRpb19ieV9kYXRldGltZScsXG4gICAgJ3N1bV9ieV9kYXRldGltZScsXG4gICAgJ2F2ZXJhZ2VfYnlfZGF0ZXRpbWUnLFxuICAgICdjb3VudF9wZXJfY2F0ZWdvcnlfYnlfZGF0ZXRpbWUnLFxuICAgICdhdmVyYWdlX3Blcl9jYXRlZ29yeV9ieV9kYXRldGltZScsXG4gICAgJ2NvdW50X3Blcl9jYXRlZ29yeV9ieV9jYXRlZ29yeScsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5X2J5X2NhdGVnb3J5X2Rpc3RpbmN0JyxcbiAgICAnY291bnRfYnlfdmFsdWUnLFxuICAgICdjb3VudF9ieV9jYXRlZ29yeScsXG4gICAgJ2F2ZXJhZ2VfYnlfY2F0ZWdvcnknLFxuICAgICdzdW1fYnlfY2F0ZWdvcnknLFxuXG4gICAgJ2NvdW50X2J5X3N0YXRlJyxcbiAgICAnYXZlcmFnZV9ieV9zdGF0ZScsXG4gICAgJ3N1bV9ieV9zdGF0ZScsXG5cbiAgICAnY291bnRfYnlfY291bnRyeScsXG4gICAgJ2F2ZXJhZ2VfYnlfY291bnRyeScsXG4gICAgJ3N1bV9ieV9jb3VudHJ5JyxcblxuICAgICdzdW1fc3VtX2J5X2NhdGVnb3J5JyxcbiAgICAnc3VtX2J5X2NhdGVnb3J5X3Blcl9jYXRlZ29yeScsXG4gICAgJ2F2ZXJhZ2VfYnlfY2F0ZWdvcnlfcGVyX2NhdGVnb3J5JyxcbiAgICAnY291bnRfYnlfY2F0ZWdvcnlfcGVyX2NhdGVnb3J5JyxcbiAgICAnY291bnRfcGVyX2NhdGVnb3J5X2J5X2NhdGVnb3J5JyxcbiAgICAnY291bnRfYnlfY2F0ZWdvcnlfYnlfZGF0ZXRpbWVfZGlzdGluY3QnLFxuICAgICd0b3BfYnlfcm93bGFiZWwnXG4gIF07XG5cblxuICBiYXIucmVuZGVyID0gZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucywgcmF3RGF0YSkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgdmFyIHByZXBwZWREYXRhID0gcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5iYXJDb21tb24ucHJlcERhdGEocmF3RGF0YSwgb3B0aW9ucyk7XG4gICAgICB2YXIgeFZhbHVlcyA9IHByZXBwZWREYXRhWzBdO1xuICAgICAgdmFyIHlWYWx1ZXMgPSBwcmVwcGVkRGF0YVsxXTtcblxuICAgICAgdmFyIGNoYXJ0O1xuICAgICAgICBcbiAgICAgIHZhciByb3RhdGVkID0gb3B0aW9ucy5yb3RhdGVkIHx8IGZhbHNlO1xuICAgICAgLy9pZihpbnNpZ2h0Lm9wdGlvbnNfcm90YXRlKVxuICAgICAgLy8gIHJvdGF0ZWQgPSB0cnVlO1xuICAgICAgaWYoeVZhbHVlcy5sZW5ndGggPiA0MCkge1xuICAgICAgICByb3RhdGVkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYocm90YXRlZCA9PSB0cnVlKSB7XG4gICAgICAgIGlmKHlWYWx1ZXMubGVuZ3RoID4gNDApXG4gICAgICAgICAgb3B0aW9ucy5oZWlnaHQgPSAoeVZhbHVlcy5sZW5ndGggKiA5KSArIDQ1MDtcbiAgICAgIH1cblxuICAgICAgdmFyIHlMYWJlbCA9IHJhd0RhdGEuY2hhcnREYXRhLnkubGFiZWw7XG4gICAgICB5VmFsdWVzLnVuc2hpZnQoeUxhYmVsKTtcbiAgICAgIFxuICAgICAgdmFyIGNoYXJ0RGF0YSA9IHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIGNvbHVtbnM6IFt5VmFsdWVzXSxcbiAgICAgICAgICB0eXBlOiAnYmFyJ1xuICAgICAgICB9LFxuICAgICAgICBiYXI6IHtcbiAgICAgICAgICB3aWR0aDoge1xuICAgICAgICAgICAgcmF0aW86IChvcHRpb25zLmJhclNpemUgfHwgMC43KVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcGFkZGluZzogdGhhdC5kZWZhdWx0cy5jaGFydFBhZGRpbmcoKSxcbiAgICAgICAgYXhpczoge1xuICAgICAgICAgIHg6IHtcbiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsXG4gICAgICAgICAgICBjYXRlZ29yaWVzOiB4VmFsdWVzLFxuICAgICAgICAgICAgdGljazoge1xuICAgICAgICAgICAgICByb3RhdGU6IDQ1LFxuICAgICAgICAgICAgICBtdWx0aWxpbmU6IGZhbHNlLFxuICAgICAgICAgICAgICBmaXQ6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICB0ZXh0OiBvcHRpb25zLnhMYWJlbCB8fCByYXdEYXRhLmNoYXJ0RGF0YS54LmxhYmVsLFxuICAgICAgICAgICAgICBwb3NpdGlvbjogcm90YXRlZD8nb3V0ZXItbWlkZGxlJzonaW5uZXItcmlnaHQnLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgeToge1xuICAgICAgICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICAgIHRleHQ6IG9wdGlvbnMueUxhYmVsIHx8IHlMYWJlbCxcbiAgICAgICAgICAgICAgcG9zaXRpb246IHJvdGF0ZWQ/J2lubmVyLXJpZ2h0Jzonb3V0ZXItbWlkZGxlJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpY2s6IHtcbiAgICAgICAgICAgICAgZm9ybWF0OiBkMy5mb3JtYXQoXCIsXCIpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICByb3RhdGVkOiByb3RhdGVkXG4gICAgICAgIH0sXG4gICAgICAgIGNvbG9yOiB7ICAgICAgICAgICAgICAgIFxuICAgICAgICAgIHBhdHRlcm46IG9wdGlvbnMuY29sb3JzXG4gICAgICAgIH0sICAgICAgIFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICBzaG93OiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBzaXplOiB7XG4gICAgICAgICAgaGVpZ2h0OiBvcHRpb25zLmhlaWdodFxuICAgICAgICB9LFxuICAgICAgICBncmlkOiB7XG4gICAgICAgICAgeDoge1xuICAgICAgICAgICAgc2hvdzogXy5pc1VuZGVmaW5lZChvcHRpb25zLnhHcmlkKT9mYWxzZTpvcHRpb25zLnhHcmlkXG4gICAgICAgICAgfSxcbiAgICAgICAgICB5OiB7XG4gICAgICAgICAgICBzaG93OiBfLmlzVW5kZWZpbmVkKG9wdGlvbnMueUdyaWQpP3RydWU6b3B0aW9ucy55R3JpZFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcDogKF8uaXNVbmRlZmluZWQob3B0aW9ucy50b29sdGlwKT90cnVlOm9wdGlvbnMudG9vbHRpcCksXG4gICAgICAgIG9ucmVzaXplZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5iYXJDb21tb24udXBkYXRlU3BlY2lhbHMoZWxlbWVudCwgcm90YXRlZCwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBcbiAgICAgIGNoYXJ0RGF0YS5iaW5kdG8gPSBlbGVtZW50O1xuICAgICAgdmFyIGFuaW1hdGlvbiA9IHBvcGlseS5jaGFydC51dGlscy5pbml0aWFsQW5pbWF0aW9uKGNoYXJ0RGF0YSwgb3B0aW9ucyk7XG4gICAgICBcbiAgICAgIHZhciBjaGFydCA9IGMzLmdlbmVyYXRlKGNoYXJ0RGF0YSk7XG5cbiAgICAgIGFuaW1hdGlvbi5zdGFydChjaGFydCwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuYmFyQ29tbW9uLnVwZGF0ZVNwZWNpYWxzKGVsZW1lbnQsIHJvdGF0ZWQsIG9wdGlvbnMpO1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHJldHVybiBjaGFydDtcbiAgfTtcblxuICBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmJhciA9IGJhcjtcbn0pKHdpbmRvdyk7XG4iLCIoZnVuY3Rpb24od2luZG93KSB7XG4gIHZhciBwb3BpbHlDaGFydCA9IHdpbmRvdy5wb3BpbHkuY2hhcnQ7XG4gIFxuICB2YXIgY2hhcnQgPSBfLmNsb25lKHBvcGlseUNoYXJ0LmJhc2VDaGFydCk7XG5cbiAgY2hhcnQucHJlcERhdGEgPSBmdW5jdGlvbihyYXdEYXRhLCBvcHRpb25zKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHZhciBsaW1pdCA9IHRoYXQuZGVmYXVsdHMuY2F0ZWdvcnlMaW1pdDtcbiAgICB2YXIgY2xlYW5WYWx1ZXMgPSB0aGF0LmNsZWFuRGF0YShyYXdEYXRhKTtcblxuICAgIHZhciBvcmRlciA9IG9wdGlvbnMub3JkZXIgfHwgJ2F1dG8nO1xuICAgIGNsZWFuVmFsdWVzID0gXy51bnppcChfLnppcChjbGVhblZhbHVlcykuc2xpY2UoMCw1MDAwKSlbMF07XG4gICAgdmFyIGNsZWFuWFZhbHVlcyA9IHBvcGlseUNoYXJ0LmZvcm1hdC50b051bWJlcihjbGVhblZhbHVlc1swXSk7XG4gICAgdmFyIGNsZWFuWVZhbHVlcyA9IHBvcGlseUNoYXJ0LmZvcm1hdC50b051bWJlcihjbGVhblZhbHVlc1sxXSk7XG5cbiAgICBjbGVhblhWYWx1ZXMgPSBwb3BpbHlDaGFydC5mb3JtYXQuZm9ybWF0TnVtYmVycyhjbGVhblhWYWx1ZXMpO1xuICAgIGNsZWFuWVZhbHVlcyA9IHBvcGlseUNoYXJ0LmZvcm1hdC5mb3JtYXROdW1iZXJzKGNsZWFuWVZhbHVlcyk7XG4gICAgdmFyIGNsZWFuWlZhbHVlcyA9IGNsZWFuVmFsdWVzWzJdO1xuICAgIGlmKCFyYXdEYXRhLmNvbHVtbnMueiAmJiByYXdEYXRhLmNoYXJ0RGF0YS5tZXRhZGF0YSAmJiByYXdEYXRhLmNoYXJ0RGF0YS5tZXRhZGF0YS5yb3dsYWJlbHMpIHtcbiAgICAgIGNsZWFuWlZhbHVlcyA9IHJhd0RhdGEuY2hhcnREYXRhLm1ldGFkYXRhLnJvd2xhYmVscztcbiAgICB9XG4gICAgcmV0dXJuIFtjbGVhblhWYWx1ZXMsIGNsZWFuWVZhbHVlcywgY2xlYW5aVmFsdWVzXTtcbiAgfTtcblxuICBjaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCBjb2x1bW5zLCB4cywgeExhYmVsLCB5TGFiZWwsIHRvb2x0aXApIHtcbiAgICAgIHZhciBjaGFydFBhZGRpbmcgPSB7cmlnaHQ6IDEwLCB0b3A6IDEwfTtcblxuICAgICAgdmFyIGNoYXJ0RGF0YSA9IHtcbiAgICAgICAgICBiaW5kdG86IGVsZW1lbnQsXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICB4czogeHMsXG4gICAgICAgICAgICAgIGNvbHVtbnM6IGNvbHVtbnMsXG4gICAgICAgICAgICAgIHR5cGU6ICdzY2F0dGVyJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcGFkZGluZzogdGhpcy5kZWZhdWx0cy5jaGFydFBhZGRpbmcoKSxcbiAgICAgICAgICBzaXplOiB7XG4gICAgICAgICAgICAgIGhlaWdodDogb3B0aW9ucy5oZWlnaHRcbiAgICAgICAgICB9LFxuICAgICAgICAgIHBvaW50OiB7XG4gICAgICAgICAgICByOiAob3B0aW9ucy5wb2ludFNpemUgfHwgNClcbiAgICAgICAgICB9LFxuICAgICAgICAgIGF4aXM6IHtcbiAgICAgICAgICAgICAgeDoge1xuICAgICAgICAgICAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBvcHRpb25zLnhMYWJlbCB8fCB4TGFiZWwsXG4gICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICdpbm5lci1yaWdodCcsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgdGljazoge1xuICAgICAgICAgICAgICAgICAgICAgIGZpdDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgcm90YXRlOiA0NVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB5OiB7XG4gICAgICAgICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IG9wdGlvbnMueUxhYmVsIHx8IHlMYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ291dGVyLW1pZGRsZSdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB0aWNrOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBkMy5mb3JtYXQoXCIsXCIpXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGdyaWQ6IHtcbiAgICAgICAgICAgIHg6IHtcbiAgICAgICAgICAgICAgc2hvdzogXy5pc1VuZGVmaW5lZChvcHRpb25zLnhHcmlkKT90cnVlOm9wdGlvbnMueEdyaWRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB5OiB7XG4gICAgICAgICAgICAgIHNob3c6IF8uaXNVbmRlZmluZWQob3B0aW9ucy55R3JpZCk/dHJ1ZTpvcHRpb25zLnlHcmlkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb2xvcjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiBvcHRpb25zLmNvbG9yc1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiAnb3V0ZXItYm90dG9tJyxcbiAgICAgICAgICAgICAgaGlkZTogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgdG9vbHRpcDogdG9vbHRpcFxuICAgICAgfTtcblxuICAgICAgdmFyIGFuaW1hdGlvbiA9IHBvcGlseS5jaGFydC51dGlscy5pbml0aWFsQW5pbWF0aW9uKGNoYXJ0RGF0YSwgb3B0aW9ucylcbiAgICAgIHZhciBjaGFydCA9IGMzLmdlbmVyYXRlKGNoYXJ0RGF0YSk7XG4gICAgICBjaGFydERhdGEuYmluZHRvID0gZWxlbWVudDtcbiAgICAgIFxuICAgICAgYW5pbWF0aW9uLnN0YXJ0KGNoYXJ0KTtcbiAgICAgIFxuICAgICAgcmV0dXJuIGNoYXJ0O1xuICB9O1xuXG4gIHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuY29tcGFyZSA9IGNoYXJ0O1xufSkod2luZG93KTtcbiIsIihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIHBvcGlseUNoYXJ0ID0gd2luZG93LnBvcGlseS5jaGFydDtcbiAgdmFyIGNoYXJ0ID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuXG4gIGNoYXJ0LnByZXBEYXRhID0gZnVuY3Rpb24ocmF3RGF0YSwgb3B0aW9ucykge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICB2YXIgbGltaXQgPSB0aGF0LmRlZmF1bHRzLmNhdGVnb3J5TGltaXQ7XG4gICAgcmF3RGF0YS5jaGFydERhdGEueS52YWx1ZXMgPSBwb3BpbHkuY2hhcnQuY2hhcnREYXRhLmNsZWFuTmFuVG9aZXJvKHJhd0RhdGEuY2hhcnREYXRhLnkudmFsdWVzKVxuICAgIHZhciBjbGVhblZhbHVlcyA9IHRoYXQuY2xlYW5EYXRhKHJhd0RhdGEpO1xuXG4gICAgdmFyIG9yZGVyID0gb3B0aW9ucy5vcmRlciB8fCAnYXV0byc7XG4gICAgY2xlYW5WYWx1ZXMgPSBwb3BpbHlDaGFydC5jaGFydERhdGEuc29ydERhdGEoY2xlYW5WYWx1ZXNbMF0sY2xlYW5WYWx1ZXNbMV0sY2xlYW5WYWx1ZXNbMl0sMCxvcmRlcik7XG5cbiAgICB2YXIgY2xlYW5YVmFsdWVzID0gY2xlYW5WYWx1ZXNbMF07XG4gICAgdmFyIGNsZWFuWVZhbHVlcyA9IHBvcGlseUNoYXJ0LmZvcm1hdC5mb3JtYXROdW1iZXJzKGNsZWFuVmFsdWVzWzFdKTtcbiAgICB2YXIgY2xlYW5aVmFsdWVzID0gY2xlYW5WYWx1ZXNbMl07XG5cbiAgICByZXR1cm4gW2NsZWFuWFZhbHVlcywgY2xlYW5ZVmFsdWVzLCBjbGVhblpWYWx1ZXNdO1xuICB9O1xuXG4gIGNoYXJ0LmdldFlNaW4gPSBmdW5jdGlvbih5VmFsdWVzKSB7XG4gICAgdmFyIHlNaW4gPSAwO1xuICAgIHZhciBsb3dlc3RZID0gXy5taW4oeVZhbHVlcyk7XG4gICAgaWYobG93ZXN0WSA8IDApIHtcbiAgICAgICAgeU1pbiA9IGxvd2VzdFk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHlNaW47XG4gIH07XG5cbiAgY2hhcnQuZ2V0Q2hhcnRPYmplY3QgPSBmdW5jdGlvbihrd2FyZ3MpIHtcbiAgICB2YXIgZWxlbWVudCA9IGt3YXJncy5lbGVtZW50O1xuICAgIHZhciBkYXRhID0ga3dhcmdzLmRhdGE7XG4gICAgdmFyIHhMYWJlbCA9IGt3YXJncy54TGFiZWw7XG4gICAgdmFyIHlMYWJlbCA9IGt3YXJncy55TGFiZWw7XG4gICAgdmFyIHlNaW4gPSBrd2FyZ3MueU1pbjtcbiAgICB2YXIgb3B0aW9ucyA9IGt3YXJncy5vcHRpb25zO1xuICAgIHZhciBkYXRlRm9ybWF0U3RyID0ga3dhcmdzLmRhdGVGb3JtYXRTdHI7XG4gICAgdmFyIGNoYXJ0UGFkZGluZyA9IGt3YXJncy5jaGFydFBhZGRpbmc7XG4gICAgdmFyIGludGVydmFsID0ga3dhcmdzLmludGVydmFsO1xuICAgIHZhciB0aWNrc1ZhbHVlcyA9IGt3YXJncy50aWNrc1ZhbHVlcztcbiAgICB2YXIgdGlja0Zvcm1hdFN0ciA9IGt3YXJncy50aWNrRm9ybWF0U3RyO1xuICAgIFxuICAgIHZhciBjaGFydERhdGEgPSB7XG4gICAgICAgIGJpbmR0bzogZWxlbWVudCxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgeDogJ3gnLFxuICAgICAgICAgICAgY29sdW1uczogZGF0YS5jb2x1bW5zLFxuICAgICAgICAgICAgeEZvcm1hdDogZGF0ZUZvcm1hdFN0clxuICAgICAgICB9LFxuICAgICAgICBwYWRkaW5nOiBjaGFydFBhZGRpbmcsXG4gICAgICAgIGF4aXM6IHtcbiAgICAgICAgICAgIHg6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAoIW9wdGlvbnMub3JkZXIgfHwgb3B0aW9ucy5vcmRlciA9PSAnYXV0bycgPyAndGltZXNlcmllcycgOiAnY2F0ZWdvcnknKSxcbiAgICAgICAgICAgICAgICB0aWNrOiB7XG4gICAgICAgICAgICAgICAgICAgIGZpdDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogdGlja0Zvcm1hdFN0cixcbiAgICAgICAgICAgICAgICAgICAgcm90YXRlOjQ1LFxuICAgICAgICAgICAgICAgICAgICBjZW50ZXJlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzOiAoIW9wdGlvbnMub3JkZXIgfHwgb3B0aW9ucy5vcmRlciA9PSAnYXV0bycgPyB0aWNrc1ZhbHVlcyA6IG51bGwpLFxuICAgICAgICAgICAgICAgICAgICBjb3VudDogdGlja3NWYWx1ZXMubGVuZ3RoXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBvcHRpb25zLnhMYWJlbCB8fCB4TGFiZWwsXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnaW5uZXItcmlnaHQnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHk6IHtcbiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgICAgICAgIG1pbjogeU1pbixcbiAgICAgICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBvcHRpb25zLnlMYWJlbCB8fCB5TGFiZWwsXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnb3V0ZXItbWlkZGxlJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdGljazoge1xuICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IGQzLmZvcm1hdChcIixcIilcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IHt0b3A6MCwgYm90dG9tOjB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGdyaWQ6IHtcbiAgICAgICAgICB4OiB7XG4gICAgICAgICAgICBzaG93OiBfLmlzVW5kZWZpbmVkKG9wdGlvbnMueEdyaWQpP2ZhbHNlOm9wdGlvbnMueEdyaWRcbiAgICAgICAgICB9LFxuICAgICAgICAgIHk6IHtcbiAgICAgICAgICAgIHNob3c6IF8uaXNVbmRlZmluZWQob3B0aW9ucy55R3JpZCk/dHJ1ZTpvcHRpb25zLnlHcmlkXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjb2xvcjoge1xuICAgICAgICAgICAgcGF0dGVybjogb3B0aW9ucy5jb2xvcnNcbiAgICAgICAgfSxcbiAgICAgICAgcG9pbnQ6IHtcbiAgICAgICAgICByOiAob3B0aW9ucy5wb2ludFNpemUgfHwgMi41KVxuICAgICAgICB9LFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tJyxcbiAgICAgICAgICAgIHNob3c6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHRvb2x0aXA6IHtcbiAgICAgICAgICAgIHNob3c6IChfLmlzVW5kZWZpbmVkKG9wdGlvbnMudG9vbHRpcCk/dHJ1ZTpvcHRpb25zLnRvb2x0aXApXG4gICAgICAgIH0sXG4gICAgICAgIHNpemU6IHtcbiAgICAgICAgICAgIGhlaWdodDogb3B0aW9ucy5oZWlnaHRcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZihvcHRpb25zLm9yZGVyID09ICdhdXRvJykge1xuICAgICAgY2hhcnREYXRhLnRvb2x0aXAuZm9ybWF0ID0ge1xuICAgICAgICB0aXRsZTogZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBkYXRlRm9ybWF0KGQpO1xuICAgICAgICB9IFxuICAgICAgfVxuXG4gICAgICBjaGFydERhdGEuYXhpcy54LnRpY2sudmFsdWVzID0gdGlja3NWYWx1ZXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoYXJ0RGF0YTtcbiAgfTtcblxuICBjaGFydC5mb3JtYXREYXRlcyA9IGZ1bmN0aW9uKHhWYWx1ZXMsIGRhdGEsIG9wdGlvbnMpIHtcbiAgICB2YXIgZGF5RGlmZiA9IHBvcGlseS5jaGFydC5mb3JtYXQuZGF5c0RpZmYoeFZhbHVlcyk7IFxuICAgIHZhciB0aWNrRm9ybWF0U3RyID0gcG9waWx5LmNoYXJ0LmZvcm1hdC5mb3JtYXRGcm9tRGF5RGlmZihkYXlEaWZmKTtcbiAgICBcbiAgICB2YXIgaW50ZXJ2YWwgPSBvcHRpb25zLmludGVydmFsO1xuXG4gICAgdmFyIGRhdGVGb3JtYXRTdHIgPSBwb3BpbHkuY2hhcnQuZm9ybWF0LmZvcm1hdEZyb21JbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgaWYoXy5pc1VuZGVmaW5lZChpbnRlcnZhbCkpIHtcbiAgICAgIGRhdGVGb3JtYXRTdHIgPSBwb3BpbHkuY2hhcnQuZm9ybWF0LmZvcm1hdEZyb21JbnNwZWN0aW9uKHhWYWx1ZXMpO1xuICAgIH1cbiAgICBcbiAgICB2YXIgZGF0ZUZvcm1hdCA9IGQzLnRpbWUuZm9ybWF0KGRhdGVGb3JtYXRTdHIpO1xuICAgIHZhciB0aWNrRm9ybWF0ID0gZDMudGltZS5mb3JtYXQodGlja0Zvcm1hdFN0cik7XG4gICAgdmFyIGZ1bGxGb3JtYXQgPSBkMy50aW1lLmZvcm1hdCgnJVktJW0tJWQgJUg6JU06JVMnKTtcblxuICAgIHZhciB0aWNrc1ZhbHVlcyA9IHBvcGlseS5jaGFydC5mb3JtYXQudGlja0Zvcm1hdFZhbHVlcyh4VmFsdWVzLCB0aWNrRm9ybWF0U3RyLCBkYXRlRm9ybWF0KTtcbiAgICBcbiAgICBpZihkYXRlRm9ybWF0ICE9IGZ1bGxGb3JtYXQpXG4gICAgICBkYXRhLmNhdGVnb3JpZXMgPSBfLm1hcChkYXRhLmNhdGVnb3JpZXMsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRlRm9ybWF0KGZ1bGxGb3JtYXQucGFyc2UoZC5zcGxpdCgnLicpWzBdKSk7XG4gICAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICBkYXRlRm9ybWF0U3RyOiBkYXRlRm9ybWF0U3RyLFxuICAgICAgdGlja0Zvcm1hdFN0cjogdGlja0Zvcm1hdFN0cixcbiAgICAgIHRpY2tzVmFsdWVzOiB0aWNrc1ZhbHVlc1xuICAgIH1cbiAgfTtcblxuICBjaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCByYXdEYXRhLCBncm91cGVkKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIgcHJlcHBlZERhdGEgPSB0aGF0LnByZXBEYXRhKHJhd0RhdGEsIG9wdGlvbnMpO1xuICAgICAgdmFyIHhWYWx1ZXMgPSBwcmVwcGVkRGF0YVswXTtcbiAgICAgIHZhciB5VmFsdWVzID0gcHJlcHBlZERhdGFbMV07XG4gICAgICB2YXIgelZhbHVlcyA9IHByZXBwZWREYXRhWzJdO1xuICAgICAgdmFyIHhMYWJlbCA9IHJhd0RhdGEuY2hhcnREYXRhLngubGFiZWw7XG4gICAgICB2YXIgeUxhYmVsID0gcmF3RGF0YS5jaGFydERhdGEueS5sYWJlbDtcblxuICAgICAgb3B0aW9ucy5pbnRlcnZhbCA9IG9wdGlvbnMuaW50ZXJ2YWwgfHwgcmF3RGF0YS5pbnNpZ2h0X21ldGFkYXRhLmludGVydmFsc1swXTtcbiAgICAgIHZhciB5TWluID0gdGhhdC5nZXRZTWluKHlWYWx1ZXMpO1xuICAgICAgICAgICAgXG4gICAgICB2YXIgZGF0YSA9IHBvcGlseUNoYXJ0LmNoYXJ0RGF0YS5jM2lmeSh4VmFsdWVzLHlWYWx1ZXMselZhbHVlcyk7XG4gICAgICB2YXIgZGF0ZURhdGEgPSB0aGF0LmZvcm1hdERhdGVzKHhWYWx1ZXMsIGRhdGEsIG9wdGlvbnMpO1xuXG4gICAgICBkYXRhLmNhdGVnb3JpZXMudW5zaGlmdCgneCcpO1xuICAgICAgZGF0YS5jb2x1bW5zLnVuc2hpZnQoZGF0YS5jYXRlZ29yaWVzKTsgXG4gICAgICB2YXIgY2hhcnRQYWRkaW5nID0gdGhhdC5kZWZhdWx0cy5jaGFydFBhZGRpbmc7XG4gICAgICBcbiAgICAgIHZhciBrd2FyZ3MgPSB7XG4gICAgICAgIGVsZW1lbnQ6IGVsZW1lbnQsXG4gICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIHhMYWJlbDogeExhYmVsLFxuICAgICAgICB5TGFiZWw6IHlMYWJlbCxcbiAgICAgICAgeU1pbjogeU1pbixcbiAgICAgICAgb3B0aW9uczogb3B0aW9ucywgXG4gICAgICAgIGRhdGVGb3JtYXRTdHI6IGRhdGVEYXRhLmRhdGVGb3JtYXRTdHIsXG4gICAgICAgIGNoYXJ0UGFkZGluZzogY2hhcnRQYWRkaW5nLFxuICAgICAgICB0aWNrRm9ybWF0U3RyOiBkYXRlRGF0YS50aWNrRm9ybWF0U3RyLFxuICAgICAgICB0aWNrc1ZhbHVlczogZGF0ZURhdGEudGlja3NWYWx1ZXNcbiAgICAgIH07XG4gICAgICB2YXIgY2hhcnREYXRhID0gdGhhdC5nZXRDaGFydE9iamVjdChrd2FyZ3MpO1xuICAgICAgY2hhcnREYXRhLnRvb2x0aXAuZ3JvdXBlZCA9IChmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZihfLnVuaXEoelZhbHVlcykubGVuZ3RoID4gMjApIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgfSkoKTtcblxuICAgICAgaWYoIV8uaXNVbmRlZmluZWQob3B0aW9ucy5saW5lU2l6ZSkpIHtcbiAgICAgICAgdmFyIHN0eWxlID0gcG9waWx5LmNoYXJ0LnV0aWxzLmNyZWF0ZVN0eWxlRWxlbWVudCgnLicrb3B0aW9ucy51bmlxdWVDbGFzc05hbWUrJyAuYzMtbGluZSB7IHN0cm9rZS13aWR0aDogJytvcHRpb25zLmxpbmVTaXplKydweDsgfScpXG4gICAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChzdHlsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmKGdyb3VwZWQpIHtcbiAgICAgICAgY2hhcnREYXRhLmRhdGEudHlwZSA9ICdhcmVhJztcbiAgICAgICAgY2hhcnREYXRhLmRhdGEuZ3JvdXBzID0gW2RhdGEuZ3JvdXBzXTtcbiAgICAgICAgaWYoZGF0YS5ncm91cHMubGVuZ3RoIDwgNSlcbiAgICAgICAgICBjaGFydERhdGEudG9vbHRpcC5ncm91cGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgXG4gICAgICBhbmltYXRpb24gPSBwb3BpbHkuY2hhcnQudXRpbHMuaW5pdGlhbEFuaW1hdGlvbihjaGFydERhdGEsIG9wdGlvbnMpO1xuICAgICAgdmFyIGNoYXJ0ID0gYzMuZ2VuZXJhdGUoY2hhcnREYXRhKTtcbiAgICAgIGNoYXJ0ID0gcG9waWx5LmNoYXJ0LnV0aWxzLnVwZGF0ZUNoYXJ0KGVsZW1lbnQsIGNoYXJ0LCBjaGFydERhdGEsIGNoYXJ0UGFkZGluZyk7XG4gICAgICBcbiAgICAgIGFuaW1hdGlvbi5zdGFydChjaGFydCk7XG4gICAgICBcbiAgICAgIHJldHVybiBjaGFydDtcbiAgfTtcblxuICBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmxpbmVhciA9IGNoYXJ0O1xufSkod2luZG93KTtcbiIsIihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIHBvcGlseUNoYXJ0ID0gd2luZG93LnBvcGlseS5jaGFydDtcbiAgdmFyIGNoYXJ0ID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuICBjaGFydC5kZWZhdWx0Rm9yID0gW1xuICAgICdhdmVyYWdlX3Blcl9jYXRlZ29yeV9ieV9jYXRlZ29yeScsXG4gICAgJ3N1bV9wZXJfY2F0ZWdvcnlfYnlfY2F0ZWdvcnknLFxuICAgICdjb3VudF9ieV92YWx1ZV9ieV9jYXRlZ29yeScsXG4gICAgJ2F2ZXJhZ2VfYnlfY2F0ZWdvcnlfYnlfY2F0ZWdvcnknLFxuICAgICdzdW1fYnlfY2F0ZWdvcnlfYnlfc3RhdGUnLFxuICAgICdjb3VudF9ieV92YWx1ZV9ieV9zdGF0ZScsXG4gICAgJ2F2ZXJhZ2VfYnlfY2F0ZWdvcnlfYnlfc3RhdGUnXG4gIF07XG4gIGNoYXJ0LmFjY2VwdHMgPSBbXTtcblxuICBjaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCByYXdEYXRhKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIgcHJlcHBlZERhdGEgPSBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmJhckNvbW1vbi5wcmVwRGF0YShyYXdEYXRhLCBvcHRpb25zLCB0cnVlKTtcbiAgICAgIHZhciB4VmFsdWVzID0gcHJlcHBlZERhdGFbMF07XG4gICAgICB2YXIgeVZhbHVlcyA9IHByZXBwZWREYXRhWzFdO1xuICAgICAgdmFyIHpWYWx1ZXMgPSBwcmVwcGVkRGF0YVsyXTtcbiAgICAgIHZhciB4TGFiZWwgPSByYXdEYXRhLmNoYXJ0RGF0YS54LmxhYmVsO1xuICAgICAgdmFyIHlMYWJlbCA9IHJhd0RhdGEuY2hhcnREYXRhLnkubGFiZWw7XG5cbiAgICAgIHZhciBkYXRhID0gcG9waWx5Q2hhcnQuY2hhcnREYXRhLmMzaWZ5KHhWYWx1ZXMseVZhbHVlcyx6VmFsdWVzKTtcbiAgICAgIHZhciByb3RhdGVkID0gZmFsc2U7XG4gICAgICBpZihkYXRhLmNvbHVtbnMubGVuZ3RoID4gMjUpIHtcbiAgICAgICAgICByb3RhdGVkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIGt3YXJncyA9IHtcbiAgICAgICAgb3B0aW9uczogb3B0aW9ucyxcbiAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgelZhbHVlczogelZhbHVlcyxcbiAgICAgICAgcm90YXRlZDogcm90YXRlZCxcbiAgICAgICAgeExhYmVsOiB4TGFiZWwsXG4gICAgICAgIHlMYWJlbDogeUxhYmVsLFxuICAgICAgICBlbGVtZW50OiBlbGVtZW50XG4gICAgICB9O1xuICAgICAgdmFyIGNoYXJ0RGF0YSA9IHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuYmFyQ29tbW9uLmdldENoYXJ0T2JqZWN0KGt3YXJncyk7XG4gICAgICBjaGFydERhdGEub25yZXNpemVkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuYmFyQ29tbW9uLnVwZGF0ZVNwZWNpYWxzKGVsZW1lbnQsIHJvdGF0ZWQsIG9wdGlvbnMpO1xuICAgICAgfTtcblxuICAgICAgdmFyIGFuaW1hdGlvbiA9IHBvcGlseS5jaGFydC51dGlscy5pbml0aWFsQW5pbWF0aW9uKGNoYXJ0RGF0YSwgb3B0aW9ucyk7XG5cbiAgICAgIHZhciBjaGFydCA9IGMzLmdlbmVyYXRlKGNoYXJ0RGF0YSk7XG5cbiAgICAgIGFuaW1hdGlvbi5zdGFydChjaGFydCwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuYmFyQ29tbW9uLnVwZGF0ZVNwZWNpYWxzKGVsZW1lbnQsIHJvdGF0ZWQsIG9wdGlvbnMpO1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHJldHVybiBjaGFydDtcbiAgfTtcblxuICBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmJhckdyb3VwZWQgPSBjaGFydDtcbn0pKHdpbmRvdyk7XG4iLCIoZnVuY3Rpb24od2luZG93KSB7XG4gIHZhciBwb3BpbHlDaGFydCA9IHdpbmRvdy5wb3BpbHkuY2hhcnQ7XG5cbiAgdmFyIGNoYXJ0ID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuICBjaGFydC5kZWZhdWx0Rm9yID0gW1xuICAgICdjb3VudF9ieV92YWx1ZScsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5JyxcbiAgICAnYXZlcmFnZV9ieV9jYXRlZ29yeScsXG4gICAgJ3N1bV9ieV9jYXRlZ29yeScsXG4gICAgJ3N1bV9zdW1fYnlfY2F0ZWdvcnknLFxuICAgICdzdW1fYnlfY2F0ZWdvcnlfcGVyX2NhdGVnb3J5JyxcbiAgICAnYXZlcmFnZV9ieV9jYXRlZ29yeV9wZXJfY2F0ZWdvcnknLFxuICAgICdjb3VudF9ieV9jYXRlZ29yeV9wZXJfY2F0ZWdvcnknLFxuICAgICdjb3VudF9wZXJfY2F0ZWdvcnlfYnlfY2F0ZWdvcnknLFxuICAgICdjb3VudF9ieV9jYXRlZ29yeV9ieV9jYXRlZ29yeV9kaXN0aW5jdCcsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5X2J5X2RhdGV0aW1lX2Rpc3RpbmN0JyxcbiAgICAndG9wX2J5X3Jvd2xhYmVsJ1xuICBdO1xuICBjaGFydC5hY2NlcHRzID0gW107XG5cbiAgY2hhcnQucmVuZGVyID0gZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucywgcmF3RGF0YSkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgdmFyIHhWYWx1ZXMgPSByYXdEYXRhLmNoYXJ0RGF0YS54LnZhbHVlcztcbiAgICAgIHZhciBtaW5ZID0gXy5taW4ocmF3RGF0YS5jaGFydERhdGEueS52YWx1ZXMpO1xuICAgICAgdmFyIGNoYXJ0VG9Vc2UgPSBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmJ1YmJsZTtcbiAgICAgIGlmKHhWYWx1ZXMubGVuZ3RoIDwgMzAgfHwgbWluWSA8IDApIHtcbiAgICAgICAgY2hhcnRUb1VzZSA9IHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuYmFyO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2hhcnRUb1VzZS5yZW5kZXIoZWxlbWVudCwgb3B0aW9ucywgcmF3RGF0YSk7XG4gIH07XG5cbiAgcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5iYXJPckJ1YmJsZSA9IGNoYXJ0O1xufSkod2luZG93KTtcbiIsIihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIHBvcGlseUNoYXJ0ID0gd2luZG93LnBvcGlseS5jaGFydDtcbiAgdmFyIGNoYXJ0ID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuXG4gIGNoYXJ0LmRlZmF1bHRGb3IgPSBbXG4gICAgJ3N1bV9ieV9jYXRlZ29yeV9ieV9jYXRlZ29yeScsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5X2J5X2NhdGVnb3J5JyxcbiAgICAnY291bnRfYnlfY2F0ZWdvcnlfYnlfY2F0ZWdvcnlfYnlfY2F0ZWdvcnknXG4gIF07XG4gIGNoYXJ0LmFjY2VwdHMgPSBbXG4gICAgJ2F2ZXJhZ2VfcGVyX2NhdGVnb3J5X2J5X2NhdGVnb3J5JyxcbiAgICAnc3VtX3Blcl9jYXRlZ29yeV9ieV9jYXRlZ29yeScsXG4gICAgJ2NvdW50X2J5X3ZhbHVlX2J5X2NhdGVnb3J5JyxcbiAgICAnYXZlcmFnZV9ieV9jYXRlZ29yeV9ieV9jYXRlZ29yeScsXG4gICAgJ3N1bV9wZXJfY2F0ZWdvcnlfYnlfZGF0ZXRpbWUnLFxuICAgICdzdW1fYnlfY2F0ZWdvcnlfYnlfZGF0ZXRpbWUnLFxuICAgICdjb3VudF9ieV9jYXRlZ29yeV9ieV9kYXRldGltZSdcbiAgXTtcblxuICBjaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCByYXdEYXRhKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIgcHJlcHBlZERhdGEgPSBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmJhckNvbW1vbi5wcmVwRGF0YShyYXdEYXRhLCBvcHRpb25zLCB0cnVlKTtcbiAgICAgIHZhciB4VmFsdWVzID0gcHJlcHBlZERhdGFbMF07XG4gICAgICB2YXIgeVZhbHVlcyA9IHByZXBwZWREYXRhWzFdO1xuICAgICAgdmFyIHpWYWx1ZXMgPSBwcmVwcGVkRGF0YVsyXTtcbiAgICAgIHZhciB6MlZhbHVlcyA9IHByZXBwZWREYXRhWzNdO1xuICAgICAgdmFyIHhMYWJlbCA9IHJhd0RhdGEuY2hhcnREYXRhLngubGFiZWw7XG4gICAgICB2YXIgeUxhYmVsID0gcmF3RGF0YS5jaGFydERhdGEueS5sYWJlbDtcblxuICAgICAgdmFyIGRhdGE7XG4gICAgICB2YXIgZ3JvdXBzO1xuICAgICAgaWYoejJWYWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBkYXRhID0gcG9waWx5Q2hhcnQuY2hhcnREYXRhLmMzaWZ5TXVsdGkoeFZhbHVlcyx5VmFsdWVzLHpWYWx1ZXMsejJWYWx1ZXMpO1xuICAgICAgICBncm91cHMgPSBkYXRhLmdyb3VwcztcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBkYXRhID0gcG9waWx5Q2hhcnQuY2hhcnREYXRhLmMzaWZ5KHhWYWx1ZXMseVZhbHVlcyx6VmFsdWVzKTtcbiAgICAgICAgZ3JvdXBzID0gW2RhdGEuZ3JvdXBzXTtcbiAgICAgIH1cbiAgICAgIGRhdGEuY2F0ZWdvcmllcy51bnNoaWZ0KCd4Jyk7XG4gICAgICBkYXRhLmNvbHVtbnMudW5zaGlmdChkYXRhLmNhdGVnb3JpZXMpO1xuICAgICAgdmFyIHJvdGF0ZWQgPSBmYWxzZTtcbiAgICAgIGlmKGRhdGEuY29sdW1uc1swXS5sZW5ndGggPiA0MCkge1xuICAgICAgICAgIHJvdGF0ZWQgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICB2YXIga3dhcmdzID0ge1xuICAgICAgICBvcHRpb25zOiBvcHRpb25zLFxuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICB6VmFsdWVzOiB6VmFsdWVzLFxuICAgICAgICByb3RhdGVkOiByb3RhdGVkLFxuICAgICAgICB4TGFiZWw6IHhMYWJlbCxcbiAgICAgICAgeUxhYmVsOiB5TGFiZWwsXG4gICAgICAgIHoyVmFsdWVzOiB6MlZhbHVlcyxcbiAgICAgICAgZWxlbWVudDogZWxlbWVudFxuICAgICAgfTtcbiAgICAgIHZhciBjaGFydERhdGEgPSBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmJhckNvbW1vbi5nZXRDaGFydE9iamVjdChrd2FyZ3MpO1xuICAgICAgY2hhcnREYXRhLmRhdGEgPSB7XG4gICAgICAgICAgeDogJ3gnLFxuICAgICAgICAgIGNvbHVtbnM6IGRhdGEuY29sdW1ucyxcbiAgICAgICAgICB0eXBlOiAnYmFyJyxcbiAgICAgICAgICBncm91cHM6IGdyb3Vwc1xuICAgICAgfTtcblxuICAgICAgaWYoejJWYWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBjaGFydERhdGEuZGF0YS5uYW1lcyA9IGRhdGEubmFtZXM7XG4gICAgICAgIHZhciB1bmlxTmFtZXMgPSBfLnVuaXEoXy52YWx1ZXMoZGF0YS5uYW1lcykpO1xuICAgICAgICB2YXIgbmFtZUNvbG9ycyA9IF8uemlwKHVuaXFOYW1lcyxfLmZpcnN0KG9wdGlvbnMuY29sb3JzLHVuaXFOYW1lcy5sZW5ndGgpKTtcbiAgICAgICAgdmFyIGNvbG9ycyA9IHt9O1xuXG4gICAgICAgIF8uZWFjaChuYW1lQ29sb3JzLCBmdW5jdGlvbihuYW1lQ29sb3IpIHtcbiAgICAgICAgICBfLmVhY2goXy51bmlxKHoyVmFsdWVzKSwgZnVuY3Rpb24oejIpIHtcbiAgICAgICAgICAgIGNvbG9yc1tuYW1lQ29sb3JbMF0gKyAnX19fJyArIHoyXSA9IG5hbWVDb2xvclsxXTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY2hhcnREYXRhLmRhdGEuY29sb3JzID0gY29sb3JzO1xuICAgICAgfVxuXG4gICAgICBjaGFydERhdGEub25yZXNpemVkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuYmFyQ29tbW9uLnVwZGF0ZVNwZWNpYWxzKGVsZW1lbnQsIHJvdGF0ZWQsIG9wdGlvbnMpO1xuICAgICAgfTtcbiAgICAgIFxuICAgICAgdmFyIGFuaW1hdGlvbiA9IHBvcGlseS5jaGFydC51dGlscy5pbml0aWFsQW5pbWF0aW9uKGNoYXJ0RGF0YSwgb3B0aW9ucyk7XG4gICAgICB2YXIgY2hhcnQgPSBjMy5nZW5lcmF0ZShjaGFydERhdGEpO1xuICAgICAgXG4gICAgICBhbmltYXRpb24uc3RhcnQoY2hhcnQsIGZ1bmN0aW9uKCkge1xuICAgICAgICBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmJhckNvbW1vbi51cGRhdGVTcGVjaWFscyhlbGVtZW50LCByb3RhdGVkLCBvcHRpb25zKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICByZXR1cm4gY2hhcnQ7XG4gIH07XG5cbiAgcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5iYXJTdGFja2VkID0gY2hhcnQ7XG59KSh3aW5kb3cpO1xuIiwiKGZ1bmN0aW9uKHdpbmRvdykge1xuICB2YXIgcG9waWx5Q2hhcnQgPSB3aW5kb3cucG9waWx5LmNoYXJ0O1xuICBcbiAgdmFyIGNoYXJ0ID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuICBjaGFydC5kZWZhdWx0Rm9yID0gW107XG4gIGNoYXJ0LmFjY2VwdHMgPSBbXG4gICAgJ2NvdW50X2J5X3ZhbHVlJyxcbiAgICAnY291bnRfYnlfY2F0ZWdvcnknLFxuICAgICdhdmVyYWdlX2J5X2NhdGVnb3J5JyxcbiAgICAnc3VtX2J5X2NhdGVnb3J5JyxcbiAgICAnc3VtX3N1bV9ieV9jYXRlZ29yeScsXG4gICAgJ3N1bV9ieV9jYXRlZ29yeV9wZXJfY2F0ZWdvcnknLFxuICAgICdhdmVyYWdlX2J5X2NhdGVnb3J5X3Blcl9jYXRlZ29yeScsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5X3Blcl9jYXRlZ29yeScsXG4gICAgJ2NvdW50X3Blcl9jYXRlZ29yeV9ieV9jYXRlZ29yeScsXG4gICAgJ3RvcF9ieV9yb3dsYWJlbCdcbiAgXTtcblxuICBjaGFydC5wcmVwRGF0YSA9IGZ1bmN0aW9uKHJhd0RhdGEsIG9wdGlvbnMpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgdmFyIGxpbWl0ID0gdGhhdC5kZWZhdWx0cy5jYXRlZ29yeUxpbWl0O1xuICAgIHZhciBjbGVhblZhbHVlcyA9IHRoYXQuY2xlYW5EYXRhKHJhd0RhdGEpO1xuXG4gICAgdmFyIGNsZWFuWFZhbHVlcyA9IGNsZWFuVmFsdWVzWzBdO1xuICAgIHZhciBjbGVhbllWYWx1ZXMgPSBwb3BpbHlDaGFydC5mb3JtYXQuZm9ybWF0TnVtYmVycyhjbGVhblZhbHVlc1sxXSk7XG5cbiAgICByZXR1cm4gW2NsZWFuWFZhbHVlcywgY2xlYW5ZVmFsdWVzXTtcbiAgfTtcblxuICBjaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCByYXdEYXRhKSB7XG4gICAgICB2YXIgd2lkdGggPSBvcHRpb25zLndpZHRoLFxuICAgICAgICBoZWlnaHQgPSBvcHRpb25zLmhlaWdodCxcbiAgICAgICAgZm9ybWF0ID0gZDMuZm9ybWF0KFwiLGRcIiksXG4gICAgICAgIC8vY29sb3IgPSBkMy5zY2FsZS5jYXRlZ29yeTIwYygpO1xuICAgICAgICBjb2xvciA9IGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShvcHRpb25zLmNvbG9ycyk7XG4gICAgdmFyIGRhdGEgPSB7J2NoaWxkcmVuJzogW1xuICAgICAgICAgICAgeyduYW1lJzogJ25lZ2F0aXZlJywgJ2NoaWxkcmVuJzogW119LFxuICAgICAgICAgICAgeyduYW1lJzogJ3Bvc2l0aXZlJywgJ2NoaWxkcmVuJzogW119LFxuICAgICAgICBdfTtcbiAgICBpZih0eXBlb2Ygd2luZG93LmNoYXJ0U2l6ZSA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3aW5kb3cuY2hhcnRTaXplID0gZnVuY3Rpb24oKSB7IHJldHVybiB7J2hlaWdodCc6IHdpZHRofTsgfTtcbiAgICB9XG4gICAgICAgIFxuICAgIHZhciBwcmVwcGVkRGF0YSA9IHRoaXMucHJlcERhdGEocmF3RGF0YSwgb3B0aW9ucyk7XG4gICAgdmFyIHhWYWx1ZXMgPSBwcmVwcGVkRGF0YVswXTtcbiAgICB2YXIgeVZhbHVlcyA9IHByZXBwZWREYXRhWzFdO1xuICAgIHZhciB4TGFiZWwgPSByYXdEYXRhLmNoYXJ0RGF0YS54LmxhYmVsO1xuICAgIFxuICAgIF8uZWFjaChfLmZpcnN0KHlWYWx1ZXMsMjAwKSwgZnVuY3Rpb24oeVZhbHVlLGkpIHtcbiAgICAgICAgaWYoeVZhbHVlPjApXG4gICAgICAgICAgICBkYXRhLmNoaWxkcmVuWzFdLmNoaWxkcmVuLnB1c2goe2NhdGVnb3J5OiB4VmFsdWVzW2ldLCBjbGFzc05hbWU6ICdkYXRhJywgc2hvd1ZhbHVlOiB5VmFsdWUsIHZhbHVlOiBwYXJzZUZsb2F0KHlWYWx1ZSkgfSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGRhdGEuY2hpbGRyZW5bMF0uY2hpbGRyZW4ucHVzaCh7Y2F0ZWdvcnk6IHlWYWx1ZXNbaV0sIGNsYXNzTmFtZTogJ2RhdGEnLCBzaG93VmFsdWU6IHlWYWx1ZSwgdmFsdWU6IC0xKnBhcnNlRmxvYXQoeVZhbHVlKSB9KTtcbiAgICB9KTtcblxuICAgIHdpZHRoID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcbiAgICB2YXIgc2l6ZSA9IHBvcGlseUNoYXJ0LnV0aWxzLmNoYXJ0U2l6ZSgpO1xuICAgIGhlaWdodCA9IHNpemVbJ2hlaWdodCddO1xuICAgIFxuICAgIHZhciB0cmFuc2l0aW9uRHVyYXRpb24gPSAzNTA7XG4gICAgaWYob3B0aW9ucy5za2lwQW5pbWF0aW9uKVxuICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uID0gMDtcblxuICAgIHZhciBidWJibGUgPSBkMy5sYXlvdXQucGFjaygpXG4gICAgICAgIC5zb3J0KG51bGwpXG4gICAgICAgIC5zaXplKFt3aWR0aCwgaGVpZ2h0XSlcbiAgICAgICAgLnBhZGRpbmcoNCk7XG5cbiAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KGVsZW1lbnQpLmFwcGVuZChcInN2Z1wiKVxuICAgICAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoKVxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCBoZWlnaHQpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJidWJibGVcIik7XG5cbiAgICBpZigoXy5pc1VuZGVmaW5lZChvcHRpb25zLnRvb2x0aXApP3RydWU6b3B0aW9ucy50b29sdGlwKSkge1xuICAgICAgICB2YXIgdGlwID0gZDMudGlwKClcbiAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICdkMy10aXBzJylcbiAgICAgICAgICAgIC5vZmZzZXQoWy01LCAwXSlcbiAgICAgICAgICAgIC5odG1sKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGV4dCA9IFwiPHRhYmxlIGNsYXNzPSdjMy10b29sdGlwJz48dHI+PHRoIGNvbHNwYW49JzInPlwiICsgZC5jYXRlZ29yeSArIFwiPC90aD48L3RyPlwiO1xuICAgICAgICAgICAgICAgIHRleHQgKz0gXCI8dHIgY2xhc3M9J2MzLXRvb2x0aXAtbmFtZS0nPlwiO1xuICAgICAgICAgICAgICAgIHRleHQgKz0gXCI8dGQgY2xhc3M9J25hbWUnPjxzcGFuIHN0eWxlPSdiYWNrZ3JvdW5kLWNvbG9yOlwiICsgY29sb3IoZC5jYXRlZ29yeSkgKyBcIic+PC9zcGFuPiBcIiArIHhMYWJlbCArIFwiPC90ZD5cIjtcbiAgICAgICAgICAgICAgICB0ZXh0ICs9IFwiPHRkIGNsYXNzPSd2YWx1ZSc+XCIgKyBkLnNob3dWYWx1ZSArIFwiPC90ZD5cIjtcbiAgICAgICAgICAgICAgICB0ZXh0ICs9IFwiPC90cj5cIjtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGV4dCArIFwiPC90YWJsZT5cIjsgXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgc3ZnLmNhbGwodGlwKTtcbiAgICB9XG4gICAgXG4gICAgdmFyIG5vZGUgPSBzdmcuc2VsZWN0QWxsKFwiLm5vZGVcIilcbiAgICAgICAgLmRhdGEoXG4gICAgICAgICAgICBidWJibGUubm9kZXMoZGF0YSlcbiAgICAgICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGQpIHsgcmV0dXJuICFkLmNoaWxkcmVufSlcbiAgICAgICAgKVxuICAgICAgICAuZW50ZXIoKS5hcHBlbmQoXCJnXCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJub2RlXCIpXG4gICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHJldHVybiBcInRyYW5zbGF0ZShcIiArIGQueCArIFwiLFwiICsgZC55ICsgXCIpXCI7IH0pXG4gICAgICAgIC5vbignbW91c2VvdmVyJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgdGlwLnNob3coZCwgZCk7XG4gICAgICAgICAgICBkMy5zZWxlY3QodGhpcy5jaGlsZE5vZGVzWzBdKVxuICAgICAgICAgICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oNTApXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJyXCIsIGQucis1KVxuICAgICAgICAgICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiclwiLCBkLnIrMylcbiAgICAgICAgfSlcbiAgICAgICAgLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uKGQpIHsgXG4gICAgICAgICAgICB0aXAuaGlkZShkKTtcbiAgICAgICAgICAgIGQzLnNlbGVjdCh0aGlzLmNoaWxkTm9kZXNbMF0pXG4gICAgICAgICAgICAgICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMClcbiAgICAgICAgICAgICAgICAuYXR0cihcInJcIiwgZC5yKVxuICAgICAgICB9KTtcbiAgXG4gICAgbm9kZS5hcHBlbmQoXCJjaXJjbGVcIilcbiAgICAgICAgLnN0eWxlKFwiZmlsbFwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBjb2xvcihkLmNhdGVnb3J5KTsgfSlcbiAgICAgICAgLmF0dHIoXCJyXCIsIDApXG4gICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24odHJhbnNpdGlvbkR1cmF0aW9uKVxuICAgICAgICAuYXR0cihcInJcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5yOyB9KTtcbiAgICAgICAgXG4gICAgbm9kZS5hcHBlbmQoXCJ0ZXh0XCIpXG4gICAgICAgIC5hdHRyKFwiZHlcIiwgXCIuM2VtXCIpXG4gICAgICAgIC5zdHlsZShcInRleHQtYW5jaG9yXCIsIFwibWlkZGxlXCIpXG4gICAgICAgIC5zdHlsZShcIm9wYWNpdHlcIiwgMClcbiAgICAgICAgLnRleHQoZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgaWYgKGQuciAvIDMgPiAzKSByZXR1cm4gZC5jYXRlZ29yeS5zdWJzdHJpbmcoMCwgZC5yIC8gMyk7IFxuICAgICAgICAgICAgZWxzZSByZXR1cm4gJyc7XG4gICAgICAgIH0pXG4gICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24odHJhbnNpdGlvbkR1cmF0aW9uKVxuICAgICAgICAuc3R5bGUoXCJvcGFjaXR5XCIsIDEpXG4gICAgICAgIC5hdHRyKFwicG9pbnRlci1ldmVudHNcIiwgXCJub25lXCIpO1xuXG4gICAgdmFyIG9uUmVzaXplID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHdpZHRoID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcbiAgICAgICAgc2l6ZSA9IHBvcGlseUNoYXJ0LnV0aWxzLmNoYXJ0U2l6ZSgpO1xuICAgICAgICBoZWlnaHQgPSBzaXplWydoZWlnaHQnXTtcbiAgICAgICAgc3ZnXG4gICAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoKVxuICAgICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgaGVpZ2h0KTtcblxuICAgICAgICB2YXIgYnViYmxlID0gZDMubGF5b3V0LnBhY2soKVxuICAgICAgICAgICAgLnNvcnQobnVsbClcbiAgICAgICAgICAgIC5zaXplKFt3aWR0aCwgaGVpZ2h0XSlcbiAgICAgICAgICAgIC5wYWRkaW5nKDQpO1xuICAgICAgICBcbiAgICAgICAgdmFyIG5vZGUgPSBzdmcuc2VsZWN0QWxsKFwiLm5vZGVcIilcbiAgICAgICAgICAgIC5kYXRhKFxuICAgICAgICAgICAgICAgIGJ1YmJsZS5ub2RlcyhkYXRhKVxuICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gIWQuY2hpbGRyZW59KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgc3ZnLnNlbGVjdEFsbChcImdcIilcbiAgICAgICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyBkLnggKyBcIixcIiArIGQueSArIFwiKVwiOyB9KTtcbiAgICAgICAgXG4gICAgICAgIHN2Zy5zZWxlY3RBbGwoXCJjaXJjbGVcIilcbiAgICAgICAgICAgIC5hdHRyKFwiclwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnI7IH0pO1xuICAgICAgICBzdmcuc2VsZWN0QWxsKFwidGV4dFwiKVxuICAgICAgICAgICAgLnRleHQoZnVuY3Rpb24oZCkgeyBcbiAgICAgICAgICAgICAgICBpZiAoZC5yIC8gMyA+IDMpIHJldHVybiBkLmNhdGVnb3J5LnN1YnN0cmluZygwLCBkLnIgLyAzKTsgXG4gICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gJyc7XG4gICAgICAgICAgICB9KVxuICAgICAgICBcbiAgICB9O1xuXG4gICAgd2luZG93Lm9ucmVzaXplID0gb25SZXNpemU7XG4gIH07XG5cbiAgcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5idWJibGUgPSBjaGFydDtcbn0pKHdpbmRvdyk7XG4iLCIoZnVuY3Rpb24od2luZG93KSB7XG4gIHZhciBwb3BpbHlDaGFydCA9IHdpbmRvdy5wb3BpbHkuY2hhcnQ7XG4gIFxuICB2YXIgY2hhcnQgPSBfLmNsb25lKHBvcGlseUNoYXJ0LmJhc2VDaGFydCk7XG4gIGNoYXJ0LmRlZmF1bHRGb3IgPSBbXG4gICAgJ3JhdGlvX3Blcl9jYXRlZ29yeSdcbiAgXTtcbiAgY2hhcnQuYWNjZXB0cyA9IFtdO1xuXG4gIGNoYXJ0LnJlbmRlciA9IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMsIHJhd0RhdGEpIHtcbiAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgIHZhciB5VmFsdWVzID0gcmF3RGF0YS5jaGFydERhdGEueS52YWx1ZXM7XG5cbiAgICAgIHZhciBjaGFydERhdGEgPSB7XG4gICAgICAgICAgYmluZHRvOiBlbGVtZW50LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgY29sdW1uczogW1snZGF0YScsIHBhcnNlRmxvYXQoeVZhbHVlc1swXSkgKiAxMDBdXSxcbiAgICAgICAgICAgICAgdHlwZTogJ2dhdWdlJ1xuICAgICAgICAgIH0sICAgICAgICAgICAgICBcbiAgICAgICAgICBjb2xvcjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiBvcHRpb25zLmNvbG9yc1xuICAgICAgICAgIH0sICAgICAgICAgICAgICBcbiAgICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICAgICAgaGlkZTogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2l6ZToge1xuICAgICAgICAgICAgaGVpZ2h0OiBvcHRpb25zLmhlaWdodFxuICAgICAgICAgIH0sXG4gICAgICAgICAgb25yZXNpemVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoIDw9IDc2OCkge1xuICAgICAgICAgICAgICAgICAgY2hhcnQucmVzaXplKHtoZWlnaHQ6MjIwfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgIGNoYXJ0LnJlc2l6ZSh7aGVpZ2h0OjM0MH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBhbmltYXRpb24gPSBwb3BpbHkuY2hhcnQudXRpbHMuaW5pdGlhbEFuaW1hdGlvbihjaGFydERhdGEsIG9wdGlvbnMpXG4gICAgICB2YXIgY2hhcnQgPSBjMy5nZW5lcmF0ZShjaGFydERhdGEpOyBcbiAgICAgIGFuaW1hdGlvbi5zdGFydChjaGFydCk7XG5cbiAgICAgIHJldHVybiBjaGFydDtcbiAgfTtcblxuICBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmdhdWdlID0gY2hhcnQ7XG59KSh3aW5kb3cpO1xuIiwiKGZ1bmN0aW9uKHdpbmRvdykge1xuICB2YXIgcG9waWx5Q2hhcnQgPSB3aW5kb3cucG9waWx5LmNoYXJ0O1xuXG4gIHZhciBjaGFydCA9IF8uY2xvbmUocG9waWx5Q2hhcnQuYmFzZUNoYXJ0KTtcbiAgY2hhcnQuZGVmYXVsdEZvciA9IFtcbiAgICAnY291bnRfYnlfZGF0ZXRpbWUnLFxuICAgICdyYXRpb19ieV9kYXRldGltZScsXG4gICAgJ2F2ZXJhZ2VfYnlfZGF0ZXRpbWUnLFxuICAgICdjb3VudF9wZXJfY2F0ZWdvcnlfYnlfZGF0ZXRpbWUnLFxuICAgICdhdmVyYWdlX3Blcl9jYXRlZ29yeV9ieV9kYXRldGltZSdcbiAgXTtcbiAgY2hhcnQuYWNjZXB0cyA9IFtdO1xuXG4gIGNoYXJ0LnByZXBEYXRhID0gZnVuY3Rpb24ocmF3RGF0YSwgb3B0aW9ucykge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICB2YXIgbGltaXQgPSB0aGF0LmRlZmF1bHRzLmNhdGVnb3J5TGltaXQ7XG4gICAgdmFyIGNsZWFuVmFsdWVzID0gdGhhdC5jbGVhbkRhdGEocmF3RGF0YSk7XG5cbiAgICB2YXIgb3JkZXIgPSBvcHRpb25zLm9yZGVyIHx8ICdhdXRvJztcbiAgICBjbGVhblZhbHVlcyA9IHBvcGlseUNoYXJ0LmNoYXJ0RGF0YS5zb3J0RGF0YShjbGVhblZhbHVlc1swXSxjbGVhblZhbHVlc1sxXSxbXSxsaW1pdCxvcmRlcik7XG5cbiAgICB2YXIgY2xlYW5YVmFsdWVzID0gY2xlYW5WYWx1ZXNbMF07XG4gICAgdmFyIGNsZWFuWVZhbHVlcyA9IHBvcGlseUNoYXJ0LmZvcm1hdC5mb3JtYXROdW1iZXJzKGNsZWFuVmFsdWVzWzFdKTtcblxuICAgIHJldHVybiBbY2xlYW5YVmFsdWVzLCBjbGVhbllWYWx1ZXNdO1xuICB9O1xuXG4gIGNoYXJ0LnJlbmRlciA9IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMsIHJhd0RhdGEpIHtcbiAgICAgIHZhciBwcmVwcGVkRGF0YSA9IHRoaXMucHJlcERhdGEocmF3RGF0YSwgb3B0aW9ucyk7XG4gICAgICB2YXIgeFZhbHVlcyA9IHByZXBwZWREYXRhWzBdO1xuICAgICAgdmFyIHlWYWx1ZXMgPSBwcmVwcGVkRGF0YVsxXTtcbiAgICAgIHZhciB4TGFiZWwgPSByYXdEYXRhLmNoYXJ0RGF0YS54LmxhYmVsO1xuICAgICAgdmFyIHlMYWJlbCA9IHJhd0RhdGEuY2hhcnREYXRhLnkubGFiZWw7XG5cbiAgICBcbiAgICAgIHZhciB5TWluID0gMDtcbiAgICAgIHZhciBsb3dlc3RZID0gXy5taW4oeVZhbHVlcyk7XG4gICAgICBpZihsb3dlc3RZIDwgMCkge1xuICAgICAgICAgIHlNaW4gPSBsb3dlc3RZO1xuICAgICAgfVxuXG4gICAgICB5VmFsdWVzLnVuc2hpZnQoeUxhYmVsKTtcblxuICAgICAgdmFyIGRheURpZmYgPSBwb3BpbHkuY2hhcnQuZm9ybWF0LmRheXNEaWZmKHhWYWx1ZXMpOyBcbiAgICAgIHZhciB0aWNrRm9ybWF0U3RyID0gcG9waWx5LmNoYXJ0LmZvcm1hdC5mb3JtYXRGcm9tRGF5RGlmZihkYXlEaWZmKTtcbiAgICAgIFxuICAgICAgdmFyIGludGVydmFsID0gb3B0aW9ucy5pbnRlcnZhbCB8fCByYXdEYXRhLmluc2lnaHRfbWV0YWRhdGEuaW50ZXJ2YWxzWzBdO1xuXG4gICAgICB2YXIgZGF0ZUZvcm1hdFN0ciA9IHBvcGlseS5jaGFydC5mb3JtYXQuZm9ybWF0RnJvbUludGVydmFsKGludGVydmFsKTtcbiAgICAgIGlmKF8uaXNVbmRlZmluZWQoaW50ZXJ2YWwpKSB7XG4gICAgICAgIGRhdGVGb3JtYXRTdHIgPSBwb3BpbHkuY2hhcnQuZm9ybWF0LmZvcm1hdEZyb21JbnNwZWN0aW9uKHhWYWx1ZXMpO1xuICAgICAgfVxuICAgICAgXG4gICAgICB2YXIgZGF0ZUZvcm1hdCA9IGQzLnRpbWUuZm9ybWF0KGRhdGVGb3JtYXRTdHIpO1xuICAgICAgdmFyIHRpY2tGb3JtYXQgPSBkMy50aW1lLmZvcm1hdCh0aWNrRm9ybWF0U3RyKTtcbiAgICAgIHZhciBmdWxsRm9ybWF0ID0gZDMudGltZS5mb3JtYXQoJyVZLSVtLSVkICVIOiVNOiVTJyk7XG5cbiAgICAgIHZhciB0aWNrc1ZhbHVlcyA9IHBvcGlseS5jaGFydC5mb3JtYXQudGlja0Zvcm1hdFZhbHVlcyh4VmFsdWVzLCB0aWNrRm9ybWF0U3RyLCBkYXRlRm9ybWF0KTtcbiAgICAgIFxuICAgICAgaWYoZGF0ZUZvcm1hdCAhPSBmdWxsRm9ybWF0KVxuICAgICAgICAgIHhWYWx1ZXMgPSBfLm1hcCh4VmFsdWVzLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZGF0ZUZvcm1hdChmdWxsRm9ybWF0LnBhcnNlKGQuc3BsaXQoJy4nKVswXSkpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICBcbiAgICAgIHhWYWx1ZXMudW5zaGlmdCgneCcpO1xuXG4gICAgICBpZighXy5pc1VuZGVmaW5lZChvcHRpb25zLmxpbmVTaXplKSkge1xuICAgICAgICB2YXIgc3R5bGUgPSBwb3BpbHkuY2hhcnQudXRpbHMuY3JlYXRlU3R5bGVFbGVtZW50KCcuJytvcHRpb25zLnVuaXF1ZUNsYXNzTmFtZSsnIC5jMy1saW5lIHsgc3Ryb2tlLXdpZHRoOiAnK29wdGlvbnMubGluZVNpemUrJ3B4OyB9JylcbiAgICAgICAgZWxlbWVudC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGNoYXJ0RGF0YSA9IHtcbiAgICAgICAgICBiaW5kdG86IGVsZW1lbnQsXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICB4OiAneCcsXG4gICAgICAgICAgICAgIHhGb3JtYXQ6IGRhdGVGb3JtYXRTdHIsIC8vICd4Rm9ybWF0JyBjYW4gYmUgdXNlZCBhcyBjdXN0b20gZm9ybWF0IG9mICd4J1xuICAgICAgICAgICAgICBjb2x1bW5zOiBbeFZhbHVlcyx5VmFsdWVzXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcGFkZGluZzogdGhpcy5kZWZhdWx0cy5jaGFydFBhZGRpbmcoKSxcbiAgICAgICAgICBheGlzOiB7XG4gICAgICAgICAgICAgIHg6IHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICghb3B0aW9ucy5vcmRlciB8fCBvcHRpb25zLm9yZGVyID09ICdhdXRvJyA/ICd0aW1lc2VyaWVzJyA6ICdjYXRlZ29yeScpLFxuICAgICAgICAgICAgICAgICAgdGljazoge1xuICAgICAgICAgICAgICAgICAgICAgIGZpdDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiB0aWNrRm9ybWF0U3RyLFxuICAgICAgICAgICAgICAgICAgICAgIHJvdGF0ZTo0NSxcbiAgICAgICAgICAgICAgICAgICAgICBtdWx0aWxpbmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgIC8vaGVpZ2h0OiAxMzAsXG4gICAgICAgICAgICAgICAgICAgICAgdmFsdWVzOiAoIW9wdGlvbnMub3JkZXIgfHwgb3B0aW9ucy5vcmRlciA9PSAnYXV0bycgPyB0aWNrc1ZhbHVlcyA6IG51bGwpLFxuICAgICAgICAgICAgICAgICAgICAgIGNvdW50OiB4VmFsdWVzLmxlbmd0aC0xXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgIHRleHQ6IHhMYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnaW5uZXItcmlnaHQnXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHk6IHtcbiAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICBtaW46IHlNaW4sXG4gICAgICAgICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IHlMYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ291dGVyLW1pZGRsZSdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB0aWNrOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBkMy5mb3JtYXQoXCIsXCIpXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IG9wdGlvbnMuY29sb3JzXG4gICAgICAgICAgfSxcbiAgICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICAgICAgaGlkZTogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2l6ZToge1xuICAgICAgICAgICAgICBoZWlnaHQ6IG9wdGlvbnMuaGVpZ2h0XG4gICAgICAgICAgfSxcbiAgICAgICAgICBsaW5lOiB7XG4gICAgICAgICAgICAgIGNvbm5lY3ROdWxsOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwb2ludDoge1xuICAgICAgICAgICAgcjogKG9wdGlvbnMucG9pbnRTaXplIHx8IDIuNSlcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdyaWQ6IHtcbiAgICAgICAgICAgIHg6IHtcbiAgICAgICAgICAgICAgc2hvdzogXy5pc1VuZGVmaW5lZChvcHRpb25zLnhHcmlkKT9mYWxzZTpvcHRpb25zLnhHcmlkXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeToge1xuICAgICAgICAgICAgICBzaG93OiBfLmlzVW5kZWZpbmVkKG9wdGlvbnMueUdyaWQpP3RydWU6b3B0aW9ucy55R3JpZFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgdG9vbHRpcDogKF8uaXNVbmRlZmluZWQob3B0aW9ucy50b29sdGlwKT90cnVlOm9wdGlvbnMudG9vbHRpcClcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYob3B0aW9ucy5vcmRlciA9PSAnYXV0bycpIHtcbiAgICAgICAgY2hhcnREYXRhLnRvb2x0aXAuZm9ybWF0ID0ge1xuICAgICAgICAgIHRpdGxlOiBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0ZUZvcm1hdChkKTtcbiAgICAgICAgICB9IFxuICAgICAgICB9XG5cbiAgICAgICAgY2hhcnREYXRhLmF4aXMueC50aWNrLnZhbHVlcyA9IHRpY2tzVmFsdWVzO1xuICAgICAgfVxuXG4gICAgICB2YXIgYW5pbWF0aW9uID0gcG9waWx5LmNoYXJ0LnV0aWxzLmluaXRpYWxBbmltYXRpb24oY2hhcnREYXRhLCBvcHRpb25zKTtcbiAgICAgIHZhciBjaGFydCA9IGMzLmdlbmVyYXRlKGNoYXJ0RGF0YSk7XG5cbiAgICAgIGFuaW1hdGlvbi5zdGFydChjaGFydCk7XG4gICAgICBcbiAgICAgIHJldHVybiBjaGFydDtcbiAgfTtcblxuICBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmxpbmUgPSBjaGFydDtcbn0pKHdpbmRvdyk7XG4iLCIoZnVuY3Rpb24od2luZG93KSB7XG4gIHZhciBwb3BpbHlDaGFydCA9IHdpbmRvdy5wb3BpbHkuY2hhcnQ7XG5cbiAgdmFyIGNoYXJ0ID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuICBjaGFydC5kZWZhdWx0Rm9yID0gW1xuICAgICdhdmVyYWdlX2J5X2NhdGVnb3J5X2J5X2RhdGV0aW1lJyxcbiAgICAnY291bnRfYnlfY2F0ZWdvcnlfYnlfY2F0ZWdvcnlfYnlfZGF0ZXRpbWUnXG4gIF07XG4gIGNoYXJ0LmFjY2VwdHMgPSBbXG4gICAgJ3N1bV9ieV9kYXRldGltZScsXG4gICAgJ3JhdGlvX2J5X2RhdGV0aW1lJyxcbiAgICAnc3VtX3Blcl9jYXRlZ29yeV9ieV9kYXRldGltZScsXG4gICAgJ3N1bV9ieV9jYXRlZ29yeV9ieV9kYXRldGltZScsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5X2J5X2RhdGV0aW1lJ1xuICBdO1xuXG4gIGNoYXJ0LnJlbmRlciA9IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMsIHJhd0RhdGEpIHtcbiAgICAgIHJldHVybiBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmxpbmVhci5yZW5kZXIoZWxlbWVudCwgb3B0aW9ucywgcmF3RGF0YSk7XG4gIH07XG5cbiAgcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5tdWx0aUxpbmUgPSBjaGFydDtcbn0pKHdpbmRvdyk7XG4iLCIoZnVuY3Rpb24od2luZG93KSB7XG4gIHZhciBwb3BpbHlDaGFydCA9IHdpbmRvdy5wb3BpbHkuY2hhcnQ7XG4gIFxuICB2YXIgcGllID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuICBwaWUuZGVmYXVsdEZvciA9IFtcbiAgICAncmF0aW9fYnlfY2F0ZWdvcnknXG4gIF07XG4gIHBpZS5hY2NlcHRzID0gW1xuICAgICdjb3VudF9ieV92YWx1ZScsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5J1xuICBdO1xuXG4gIHBpZS5wcmVwRGF0YSA9IGZ1bmN0aW9uKHJhd0RhdGEsIG9wdGlvbnMpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgdmFyIGxpbWl0ID0gdGhhdC5kZWZhdWx0cy5waWVMaW1pdDtcbiAgICB2YXIgY2xlYW5WYWx1ZXMgPSB0aGF0LmNsZWFuRGF0YShyYXdEYXRhKTtcbiAgICB2YXIgb3JkZXIgPSBvcHRpb25zLm9yZGVyIHx8ICdhdXRvJztcblxuICAgIGNsZWFuVmFsdWVzID0gcG9waWx5Q2hhcnQuY2hhcnREYXRhLnNvcnREYXRhKGNsZWFuVmFsdWVzWzBdLGNsZWFuVmFsdWVzWzFdLFtdLGxpbWl0LG9yZGVyKTtcblxuICAgIHZhciBjbGVhblhWYWx1ZXMgPSBjbGVhblZhbHVlc1swXTtcbiAgICB2YXIgY2xlYW5ZVmFsdWVzID0gcG9waWx5Q2hhcnQuZm9ybWF0LmZvcm1hdE51bWJlcnMocG9waWx5Q2hhcnQuZm9ybWF0LnRvTnVtYmVyKGNsZWFuVmFsdWVzWzFdKSk7XG5cbiAgICByZXR1cm4gW2NsZWFuWFZhbHVlcywgY2xlYW5ZVmFsdWVzXTtcbiAgfTtcblxuICBwaWUucmVuZGVyID0gZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucywgcmF3RGF0YSkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgdmFyIHByZXBwZWREYXRhID0gdGhpcy5wcmVwRGF0YShyYXdEYXRhLCBvcHRpb25zKTtcbiAgICAgIHZhciBjb2x1bW5zID0gXy56aXAocHJlcHBlZERhdGFbMF0scHJlcHBlZERhdGFbMV0pO1xuXG4gICAgICB2YXIgY2hhcnREYXRhID0ge1xuICAgICAgICAgIGJpbmR0bzogZWxlbWVudCxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgIGNvbHVtbnM6IGNvbHVtbnMsXG4gICAgICAgICAgICAgIHR5cGU6ICdwaWUnLFxuICAgICAgICAgICAgICBvcmRlcjpudWxsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb2xvcjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiBvcHRpb25zLmNvbG9yc1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tJyxcbiAgICAgICAgICAgICAgc2hvdzogcHJlcHBlZERhdGFbMF0ubGVuZ3RoIDwgMjAgPyB0cnVlIDogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNpemU6IHtcbiAgICAgICAgICAgIGhlaWdodDogb3B0aW9ucy5oZWlnaHRcbiAgICAgICAgICB9LFxuICAgICAgICAgIHRvb2x0aXA6IChfLmlzVW5kZWZpbmVkKG9wdGlvbnMudG9vbHRpcCk/dHJ1ZTpvcHRpb25zLnRvb2x0aXApXG4gICAgICB9O1xuICAgICAgXG4gICAgICBcbiAgICAgIHZhciBhbmltYXRpb24gPSBwb3BpbHkuY2hhcnQudXRpbHMuaW5pdGlhbEFuaW1hdGlvbihjaGFydERhdGEsIG9wdGlvbnMpO1xuICAgICAgdmFyIGNoYXJ0ID0gYzMuZ2VuZXJhdGUoY2hhcnREYXRhKTsgXG4gICAgICBhbmltYXRpb24uc3RhcnQoY2hhcnQpO1xuXG4gICAgICByZXR1cm4gY2hhcnQ7XG4gIH07XG5cbiAgcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5waWUgPSBwaWU7XG59KSh3aW5kb3cpO1xuIiwiKGZ1bmN0aW9uKHdpbmRvdykge1xuICB2YXIgcG9waWx5Q2hhcnQgPSB3aW5kb3cucG9waWx5LmNoYXJ0O1xuICBcbiAgdmFyIGNoYXJ0ID0gXy5jbG9uZShwb3BpbHlDaGFydC5iYXNlQ2hhcnQpO1xuICBjaGFydC5kZWZhdWx0Rm9yID0gW1xuICAgICdzY2F0dGVycGxvdF9ieV9jYXRlZ29yeSdcbiAgXTtcbiAgY2hhcnQuYWNjZXB0cyA9IFtdO1xuXG4gIGNoYXJ0LnJlbmRlciA9IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMsIHJhd0RhdGEpIHtcbiAgICAgIHZhciBwcmVwcGVkRGF0YSA9IHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuY29tcGFyZS5wcmVwRGF0YShyYXdEYXRhLCBvcHRpb25zKTtcbiAgICAgIHZhciB4VmFsdWVzID0gcHJlcHBlZERhdGFbMF07XG4gICAgICB2YXIgeVZhbHVlcyA9IHByZXBwZWREYXRhWzFdO1xuICAgICAgdmFyIHpWYWx1ZXMgPSBwcmVwcGVkRGF0YVsyXTtcbiAgICAgIHZhciB4TGFiZWwgPSByYXdEYXRhLmNoYXJ0RGF0YS54LmxhYmVsO1xuICAgICAgdmFyIHlMYWJlbCA9IHJhd0RhdGEuY2hhcnREYXRhLnkubGFiZWw7XG4gICAgICB2YXIgekxhYmVsID0gcmF3RGF0YS5jaGFydERhdGEuei5sYWJlbDsgICAgXG5cbiAgICAgIHZhciBjb2x1bW5zID0gW107XG4gICAgICB2YXIgeHMgPSB7fTtcbiAgICAgIHZhciB6cyA9IHt9O1xuXG4gICAgICAvKlxuICAgICAgY29uc29sZS5sb2coeFZhbHVlcyk7XG4gICAgICBjb25zb2xlLmxvZyh5VmFsdWVzKTtcbiAgICAgIGNvbnNvbGUubG9nKHpWYWx1ZXMpO1xuICAgICAgKi9cbiAgICAgIF8uZWFjaChfLnVuaXEoelZhbHVlcyksIGZ1bmN0aW9uKHopIHtcbiAgICAgICAgICB6c1t6XSA9IHt4czpbXSx5czpbXX07XG4gICAgICB9KTtcblxuICAgICAgXy5lYWNoKHpWYWx1ZXMsIGZ1bmN0aW9uKHosaSkge1xuICAgICAgICAgIHpzW3pdLnlzLnB1c2goeVZhbHVlc1tpXSk7XG4gICAgICAgICAgenNbel0ueHMucHVzaCh4VmFsdWVzW2ldKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBfLmVhY2goXy5rZXlzKHpzKSwgZnVuY3Rpb24oeikge1xuICAgICAgICAgIHpzW3pdLnhzLnVuc2hpZnQoeisnX3gnKTtcbiAgICAgICAgICB6c1t6XS55cy51bnNoaWZ0KHopO1xuXG4gICAgICAgICAgeHNbel0gPSB6KydfeCc7XG4gICAgICAgICAgY29sdW1ucy5wdXNoKHpzW3pdLnhzKTtcbiAgICAgICAgICBjb2x1bW5zLnB1c2goenNbel0ueXMpO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciB0b29sdGlwID0gb3B0aW9ucy50b29sdGlwIHx8IHtcbiAgICAgICAgICBjb250ZW50czogZnVuY3Rpb24gKGQsIGRlZmF1bHRUaXRsZUZvcm1hdCwgZGVmYXVsdFZhbHVlRm9ybWF0LCBjb2xvcikge1xuICAgICAgICAgICAgICB2YXIgbWFya3VwID0gJzxkaXYgY2xhc3M9XCJwb3BpbHktdG9vbHRpcFwiPjxoMyA+PHNwYW4gY2xhc3M9XCJzcXVhcmVcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6JyArIGNvbG9yKGRbMF0uaWQpICsgJ1wiPjwvc3Bhbj4gJyArIHhMYWJlbCArICc6Jm5ic3A7PHN0cm9uZz4nICsgZFswXS54ICsgJzwvc3Ryb25nPiwgJyArIHlMYWJlbCArICc6Jm5ic3A7PHN0cm9uZz4nICsgZFswXS52YWx1ZSArICc8L3N0cm9uZz48L2gzPic7XG4gICAgICAgICAgICAgIG1hcmt1cCArPSB6TGFiZWwgKyAnOiA8c3Ryb25nPic7XG4gICAgICAgICAgICAgIG1hcmt1cCArPSBkWzBdLm5hbWU7XG4gICAgICAgICAgICAgIG1hcmt1cCArPSAnPC9zdHJvbmc+JztcbiAgICAgICAgICAgICAgbWFya3VwICs9ICc8L2Rpdj4nO1xuICAgICAgICAgICAgICByZXR1cm4gbWFya3VwO1xuICAgICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHZhciBzaG93TGVnZW5kID0gdHJ1ZTtcbiAgICAgIGlmKF8udW5pcXVlKHpWYWx1ZXMpLmxlbmd0aCA+IDI1KSB7XG4gICAgICAgICAgc2hvd0xlZ2VuZCA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5jb21wYXJlLnJlbmRlcihlbGVtZW50LCBvcHRpb25zLCBjb2x1bW5zLCB4cywgeExhYmVsLCB5TGFiZWwsIHRvb2x0aXApO1xuICB9O1xuXG4gIHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuc2NhdHRlcnBsb3RDYXRlZ29yeSA9IGNoYXJ0O1xufSkod2luZG93KTtcbiIsIihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIHBvcGlseUNoYXJ0ID0gd2luZG93LnBvcGlseS5jaGFydDtcbiAgXG4gIHZhciBjaGFydCA9IF8uY2xvbmUocG9waWx5Q2hhcnQuYmFzZUNoYXJ0KTtcbiAgY2hhcnQuZGVmYXVsdEZvciA9IFtcbiAgICAnc2NhdHRlcnBsb3QnLFxuICAgICdzY2F0dGVycGxvdF9wZXJfY2F0ZWdvcnknXG4gIF07XG4gIGNoYXJ0LmFjY2VwdHMgPSBbXTtcblxuICBjaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCByYXdEYXRhKSB7XG4gICAgICB2YXIgcHJlcHBlZERhdGEgPSBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmNvbXBhcmUucHJlcERhdGEocmF3RGF0YSwgb3B0aW9ucyk7XG4gICAgICB2YXIgeFZhbHVlcyA9IHByZXBwZWREYXRhWzBdO1xuICAgICAgdmFyIHlWYWx1ZXMgPSBwcmVwcGVkRGF0YVsxXTtcbiAgICAgIHZhciB6VmFsdWVzID0gcHJlcHBlZERhdGFbMl07XG4gICAgICB2YXIgeExhYmVsID0gcmF3RGF0YS5jaGFydERhdGEueC5sYWJlbDtcbiAgICAgIHZhciB5TGFiZWwgPSByYXdEYXRhLmNoYXJ0RGF0YS55LmxhYmVsOyAgICBcblxuXG4gICAgICB2YXIgY29sdW1ucyA9IFtdO1xuICAgICAgeVZhbHVlcy51bnNoaWZ0KHlMYWJlbCk7XG4gICAgICB4VmFsdWVzLnVuc2hpZnQoeExhYmVsKTtcbiAgICAgIHZhciB4cyA9IHt9O1xuICAgICAgeHNbeUxhYmVsXSA9IHhMYWJlbDtcbiAgICAgIGNvbHVtbnMucHVzaCh4VmFsdWVzKTtcbiAgICAgIGNvbHVtbnMucHVzaCh5VmFsdWVzKTtcblxuICAgICAgdmFyIHRvb2x0aXAgPSBvcHRpb25zLnRvb2x0aXAgfHwge1xuICAgICAgICAgIGNvbnRlbnRzOiBmdW5jdGlvbiAoZCwgZGVmYXVsdFRpdGxlRm9ybWF0LCBkZWZhdWx0VmFsdWVGb3JtYXQsIGNvbG9yKSB7XG4gICAgICAgICAgICAgIHZhciBtYXJrdXAgPSAnPGRpdiBjbGFzcz1cInBvcGlseS10b29sdGlwXCI+PGgzPicreExhYmVsKyc6Jm5ic3A7PHN0cm9uZz4nICsgZFswXS54ICsgJzwvc3Ryb25nPiwgJyt5TGFiZWwrJzombmJzcDs8c3Ryb25nPicgKyBkWzBdLnZhbHVlICsgJzwvc3Ryb25nPjwvaDM+JztcbiAgICAgICAgICAgICAgbWFya3VwICs9ICc8ZGl2IHN0eWxlPVwibWF4LXdpZHRoOiAzNTBweDtcIj48c3Ryb25nPic7XG4gICAgICAgICAgICAgIGlmKCFfLmlzVW5kZWZpbmVkKHpWYWx1ZXNbZFswXS5pbmRleF0pKVxuICAgICAgICAgICAgICAgIG1hcmt1cCArPSB6VmFsdWVzW2RbMF0uaW5kZXhdO1xuICAgICAgICAgICAgICAvKlxuICAgICAgICAgICAgICBtYXJrdXAgKz0gJ3t7aW5zaWdodC56X3RpdGxlfGVzY2FwZWpzfHNhZmV9fTogPHN0cm9uZz4nO1xuICAgICAgICAgICAgICB2YXIgZm91bmQgPSBbXTtcbiAgICAgICAgICAgICAgXy5lYWNoKF8uemlwKGZvcm1hdE51bWJlcnMoY2xlYW5WYWx1ZXNbMF0pLGZvcm1hdE51bWJlcnMoY2xlYW5WYWx1ZXNbMV0pLGNsZWFuVmFsdWVzWzJdKSwgZnVuY3Rpb24odmFsKSB7XG4gICAgICAgICAgICAgICAgICBpZih2YWxbMF0gPT0gZFswXS54ICYmIHZhbFsxXSA9PSBkWzBdLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgZm91bmQucHVzaCh2YWxbMl0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICBpZihmb3VuZC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICBtYXJrdXAgKz0gKGZvdW5kLmpvaW4oJywgJykpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBtYXJrdXAgKz0gJzwvc3Ryb25nPjwvZGl2Pic7XG4gICAgICAgICAgICAgIG1hcmt1cCArPSAnPC9kaXY+JztcbiAgICAgICAgICAgICAgcmV0dXJuIG1hcmt1cDtcbiAgICAgICAgICB9XG4gICAgICB9O1xuICAgICAgICBcbiAgICAgIHJldHVybiBwb3BpbHlDaGFydC5jaGFydFR5cGVzLmNvbXBhcmUucmVuZGVyKGVsZW1lbnQsIG9wdGlvbnMsIGNvbHVtbnMsIHhzLCB4TGFiZWwsIHlMYWJlbCwgdG9vbHRpcCk7XG4gIH07XG5cbiAgcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5zY2F0dGVycGxvdCA9IGNoYXJ0O1xufSkod2luZG93KTtcbiIsIihmdW5jdGlvbih3aW5kb3cpIHtcbiAgdmFyIHBvcGlseUNoYXJ0ID0gd2luZG93LnBvcGlseS5jaGFydDtcblxuICB2YXIgY2hhcnQgPSBfLmNsb25lKHBvcGlseUNoYXJ0LmJhc2VDaGFydCk7XG4gIGNoYXJ0LmRlZmF1bHRGb3IgPSBbXG4gICAgJ3N1bV9ieV9kYXRldGltZScsXG4gICAgJ3JhdGlvX2J5X2RhdGV0aW1lJyxcbiAgICAnc3VtX3Blcl9jYXRlZ29yeV9ieV9kYXRldGltZScsXG4gICAgJ3N1bV9ieV9jYXRlZ29yeV9ieV9kYXRldGltZScsXG4gICAgJ2NvdW50X2J5X2NhdGVnb3J5X2J5X2RhdGV0aW1lJyxcbiAgICAnY291bnRfYnlfZGF0ZXRpbWVfYnlfc3RhdGUnLFxuICAgICdjb3VudF9ieV9kYXRldGltZV9ieV9jb3VudHJ5J1xuICBdO1xuICBjaGFydC5hY2NlcHRzID0gW1xuICAgICdjb3VudF9ieV9kYXRldGltZScsXG4gICAgJ3JhdGlvX2J5X2RhdGV0aW1lJyxcbiAgICAnYXZlcmFnZV9ieV9kYXRldGltZScsXG4gICAgJ2NvdW50X3Blcl9jYXRlZ29yeV9ieV9kYXRldGltZScsXG4gICAgJ2F2ZXJhZ2VfcGVyX2NhdGVnb3J5X2J5X2RhdGV0aW1lJyxcbiAgICAnYXZlcmFnZV9ieV9jYXRlZ29yeV9ieV9kYXRldGltZSdcbiAgXTtcblxuICBjaGFydC5yZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCByYXdEYXRhKSB7XG4gICAgICByZXR1cm4gcG9waWx5Q2hhcnQuY2hhcnRUeXBlcy5saW5lYXIucmVuZGVyKGVsZW1lbnQsIG9wdGlvbnMsIHJhd0RhdGEsIHRydWUpO1xuICB9O1xuXG4gIHBvcGlseUNoYXJ0LmNoYXJ0VHlwZXMuc3RhY2tlZEFyZWEgPSBjaGFydDtcbn0pKHdpbmRvdyk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
